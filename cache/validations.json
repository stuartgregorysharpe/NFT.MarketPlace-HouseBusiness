{
  "version": "3.2",
  "log": [
    {
      "MainCleanContract": {
        "src": "contracts\\Contract.sol:6",
        "version": {
          "withMetadata": "010468631cbf91e131d43c059b189b55d220c871cd6c9bf91654f94d798103f1",
          "withoutMetadata": "e5b88dc6dff55c5639dcf382191cb4bb5323b9b8daccad7765611efdf8c82446",
          "linkedWithoutMetadata": "e5b88dc6dff55c5639dcf382191cb4bb5323b9b8daccad7765611efdf8c82446"
        },
        "inherit": [],
        "libraries": [],
        "methods": [
          "(address)",
          "ccCreation(string,string,address,string,uint256,uint256,uint256,string)",
          "getAllContractsByOwner()",
          "getAllContractsBySigner()",
          "getContractById(uint256)",
          "addContractSigner(uint256,address)",
          "signContract(uint256)",
          "sendNotify(address,string,uint256)",
          "getUploadedCounter()",
          "getAllNotifies()",
          "calcDiv(uint256,uint256)",
          "toString(bytes)",
          "addressToString(address)",
          "uintToString(uint256)",
          "bytesToString(bytes32)",
          "transferContractOwnership(uint256,address,address)"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "MainCleanContract",
            "src": "contracts\\Contract.sol:52"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "ccCounter",
              "offset": 0,
              "slot": "0",
              "type": "t_uint256",
              "contract": "MainCleanContract",
              "src": "contracts\\Contract.sol:8"
            },
            {
              "label": "houseNFTAddress",
              "offset": 0,
              "slot": "1",
              "type": "t_address",
              "contract": "MainCleanContract",
              "src": "contracts\\Contract.sol:11"
            },
            {
              "label": "allCleanContracts",
              "offset": 0,
              "slot": "2",
              "type": "t_mapping(t_uint256,t_struct(CleanContract)39_storage)",
              "contract": "MainCleanContract",
              "src": "contracts\\Contract.sol:44"
            },
            {
              "label": "allContractsByOwner",
              "offset": 0,
              "slot": "3",
              "type": "t_mapping(t_address,t_array(t_uint256)dyn_storage)",
              "contract": "MainCleanContract",
              "src": "contracts\\Contract.sol:46"
            },
            {
              "label": "allContractsBySigner",
              "offset": 0,
              "slot": "4",
              "type": "t_mapping(t_address,t_array(t_uint256)dyn_storage)",
              "contract": "MainCleanContract",
              "src": "contracts\\Contract.sol:48"
            },
            {
              "label": "allNotifies",
              "offset": 0,
              "slot": "5",
              "type": "t_mapping(t_address,t_array(t_struct(Notify)52_storage)dyn_storage)",
              "contract": "MainCleanContract",
              "src": "contracts\\Contract.sol:50"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            },
            "t_array(t_struct(Notify)52_storage)dyn_storage": {
              "label": "struct MainCleanContract.Notify[]",
              "numberOfBytes": "32"
            },
            "t_array(t_uint256)dyn_storage": {
              "label": "uint256[]",
              "numberOfBytes": "32"
            },
            "t_bool": {
              "label": "bool",
              "numberOfBytes": "1"
            },
            "t_mapping(t_address,t_array(t_struct(Notify)52_storage)dyn_storage)": {
              "label": "mapping(address => struct MainCleanContract.Notify[])",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_array(t_uint256)dyn_storage)": {
              "label": "mapping(address => uint256[])",
              "numberOfBytes": "32"
            },
            "t_mapping(t_uint256,t_struct(CleanContract)39_storage)": {
              "label": "mapping(uint256 => struct MainCleanContract.CleanContract)",
              "numberOfBytes": "32"
            },
            "t_string_storage": {
              "label": "string",
              "numberOfBytes": "32"
            },
            "t_struct(CleanContract)39_storage": {
              "label": "struct MainCleanContract.CleanContract",
              "members": [
                {
                  "label": "contractId",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "0"
                },
                {
                  "label": "companyName",
                  "type": "t_string_storage",
                  "offset": 0,
                  "slot": "1"
                },
                {
                  "label": "contractType",
                  "type": "t_string_storage",
                  "offset": 0,
                  "slot": "2"
                },
                {
                  "label": "contractURI",
                  "type": "t_string_storage",
                  "offset": 0,
                  "slot": "3"
                },
                {
                  "label": "dateFrom",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "4"
                },
                {
                  "label": "dateTo",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "5"
                },
                {
                  "label": "agreedPrice",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "6"
                },
                {
                  "label": "currency",
                  "type": "t_string_storage",
                  "offset": 0,
                  "slot": "7"
                },
                {
                  "label": "creator",
                  "type": "t_address",
                  "offset": 0,
                  "slot": "8"
                },
                {
                  "label": "owner",
                  "type": "t_address",
                  "offset": 0,
                  "slot": "9"
                },
                {
                  "label": "creatorApproval",
                  "type": "t_bool",
                  "offset": 20,
                  "slot": "9"
                },
                {
                  "label": "creatorSignDate",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "10"
                },
                {
                  "label": "contractSigner",
                  "type": "t_address",
                  "offset": 0,
                  "slot": "11"
                },
                {
                  "label": "signerApproval",
                  "type": "t_bool",
                  "offset": 20,
                  "slot": "11"
                },
                {
                  "label": "signerSignDate",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "12"
                },
                {
                  "label": "status",
                  "type": "t_string_storage",
                  "offset": 0,
                  "slot": "13"
                }
              ],
              "numberOfBytes": "448"
            },
            "t_struct(Notify)52_storage": {
              "label": "struct MainCleanContract.Notify",
              "members": [
                {
                  "label": "nSender",
                  "type": "t_address",
                  "offset": 0,
                  "slot": "0"
                },
                {
                  "label": "nReceiver",
                  "type": "t_address",
                  "offset": 0,
                  "slot": "1"
                },
                {
                  "label": "ccID",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "2"
                },
                {
                  "label": "notifySentTime",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "3"
                },
                {
                  "label": "notifyContent",
                  "type": "t_string_storage",
                  "offset": 0,
                  "slot": "4"
                },
                {
                  "label": "status",
                  "type": "t_bool",
                  "offset": 0,
                  "slot": "5"
                }
              ],
              "numberOfBytes": "192"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            }
          },
          "layoutVersion": "1.1",
          "flat": true
        }
      }
    },
    {
      "ThirdParty": {
        "src": "contracts\\ThirdParty.sol:5",
        "version": {
          "withMetadata": "d53521b340872e1cb19a829da8b6f983b51ec0caaaaed0ba0db377ea1dcf6c41",
          "withoutMetadata": "3acbde7a57100e491145d86dc06d6a1d005f910761389ab6ab79b372a76c9ad9",
          "linkedWithoutMetadata": "3acbde7a57100e491145d86dc06d6a1d005f910761389ab6ab79b372a76c9ad9"
        },
        "inherit": [],
        "libraries": [],
        "methods": [
          "getAllCategories()",
          "addCategory(string,uint256[])",
          "editCategory(uint256,string,uint256[])",
          "deleteCategory(uint256)",
          "getAllProperties()",
          "addProperty(string)",
          "editProperty(uint256,string)",
          "deleteProperty(uint256)",
          "getPackagesByCategory(uint256)",
          "addPackage(uint256,string,uint256,uint256,uint256,bool[])",
          "editPackage(uint256,uint256,string,uint256,uint256,uint256,bool[])",
          "deletePackage(uint256,uint256)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [
            {
              "label": "categoryCounter",
              "offset": 0,
              "slot": "0",
              "type": "t_uint256",
              "contract": "ThirdParty",
              "src": "contracts\\ThirdParty.sol:12"
            },
            {
              "label": "packageCounter",
              "offset": 0,
              "slot": "1",
              "type": "t_uint256",
              "contract": "ThirdParty",
              "src": "contracts\\ThirdParty.sol:23"
            },
            {
              "label": "propertyCounter",
              "offset": 0,
              "slot": "2",
              "type": "t_uint256",
              "contract": "ThirdParty",
              "src": "contracts\\ThirdParty.sol:29"
            },
            {
              "label": "allCategories",
              "offset": 0,
              "slot": "3",
              "type": "t_array(t_struct(Category)11_storage)dyn_storage",
              "contract": "ThirdParty",
              "src": "contracts\\ThirdParty.sol:31"
            },
            {
              "label": "allPackages",
              "offset": 0,
              "slot": "4",
              "type": "t_mapping(t_uint256,t_array(t_struct(Package)29_storage)dyn_storage)",
              "contract": "ThirdParty",
              "src": "contracts\\ThirdParty.sol:34"
            },
            {
              "label": "allProperties",
              "offset": 0,
              "slot": "5",
              "type": "t_array(t_struct(Property)36_storage)dyn_storage",
              "contract": "ThirdParty",
              "src": "contracts\\ThirdParty.sol:37"
            }
          ],
          "types": {
            "t_array(t_bool)dyn_storage": {
              "label": "bool[]",
              "numberOfBytes": "32"
            },
            "t_array(t_struct(Category)11_storage)dyn_storage": {
              "label": "struct ThirdParty.Category[]",
              "numberOfBytes": "32"
            },
            "t_array(t_struct(Package)29_storage)dyn_storage": {
              "label": "struct ThirdParty.Package[]",
              "numberOfBytes": "32"
            },
            "t_array(t_struct(Property)36_storage)dyn_storage": {
              "label": "struct ThirdParty.Property[]",
              "numberOfBytes": "32"
            },
            "t_array(t_uint256)dyn_storage": {
              "label": "uint256[]",
              "numberOfBytes": "32"
            },
            "t_bool": {
              "label": "bool",
              "numberOfBytes": "1"
            },
            "t_mapping(t_uint256,t_array(t_struct(Package)29_storage)dyn_storage)": {
              "label": "mapping(uint256 => struct ThirdParty.Package[])",
              "numberOfBytes": "32"
            },
            "t_string_storage": {
              "label": "string",
              "numberOfBytes": "32"
            },
            "t_struct(Category)11_storage": {
              "label": "struct ThirdParty.Category",
              "members": [
                {
                  "label": "categoryID",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "0"
                },
                {
                  "label": "cartegoryName",
                  "type": "t_string_storage",
                  "offset": 0,
                  "slot": "1"
                },
                {
                  "label": "properties",
                  "type": "t_array(t_uint256)dyn_storage",
                  "offset": 0,
                  "slot": "2"
                },
                {
                  "label": "visible",
                  "type": "t_bool",
                  "offset": 0,
                  "slot": "3"
                }
              ],
              "numberOfBytes": "128"
            },
            "t_struct(Package)29_storage": {
              "label": "struct ThirdParty.Package",
              "members": [
                {
                  "label": "categoryID",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "0"
                },
                {
                  "label": "packageID",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "1"
                },
                {
                  "label": "packageName",
                  "type": "t_string_storage",
                  "offset": 0,
                  "slot": "2"
                },
                {
                  "label": "price",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "3"
                },
                {
                  "label": "period",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "4"
                },
                {
                  "label": "dataLimit",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "5"
                },
                {
                  "label": "propertyVisible",
                  "type": "t_array(t_bool)dyn_storage",
                  "offset": 0,
                  "slot": "6"
                }
              ],
              "numberOfBytes": "224"
            },
            "t_struct(Property)36_storage": {
              "label": "struct ThirdParty.Property",
              "members": [
                {
                  "label": "propertyID",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "0"
                },
                {
                  "label": "propertyName",
                  "type": "t_string_storage",
                  "offset": 0,
                  "slot": "1"
                }
              ],
              "numberOfBytes": "64"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            }
          },
          "layoutVersion": "1.1",
          "flat": true
        }
      }
    },
    {
      "Context": {
        "src": "contracts\\TokenContract.sol:30",
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "HouseBusinessToken": {
        "src": "contracts\\TokenContract.sol:41",
        "version": {
          "withMetadata": "4f990ca86e03541351e9529165a17d7cb67b9b8bd35a9c3adb0efa9a825a1bb9",
          "withoutMetadata": "b737d4aaacef72af795cc4b42f15838a2ae9bc1e52c8c3e49d32ef8fdcd6230d",
          "linkedWithoutMetadata": "b737d4aaacef72af795cc4b42f15838a2ae9bc1e52c8c3e49d32ef8fdcd6230d"
        },
        "inherit": [
          "IERC20Metadata",
          "IERC20",
          "Context"
        ],
        "libraries": [],
        "methods": [
          "()",
          "name()",
          "symbol()",
          "decimals()",
          "totalSupply()",
          "balanceOf(address)",
          "transfer(address,uint256)",
          "allowance(address,address)",
          "approve(address,uint256)",
          "transferFrom(address,address,uint256)",
          "increaseAllowance(address,uint256)",
          "decreaseAllowance(address,uint256)",
          "_mint(address,uint256)"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "HouseBusinessToken",
            "src": "contracts\\TokenContract.sol:50"
          },
          {
            "kind": "state-variable-assignment",
            "name": "_name",
            "src": "contracts\\TokenContract.sol:45"
          },
          {
            "kind": "state-variable-assignment",
            "name": "_symbol",
            "src": "contracts\\TokenContract.sol:46"
          },
          {
            "kind": "state-variable-assignment",
            "name": "_decimals",
            "src": "contracts\\TokenContract.sol:47"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "_balances",
              "offset": 0,
              "slot": "0",
              "type": "t_mapping(t_address,t_uint256)",
              "contract": "HouseBusinessToken",
              "src": "contracts\\TokenContract.sol:42"
            },
            {
              "label": "_allowances",
              "offset": 0,
              "slot": "1",
              "type": "t_mapping(t_address,t_mapping(t_address,t_uint256))",
              "contract": "HouseBusinessToken",
              "src": "contracts\\TokenContract.sol:43"
            },
            {
              "label": "_totalSupply",
              "offset": 0,
              "slot": "2",
              "type": "t_uint256",
              "contract": "HouseBusinessToken",
              "src": "contracts\\TokenContract.sol:44"
            },
            {
              "label": "_name",
              "offset": 0,
              "slot": "3",
              "type": "t_string_storage",
              "contract": "HouseBusinessToken",
              "src": "contracts\\TokenContract.sol:45"
            },
            {
              "label": "_symbol",
              "offset": 0,
              "slot": "4",
              "type": "t_string_storage",
              "contract": "HouseBusinessToken",
              "src": "contracts\\TokenContract.sol:46"
            },
            {
              "label": "_decimals",
              "offset": 0,
              "slot": "5",
              "type": "t_uint8",
              "contract": "HouseBusinessToken",
              "src": "contracts\\TokenContract.sol:47"
            },
            {
              "label": "_owner",
              "offset": 1,
              "slot": "5",
              "type": "t_address",
              "contract": "HouseBusinessToken",
              "src": "contracts\\TokenContract.sol:48"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            },
            "t_mapping(t_address,t_mapping(t_address,t_uint256))": {
              "label": "mapping(address => mapping(address => uint256))",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_uint256)": {
              "label": "mapping(address => uint256)",
              "numberOfBytes": "32"
            },
            "t_string_storage": {
              "label": "string",
              "numberOfBytes": "32"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            },
            "t_uint8": {
              "label": "uint8",
              "numberOfBytes": "1"
            }
          },
          "layoutVersion": "1.1",
          "flat": true
        }
      },
      "IERC20": {
        "src": "contracts\\TokenContract.sol:5",
        "inherit": [],
        "libraries": [],
        "methods": [
          "totalSupply()",
          "balanceOf(address)",
          "transfer(address,uint256)",
          "allowance(address,address)",
          "approve(address,uint256)",
          "transferFrom(address,address,uint256)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "IERC20Metadata": {
        "src": "contracts\\TokenContract.sol:22",
        "inherit": [
          "IERC20"
        ],
        "libraries": [],
        "methods": [
          "name()",
          "symbol()",
          "decimals()"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      }
    },
    {
      "IPRC20": {
        "src": "contracts\\interfaces\\IPRC20.sol:4",
        "inherit": [],
        "libraries": [],
        "methods": [
          "totalSupply()",
          "balanceOf(address)",
          "transfer(address,uint256)",
          "allowance(address,address)",
          "approve(address,uint256)",
          "transferFrom(address,address,uint256)",
          "decimals()"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      }
    },
    {
      "IHouseBusiness": {
        "src": "contracts\\Operator.sol:3",
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "Operator": {
        "src": "contracts\\Operator.sol:7",
        "version": {
          "withMetadata": "46af2c88135d313320332230d694075ef454de90ae3c17b467e0cf99b420bdc4",
          "withoutMetadata": "ac0db523ddc3e330f735df7b3b0b24460531c71290a891170e840f8f67d5ff6b",
          "linkedWithoutMetadata": "ac0db523ddc3e330f735df7b3b0b24460531c71290a891170e840f8f67d5ff6b"
        },
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      }
    },
    {
      "MainCleanContract": {
        "src": "contracts\\Contract.sol:6",
        "version": {
          "withMetadata": "010468631cbf91e131d43c059b189b55d220c871cd6c9bf91654f94d798103f1",
          "withoutMetadata": "e5b88dc6dff55c5639dcf382191cb4bb5323b9b8daccad7765611efdf8c82446",
          "linkedWithoutMetadata": "e5b88dc6dff55c5639dcf382191cb4bb5323b9b8daccad7765611efdf8c82446"
        },
        "inherit": [],
        "libraries": [],
        "methods": [
          "(address)",
          "ccCreation(string,string,address,string,uint256,uint256,uint256,string)",
          "getAllContractsByOwner()",
          "getAllContractsBySigner()",
          "getContractById(uint256)",
          "addContractSigner(uint256,address)",
          "signContract(uint256)",
          "sendNotify(address,string,uint256)",
          "getUploadedCounter()",
          "getAllNotifies()",
          "calcDiv(uint256,uint256)",
          "toString(bytes)",
          "addressToString(address)",
          "uintToString(uint256)",
          "bytesToString(bytes32)",
          "transferContractOwnership(uint256,address,address)"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "MainCleanContract",
            "src": "contracts\\Contract.sol:52"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "ccCounter",
              "offset": 0,
              "slot": "0",
              "type": "t_uint256",
              "contract": "MainCleanContract",
              "src": "contracts\\Contract.sol:8"
            },
            {
              "label": "houseNFTAddress",
              "offset": 0,
              "slot": "1",
              "type": "t_address",
              "contract": "MainCleanContract",
              "src": "contracts\\Contract.sol:11"
            },
            {
              "label": "allCleanContracts",
              "offset": 0,
              "slot": "2",
              "type": "t_mapping(t_uint256,t_struct(CleanContract)39_storage)",
              "contract": "MainCleanContract",
              "src": "contracts\\Contract.sol:44"
            },
            {
              "label": "allContractsByOwner",
              "offset": 0,
              "slot": "3",
              "type": "t_mapping(t_address,t_array(t_uint256)dyn_storage)",
              "contract": "MainCleanContract",
              "src": "contracts\\Contract.sol:46"
            },
            {
              "label": "allContractsBySigner",
              "offset": 0,
              "slot": "4",
              "type": "t_mapping(t_address,t_array(t_uint256)dyn_storage)",
              "contract": "MainCleanContract",
              "src": "contracts\\Contract.sol:48"
            },
            {
              "label": "allNotifies",
              "offset": 0,
              "slot": "5",
              "type": "t_mapping(t_address,t_array(t_struct(Notify)52_storage)dyn_storage)",
              "contract": "MainCleanContract",
              "src": "contracts\\Contract.sol:50"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            },
            "t_array(t_struct(Notify)52_storage)dyn_storage": {
              "label": "struct MainCleanContract.Notify[]",
              "numberOfBytes": "32"
            },
            "t_array(t_uint256)dyn_storage": {
              "label": "uint256[]",
              "numberOfBytes": "32"
            },
            "t_bool": {
              "label": "bool",
              "numberOfBytes": "1"
            },
            "t_mapping(t_address,t_array(t_struct(Notify)52_storage)dyn_storage)": {
              "label": "mapping(address => struct MainCleanContract.Notify[])",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_array(t_uint256)dyn_storage)": {
              "label": "mapping(address => uint256[])",
              "numberOfBytes": "32"
            },
            "t_mapping(t_uint256,t_struct(CleanContract)39_storage)": {
              "label": "mapping(uint256 => struct MainCleanContract.CleanContract)",
              "numberOfBytes": "32"
            },
            "t_string_storage": {
              "label": "string",
              "numberOfBytes": "32"
            },
            "t_struct(CleanContract)39_storage": {
              "label": "struct MainCleanContract.CleanContract",
              "members": [
                {
                  "label": "contractId",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "0"
                },
                {
                  "label": "companyName",
                  "type": "t_string_storage",
                  "offset": 0,
                  "slot": "1"
                },
                {
                  "label": "contractType",
                  "type": "t_string_storage",
                  "offset": 0,
                  "slot": "2"
                },
                {
                  "label": "contractURI",
                  "type": "t_string_storage",
                  "offset": 0,
                  "slot": "3"
                },
                {
                  "label": "dateFrom",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "4"
                },
                {
                  "label": "dateTo",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "5"
                },
                {
                  "label": "agreedPrice",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "6"
                },
                {
                  "label": "currency",
                  "type": "t_string_storage",
                  "offset": 0,
                  "slot": "7"
                },
                {
                  "label": "creator",
                  "type": "t_address",
                  "offset": 0,
                  "slot": "8"
                },
                {
                  "label": "owner",
                  "type": "t_address",
                  "offset": 0,
                  "slot": "9"
                },
                {
                  "label": "creatorApproval",
                  "type": "t_bool",
                  "offset": 20,
                  "slot": "9"
                },
                {
                  "label": "creatorSignDate",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "10"
                },
                {
                  "label": "contractSigner",
                  "type": "t_address",
                  "offset": 0,
                  "slot": "11"
                },
                {
                  "label": "signerApproval",
                  "type": "t_bool",
                  "offset": 20,
                  "slot": "11"
                },
                {
                  "label": "signerSignDate",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "12"
                },
                {
                  "label": "status",
                  "type": "t_string_storage",
                  "offset": 0,
                  "slot": "13"
                }
              ],
              "numberOfBytes": "448"
            },
            "t_struct(Notify)52_storage": {
              "label": "struct MainCleanContract.Notify",
              "members": [
                {
                  "label": "nSender",
                  "type": "t_address",
                  "offset": 0,
                  "slot": "0"
                },
                {
                  "label": "nReceiver",
                  "type": "t_address",
                  "offset": 0,
                  "slot": "1"
                },
                {
                  "label": "ccID",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "2"
                },
                {
                  "label": "notifySentTime",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "3"
                },
                {
                  "label": "notifyContent",
                  "type": "t_string_storage",
                  "offset": 0,
                  "slot": "4"
                },
                {
                  "label": "status",
                  "type": "t_bool",
                  "offset": 0,
                  "slot": "5"
                }
              ],
              "numberOfBytes": "192"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            }
          },
          "layoutVersion": "1.1",
          "flat": true
        }
      }
    },
    {
      "ThirdParty": {
        "src": "contracts\\ThirdParty.sol:5",
        "version": {
          "withMetadata": "d53521b340872e1cb19a829da8b6f983b51ec0caaaaed0ba0db377ea1dcf6c41",
          "withoutMetadata": "3acbde7a57100e491145d86dc06d6a1d005f910761389ab6ab79b372a76c9ad9",
          "linkedWithoutMetadata": "3acbde7a57100e491145d86dc06d6a1d005f910761389ab6ab79b372a76c9ad9"
        },
        "inherit": [],
        "libraries": [],
        "methods": [
          "getAllCategories()",
          "addCategory(string,uint256[])",
          "editCategory(uint256,string,uint256[])",
          "deleteCategory(uint256)",
          "getAllProperties()",
          "addProperty(string)",
          "editProperty(uint256,string)",
          "deleteProperty(uint256)",
          "getPackagesByCategory(uint256)",
          "addPackage(uint256,string,uint256,uint256,uint256,bool[])",
          "editPackage(uint256,uint256,string,uint256,uint256,uint256,bool[])",
          "deletePackage(uint256,uint256)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [
            {
              "label": "categoryCounter",
              "offset": 0,
              "slot": "0",
              "type": "t_uint256",
              "contract": "ThirdParty",
              "src": "contracts\\ThirdParty.sol:12"
            },
            {
              "label": "packageCounter",
              "offset": 0,
              "slot": "1",
              "type": "t_uint256",
              "contract": "ThirdParty",
              "src": "contracts\\ThirdParty.sol:23"
            },
            {
              "label": "propertyCounter",
              "offset": 0,
              "slot": "2",
              "type": "t_uint256",
              "contract": "ThirdParty",
              "src": "contracts\\ThirdParty.sol:29"
            },
            {
              "label": "allCategories",
              "offset": 0,
              "slot": "3",
              "type": "t_array(t_struct(Category)11_storage)dyn_storage",
              "contract": "ThirdParty",
              "src": "contracts\\ThirdParty.sol:31"
            },
            {
              "label": "allPackages",
              "offset": 0,
              "slot": "4",
              "type": "t_mapping(t_uint256,t_array(t_struct(Package)29_storage)dyn_storage)",
              "contract": "ThirdParty",
              "src": "contracts\\ThirdParty.sol:34"
            },
            {
              "label": "allProperties",
              "offset": 0,
              "slot": "5",
              "type": "t_array(t_struct(Property)36_storage)dyn_storage",
              "contract": "ThirdParty",
              "src": "contracts\\ThirdParty.sol:37"
            }
          ],
          "types": {
            "t_array(t_bool)dyn_storage": {
              "label": "bool[]",
              "numberOfBytes": "32"
            },
            "t_array(t_struct(Category)11_storage)dyn_storage": {
              "label": "struct ThirdParty.Category[]",
              "numberOfBytes": "32"
            },
            "t_array(t_struct(Package)29_storage)dyn_storage": {
              "label": "struct ThirdParty.Package[]",
              "numberOfBytes": "32"
            },
            "t_array(t_struct(Property)36_storage)dyn_storage": {
              "label": "struct ThirdParty.Property[]",
              "numberOfBytes": "32"
            },
            "t_array(t_uint256)dyn_storage": {
              "label": "uint256[]",
              "numberOfBytes": "32"
            },
            "t_bool": {
              "label": "bool",
              "numberOfBytes": "1"
            },
            "t_mapping(t_uint256,t_array(t_struct(Package)29_storage)dyn_storage)": {
              "label": "mapping(uint256 => struct ThirdParty.Package[])",
              "numberOfBytes": "32"
            },
            "t_string_storage": {
              "label": "string",
              "numberOfBytes": "32"
            },
            "t_struct(Category)11_storage": {
              "label": "struct ThirdParty.Category",
              "members": [
                {
                  "label": "categoryID",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "0"
                },
                {
                  "label": "cartegoryName",
                  "type": "t_string_storage",
                  "offset": 0,
                  "slot": "1"
                },
                {
                  "label": "properties",
                  "type": "t_array(t_uint256)dyn_storage",
                  "offset": 0,
                  "slot": "2"
                },
                {
                  "label": "visible",
                  "type": "t_bool",
                  "offset": 0,
                  "slot": "3"
                }
              ],
              "numberOfBytes": "128"
            },
            "t_struct(Package)29_storage": {
              "label": "struct ThirdParty.Package",
              "members": [
                {
                  "label": "categoryID",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "0"
                },
                {
                  "label": "packageID",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "1"
                },
                {
                  "label": "packageName",
                  "type": "t_string_storage",
                  "offset": 0,
                  "slot": "2"
                },
                {
                  "label": "price",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "3"
                },
                {
                  "label": "period",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "4"
                },
                {
                  "label": "dataLimit",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "5"
                },
                {
                  "label": "propertyVisible",
                  "type": "t_array(t_bool)dyn_storage",
                  "offset": 0,
                  "slot": "6"
                }
              ],
              "numberOfBytes": "224"
            },
            "t_struct(Property)36_storage": {
              "label": "struct ThirdParty.Property",
              "members": [
                {
                  "label": "propertyID",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "0"
                },
                {
                  "label": "propertyName",
                  "type": "t_string_storage",
                  "offset": 0,
                  "slot": "1"
                }
              ],
              "numberOfBytes": "64"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            }
          },
          "layoutVersion": "1.1",
          "flat": true
        }
      }
    },
    {
      "Context": {
        "src": "contracts\\TokenContract.sol:30",
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "HouseBusinessToken": {
        "src": "contracts\\TokenContract.sol:41",
        "version": {
          "withMetadata": "4f990ca86e03541351e9529165a17d7cb67b9b8bd35a9c3adb0efa9a825a1bb9",
          "withoutMetadata": "b737d4aaacef72af795cc4b42f15838a2ae9bc1e52c8c3e49d32ef8fdcd6230d",
          "linkedWithoutMetadata": "b737d4aaacef72af795cc4b42f15838a2ae9bc1e52c8c3e49d32ef8fdcd6230d"
        },
        "inherit": [
          "IERC20Metadata",
          "IERC20",
          "Context"
        ],
        "libraries": [],
        "methods": [
          "()",
          "name()",
          "symbol()",
          "decimals()",
          "totalSupply()",
          "balanceOf(address)",
          "transfer(address,uint256)",
          "allowance(address,address)",
          "approve(address,uint256)",
          "transferFrom(address,address,uint256)",
          "increaseAllowance(address,uint256)",
          "decreaseAllowance(address,uint256)",
          "_mint(address,uint256)"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "HouseBusinessToken",
            "src": "contracts\\TokenContract.sol:50"
          },
          {
            "kind": "state-variable-assignment",
            "name": "_name",
            "src": "contracts\\TokenContract.sol:45"
          },
          {
            "kind": "state-variable-assignment",
            "name": "_symbol",
            "src": "contracts\\TokenContract.sol:46"
          },
          {
            "kind": "state-variable-assignment",
            "name": "_decimals",
            "src": "contracts\\TokenContract.sol:47"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "_balances",
              "offset": 0,
              "slot": "0",
              "type": "t_mapping(t_address,t_uint256)",
              "contract": "HouseBusinessToken",
              "src": "contracts\\TokenContract.sol:42"
            },
            {
              "label": "_allowances",
              "offset": 0,
              "slot": "1",
              "type": "t_mapping(t_address,t_mapping(t_address,t_uint256))",
              "contract": "HouseBusinessToken",
              "src": "contracts\\TokenContract.sol:43"
            },
            {
              "label": "_totalSupply",
              "offset": 0,
              "slot": "2",
              "type": "t_uint256",
              "contract": "HouseBusinessToken",
              "src": "contracts\\TokenContract.sol:44"
            },
            {
              "label": "_name",
              "offset": 0,
              "slot": "3",
              "type": "t_string_storage",
              "contract": "HouseBusinessToken",
              "src": "contracts\\TokenContract.sol:45"
            },
            {
              "label": "_symbol",
              "offset": 0,
              "slot": "4",
              "type": "t_string_storage",
              "contract": "HouseBusinessToken",
              "src": "contracts\\TokenContract.sol:46"
            },
            {
              "label": "_decimals",
              "offset": 0,
              "slot": "5",
              "type": "t_uint8",
              "contract": "HouseBusinessToken",
              "src": "contracts\\TokenContract.sol:47"
            },
            {
              "label": "_owner",
              "offset": 1,
              "slot": "5",
              "type": "t_address",
              "contract": "HouseBusinessToken",
              "src": "contracts\\TokenContract.sol:48"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            },
            "t_mapping(t_address,t_mapping(t_address,t_uint256))": {
              "label": "mapping(address => mapping(address => uint256))",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_uint256)": {
              "label": "mapping(address => uint256)",
              "numberOfBytes": "32"
            },
            "t_string_storage": {
              "label": "string",
              "numberOfBytes": "32"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            },
            "t_uint8": {
              "label": "uint8",
              "numberOfBytes": "1"
            }
          },
          "layoutVersion": "1.1",
          "flat": true
        }
      },
      "IERC20": {
        "src": "contracts\\TokenContract.sol:5",
        "inherit": [],
        "libraries": [],
        "methods": [
          "totalSupply()",
          "balanceOf(address)",
          "transfer(address,uint256)",
          "allowance(address,address)",
          "approve(address,uint256)",
          "transferFrom(address,address,uint256)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "IERC20Metadata": {
        "src": "contracts\\TokenContract.sol:22",
        "inherit": [
          "IERC20"
        ],
        "libraries": [],
        "methods": [
          "name()",
          "symbol()",
          "decimals()"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      }
    },
    {
      "IPRC20": {
        "src": "contracts\\interfaces\\IPRC20.sol:4",
        "inherit": [],
        "libraries": [],
        "methods": [
          "totalSupply()",
          "balanceOf(address)",
          "transfer(address,uint256)",
          "allowance(address,address)",
          "approve(address,uint256)",
          "transferFrom(address,address,uint256)",
          "decimals()"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      }
    },
    {
      "IHouseBusiness": {
        "src": "contracts\\Operator.sol:3",
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "Operator": {
        "src": "contracts\\Operator.sol:7",
        "version": {
          "withMetadata": "46af2c88135d313320332230d694075ef454de90ae3c17b467e0cf99b420bdc4",
          "withoutMetadata": "ac0db523ddc3e330f735df7b3b0b24460531c71290a891170e840f8f67d5ff6b",
          "linkedWithoutMetadata": "ac0db523ddc3e330f735df7b3b0b24460531c71290a891170e840f8f67d5ff6b"
        },
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      }
    },
    {
      "MainCleanContract": {
        "src": "contracts\\Contract.sol:6",
        "version": {
          "withMetadata": "010468631cbf91e131d43c059b189b55d220c871cd6c9bf91654f94d798103f1",
          "withoutMetadata": "e5b88dc6dff55c5639dcf382191cb4bb5323b9b8daccad7765611efdf8c82446",
          "linkedWithoutMetadata": "e5b88dc6dff55c5639dcf382191cb4bb5323b9b8daccad7765611efdf8c82446"
        },
        "inherit": [],
        "libraries": [],
        "methods": [
          "(address)",
          "ccCreation(string,string,address,string,uint256,uint256,uint256,string)",
          "getAllContractsByOwner()",
          "getAllContractsBySigner()",
          "getContractById(uint256)",
          "addContractSigner(uint256,address)",
          "signContract(uint256)",
          "sendNotify(address,string,uint256)",
          "getUploadedCounter()",
          "getAllNotifies()",
          "calcDiv(uint256,uint256)",
          "toString(bytes)",
          "addressToString(address)",
          "uintToString(uint256)",
          "bytesToString(bytes32)",
          "transferContractOwnership(uint256,address,address)"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "MainCleanContract",
            "src": "contracts\\Contract.sol:52"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "ccCounter",
              "offset": 0,
              "slot": "0",
              "type": "t_uint256",
              "contract": "MainCleanContract",
              "src": "contracts\\Contract.sol:8"
            },
            {
              "label": "houseNFTAddress",
              "offset": 0,
              "slot": "1",
              "type": "t_address",
              "contract": "MainCleanContract",
              "src": "contracts\\Contract.sol:11"
            },
            {
              "label": "allCleanContracts",
              "offset": 0,
              "slot": "2",
              "type": "t_mapping(t_uint256,t_struct(CleanContract)39_storage)",
              "contract": "MainCleanContract",
              "src": "contracts\\Contract.sol:44"
            },
            {
              "label": "allContractsByOwner",
              "offset": 0,
              "slot": "3",
              "type": "t_mapping(t_address,t_array(t_uint256)dyn_storage)",
              "contract": "MainCleanContract",
              "src": "contracts\\Contract.sol:46"
            },
            {
              "label": "allContractsBySigner",
              "offset": 0,
              "slot": "4",
              "type": "t_mapping(t_address,t_array(t_uint256)dyn_storage)",
              "contract": "MainCleanContract",
              "src": "contracts\\Contract.sol:48"
            },
            {
              "label": "allNotifies",
              "offset": 0,
              "slot": "5",
              "type": "t_mapping(t_address,t_array(t_struct(Notify)52_storage)dyn_storage)",
              "contract": "MainCleanContract",
              "src": "contracts\\Contract.sol:50"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            },
            "t_array(t_struct(Notify)52_storage)dyn_storage": {
              "label": "struct MainCleanContract.Notify[]",
              "numberOfBytes": "32"
            },
            "t_array(t_uint256)dyn_storage": {
              "label": "uint256[]",
              "numberOfBytes": "32"
            },
            "t_bool": {
              "label": "bool",
              "numberOfBytes": "1"
            },
            "t_mapping(t_address,t_array(t_struct(Notify)52_storage)dyn_storage)": {
              "label": "mapping(address => struct MainCleanContract.Notify[])",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_array(t_uint256)dyn_storage)": {
              "label": "mapping(address => uint256[])",
              "numberOfBytes": "32"
            },
            "t_mapping(t_uint256,t_struct(CleanContract)39_storage)": {
              "label": "mapping(uint256 => struct MainCleanContract.CleanContract)",
              "numberOfBytes": "32"
            },
            "t_string_storage": {
              "label": "string",
              "numberOfBytes": "32"
            },
            "t_struct(CleanContract)39_storage": {
              "label": "struct MainCleanContract.CleanContract",
              "members": [
                {
                  "label": "contractId",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "0"
                },
                {
                  "label": "companyName",
                  "type": "t_string_storage",
                  "offset": 0,
                  "slot": "1"
                },
                {
                  "label": "contractType",
                  "type": "t_string_storage",
                  "offset": 0,
                  "slot": "2"
                },
                {
                  "label": "contractURI",
                  "type": "t_string_storage",
                  "offset": 0,
                  "slot": "3"
                },
                {
                  "label": "dateFrom",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "4"
                },
                {
                  "label": "dateTo",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "5"
                },
                {
                  "label": "agreedPrice",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "6"
                },
                {
                  "label": "currency",
                  "type": "t_string_storage",
                  "offset": 0,
                  "slot": "7"
                },
                {
                  "label": "creator",
                  "type": "t_address",
                  "offset": 0,
                  "slot": "8"
                },
                {
                  "label": "owner",
                  "type": "t_address",
                  "offset": 0,
                  "slot": "9"
                },
                {
                  "label": "creatorApproval",
                  "type": "t_bool",
                  "offset": 20,
                  "slot": "9"
                },
                {
                  "label": "creatorSignDate",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "10"
                },
                {
                  "label": "contractSigner",
                  "type": "t_address",
                  "offset": 0,
                  "slot": "11"
                },
                {
                  "label": "signerApproval",
                  "type": "t_bool",
                  "offset": 20,
                  "slot": "11"
                },
                {
                  "label": "signerSignDate",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "12"
                },
                {
                  "label": "status",
                  "type": "t_string_storage",
                  "offset": 0,
                  "slot": "13"
                }
              ],
              "numberOfBytes": "448"
            },
            "t_struct(Notify)52_storage": {
              "label": "struct MainCleanContract.Notify",
              "members": [
                {
                  "label": "nSender",
                  "type": "t_address",
                  "offset": 0,
                  "slot": "0"
                },
                {
                  "label": "nReceiver",
                  "type": "t_address",
                  "offset": 0,
                  "slot": "1"
                },
                {
                  "label": "ccID",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "2"
                },
                {
                  "label": "notifySentTime",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "3"
                },
                {
                  "label": "notifyContent",
                  "type": "t_string_storage",
                  "offset": 0,
                  "slot": "4"
                },
                {
                  "label": "status",
                  "type": "t_bool",
                  "offset": 0,
                  "slot": "5"
                }
              ],
              "numberOfBytes": "192"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            }
          },
          "layoutVersion": "1.1",
          "flat": true
        }
      }
    },
    {
      "ThirdParty": {
        "src": "contracts\\ThirdParty.sol:5",
        "version": {
          "withMetadata": "d53521b340872e1cb19a829da8b6f983b51ec0caaaaed0ba0db377ea1dcf6c41",
          "withoutMetadata": "3acbde7a57100e491145d86dc06d6a1d005f910761389ab6ab79b372a76c9ad9",
          "linkedWithoutMetadata": "3acbde7a57100e491145d86dc06d6a1d005f910761389ab6ab79b372a76c9ad9"
        },
        "inherit": [],
        "libraries": [],
        "methods": [
          "getAllCategories()",
          "addCategory(string,uint256[])",
          "editCategory(uint256,string,uint256[])",
          "deleteCategory(uint256)",
          "getAllProperties()",
          "addProperty(string)",
          "editProperty(uint256,string)",
          "deleteProperty(uint256)",
          "getPackagesByCategory(uint256)",
          "addPackage(uint256,string,uint256,uint256,uint256,bool[])",
          "editPackage(uint256,uint256,string,uint256,uint256,uint256,bool[])",
          "deletePackage(uint256,uint256)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [
            {
              "label": "categoryCounter",
              "offset": 0,
              "slot": "0",
              "type": "t_uint256",
              "contract": "ThirdParty",
              "src": "contracts\\ThirdParty.sol:12"
            },
            {
              "label": "packageCounter",
              "offset": 0,
              "slot": "1",
              "type": "t_uint256",
              "contract": "ThirdParty",
              "src": "contracts\\ThirdParty.sol:23"
            },
            {
              "label": "propertyCounter",
              "offset": 0,
              "slot": "2",
              "type": "t_uint256",
              "contract": "ThirdParty",
              "src": "contracts\\ThirdParty.sol:29"
            },
            {
              "label": "allCategories",
              "offset": 0,
              "slot": "3",
              "type": "t_array(t_struct(Category)11_storage)dyn_storage",
              "contract": "ThirdParty",
              "src": "contracts\\ThirdParty.sol:31"
            },
            {
              "label": "allPackages",
              "offset": 0,
              "slot": "4",
              "type": "t_mapping(t_uint256,t_array(t_struct(Package)29_storage)dyn_storage)",
              "contract": "ThirdParty",
              "src": "contracts\\ThirdParty.sol:34"
            },
            {
              "label": "allProperties",
              "offset": 0,
              "slot": "5",
              "type": "t_array(t_struct(Property)36_storage)dyn_storage",
              "contract": "ThirdParty",
              "src": "contracts\\ThirdParty.sol:37"
            }
          ],
          "types": {
            "t_array(t_bool)dyn_storage": {
              "label": "bool[]",
              "numberOfBytes": "32"
            },
            "t_array(t_struct(Category)11_storage)dyn_storage": {
              "label": "struct ThirdParty.Category[]",
              "numberOfBytes": "32"
            },
            "t_array(t_struct(Package)29_storage)dyn_storage": {
              "label": "struct ThirdParty.Package[]",
              "numberOfBytes": "32"
            },
            "t_array(t_struct(Property)36_storage)dyn_storage": {
              "label": "struct ThirdParty.Property[]",
              "numberOfBytes": "32"
            },
            "t_array(t_uint256)dyn_storage": {
              "label": "uint256[]",
              "numberOfBytes": "32"
            },
            "t_bool": {
              "label": "bool",
              "numberOfBytes": "1"
            },
            "t_mapping(t_uint256,t_array(t_struct(Package)29_storage)dyn_storage)": {
              "label": "mapping(uint256 => struct ThirdParty.Package[])",
              "numberOfBytes": "32"
            },
            "t_string_storage": {
              "label": "string",
              "numberOfBytes": "32"
            },
            "t_struct(Category)11_storage": {
              "label": "struct ThirdParty.Category",
              "members": [
                {
                  "label": "categoryID",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "0"
                },
                {
                  "label": "cartegoryName",
                  "type": "t_string_storage",
                  "offset": 0,
                  "slot": "1"
                },
                {
                  "label": "properties",
                  "type": "t_array(t_uint256)dyn_storage",
                  "offset": 0,
                  "slot": "2"
                },
                {
                  "label": "visible",
                  "type": "t_bool",
                  "offset": 0,
                  "slot": "3"
                }
              ],
              "numberOfBytes": "128"
            },
            "t_struct(Package)29_storage": {
              "label": "struct ThirdParty.Package",
              "members": [
                {
                  "label": "categoryID",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "0"
                },
                {
                  "label": "packageID",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "1"
                },
                {
                  "label": "packageName",
                  "type": "t_string_storage",
                  "offset": 0,
                  "slot": "2"
                },
                {
                  "label": "price",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "3"
                },
                {
                  "label": "period",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "4"
                },
                {
                  "label": "dataLimit",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "5"
                },
                {
                  "label": "propertyVisible",
                  "type": "t_array(t_bool)dyn_storage",
                  "offset": 0,
                  "slot": "6"
                }
              ],
              "numberOfBytes": "224"
            },
            "t_struct(Property)36_storage": {
              "label": "struct ThirdParty.Property",
              "members": [
                {
                  "label": "propertyID",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "0"
                },
                {
                  "label": "propertyName",
                  "type": "t_string_storage",
                  "offset": 0,
                  "slot": "1"
                }
              ],
              "numberOfBytes": "64"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            }
          },
          "layoutVersion": "1.1",
          "flat": true
        }
      }
    },
    {
      "Context": {
        "src": "contracts\\TokenContract.sol:30",
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "HouseBusinessToken": {
        "src": "contracts\\TokenContract.sol:41",
        "version": {
          "withMetadata": "4f990ca86e03541351e9529165a17d7cb67b9b8bd35a9c3adb0efa9a825a1bb9",
          "withoutMetadata": "b737d4aaacef72af795cc4b42f15838a2ae9bc1e52c8c3e49d32ef8fdcd6230d",
          "linkedWithoutMetadata": "b737d4aaacef72af795cc4b42f15838a2ae9bc1e52c8c3e49d32ef8fdcd6230d"
        },
        "inherit": [
          "IERC20Metadata",
          "IERC20",
          "Context"
        ],
        "libraries": [],
        "methods": [
          "()",
          "name()",
          "symbol()",
          "decimals()",
          "totalSupply()",
          "balanceOf(address)",
          "transfer(address,uint256)",
          "allowance(address,address)",
          "approve(address,uint256)",
          "transferFrom(address,address,uint256)",
          "increaseAllowance(address,uint256)",
          "decreaseAllowance(address,uint256)",
          "_mint(address,uint256)"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "HouseBusinessToken",
            "src": "contracts\\TokenContract.sol:50"
          },
          {
            "kind": "state-variable-assignment",
            "name": "_name",
            "src": "contracts\\TokenContract.sol:45"
          },
          {
            "kind": "state-variable-assignment",
            "name": "_symbol",
            "src": "contracts\\TokenContract.sol:46"
          },
          {
            "kind": "state-variable-assignment",
            "name": "_decimals",
            "src": "contracts\\TokenContract.sol:47"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "_balances",
              "offset": 0,
              "slot": "0",
              "type": "t_mapping(t_address,t_uint256)",
              "contract": "HouseBusinessToken",
              "src": "contracts\\TokenContract.sol:42"
            },
            {
              "label": "_allowances",
              "offset": 0,
              "slot": "1",
              "type": "t_mapping(t_address,t_mapping(t_address,t_uint256))",
              "contract": "HouseBusinessToken",
              "src": "contracts\\TokenContract.sol:43"
            },
            {
              "label": "_totalSupply",
              "offset": 0,
              "slot": "2",
              "type": "t_uint256",
              "contract": "HouseBusinessToken",
              "src": "contracts\\TokenContract.sol:44"
            },
            {
              "label": "_name",
              "offset": 0,
              "slot": "3",
              "type": "t_string_storage",
              "contract": "HouseBusinessToken",
              "src": "contracts\\TokenContract.sol:45"
            },
            {
              "label": "_symbol",
              "offset": 0,
              "slot": "4",
              "type": "t_string_storage",
              "contract": "HouseBusinessToken",
              "src": "contracts\\TokenContract.sol:46"
            },
            {
              "label": "_decimals",
              "offset": 0,
              "slot": "5",
              "type": "t_uint8",
              "contract": "HouseBusinessToken",
              "src": "contracts\\TokenContract.sol:47"
            },
            {
              "label": "_owner",
              "offset": 1,
              "slot": "5",
              "type": "t_address",
              "contract": "HouseBusinessToken",
              "src": "contracts\\TokenContract.sol:48"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            },
            "t_mapping(t_address,t_mapping(t_address,t_uint256))": {
              "label": "mapping(address => mapping(address => uint256))",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_uint256)": {
              "label": "mapping(address => uint256)",
              "numberOfBytes": "32"
            },
            "t_string_storage": {
              "label": "string",
              "numberOfBytes": "32"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            },
            "t_uint8": {
              "label": "uint8",
              "numberOfBytes": "1"
            }
          },
          "layoutVersion": "1.1",
          "flat": true
        }
      },
      "IERC20": {
        "src": "contracts\\TokenContract.sol:5",
        "inherit": [],
        "libraries": [],
        "methods": [
          "totalSupply()",
          "balanceOf(address)",
          "transfer(address,uint256)",
          "allowance(address,address)",
          "approve(address,uint256)",
          "transferFrom(address,address,uint256)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "IERC20Metadata": {
        "src": "contracts\\TokenContract.sol:22",
        "inherit": [
          "IERC20"
        ],
        "libraries": [],
        "methods": [
          "name()",
          "symbol()",
          "decimals()"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      }
    },
    {
      "IPRC20": {
        "src": "contracts\\interfaces\\IPRC20.sol:4",
        "inherit": [],
        "libraries": [],
        "methods": [
          "totalSupply()",
          "balanceOf(address)",
          "transfer(address,uint256)",
          "allowance(address,address)",
          "approve(address,uint256)",
          "transferFrom(address,address,uint256)",
          "decimals()"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      }
    },
    {
      "IHouseBusiness": {
        "src": "contracts\\Operator.sol:3",
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "Operator": {
        "src": "contracts\\Operator.sol:7",
        "version": {
          "withMetadata": "46af2c88135d313320332230d694075ef454de90ae3c17b467e0cf99b420bdc4",
          "withoutMetadata": "ac0db523ddc3e330f735df7b3b0b24460531c71290a891170e840f8f67d5ff6b",
          "linkedWithoutMetadata": "ac0db523ddc3e330f735df7b3b0b24460531c71290a891170e840f8f67d5ff6b"
        },
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      }
    },
    {
      "MainCleanContract": {
        "src": "contracts\\Contract.sol:6",
        "version": {
          "withMetadata": "010468631cbf91e131d43c059b189b55d220c871cd6c9bf91654f94d798103f1",
          "withoutMetadata": "e5b88dc6dff55c5639dcf382191cb4bb5323b9b8daccad7765611efdf8c82446",
          "linkedWithoutMetadata": "e5b88dc6dff55c5639dcf382191cb4bb5323b9b8daccad7765611efdf8c82446"
        },
        "inherit": [],
        "libraries": [],
        "methods": [
          "(address)",
          "ccCreation(string,string,address,string,uint256,uint256,uint256,string)",
          "getAllContractsByOwner()",
          "getAllContractsBySigner()",
          "getContractById(uint256)",
          "addContractSigner(uint256,address)",
          "signContract(uint256)",
          "sendNotify(address,string,uint256)",
          "getUploadedCounter()",
          "getAllNotifies()",
          "calcDiv(uint256,uint256)",
          "toString(bytes)",
          "addressToString(address)",
          "uintToString(uint256)",
          "bytesToString(bytes32)",
          "transferContractOwnership(uint256,address,address)"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "MainCleanContract",
            "src": "contracts\\Contract.sol:52"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "ccCounter",
              "offset": 0,
              "slot": "0",
              "type": "t_uint256",
              "contract": "MainCleanContract",
              "src": "contracts\\Contract.sol:8"
            },
            {
              "label": "houseNFTAddress",
              "offset": 0,
              "slot": "1",
              "type": "t_address",
              "contract": "MainCleanContract",
              "src": "contracts\\Contract.sol:11"
            },
            {
              "label": "allCleanContracts",
              "offset": 0,
              "slot": "2",
              "type": "t_mapping(t_uint256,t_struct(CleanContract)39_storage)",
              "contract": "MainCleanContract",
              "src": "contracts\\Contract.sol:44"
            },
            {
              "label": "allContractsByOwner",
              "offset": 0,
              "slot": "3",
              "type": "t_mapping(t_address,t_array(t_uint256)dyn_storage)",
              "contract": "MainCleanContract",
              "src": "contracts\\Contract.sol:46"
            },
            {
              "label": "allContractsBySigner",
              "offset": 0,
              "slot": "4",
              "type": "t_mapping(t_address,t_array(t_uint256)dyn_storage)",
              "contract": "MainCleanContract",
              "src": "contracts\\Contract.sol:48"
            },
            {
              "label": "allNotifies",
              "offset": 0,
              "slot": "5",
              "type": "t_mapping(t_address,t_array(t_struct(Notify)52_storage)dyn_storage)",
              "contract": "MainCleanContract",
              "src": "contracts\\Contract.sol:50"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            },
            "t_array(t_struct(Notify)52_storage)dyn_storage": {
              "label": "struct MainCleanContract.Notify[]",
              "numberOfBytes": "32"
            },
            "t_array(t_uint256)dyn_storage": {
              "label": "uint256[]",
              "numberOfBytes": "32"
            },
            "t_bool": {
              "label": "bool",
              "numberOfBytes": "1"
            },
            "t_mapping(t_address,t_array(t_struct(Notify)52_storage)dyn_storage)": {
              "label": "mapping(address => struct MainCleanContract.Notify[])",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_array(t_uint256)dyn_storage)": {
              "label": "mapping(address => uint256[])",
              "numberOfBytes": "32"
            },
            "t_mapping(t_uint256,t_struct(CleanContract)39_storage)": {
              "label": "mapping(uint256 => struct MainCleanContract.CleanContract)",
              "numberOfBytes": "32"
            },
            "t_string_storage": {
              "label": "string",
              "numberOfBytes": "32"
            },
            "t_struct(CleanContract)39_storage": {
              "label": "struct MainCleanContract.CleanContract",
              "members": [
                {
                  "label": "contractId",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "0"
                },
                {
                  "label": "companyName",
                  "type": "t_string_storage",
                  "offset": 0,
                  "slot": "1"
                },
                {
                  "label": "contractType",
                  "type": "t_string_storage",
                  "offset": 0,
                  "slot": "2"
                },
                {
                  "label": "contractURI",
                  "type": "t_string_storage",
                  "offset": 0,
                  "slot": "3"
                },
                {
                  "label": "dateFrom",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "4"
                },
                {
                  "label": "dateTo",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "5"
                },
                {
                  "label": "agreedPrice",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "6"
                },
                {
                  "label": "currency",
                  "type": "t_string_storage",
                  "offset": 0,
                  "slot": "7"
                },
                {
                  "label": "creator",
                  "type": "t_address",
                  "offset": 0,
                  "slot": "8"
                },
                {
                  "label": "owner",
                  "type": "t_address",
                  "offset": 0,
                  "slot": "9"
                },
                {
                  "label": "creatorApproval",
                  "type": "t_bool",
                  "offset": 20,
                  "slot": "9"
                },
                {
                  "label": "creatorSignDate",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "10"
                },
                {
                  "label": "contractSigner",
                  "type": "t_address",
                  "offset": 0,
                  "slot": "11"
                },
                {
                  "label": "signerApproval",
                  "type": "t_bool",
                  "offset": 20,
                  "slot": "11"
                },
                {
                  "label": "signerSignDate",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "12"
                },
                {
                  "label": "status",
                  "type": "t_string_storage",
                  "offset": 0,
                  "slot": "13"
                }
              ],
              "numberOfBytes": "448"
            },
            "t_struct(Notify)52_storage": {
              "label": "struct MainCleanContract.Notify",
              "members": [
                {
                  "label": "nSender",
                  "type": "t_address",
                  "offset": 0,
                  "slot": "0"
                },
                {
                  "label": "nReceiver",
                  "type": "t_address",
                  "offset": 0,
                  "slot": "1"
                },
                {
                  "label": "ccID",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "2"
                },
                {
                  "label": "notifySentTime",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "3"
                },
                {
                  "label": "notifyContent",
                  "type": "t_string_storage",
                  "offset": 0,
                  "slot": "4"
                },
                {
                  "label": "status",
                  "type": "t_bool",
                  "offset": 0,
                  "slot": "5"
                }
              ],
              "numberOfBytes": "192"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            }
          },
          "layoutVersion": "1.1",
          "flat": true
        }
      }
    },
    {
      "ThirdParty": {
        "src": "contracts\\ThirdParty.sol:5",
        "version": {
          "withMetadata": "d53521b340872e1cb19a829da8b6f983b51ec0caaaaed0ba0db377ea1dcf6c41",
          "withoutMetadata": "3acbde7a57100e491145d86dc06d6a1d005f910761389ab6ab79b372a76c9ad9",
          "linkedWithoutMetadata": "3acbde7a57100e491145d86dc06d6a1d005f910761389ab6ab79b372a76c9ad9"
        },
        "inherit": [],
        "libraries": [],
        "methods": [
          "getAllCategories()",
          "addCategory(string,uint256[])",
          "editCategory(uint256,string,uint256[])",
          "deleteCategory(uint256)",
          "getAllProperties()",
          "addProperty(string)",
          "editProperty(uint256,string)",
          "deleteProperty(uint256)",
          "getPackagesByCategory(uint256)",
          "addPackage(uint256,string,uint256,uint256,uint256,bool[])",
          "editPackage(uint256,uint256,string,uint256,uint256,uint256,bool[])",
          "deletePackage(uint256,uint256)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [
            {
              "label": "categoryCounter",
              "offset": 0,
              "slot": "0",
              "type": "t_uint256",
              "contract": "ThirdParty",
              "src": "contracts\\ThirdParty.sol:12"
            },
            {
              "label": "packageCounter",
              "offset": 0,
              "slot": "1",
              "type": "t_uint256",
              "contract": "ThirdParty",
              "src": "contracts\\ThirdParty.sol:23"
            },
            {
              "label": "propertyCounter",
              "offset": 0,
              "slot": "2",
              "type": "t_uint256",
              "contract": "ThirdParty",
              "src": "contracts\\ThirdParty.sol:29"
            },
            {
              "label": "allCategories",
              "offset": 0,
              "slot": "3",
              "type": "t_array(t_struct(Category)11_storage)dyn_storage",
              "contract": "ThirdParty",
              "src": "contracts\\ThirdParty.sol:31"
            },
            {
              "label": "allPackages",
              "offset": 0,
              "slot": "4",
              "type": "t_mapping(t_uint256,t_array(t_struct(Package)29_storage)dyn_storage)",
              "contract": "ThirdParty",
              "src": "contracts\\ThirdParty.sol:34"
            },
            {
              "label": "allProperties",
              "offset": 0,
              "slot": "5",
              "type": "t_array(t_struct(Property)36_storage)dyn_storage",
              "contract": "ThirdParty",
              "src": "contracts\\ThirdParty.sol:37"
            }
          ],
          "types": {
            "t_array(t_bool)dyn_storage": {
              "label": "bool[]",
              "numberOfBytes": "32"
            },
            "t_array(t_struct(Category)11_storage)dyn_storage": {
              "label": "struct ThirdParty.Category[]",
              "numberOfBytes": "32"
            },
            "t_array(t_struct(Package)29_storage)dyn_storage": {
              "label": "struct ThirdParty.Package[]",
              "numberOfBytes": "32"
            },
            "t_array(t_struct(Property)36_storage)dyn_storage": {
              "label": "struct ThirdParty.Property[]",
              "numberOfBytes": "32"
            },
            "t_array(t_uint256)dyn_storage": {
              "label": "uint256[]",
              "numberOfBytes": "32"
            },
            "t_bool": {
              "label": "bool",
              "numberOfBytes": "1"
            },
            "t_mapping(t_uint256,t_array(t_struct(Package)29_storage)dyn_storage)": {
              "label": "mapping(uint256 => struct ThirdParty.Package[])",
              "numberOfBytes": "32"
            },
            "t_string_storage": {
              "label": "string",
              "numberOfBytes": "32"
            },
            "t_struct(Category)11_storage": {
              "label": "struct ThirdParty.Category",
              "members": [
                {
                  "label": "categoryID",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "0"
                },
                {
                  "label": "cartegoryName",
                  "type": "t_string_storage",
                  "offset": 0,
                  "slot": "1"
                },
                {
                  "label": "properties",
                  "type": "t_array(t_uint256)dyn_storage",
                  "offset": 0,
                  "slot": "2"
                },
                {
                  "label": "visible",
                  "type": "t_bool",
                  "offset": 0,
                  "slot": "3"
                }
              ],
              "numberOfBytes": "128"
            },
            "t_struct(Package)29_storage": {
              "label": "struct ThirdParty.Package",
              "members": [
                {
                  "label": "categoryID",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "0"
                },
                {
                  "label": "packageID",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "1"
                },
                {
                  "label": "packageName",
                  "type": "t_string_storage",
                  "offset": 0,
                  "slot": "2"
                },
                {
                  "label": "price",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "3"
                },
                {
                  "label": "period",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "4"
                },
                {
                  "label": "dataLimit",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "5"
                },
                {
                  "label": "propertyVisible",
                  "type": "t_array(t_bool)dyn_storage",
                  "offset": 0,
                  "slot": "6"
                }
              ],
              "numberOfBytes": "224"
            },
            "t_struct(Property)36_storage": {
              "label": "struct ThirdParty.Property",
              "members": [
                {
                  "label": "propertyID",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "0"
                },
                {
                  "label": "propertyName",
                  "type": "t_string_storage",
                  "offset": 0,
                  "slot": "1"
                }
              ],
              "numberOfBytes": "64"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            }
          },
          "layoutVersion": "1.1",
          "flat": true
        }
      }
    },
    {
      "Context": {
        "src": "contracts\\TokenContract.sol:30",
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "HouseBusinessToken": {
        "src": "contracts\\TokenContract.sol:41",
        "version": {
          "withMetadata": "4f990ca86e03541351e9529165a17d7cb67b9b8bd35a9c3adb0efa9a825a1bb9",
          "withoutMetadata": "b737d4aaacef72af795cc4b42f15838a2ae9bc1e52c8c3e49d32ef8fdcd6230d",
          "linkedWithoutMetadata": "b737d4aaacef72af795cc4b42f15838a2ae9bc1e52c8c3e49d32ef8fdcd6230d"
        },
        "inherit": [
          "IERC20Metadata",
          "IERC20",
          "Context"
        ],
        "libraries": [],
        "methods": [
          "()",
          "name()",
          "symbol()",
          "decimals()",
          "totalSupply()",
          "balanceOf(address)",
          "transfer(address,uint256)",
          "allowance(address,address)",
          "approve(address,uint256)",
          "transferFrom(address,address,uint256)",
          "increaseAllowance(address,uint256)",
          "decreaseAllowance(address,uint256)",
          "_mint(address,uint256)"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "HouseBusinessToken",
            "src": "contracts\\TokenContract.sol:50"
          },
          {
            "kind": "state-variable-assignment",
            "name": "_name",
            "src": "contracts\\TokenContract.sol:45"
          },
          {
            "kind": "state-variable-assignment",
            "name": "_symbol",
            "src": "contracts\\TokenContract.sol:46"
          },
          {
            "kind": "state-variable-assignment",
            "name": "_decimals",
            "src": "contracts\\TokenContract.sol:47"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "_balances",
              "offset": 0,
              "slot": "0",
              "type": "t_mapping(t_address,t_uint256)",
              "contract": "HouseBusinessToken",
              "src": "contracts\\TokenContract.sol:42"
            },
            {
              "label": "_allowances",
              "offset": 0,
              "slot": "1",
              "type": "t_mapping(t_address,t_mapping(t_address,t_uint256))",
              "contract": "HouseBusinessToken",
              "src": "contracts\\TokenContract.sol:43"
            },
            {
              "label": "_totalSupply",
              "offset": 0,
              "slot": "2",
              "type": "t_uint256",
              "contract": "HouseBusinessToken",
              "src": "contracts\\TokenContract.sol:44"
            },
            {
              "label": "_name",
              "offset": 0,
              "slot": "3",
              "type": "t_string_storage",
              "contract": "HouseBusinessToken",
              "src": "contracts\\TokenContract.sol:45"
            },
            {
              "label": "_symbol",
              "offset": 0,
              "slot": "4",
              "type": "t_string_storage",
              "contract": "HouseBusinessToken",
              "src": "contracts\\TokenContract.sol:46"
            },
            {
              "label": "_decimals",
              "offset": 0,
              "slot": "5",
              "type": "t_uint8",
              "contract": "HouseBusinessToken",
              "src": "contracts\\TokenContract.sol:47"
            },
            {
              "label": "_owner",
              "offset": 1,
              "slot": "5",
              "type": "t_address",
              "contract": "HouseBusinessToken",
              "src": "contracts\\TokenContract.sol:48"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            },
            "t_mapping(t_address,t_mapping(t_address,t_uint256))": {
              "label": "mapping(address => mapping(address => uint256))",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_uint256)": {
              "label": "mapping(address => uint256)",
              "numberOfBytes": "32"
            },
            "t_string_storage": {
              "label": "string",
              "numberOfBytes": "32"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            },
            "t_uint8": {
              "label": "uint8",
              "numberOfBytes": "1"
            }
          },
          "layoutVersion": "1.1",
          "flat": true
        }
      },
      "IERC20": {
        "src": "contracts\\TokenContract.sol:5",
        "inherit": [],
        "libraries": [],
        "methods": [
          "totalSupply()",
          "balanceOf(address)",
          "transfer(address,uint256)",
          "allowance(address,address)",
          "approve(address,uint256)",
          "transferFrom(address,address,uint256)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "IERC20Metadata": {
        "src": "contracts\\TokenContract.sol:22",
        "inherit": [
          "IERC20"
        ],
        "libraries": [],
        "methods": [
          "name()",
          "symbol()",
          "decimals()"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      }
    },
    {
      "IHouseBusiness": {
        "src": "contracts\\Operator.sol:3",
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "Operator": {
        "src": "contracts\\Operator.sol:7",
        "version": {
          "withMetadata": "46af2c88135d313320332230d694075ef454de90ae3c17b467e0cf99b420bdc4",
          "withoutMetadata": "ac0db523ddc3e330f735df7b3b0b24460531c71290a891170e840f8f67d5ff6b",
          "linkedWithoutMetadata": "ac0db523ddc3e330f735df7b3b0b24460531c71290a891170e840f8f67d5ff6b"
        },
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      }
    },
    {
      "IPRC20": {
        "src": "contracts\\interfaces\\IPRC20.sol:4",
        "inherit": [],
        "libraries": [],
        "methods": [
          "totalSupply()",
          "balanceOf(address)",
          "transfer(address,uint256)",
          "allowance(address,address)",
          "approve(address,uint256)",
          "transferFrom(address,address,uint256)",
          "decimals()"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      }
    },
    {
      "MainCleanContract": {
        "src": "contracts\\Contract.sol:6",
        "version": {
          "withMetadata": "010468631cbf91e131d43c059b189b55d220c871cd6c9bf91654f94d798103f1",
          "withoutMetadata": "e5b88dc6dff55c5639dcf382191cb4bb5323b9b8daccad7765611efdf8c82446",
          "linkedWithoutMetadata": "e5b88dc6dff55c5639dcf382191cb4bb5323b9b8daccad7765611efdf8c82446"
        },
        "inherit": [],
        "libraries": [],
        "methods": [
          "(address)",
          "ccCreation(string,string,address,string,uint256,uint256,uint256,string)",
          "getAllContractsByOwner()",
          "getAllContractsBySigner()",
          "getContractById(uint256)",
          "addContractSigner(uint256,address)",
          "signContract(uint256)",
          "sendNotify(address,string,uint256)",
          "getUploadedCounter()",
          "getAllNotifies()",
          "calcDiv(uint256,uint256)",
          "toString(bytes)",
          "addressToString(address)",
          "uintToString(uint256)",
          "bytesToString(bytes32)",
          "transferContractOwnership(uint256,address,address)"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "MainCleanContract",
            "src": "contracts\\Contract.sol:52"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "ccCounter",
              "offset": 0,
              "slot": "0",
              "type": "t_uint256",
              "contract": "MainCleanContract",
              "src": "contracts\\Contract.sol:8"
            },
            {
              "label": "houseNFTAddress",
              "offset": 0,
              "slot": "1",
              "type": "t_address",
              "contract": "MainCleanContract",
              "src": "contracts\\Contract.sol:11"
            },
            {
              "label": "allCleanContracts",
              "offset": 0,
              "slot": "2",
              "type": "t_mapping(t_uint256,t_struct(CleanContract)39_storage)",
              "contract": "MainCleanContract",
              "src": "contracts\\Contract.sol:44"
            },
            {
              "label": "allContractsByOwner",
              "offset": 0,
              "slot": "3",
              "type": "t_mapping(t_address,t_array(t_uint256)dyn_storage)",
              "contract": "MainCleanContract",
              "src": "contracts\\Contract.sol:46"
            },
            {
              "label": "allContractsBySigner",
              "offset": 0,
              "slot": "4",
              "type": "t_mapping(t_address,t_array(t_uint256)dyn_storage)",
              "contract": "MainCleanContract",
              "src": "contracts\\Contract.sol:48"
            },
            {
              "label": "allNotifies",
              "offset": 0,
              "slot": "5",
              "type": "t_mapping(t_address,t_array(t_struct(Notify)52_storage)dyn_storage)",
              "contract": "MainCleanContract",
              "src": "contracts\\Contract.sol:50"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            },
            "t_array(t_struct(Notify)52_storage)dyn_storage": {
              "label": "struct MainCleanContract.Notify[]",
              "numberOfBytes": "32"
            },
            "t_array(t_uint256)dyn_storage": {
              "label": "uint256[]",
              "numberOfBytes": "32"
            },
            "t_bool": {
              "label": "bool",
              "numberOfBytes": "1"
            },
            "t_mapping(t_address,t_array(t_struct(Notify)52_storage)dyn_storage)": {
              "label": "mapping(address => struct MainCleanContract.Notify[])",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_array(t_uint256)dyn_storage)": {
              "label": "mapping(address => uint256[])",
              "numberOfBytes": "32"
            },
            "t_mapping(t_uint256,t_struct(CleanContract)39_storage)": {
              "label": "mapping(uint256 => struct MainCleanContract.CleanContract)",
              "numberOfBytes": "32"
            },
            "t_string_storage": {
              "label": "string",
              "numberOfBytes": "32"
            },
            "t_struct(CleanContract)39_storage": {
              "label": "struct MainCleanContract.CleanContract",
              "members": [
                {
                  "label": "contractId",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "0"
                },
                {
                  "label": "companyName",
                  "type": "t_string_storage",
                  "offset": 0,
                  "slot": "1"
                },
                {
                  "label": "contractType",
                  "type": "t_string_storage",
                  "offset": 0,
                  "slot": "2"
                },
                {
                  "label": "contractURI",
                  "type": "t_string_storage",
                  "offset": 0,
                  "slot": "3"
                },
                {
                  "label": "dateFrom",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "4"
                },
                {
                  "label": "dateTo",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "5"
                },
                {
                  "label": "agreedPrice",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "6"
                },
                {
                  "label": "currency",
                  "type": "t_string_storage",
                  "offset": 0,
                  "slot": "7"
                },
                {
                  "label": "creator",
                  "type": "t_address",
                  "offset": 0,
                  "slot": "8"
                },
                {
                  "label": "owner",
                  "type": "t_address",
                  "offset": 0,
                  "slot": "9"
                },
                {
                  "label": "creatorApproval",
                  "type": "t_bool",
                  "offset": 20,
                  "slot": "9"
                },
                {
                  "label": "creatorSignDate",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "10"
                },
                {
                  "label": "contractSigner",
                  "type": "t_address",
                  "offset": 0,
                  "slot": "11"
                },
                {
                  "label": "signerApproval",
                  "type": "t_bool",
                  "offset": 20,
                  "slot": "11"
                },
                {
                  "label": "signerSignDate",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "12"
                },
                {
                  "label": "status",
                  "type": "t_string_storage",
                  "offset": 0,
                  "slot": "13"
                }
              ],
              "numberOfBytes": "448"
            },
            "t_struct(Notify)52_storage": {
              "label": "struct MainCleanContract.Notify",
              "members": [
                {
                  "label": "nSender",
                  "type": "t_address",
                  "offset": 0,
                  "slot": "0"
                },
                {
                  "label": "nReceiver",
                  "type": "t_address",
                  "offset": 0,
                  "slot": "1"
                },
                {
                  "label": "ccID",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "2"
                },
                {
                  "label": "notifySentTime",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "3"
                },
                {
                  "label": "notifyContent",
                  "type": "t_string_storage",
                  "offset": 0,
                  "slot": "4"
                },
                {
                  "label": "status",
                  "type": "t_bool",
                  "offset": 0,
                  "slot": "5"
                }
              ],
              "numberOfBytes": "192"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            }
          },
          "layoutVersion": "1.1",
          "flat": true
        }
      }
    },
    {
      "ThirdParty": {
        "src": "contracts\\ThirdParty.sol:5",
        "version": {
          "withMetadata": "d53521b340872e1cb19a829da8b6f983b51ec0caaaaed0ba0db377ea1dcf6c41",
          "withoutMetadata": "3acbde7a57100e491145d86dc06d6a1d005f910761389ab6ab79b372a76c9ad9",
          "linkedWithoutMetadata": "3acbde7a57100e491145d86dc06d6a1d005f910761389ab6ab79b372a76c9ad9"
        },
        "inherit": [],
        "libraries": [],
        "methods": [
          "getAllCategories()",
          "addCategory(string,uint256[])",
          "editCategory(uint256,string,uint256[])",
          "deleteCategory(uint256)",
          "getAllProperties()",
          "addProperty(string)",
          "editProperty(uint256,string)",
          "deleteProperty(uint256)",
          "getPackagesByCategory(uint256)",
          "addPackage(uint256,string,uint256,uint256,uint256,bool[])",
          "editPackage(uint256,uint256,string,uint256,uint256,uint256,bool[])",
          "deletePackage(uint256,uint256)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [
            {
              "label": "categoryCounter",
              "offset": 0,
              "slot": "0",
              "type": "t_uint256",
              "contract": "ThirdParty",
              "src": "contracts\\ThirdParty.sol:12"
            },
            {
              "label": "packageCounter",
              "offset": 0,
              "slot": "1",
              "type": "t_uint256",
              "contract": "ThirdParty",
              "src": "contracts\\ThirdParty.sol:23"
            },
            {
              "label": "propertyCounter",
              "offset": 0,
              "slot": "2",
              "type": "t_uint256",
              "contract": "ThirdParty",
              "src": "contracts\\ThirdParty.sol:29"
            },
            {
              "label": "allCategories",
              "offset": 0,
              "slot": "3",
              "type": "t_array(t_struct(Category)11_storage)dyn_storage",
              "contract": "ThirdParty",
              "src": "contracts\\ThirdParty.sol:31"
            },
            {
              "label": "allPackages",
              "offset": 0,
              "slot": "4",
              "type": "t_mapping(t_uint256,t_array(t_struct(Package)29_storage)dyn_storage)",
              "contract": "ThirdParty",
              "src": "contracts\\ThirdParty.sol:34"
            },
            {
              "label": "allProperties",
              "offset": 0,
              "slot": "5",
              "type": "t_array(t_struct(Property)36_storage)dyn_storage",
              "contract": "ThirdParty",
              "src": "contracts\\ThirdParty.sol:37"
            }
          ],
          "types": {
            "t_array(t_bool)dyn_storage": {
              "label": "bool[]",
              "numberOfBytes": "32"
            },
            "t_array(t_struct(Category)11_storage)dyn_storage": {
              "label": "struct ThirdParty.Category[]",
              "numberOfBytes": "32"
            },
            "t_array(t_struct(Package)29_storage)dyn_storage": {
              "label": "struct ThirdParty.Package[]",
              "numberOfBytes": "32"
            },
            "t_array(t_struct(Property)36_storage)dyn_storage": {
              "label": "struct ThirdParty.Property[]",
              "numberOfBytes": "32"
            },
            "t_array(t_uint256)dyn_storage": {
              "label": "uint256[]",
              "numberOfBytes": "32"
            },
            "t_bool": {
              "label": "bool",
              "numberOfBytes": "1"
            },
            "t_mapping(t_uint256,t_array(t_struct(Package)29_storage)dyn_storage)": {
              "label": "mapping(uint256 => struct ThirdParty.Package[])",
              "numberOfBytes": "32"
            },
            "t_string_storage": {
              "label": "string",
              "numberOfBytes": "32"
            },
            "t_struct(Category)11_storage": {
              "label": "struct ThirdParty.Category",
              "members": [
                {
                  "label": "categoryID",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "0"
                },
                {
                  "label": "cartegoryName",
                  "type": "t_string_storage",
                  "offset": 0,
                  "slot": "1"
                },
                {
                  "label": "properties",
                  "type": "t_array(t_uint256)dyn_storage",
                  "offset": 0,
                  "slot": "2"
                },
                {
                  "label": "visible",
                  "type": "t_bool",
                  "offset": 0,
                  "slot": "3"
                }
              ],
              "numberOfBytes": "128"
            },
            "t_struct(Package)29_storage": {
              "label": "struct ThirdParty.Package",
              "members": [
                {
                  "label": "categoryID",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "0"
                },
                {
                  "label": "packageID",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "1"
                },
                {
                  "label": "packageName",
                  "type": "t_string_storage",
                  "offset": 0,
                  "slot": "2"
                },
                {
                  "label": "price",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "3"
                },
                {
                  "label": "period",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "4"
                },
                {
                  "label": "dataLimit",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "5"
                },
                {
                  "label": "propertyVisible",
                  "type": "t_array(t_bool)dyn_storage",
                  "offset": 0,
                  "slot": "6"
                }
              ],
              "numberOfBytes": "224"
            },
            "t_struct(Property)36_storage": {
              "label": "struct ThirdParty.Property",
              "members": [
                {
                  "label": "propertyID",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "0"
                },
                {
                  "label": "propertyName",
                  "type": "t_string_storage",
                  "offset": 0,
                  "slot": "1"
                }
              ],
              "numberOfBytes": "64"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            }
          },
          "layoutVersion": "1.1",
          "flat": true
        }
      }
    },
    {
      "Context": {
        "src": "contracts\\TokenContract.sol:30",
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "HouseBusinessToken": {
        "src": "contracts\\TokenContract.sol:41",
        "version": {
          "withMetadata": "4f990ca86e03541351e9529165a17d7cb67b9b8bd35a9c3adb0efa9a825a1bb9",
          "withoutMetadata": "b737d4aaacef72af795cc4b42f15838a2ae9bc1e52c8c3e49d32ef8fdcd6230d",
          "linkedWithoutMetadata": "b737d4aaacef72af795cc4b42f15838a2ae9bc1e52c8c3e49d32ef8fdcd6230d"
        },
        "inherit": [
          "IERC20Metadata",
          "IERC20",
          "Context"
        ],
        "libraries": [],
        "methods": [
          "()",
          "name()",
          "symbol()",
          "decimals()",
          "totalSupply()",
          "balanceOf(address)",
          "transfer(address,uint256)",
          "allowance(address,address)",
          "approve(address,uint256)",
          "transferFrom(address,address,uint256)",
          "increaseAllowance(address,uint256)",
          "decreaseAllowance(address,uint256)",
          "_mint(address,uint256)"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "HouseBusinessToken",
            "src": "contracts\\TokenContract.sol:50"
          },
          {
            "kind": "state-variable-assignment",
            "name": "_name",
            "src": "contracts\\TokenContract.sol:45"
          },
          {
            "kind": "state-variable-assignment",
            "name": "_symbol",
            "src": "contracts\\TokenContract.sol:46"
          },
          {
            "kind": "state-variable-assignment",
            "name": "_decimals",
            "src": "contracts\\TokenContract.sol:47"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "_balances",
              "offset": 0,
              "slot": "0",
              "type": "t_mapping(t_address,t_uint256)",
              "contract": "HouseBusinessToken",
              "src": "contracts\\TokenContract.sol:42"
            },
            {
              "label": "_allowances",
              "offset": 0,
              "slot": "1",
              "type": "t_mapping(t_address,t_mapping(t_address,t_uint256))",
              "contract": "HouseBusinessToken",
              "src": "contracts\\TokenContract.sol:43"
            },
            {
              "label": "_totalSupply",
              "offset": 0,
              "slot": "2",
              "type": "t_uint256",
              "contract": "HouseBusinessToken",
              "src": "contracts\\TokenContract.sol:44"
            },
            {
              "label": "_name",
              "offset": 0,
              "slot": "3",
              "type": "t_string_storage",
              "contract": "HouseBusinessToken",
              "src": "contracts\\TokenContract.sol:45"
            },
            {
              "label": "_symbol",
              "offset": 0,
              "slot": "4",
              "type": "t_string_storage",
              "contract": "HouseBusinessToken",
              "src": "contracts\\TokenContract.sol:46"
            },
            {
              "label": "_decimals",
              "offset": 0,
              "slot": "5",
              "type": "t_uint8",
              "contract": "HouseBusinessToken",
              "src": "contracts\\TokenContract.sol:47"
            },
            {
              "label": "_owner",
              "offset": 1,
              "slot": "5",
              "type": "t_address",
              "contract": "HouseBusinessToken",
              "src": "contracts\\TokenContract.sol:48"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            },
            "t_mapping(t_address,t_mapping(t_address,t_uint256))": {
              "label": "mapping(address => mapping(address => uint256))",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_uint256)": {
              "label": "mapping(address => uint256)",
              "numberOfBytes": "32"
            },
            "t_string_storage": {
              "label": "string",
              "numberOfBytes": "32"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            },
            "t_uint8": {
              "label": "uint8",
              "numberOfBytes": "1"
            }
          },
          "layoutVersion": "1.1",
          "flat": true
        }
      },
      "IERC20": {
        "src": "contracts\\TokenContract.sol:5",
        "inherit": [],
        "libraries": [],
        "methods": [
          "totalSupply()",
          "balanceOf(address)",
          "transfer(address,uint256)",
          "allowance(address,address)",
          "approve(address,uint256)",
          "transferFrom(address,address,uint256)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "IERC20Metadata": {
        "src": "contracts\\TokenContract.sol:22",
        "inherit": [
          "IERC20"
        ],
        "libraries": [],
        "methods": [
          "name()",
          "symbol()",
          "decimals()"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      }
    },
    {
      "IPRC20": {
        "src": "contracts\\interfaces\\IPRC20.sol:4",
        "inherit": [],
        "libraries": [],
        "methods": [
          "totalSupply()",
          "balanceOf(address)",
          "transfer(address,uint256)",
          "allowance(address,address)",
          "approve(address,uint256)",
          "transferFrom(address,address,uint256)",
          "decimals()"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      }
    },
    {
      "IHouseBusiness": {
        "src": "contracts\\Operator.sol:3",
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "Operator": {
        "src": "contracts\\Operator.sol:7",
        "version": {
          "withMetadata": "46af2c88135d313320332230d694075ef454de90ae3c17b467e0cf99b420bdc4",
          "withoutMetadata": "ac0db523ddc3e330f735df7b3b0b24460531c71290a891170e840f8f67d5ff6b",
          "linkedWithoutMetadata": "ac0db523ddc3e330f735df7b3b0b24460531c71290a891170e840f8f67d5ff6b"
        },
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      }
    },
    {
      "IERC20": {
        "src": "@openzeppelin\\contracts\\token\\ERC20\\IERC20.sol:9",
        "inherit": [],
        "libraries": [],
        "methods": [
          "totalSupply()",
          "balanceOf(address)",
          "transfer(address,uint256)",
          "allowance(address,address)",
          "approve(address,uint256)",
          "transferFrom(address,address,uint256)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "ERC721": {
        "src": "@openzeppelin\\contracts\\token\\ERC721\\ERC721.sol:19",
        "version": {
          "withMetadata": "9ebb68faadef327bc83697ff51da508f0484dd0c5450e42d0a1ac6a2ec46a24e",
          "withoutMetadata": "ed4023ae10fc078ca9d410a0661cf3fd9603fe9627b15a17e4c2487e2a48d65d",
          "linkedWithoutMetadata": "ed4023ae10fc078ca9d410a0661cf3fd9603fe9627b15a17e4c2487e2a48d65d"
        },
        "inherit": [
          "IERC721Metadata",
          "IERC721",
          "ERC165",
          "IERC165",
          "Context"
        ],
        "libraries": [
          "Address",
          "Strings"
        ],
        "methods": [
          "(string,string)",
          "supportsInterface(bytes4)",
          "balanceOf(address)",
          "ownerOf(uint256)",
          "name()",
          "symbol()",
          "tokenURI(uint256)",
          "approve(address,uint256)",
          "getApproved(uint256)",
          "setApprovalForAll(address,bool)",
          "isApprovedForAll(address,address)",
          "transferFrom(address,address,uint256)",
          "safeTransferFrom(address,address,uint256)",
          "safeTransferFrom(address,address,uint256,bytes)"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "ERC721",
            "src": "@openzeppelin\\contracts\\token\\ERC721\\ERC721.sol:44"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "_name",
              "offset": 0,
              "slot": "0",
              "type": "t_string_storage",
              "contract": "ERC721",
              "src": "@openzeppelin\\contracts\\token\\ERC721\\ERC721.sol:24"
            },
            {
              "label": "_symbol",
              "offset": 0,
              "slot": "1",
              "type": "t_string_storage",
              "contract": "ERC721",
              "src": "@openzeppelin\\contracts\\token\\ERC721\\ERC721.sol:27"
            },
            {
              "label": "_owners",
              "offset": 0,
              "slot": "2",
              "type": "t_mapping(t_uint256,t_address)",
              "contract": "ERC721",
              "src": "@openzeppelin\\contracts\\token\\ERC721\\ERC721.sol:30"
            },
            {
              "label": "_balances",
              "offset": 0,
              "slot": "3",
              "type": "t_mapping(t_address,t_uint256)",
              "contract": "ERC721",
              "src": "@openzeppelin\\contracts\\token\\ERC721\\ERC721.sol:33"
            },
            {
              "label": "_tokenApprovals",
              "offset": 0,
              "slot": "4",
              "type": "t_mapping(t_uint256,t_address)",
              "contract": "ERC721",
              "src": "@openzeppelin\\contracts\\token\\ERC721\\ERC721.sol:36"
            },
            {
              "label": "_operatorApprovals",
              "offset": 0,
              "slot": "5",
              "type": "t_mapping(t_address,t_mapping(t_address,t_bool))",
              "contract": "ERC721",
              "src": "@openzeppelin\\contracts\\token\\ERC721\\ERC721.sol:39"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            },
            "t_bool": {
              "label": "bool",
              "numberOfBytes": "1"
            },
            "t_mapping(t_address,t_bool)": {
              "label": "mapping(address => bool)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_mapping(t_address,t_bool))": {
              "label": "mapping(address => mapping(address => bool))",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_uint256)": {
              "label": "mapping(address => uint256)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_uint256,t_address)": {
              "label": "mapping(uint256 => address)",
              "numberOfBytes": "32"
            },
            "t_string_storage": {
              "label": "string",
              "numberOfBytes": "32"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            }
          },
          "layoutVersion": "1.1",
          "flat": true
        }
      },
      "IERC721": {
        "src": "@openzeppelin\\contracts\\token\\ERC721\\IERC721.sol:11",
        "inherit": [
          "IERC165"
        ],
        "libraries": [],
        "methods": [
          "balanceOf(address)",
          "ownerOf(uint256)",
          "safeTransferFrom(address,address,uint256,bytes)",
          "safeTransferFrom(address,address,uint256)",
          "transferFrom(address,address,uint256)",
          "approve(address,uint256)",
          "setApprovalForAll(address,bool)",
          "getApproved(uint256)",
          "isApprovedForAll(address,address)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "IERC721Receiver": {
        "src": "@openzeppelin\\contracts\\token\\ERC721\\IERC721Receiver.sol:11",
        "inherit": [],
        "libraries": [],
        "methods": [
          "onERC721Received(address,address,uint256,bytes)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "ERC721URIStorage": {
        "src": "@openzeppelin\\contracts\\token\\ERC721\\extensions\\ERC721URIStorage.sol:11",
        "inherit": [
          "ERC721",
          "IERC721Metadata",
          "IERC721",
          "ERC165",
          "IERC165",
          "Context"
        ],
        "libraries": [
          "Strings"
        ],
        "methods": [
          "tokenURI(uint256)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [
            {
              "label": "_name",
              "offset": 0,
              "slot": "0",
              "type": "t_string_storage",
              "contract": "ERC721",
              "src": "@openzeppelin\\contracts\\token\\ERC721\\ERC721.sol:24"
            },
            {
              "label": "_symbol",
              "offset": 0,
              "slot": "1",
              "type": "t_string_storage",
              "contract": "ERC721",
              "src": "@openzeppelin\\contracts\\token\\ERC721\\ERC721.sol:27"
            },
            {
              "label": "_owners",
              "offset": 0,
              "slot": "2",
              "type": "t_mapping(t_uint256,t_address)",
              "contract": "ERC721",
              "src": "@openzeppelin\\contracts\\token\\ERC721\\ERC721.sol:30"
            },
            {
              "label": "_balances",
              "offset": 0,
              "slot": "3",
              "type": "t_mapping(t_address,t_uint256)",
              "contract": "ERC721",
              "src": "@openzeppelin\\contracts\\token\\ERC721\\ERC721.sol:33"
            },
            {
              "label": "_tokenApprovals",
              "offset": 0,
              "slot": "4",
              "type": "t_mapping(t_uint256,t_address)",
              "contract": "ERC721",
              "src": "@openzeppelin\\contracts\\token\\ERC721\\ERC721.sol:36"
            },
            {
              "label": "_operatorApprovals",
              "offset": 0,
              "slot": "5",
              "type": "t_mapping(t_address,t_mapping(t_address,t_bool))",
              "contract": "ERC721",
              "src": "@openzeppelin\\contracts\\token\\ERC721\\ERC721.sol:39"
            },
            {
              "label": "_tokenURIs",
              "offset": 0,
              "slot": "6",
              "type": "t_mapping(t_uint256,t_string_storage)",
              "contract": "ERC721URIStorage",
              "src": "@openzeppelin\\contracts\\token\\ERC721\\extensions\\ERC721URIStorage.sol:15"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            },
            "t_bool": {
              "label": "bool",
              "numberOfBytes": "1"
            },
            "t_mapping(t_address,t_bool)": {
              "label": "mapping(address => bool)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_mapping(t_address,t_bool))": {
              "label": "mapping(address => mapping(address => bool))",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_uint256)": {
              "label": "mapping(address => uint256)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_uint256,t_address)": {
              "label": "mapping(uint256 => address)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_uint256,t_string_storage)": {
              "label": "mapping(uint256 => string)",
              "numberOfBytes": "32"
            },
            "t_string_storage": {
              "label": "string",
              "numberOfBytes": "32"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            }
          },
          "layoutVersion": "1.1",
          "flat": true
        }
      },
      "IERC721Metadata": {
        "src": "@openzeppelin\\contracts\\token\\ERC721\\extensions\\IERC721Metadata.sol:12",
        "inherit": [
          "IERC721",
          "IERC165"
        ],
        "libraries": [],
        "methods": [
          "name()",
          "symbol()",
          "tokenURI(uint256)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "Address": {
        "src": "@openzeppelin\\contracts\\utils\\Address.sol:9",
        "version": {
          "withMetadata": "469e62629df74b2ae5b04765782886d27065c542dd4360d0c359e2ee52715c29",
          "withoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db",
          "linkedWithoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db"
        },
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [
          {
            "kind": "delegatecall",
            "src": "@openzeppelin\\contracts\\utils\\Address.sol:185"
          }
        ],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "Context": {
        "src": "@openzeppelin\\contracts\\utils\\Context.sol:16",
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "Strings": {
        "src": "@openzeppelin\\contracts\\utils\\Strings.sol:11",
        "version": {
          "withMetadata": "6be811318460a6651038bb5171cc0bf109c3d8e875d32b6e6bac849bd51da11e",
          "withoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db",
          "linkedWithoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db"
        },
        "inherit": [],
        "libraries": [
          "Math"
        ],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "ERC165": {
        "src": "@openzeppelin\\contracts\\utils\\introspection\\ERC165.sol:22",
        "inherit": [
          "IERC165"
        ],
        "libraries": [],
        "methods": [
          "supportsInterface(bytes4)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "IERC165": {
        "src": "@openzeppelin\\contracts\\utils\\introspection\\IERC165.sol:15",
        "inherit": [],
        "libraries": [],
        "methods": [
          "supportsInterface(bytes4)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "Math": {
        "src": "@openzeppelin\\contracts\\utils\\math\\Math.sol:9",
        "version": {
          "withMetadata": "ced272d222c66646c1870669cdc514a1ba479b3f9b42ba7792c596dbf0a1a986",
          "withoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db",
          "linkedWithoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db"
        },
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "HouseBusiness": {
        "src": "contracts\\HouseBusiness.sol:12",
        "version": {
          "withMetadata": "a19dec942c785ff677ed07d330ad27252c2dd2e5d0b0e58ae6162444ef4923c4",
          "withoutMetadata": "d9a87cb61ad04d8e08bc2afd4fe273056d5d253248c6d9ddb052ff6a4efcae88",
          "linkedWithoutMetadata": "d9a87cb61ad04d8e08bc2afd4fe273056d5d253248c6d9ddb052ff6a4efcae88"
        },
        "inherit": [
          "ERC721URIStorage",
          "ERC721",
          "IERC721Metadata",
          "IERC721",
          "ERC165",
          "IERC165",
          "Context"
        ],
        "libraries": [],
        "methods": [
          "(address)",
          "setCContractAddress(address)",
          "setStakingContractAddress(address)",
          "setHouseStakedStatus(uint256,bool)",
          "setMinMaxHousePrice(uint256,uint256)",
          "setConfigToken(address)",
          "setPayable(uint256,address,bool)",
          "setRoyaltyCreator(uint256)",
          "setRoyaltyMarket(uint256)",
          "disconnectContract(uint256,uint256,uint256)",
          "changeTokenPrice(uint256,uint256)",
          "withdrawToken(uint256)",
          "withdrawETH(uint256)",
          "addMember(address)",
          "removeMember(address)",
          "mintHouse(string,string,string,string)",
          "addAllowList(uint256,address)",
          "removeAllowList(uint256,address)",
          "addHistory(uint256,uint256,uint256,string,string,string,string,string,uint256)",
          "editHistory(uint256,uint256,string,string,string,string,string,uint256)",
          "addOrEditHType(uint256,string,bool,bool,bool,bool,bool,bool,bool)",
          "removeHistoryType(uint256)",
          "changeHousePrice(uint256,uint256)",
          "buyHouseNft(uint256)",
          "sendToken(address,uint256)",
          "getAllHouses()",
          "getAllPayableHouses()",
          "getAllMyHouses()",
          "getTokenPrice(uint256)",
          "getTotalInfo()",
          "isMember()",
          "tokenURI(uint256)",
          "checkAllowedList(uint256,address)",
          "getHistory(uint256)",
          "getHistoryType()",
          "getTokenOwner(uint256)"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "HouseBusiness",
            "src": "contracts\\HouseBusiness.sol:161"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "_name",
              "offset": 0,
              "slot": "0",
              "type": "t_string_storage",
              "contract": "ERC721",
              "src": "@openzeppelin\\contracts\\token\\ERC721\\ERC721.sol:24"
            },
            {
              "label": "_symbol",
              "offset": 0,
              "slot": "1",
              "type": "t_string_storage",
              "contract": "ERC721",
              "src": "@openzeppelin\\contracts\\token\\ERC721\\ERC721.sol:27"
            },
            {
              "label": "_owners",
              "offset": 0,
              "slot": "2",
              "type": "t_mapping(t_uint256,t_address)",
              "contract": "ERC721",
              "src": "@openzeppelin\\contracts\\token\\ERC721\\ERC721.sol:30"
            },
            {
              "label": "_balances",
              "offset": 0,
              "slot": "3",
              "type": "t_mapping(t_address,t_uint256)",
              "contract": "ERC721",
              "src": "@openzeppelin\\contracts\\token\\ERC721\\ERC721.sol:33"
            },
            {
              "label": "_tokenApprovals",
              "offset": 0,
              "slot": "4",
              "type": "t_mapping(t_uint256,t_address)",
              "contract": "ERC721",
              "src": "@openzeppelin\\contracts\\token\\ERC721\\ERC721.sol:36"
            },
            {
              "label": "_operatorApprovals",
              "offset": 0,
              "slot": "5",
              "type": "t_mapping(t_address,t_mapping(t_address,t_bool))",
              "contract": "ERC721",
              "src": "@openzeppelin\\contracts\\token\\ERC721\\ERC721.sol:39"
            },
            {
              "label": "_tokenURIs",
              "offset": 0,
              "slot": "6",
              "type": "t_mapping(t_uint256,t_string_storage)",
              "contract": "ERC721URIStorage",
              "src": "@openzeppelin\\contracts\\token\\ERC721\\extensions\\ERC721URIStorage.sol:15"
            },
            {
              "label": "collectionName",
              "offset": 0,
              "slot": "7",
              "type": "t_string_storage",
              "contract": "HouseBusiness",
              "src": "contracts\\HouseBusiness.sol:14"
            },
            {
              "label": "collectionNameSymbol",
              "offset": 0,
              "slot": "8",
              "type": "t_string_storage",
              "contract": "HouseBusiness",
              "src": "contracts\\HouseBusiness.sol:16"
            },
            {
              "label": "houseCounter",
              "offset": 0,
              "slot": "9",
              "type": "t_uint256",
              "contract": "HouseBusiness",
              "src": "contracts\\HouseBusiness.sol:18"
            },
            {
              "label": "soldedCounter",
              "offset": 0,
              "slot": "10",
              "type": "t_uint256",
              "contract": "HouseBusiness",
              "src": "contracts\\HouseBusiness.sol:21"
            },
            {
              "label": "hTypeCounter",
              "offset": 0,
              "slot": "11",
              "type": "t_uint256",
              "contract": "HouseBusiness",
              "src": "contracts\\HouseBusiness.sol:23"
            },
            {
              "label": "_token",
              "offset": 0,
              "slot": "12",
              "type": "t_contract(IERC20)77",
              "contract": "HouseBusiness",
              "src": "contracts\\HouseBusiness.sol:25"
            },
            {
              "label": "minPrice",
              "offset": 0,
              "slot": "13",
              "type": "t_uint256",
              "contract": "HouseBusiness",
              "src": "contracts\\HouseBusiness.sol:27"
            },
            {
              "label": "maxPrice",
              "offset": 0,
              "slot": "14",
              "type": "t_uint256",
              "contract": "HouseBusiness",
              "src": "contracts\\HouseBusiness.sol:29"
            },
            {
              "label": "royaltyCreator",
              "offset": 0,
              "slot": "15",
              "type": "t_uint256",
              "contract": "HouseBusiness",
              "src": "contracts\\HouseBusiness.sol:31"
            },
            {
              "label": "royaltyMarket",
              "offset": 0,
              "slot": "16",
              "type": "t_uint256",
              "contract": "HouseBusiness",
              "src": "contracts\\HouseBusiness.sol:32"
            },
            {
              "label": "cContract",
              "offset": 0,
              "slot": "17",
              "type": "t_contract(IMainCleanContract)5817",
              "contract": "HouseBusiness",
              "src": "contracts\\HouseBusiness.sol:34"
            },
            {
              "label": "historyTypes",
              "offset": 0,
              "slot": "18",
              "type": "t_array(t_struct(HistoryType)2835_storage)dyn_storage",
              "contract": "HouseBusiness",
              "src": "contracts\\HouseBusiness.sol:75"
            },
            {
              "label": "houseHistories",
              "offset": 0,
              "slot": "19",
              "type": "t_mapping(t_uint256,t_array(t_struct(History)2816_storage)dyn_storage)",
              "contract": "HouseBusiness",
              "src": "contracts\\HouseBusiness.sol:77"
            },
            {
              "label": "allMembers",
              "offset": 0,
              "slot": "20",
              "type": "t_mapping(t_address,t_bool)",
              "contract": "HouseBusiness",
              "src": "contracts\\HouseBusiness.sol:79"
            },
            {
              "label": "allHouses",
              "offset": 0,
              "slot": "21",
              "type": "t_mapping(t_uint256,t_struct(House)2799_storage)",
              "contract": "HouseBusiness",
              "src": "contracts\\HouseBusiness.sol:81"
            },
            {
              "label": "allowedList",
              "offset": 0,
              "slot": "22",
              "type": "t_mapping(t_uint256,t_mapping(t_address,t_bool))",
              "contract": "HouseBusiness",
              "src": "contracts\\HouseBusiness.sol:83"
            },
            {
              "label": "stakingContractAddress",
              "offset": 0,
              "slot": "23",
              "type": "t_address",
              "contract": "HouseBusiness",
              "src": "contracts\\HouseBusiness.sol:86"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            },
            "t_array(t_struct(History)2816_storage)dyn_storage": {
              "label": "struct HouseBusiness.History[]",
              "numberOfBytes": "32"
            },
            "t_array(t_struct(HistoryType)2835_storage)dyn_storage": {
              "label": "struct HouseBusiness.HistoryType[]",
              "numberOfBytes": "32"
            },
            "t_bool": {
              "label": "bool",
              "numberOfBytes": "1"
            },
            "t_contract(IERC20)77": {
              "label": "contract IERC20",
              "numberOfBytes": "20"
            },
            "t_contract(IMainCleanContract)5817": {
              "label": "contract IMainCleanContract",
              "numberOfBytes": "20"
            },
            "t_mapping(t_address,t_bool)": {
              "label": "mapping(address => bool)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_mapping(t_address,t_bool))": {
              "label": "mapping(address => mapping(address => bool))",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_uint256)": {
              "label": "mapping(address => uint256)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_uint256,t_address)": {
              "label": "mapping(uint256 => address)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_uint256,t_array(t_struct(History)2816_storage)dyn_storage)": {
              "label": "mapping(uint256 => struct HouseBusiness.History[])",
              "numberOfBytes": "32"
            },
            "t_mapping(t_uint256,t_mapping(t_address,t_bool))": {
              "label": "mapping(uint256 => mapping(address => bool))",
              "numberOfBytes": "32"
            },
            "t_mapping(t_uint256,t_string_storage)": {
              "label": "mapping(uint256 => string)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_uint256,t_struct(House)2799_storage)": {
              "label": "mapping(uint256 => struct HouseBusiness.House)",
              "numberOfBytes": "32"
            },
            "t_string_storage": {
              "label": "string",
              "numberOfBytes": "32"
            },
            "t_struct(History)2816_storage": {
              "label": "struct HouseBusiness.History",
              "members": [
                {
                  "label": "hID",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "0"
                },
                {
                  "label": "contractId",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "1"
                },
                {
                  "label": "houseImg",
                  "type": "t_string_storage",
                  "offset": 0,
                  "slot": "2"
                },
                {
                  "label": "houseBrand",
                  "type": "t_string_storage",
                  "offset": 0,
                  "slot": "3"
                },
                {
                  "label": "desc",
                  "type": "t_string_storage",
                  "offset": 0,
                  "slot": "4"
                },
                {
                  "label": "history",
                  "type": "t_string_storage",
                  "offset": 0,
                  "slot": "5"
                },
                {
                  "label": "brandType",
                  "type": "t_string_storage",
                  "offset": 0,
                  "slot": "6"
                },
                {
                  "label": "yearField",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "7"
                }
              ],
              "numberOfBytes": "256"
            },
            "t_struct(HistoryType)2835_storage": {
              "label": "struct HouseBusiness.HistoryType",
              "members": [
                {
                  "label": "hID",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "0"
                },
                {
                  "label": "hLabel",
                  "type": "t_string_storage",
                  "offset": 0,
                  "slot": "1"
                },
                {
                  "label": "connectContract",
                  "type": "t_bool",
                  "offset": 0,
                  "slot": "2"
                },
                {
                  "label": "imgNeed",
                  "type": "t_bool",
                  "offset": 1,
                  "slot": "2"
                },
                {
                  "label": "brandNeed",
                  "type": "t_bool",
                  "offset": 2,
                  "slot": "2"
                },
                {
                  "label": "descNeed",
                  "type": "t_bool",
                  "offset": 3,
                  "slot": "2"
                },
                {
                  "label": "brandTypeNeed",
                  "type": "t_bool",
                  "offset": 4,
                  "slot": "2"
                },
                {
                  "label": "yearNeed",
                  "type": "t_bool",
                  "offset": 5,
                  "slot": "2"
                },
                {
                  "label": "checkMark",
                  "type": "t_bool",
                  "offset": 6,
                  "slot": "2"
                }
              ],
              "numberOfBytes": "96"
            },
            "t_struct(House)2799_storage": {
              "label": "struct HouseBusiness.House",
              "members": [
                {
                  "label": "tokenId",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "0"
                },
                {
                  "label": "tokenName",
                  "type": "t_string_storage",
                  "offset": 0,
                  "slot": "1"
                },
                {
                  "label": "tokenURI",
                  "type": "t_string_storage",
                  "offset": 0,
                  "slot": "2"
                },
                {
                  "label": "tokenType",
                  "type": "t_string_storage",
                  "offset": 0,
                  "slot": "3"
                },
                {
                  "label": "currentOwner",
                  "type": "t_address",
                  "offset": 0,
                  "slot": "4"
                },
                {
                  "label": "previousOwner",
                  "type": "t_address",
                  "offset": 0,
                  "slot": "5"
                },
                {
                  "label": "buyer",
                  "type": "t_address",
                  "offset": 0,
                  "slot": "6"
                },
                {
                  "label": "creator",
                  "type": "t_address",
                  "offset": 0,
                  "slot": "7"
                },
                {
                  "label": "price",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "8"
                },
                {
                  "label": "numberOfTransfers",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "9"
                },
                {
                  "label": "nftPayable",
                  "type": "t_bool",
                  "offset": 0,
                  "slot": "10"
                },
                {
                  "label": "staked",
                  "type": "t_bool",
                  "offset": 1,
                  "slot": "10"
                },
                {
                  "label": "soldStatus",
                  "type": "t_bool",
                  "offset": 2,
                  "slot": "10"
                }
              ],
              "numberOfBytes": "352"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            }
          },
          "layoutVersion": "1.1",
          "flat": true
        }
      },
      "HouseStaking": {
        "src": "contracts\\Staking.sol:8",
        "version": {
          "withMetadata": "36c6bdee488b397e6beeb568b47cd66b2d4a00399be93ce5f529f14c3061323f",
          "withoutMetadata": "7a0d4343ae20e41b6f4abe18cc1a2fa397c2b953aeb94b8577d8b9fe35613da2",
          "linkedWithoutMetadata": "7a0d4343ae20e41b6f4abe18cc1a2fa397c2b953aeb94b8577d8b9fe35613da2"
        },
        "inherit": [],
        "libraries": [],
        "methods": [
          "(address,address)",
          "setAPYConfig(uint256,uint256)",
          "stake(uint256,uint256)",
          "unstake(uint256)",
          "updateAPYConfig(uint256,uint256)",
          "claimRewards(address)",
          "setPenalty(uint256)",
          "calcDiv(uint256,uint256)",
          "getAllAPYTypes()",
          "stakingFinished(uint256)",
          "totalRewards(address)",
          "getAllMyStakedNFTs()",
          "getAllAPYs()"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "HouseStaking",
            "src": "contracts\\Staking.sol:42"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "stakedCounter",
              "offset": 0,
              "slot": "0",
              "type": "t_uint256",
              "contract": "HouseStaking",
              "src": "contracts\\Staking.sol:10"
            },
            {
              "label": "penalty",
              "offset": 0,
              "slot": "1",
              "type": "t_uint256",
              "contract": "HouseStaking",
              "src": "contracts\\Staking.sol:12"
            },
            {
              "label": "APYtypes",
              "offset": 0,
              "slot": "2",
              "type": "t_array(t_uint256)dyn_storage",
              "contract": "HouseStaking",
              "src": "contracts\\Staking.sol:14"
            },
            {
              "label": "APYConfig",
              "offset": 0,
              "slot": "3",
              "type": "t_mapping(t_uint256,t_uint256)",
              "contract": "HouseStaking",
              "src": "contracts\\Staking.sol:17"
            },
            {
              "label": "stakedNfts",
              "offset": 0,
              "slot": "4",
              "type": "t_mapping(t_address,t_array(t_struct(StakedNft)4853_storage)dyn_storage)",
              "contract": "HouseStaking",
              "src": "contracts\\Staking.sol:18"
            },
            {
              "label": "tokenAddress",
              "offset": 0,
              "slot": "5",
              "type": "t_address",
              "contract": "HouseStaking",
              "src": "contracts\\Staking.sol:20"
            },
            {
              "label": "houseNFTAddress",
              "offset": 0,
              "slot": "6",
              "type": "t_address",
              "contract": "HouseStaking",
              "src": "contracts\\Staking.sol:21"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            },
            "t_array(t_struct(StakedNft)4853_storage)dyn_storage": {
              "label": "struct HouseStaking.StakedNft[]",
              "numberOfBytes": "32"
            },
            "t_array(t_uint256)dyn_storage": {
              "label": "uint256[]",
              "numberOfBytes": "32"
            },
            "t_bool": {
              "label": "bool",
              "numberOfBytes": "1"
            },
            "t_mapping(t_address,t_array(t_struct(StakedNft)4853_storage)dyn_storage)": {
              "label": "mapping(address => struct HouseStaking.StakedNft[])",
              "numberOfBytes": "32"
            },
            "t_mapping(t_uint256,t_uint256)": {
              "label": "mapping(uint256 => uint256)",
              "numberOfBytes": "32"
            },
            "t_struct(StakedNft)4853_storage": {
              "label": "struct HouseStaking.StakedNft",
              "members": [
                {
                  "label": "owner",
                  "type": "t_address",
                  "offset": 0,
                  "slot": "0"
                },
                {
                  "label": "tokenId",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "1"
                },
                {
                  "label": "startedDate",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "2"
                },
                {
                  "label": "endDate",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "3"
                },
                {
                  "label": "claimDate",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "4"
                },
                {
                  "label": "stakingType",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "5"
                },
                {
                  "label": "perSecRewards",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "6"
                },
                {
                  "label": "stakingStatus",
                  "type": "t_bool",
                  "offset": 0,
                  "slot": "7"
                }
              ],
              "numberOfBytes": "256"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            }
          },
          "layoutVersion": "1.1",
          "flat": true
        }
      },
      "IMainCleanContract": {
        "src": "contracts\\interfaces\\IContract.sol:6",
        "inherit": [],
        "libraries": [],
        "methods": [
          "getContractById(uint256)",
          "transferContractOwnership(uint256,address,address)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "IHouseBusiness": {
        "src": "contracts\\interfaces\\IHouseBusiness.sol:5",
        "inherit": [],
        "libraries": [],
        "methods": [
          "collectionName()",
          "collectionNameSymbol()",
          "houseCounter()",
          "stakedCounter()",
          "soldedCounter()",
          "hTypeCounter()",
          "minPrice()",
          "maxPrice()",
          "penalty()",
          "royalty()",
          "historyTypes(uint256)",
          "houseHistories(uint256)",
          "allMembers(address)",
          "allHouses(uint256)",
          "stakedNfts(address)",
          "setMinMaxHousePrice(uint256,uint256)",
          "setConfigToken(address)",
          "isMember()",
          "addMember(address)",
          "removeMember(address)",
          "tokenURI(uint256)",
          "setPayable(uint256,address,bool)",
          "mintHouse(string,string,string,string,uint256)",
          "addAllowList(uint256,address)",
          "removeAllowList(uint256,address)",
          "checkAllowedList(uint256,address)",
          "addHistory(uint256,uint256,string,string,string,string,string,uint256)",
          "getHistory(uint256)",
          "editHistory(uint256,uint256,string,string,string,string,string,uint256)",
          "getHistoryType()",
          "addOrEditHType(uint256,string,bool,bool,bool,bool,bool,bool,bool)",
          "removeHistoryType(uint256)",
          "getMinMaxNFT()",
          "getTokenOwner(uint256)",
          "buyHouseNft(uint256)",
          "sendToken(address,uint256)",
          "changeTokenPrice(uint256,uint256)",
          "getAllHouses()",
          "getAllPayableHouses()",
          "getAllMyHouses()",
          "withdrawToken(uint256)",
          "withdrawETH(uint256)",
          "setAPYConfig(uint256,uint256)",
          "getAllAPYTypes()",
          "stake(uint256,uint256)",
          "unstake(uint256)",
          "stakingFinished(uint256)",
          "totalRewards(address)",
          "claimRewards(address)",
          "getAllMyStakedNFTs()",
          "getTotalInfo()",
          "getAllAPYs()",
          "getPenalty()",
          "setPenalty(uint256)",
          "getRoyalty()",
          "setRoyalty(uint256)",
          "ownerOf(uint256)",
          "getTokenPrice(uint256)",
          "setHouseStakedStatus(uint256,bool)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "IStaking": {
        "src": "contracts\\interfaces\\IStaking.sol:5",
        "inherit": [],
        "libraries": [],
        "methods": [
          "stakedCounter()"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      }
    },
    {
      "Context": {
        "src": "contracts\\TokenContract.sol:30",
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "HouseBusinessToken": {
        "src": "contracts\\TokenContract.sol:41",
        "version": {
          "withMetadata": "a301919fe62b4bdb55afe2b8d18ae9720fa903dbf6f93decdfd35288576a1d9c",
          "withoutMetadata": "175ac03c3df53a4080c429517a0168c7515764521922a1093ae28fcf79fc2851",
          "linkedWithoutMetadata": "175ac03c3df53a4080c429517a0168c7515764521922a1093ae28fcf79fc2851"
        },
        "inherit": [
          "IERC20Metadata",
          "IERC20",
          "Context"
        ],
        "libraries": [],
        "methods": [
          "()",
          "name()",
          "symbol()",
          "decimals()",
          "totalSupply()",
          "balanceOf(address)",
          "transfer(address,uint256)",
          "allowance(address,address)",
          "approve(address,uint256)",
          "transferFrom(address,address,uint256)",
          "increaseAllowance(address,uint256)",
          "decreaseAllowance(address,uint256)",
          "_mint(address,uint256)"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "HouseBusinessToken",
            "src": "contracts\\TokenContract.sol:51"
          },
          {
            "kind": "state-variable-assignment",
            "name": "_name",
            "src": "contracts\\TokenContract.sol:45"
          },
          {
            "kind": "state-variable-assignment",
            "name": "_symbol",
            "src": "contracts\\TokenContract.sol:46"
          },
          {
            "kind": "state-variable-assignment",
            "name": "_decimals",
            "src": "contracts\\TokenContract.sol:47"
          },
          {
            "kind": "state-variable-assignment",
            "name": "initialSupply",
            "src": "contracts\\TokenContract.sol:48"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "_balances",
              "offset": 0,
              "slot": "0",
              "type": "t_mapping(t_address,t_uint256)",
              "contract": "HouseBusinessToken",
              "src": "contracts\\TokenContract.sol:42"
            },
            {
              "label": "_allowances",
              "offset": 0,
              "slot": "1",
              "type": "t_mapping(t_address,t_mapping(t_address,t_uint256))",
              "contract": "HouseBusinessToken",
              "src": "contracts\\TokenContract.sol:43"
            },
            {
              "label": "_totalSupply",
              "offset": 0,
              "slot": "2",
              "type": "t_uint256",
              "contract": "HouseBusinessToken",
              "src": "contracts\\TokenContract.sol:44"
            },
            {
              "label": "_name",
              "offset": 0,
              "slot": "3",
              "type": "t_string_storage",
              "contract": "HouseBusinessToken",
              "src": "contracts\\TokenContract.sol:45"
            },
            {
              "label": "_symbol",
              "offset": 0,
              "slot": "4",
              "type": "t_string_storage",
              "contract": "HouseBusinessToken",
              "src": "contracts\\TokenContract.sol:46"
            },
            {
              "label": "_decimals",
              "offset": 0,
              "slot": "5",
              "type": "t_uint8",
              "contract": "HouseBusinessToken",
              "src": "contracts\\TokenContract.sol:47"
            },
            {
              "label": "initialSupply",
              "offset": 0,
              "slot": "6",
              "type": "t_uint256",
              "contract": "HouseBusinessToken",
              "src": "contracts\\TokenContract.sol:48"
            },
            {
              "label": "_owner",
              "offset": 0,
              "slot": "7",
              "type": "t_address",
              "contract": "HouseBusinessToken",
              "src": "contracts\\TokenContract.sol:49"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            },
            "t_mapping(t_address,t_mapping(t_address,t_uint256))": {
              "label": "mapping(address => mapping(address => uint256))",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_uint256)": {
              "label": "mapping(address => uint256)",
              "numberOfBytes": "32"
            },
            "t_string_storage": {
              "label": "string",
              "numberOfBytes": "32"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            },
            "t_uint8": {
              "label": "uint8",
              "numberOfBytes": "1"
            }
          },
          "layoutVersion": "1.1",
          "flat": true
        }
      },
      "IERC20": {
        "src": "contracts\\TokenContract.sol:5",
        "inherit": [],
        "libraries": [],
        "methods": [
          "totalSupply()",
          "balanceOf(address)",
          "transfer(address,uint256)",
          "allowance(address,address)",
          "approve(address,uint256)",
          "transferFrom(address,address,uint256)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "IERC20Metadata": {
        "src": "contracts\\TokenContract.sol:22",
        "inherit": [
          "IERC20"
        ],
        "libraries": [],
        "methods": [
          "name()",
          "symbol()",
          "decimals()"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      }
    },
    {
      "ThirdParty": {
        "src": "contracts\\ThirdParty.sol:5",
        "version": {
          "withMetadata": "d53521b340872e1cb19a829da8b6f983b51ec0caaaaed0ba0db377ea1dcf6c41",
          "withoutMetadata": "3acbde7a57100e491145d86dc06d6a1d005f910761389ab6ab79b372a76c9ad9",
          "linkedWithoutMetadata": "3acbde7a57100e491145d86dc06d6a1d005f910761389ab6ab79b372a76c9ad9"
        },
        "inherit": [],
        "libraries": [],
        "methods": [
          "getAllCategories()",
          "addCategory(string,uint256[])",
          "editCategory(uint256,string,uint256[])",
          "deleteCategory(uint256)",
          "getAllProperties()",
          "addProperty(string)",
          "editProperty(uint256,string)",
          "deleteProperty(uint256)",
          "getPackagesByCategory(uint256)",
          "addPackage(uint256,string,uint256,uint256,uint256,bool[])",
          "editPackage(uint256,uint256,string,uint256,uint256,uint256,bool[])",
          "deletePackage(uint256,uint256)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [
            {
              "label": "categoryCounter",
              "offset": 0,
              "slot": "0",
              "type": "t_uint256",
              "contract": "ThirdParty",
              "src": "contracts\\ThirdParty.sol:12"
            },
            {
              "label": "packageCounter",
              "offset": 0,
              "slot": "1",
              "type": "t_uint256",
              "contract": "ThirdParty",
              "src": "contracts\\ThirdParty.sol:23"
            },
            {
              "label": "propertyCounter",
              "offset": 0,
              "slot": "2",
              "type": "t_uint256",
              "contract": "ThirdParty",
              "src": "contracts\\ThirdParty.sol:29"
            },
            {
              "label": "allCategories",
              "offset": 0,
              "slot": "3",
              "type": "t_array(t_struct(Category)11_storage)dyn_storage",
              "contract": "ThirdParty",
              "src": "contracts\\ThirdParty.sol:31"
            },
            {
              "label": "allPackages",
              "offset": 0,
              "slot": "4",
              "type": "t_mapping(t_uint256,t_array(t_struct(Package)29_storage)dyn_storage)",
              "contract": "ThirdParty",
              "src": "contracts\\ThirdParty.sol:34"
            },
            {
              "label": "allProperties",
              "offset": 0,
              "slot": "5",
              "type": "t_array(t_struct(Property)36_storage)dyn_storage",
              "contract": "ThirdParty",
              "src": "contracts\\ThirdParty.sol:37"
            }
          ],
          "types": {
            "t_array(t_bool)dyn_storage": {
              "label": "bool[]",
              "numberOfBytes": "32"
            },
            "t_array(t_struct(Category)11_storage)dyn_storage": {
              "label": "struct ThirdParty.Category[]",
              "numberOfBytes": "32"
            },
            "t_array(t_struct(Package)29_storage)dyn_storage": {
              "label": "struct ThirdParty.Package[]",
              "numberOfBytes": "32"
            },
            "t_array(t_struct(Property)36_storage)dyn_storage": {
              "label": "struct ThirdParty.Property[]",
              "numberOfBytes": "32"
            },
            "t_array(t_uint256)dyn_storage": {
              "label": "uint256[]",
              "numberOfBytes": "32"
            },
            "t_bool": {
              "label": "bool",
              "numberOfBytes": "1"
            },
            "t_mapping(t_uint256,t_array(t_struct(Package)29_storage)dyn_storage)": {
              "label": "mapping(uint256 => struct ThirdParty.Package[])",
              "numberOfBytes": "32"
            },
            "t_string_storage": {
              "label": "string",
              "numberOfBytes": "32"
            },
            "t_struct(Category)11_storage": {
              "label": "struct ThirdParty.Category",
              "members": [
                {
                  "label": "categoryID",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "0"
                },
                {
                  "label": "cartegoryName",
                  "type": "t_string_storage",
                  "offset": 0,
                  "slot": "1"
                },
                {
                  "label": "properties",
                  "type": "t_array(t_uint256)dyn_storage",
                  "offset": 0,
                  "slot": "2"
                },
                {
                  "label": "visible",
                  "type": "t_bool",
                  "offset": 0,
                  "slot": "3"
                }
              ],
              "numberOfBytes": "128"
            },
            "t_struct(Package)29_storage": {
              "label": "struct ThirdParty.Package",
              "members": [
                {
                  "label": "categoryID",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "0"
                },
                {
                  "label": "packageID",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "1"
                },
                {
                  "label": "packageName",
                  "type": "t_string_storage",
                  "offset": 0,
                  "slot": "2"
                },
                {
                  "label": "price",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "3"
                },
                {
                  "label": "period",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "4"
                },
                {
                  "label": "dataLimit",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "5"
                },
                {
                  "label": "propertyVisible",
                  "type": "t_array(t_bool)dyn_storage",
                  "offset": 0,
                  "slot": "6"
                }
              ],
              "numberOfBytes": "224"
            },
            "t_struct(Property)36_storage": {
              "label": "struct ThirdParty.Property",
              "members": [
                {
                  "label": "propertyID",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "0"
                },
                {
                  "label": "propertyName",
                  "type": "t_string_storage",
                  "offset": 0,
                  "slot": "1"
                }
              ],
              "numberOfBytes": "64"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            }
          },
          "layoutVersion": "1.1",
          "flat": true
        }
      }
    },
    {
      "MainCleanContract": {
        "src": "contracts\\Contract.sol:6",
        "version": {
          "withMetadata": "010468631cbf91e131d43c059b189b55d220c871cd6c9bf91654f94d798103f1",
          "withoutMetadata": "e5b88dc6dff55c5639dcf382191cb4bb5323b9b8daccad7765611efdf8c82446",
          "linkedWithoutMetadata": "e5b88dc6dff55c5639dcf382191cb4bb5323b9b8daccad7765611efdf8c82446"
        },
        "inherit": [],
        "libraries": [],
        "methods": [
          "(address)",
          "ccCreation(string,string,address,string,uint256,uint256,uint256,string)",
          "getAllContractsByOwner()",
          "getAllContractsBySigner()",
          "getContractById(uint256)",
          "addContractSigner(uint256,address)",
          "signContract(uint256)",
          "sendNotify(address,string,uint256)",
          "getUploadedCounter()",
          "getAllNotifies()",
          "calcDiv(uint256,uint256)",
          "toString(bytes)",
          "addressToString(address)",
          "uintToString(uint256)",
          "bytesToString(bytes32)",
          "transferContractOwnership(uint256,address,address)"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "MainCleanContract",
            "src": "contracts\\Contract.sol:52"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "ccCounter",
              "offset": 0,
              "slot": "0",
              "type": "t_uint256",
              "contract": "MainCleanContract",
              "src": "contracts\\Contract.sol:8"
            },
            {
              "label": "houseNFTAddress",
              "offset": 0,
              "slot": "1",
              "type": "t_address",
              "contract": "MainCleanContract",
              "src": "contracts\\Contract.sol:11"
            },
            {
              "label": "allCleanContracts",
              "offset": 0,
              "slot": "2",
              "type": "t_mapping(t_uint256,t_struct(CleanContract)39_storage)",
              "contract": "MainCleanContract",
              "src": "contracts\\Contract.sol:44"
            },
            {
              "label": "allContractsByOwner",
              "offset": 0,
              "slot": "3",
              "type": "t_mapping(t_address,t_array(t_uint256)dyn_storage)",
              "contract": "MainCleanContract",
              "src": "contracts\\Contract.sol:46"
            },
            {
              "label": "allContractsBySigner",
              "offset": 0,
              "slot": "4",
              "type": "t_mapping(t_address,t_array(t_uint256)dyn_storage)",
              "contract": "MainCleanContract",
              "src": "contracts\\Contract.sol:48"
            },
            {
              "label": "allNotifies",
              "offset": 0,
              "slot": "5",
              "type": "t_mapping(t_address,t_array(t_struct(Notify)52_storage)dyn_storage)",
              "contract": "MainCleanContract",
              "src": "contracts\\Contract.sol:50"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            },
            "t_array(t_struct(Notify)52_storage)dyn_storage": {
              "label": "struct MainCleanContract.Notify[]",
              "numberOfBytes": "32"
            },
            "t_array(t_uint256)dyn_storage": {
              "label": "uint256[]",
              "numberOfBytes": "32"
            },
            "t_bool": {
              "label": "bool",
              "numberOfBytes": "1"
            },
            "t_mapping(t_address,t_array(t_struct(Notify)52_storage)dyn_storage)": {
              "label": "mapping(address => struct MainCleanContract.Notify[])",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_array(t_uint256)dyn_storage)": {
              "label": "mapping(address => uint256[])",
              "numberOfBytes": "32"
            },
            "t_mapping(t_uint256,t_struct(CleanContract)39_storage)": {
              "label": "mapping(uint256 => struct MainCleanContract.CleanContract)",
              "numberOfBytes": "32"
            },
            "t_string_storage": {
              "label": "string",
              "numberOfBytes": "32"
            },
            "t_struct(CleanContract)39_storage": {
              "label": "struct MainCleanContract.CleanContract",
              "members": [
                {
                  "label": "contractId",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "0"
                },
                {
                  "label": "companyName",
                  "type": "t_string_storage",
                  "offset": 0,
                  "slot": "1"
                },
                {
                  "label": "contractType",
                  "type": "t_string_storage",
                  "offset": 0,
                  "slot": "2"
                },
                {
                  "label": "contractURI",
                  "type": "t_string_storage",
                  "offset": 0,
                  "slot": "3"
                },
                {
                  "label": "dateFrom",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "4"
                },
                {
                  "label": "dateTo",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "5"
                },
                {
                  "label": "agreedPrice",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "6"
                },
                {
                  "label": "currency",
                  "type": "t_string_storage",
                  "offset": 0,
                  "slot": "7"
                },
                {
                  "label": "creator",
                  "type": "t_address",
                  "offset": 0,
                  "slot": "8"
                },
                {
                  "label": "owner",
                  "type": "t_address",
                  "offset": 0,
                  "slot": "9"
                },
                {
                  "label": "creatorApproval",
                  "type": "t_bool",
                  "offset": 20,
                  "slot": "9"
                },
                {
                  "label": "creatorSignDate",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "10"
                },
                {
                  "label": "contractSigner",
                  "type": "t_address",
                  "offset": 0,
                  "slot": "11"
                },
                {
                  "label": "signerApproval",
                  "type": "t_bool",
                  "offset": 20,
                  "slot": "11"
                },
                {
                  "label": "signerSignDate",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "12"
                },
                {
                  "label": "status",
                  "type": "t_string_storage",
                  "offset": 0,
                  "slot": "13"
                }
              ],
              "numberOfBytes": "448"
            },
            "t_struct(Notify)52_storage": {
              "label": "struct MainCleanContract.Notify",
              "members": [
                {
                  "label": "nSender",
                  "type": "t_address",
                  "offset": 0,
                  "slot": "0"
                },
                {
                  "label": "nReceiver",
                  "type": "t_address",
                  "offset": 0,
                  "slot": "1"
                },
                {
                  "label": "ccID",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "2"
                },
                {
                  "label": "notifySentTime",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "3"
                },
                {
                  "label": "notifyContent",
                  "type": "t_string_storage",
                  "offset": 0,
                  "slot": "4"
                },
                {
                  "label": "status",
                  "type": "t_bool",
                  "offset": 0,
                  "slot": "5"
                }
              ],
              "numberOfBytes": "192"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            }
          },
          "layoutVersion": "1.1",
          "flat": true
        }
      }
    },
    {
      "IPRC20": {
        "src": "contracts\\interfaces\\IPRC20.sol:4",
        "inherit": [],
        "libraries": [],
        "methods": [
          "totalSupply()",
          "balanceOf(address)",
          "transfer(address,uint256)",
          "allowance(address,address)",
          "approve(address,uint256)",
          "transferFrom(address,address,uint256)",
          "decimals()"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      }
    }
  ]
}