{
  "version": "3.2",
  "log": [
    {
      "MainCleanContract": {
        "src": "contracts\\Contract.sol:6",
        "version": {
          "withMetadata": "010468631cbf91e131d43c059b189b55d220c871cd6c9bf91654f94d798103f1",
          "withoutMetadata": "e5b88dc6dff55c5639dcf382191cb4bb5323b9b8daccad7765611efdf8c82446",
          "linkedWithoutMetadata": "e5b88dc6dff55c5639dcf382191cb4bb5323b9b8daccad7765611efdf8c82446"
        },
        "inherit": [],
        "libraries": [],
        "methods": [
          "(address)",
          "ccCreation(string,string,address,string,uint256,uint256,uint256,string)",
          "getAllContractsByOwner()",
          "getAllContractsBySigner()",
          "getContractById(uint256)",
          "addContractSigner(uint256,address)",
          "signContract(uint256)",
          "sendNotify(address,string,uint256)",
          "getUploadedCounter()",
          "getAllNotifies()",
          "calcDiv(uint256,uint256)",
          "toString(bytes)",
          "addressToString(address)",
          "uintToString(uint256)",
          "bytesToString(bytes32)",
          "transferContractOwnership(uint256,address,address)"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "MainCleanContract",
            "src": "contracts\\Contract.sol:52"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "ccCounter",
              "offset": 0,
              "slot": "0",
              "type": "t_uint256",
              "contract": "MainCleanContract",
              "src": "contracts\\Contract.sol:8"
            },
            {
              "label": "houseNFTAddress",
              "offset": 0,
              "slot": "1",
              "type": "t_address",
              "contract": "MainCleanContract",
              "src": "contracts\\Contract.sol:11"
            },
            {
              "label": "allCleanContracts",
              "offset": 0,
              "slot": "2",
              "type": "t_mapping(t_uint256,t_struct(CleanContract)39_storage)",
              "contract": "MainCleanContract",
              "src": "contracts\\Contract.sol:44"
            },
            {
              "label": "allContractsByOwner",
              "offset": 0,
              "slot": "3",
              "type": "t_mapping(t_address,t_array(t_uint256)dyn_storage)",
              "contract": "MainCleanContract",
              "src": "contracts\\Contract.sol:46"
            },
            {
              "label": "allContractsBySigner",
              "offset": 0,
              "slot": "4",
              "type": "t_mapping(t_address,t_array(t_uint256)dyn_storage)",
              "contract": "MainCleanContract",
              "src": "contracts\\Contract.sol:48"
            },
            {
              "label": "allNotifies",
              "offset": 0,
              "slot": "5",
              "type": "t_mapping(t_address,t_array(t_struct(Notify)52_storage)dyn_storage)",
              "contract": "MainCleanContract",
              "src": "contracts\\Contract.sol:50"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            },
            "t_array(t_struct(Notify)52_storage)dyn_storage": {
              "label": "struct MainCleanContract.Notify[]",
              "numberOfBytes": "32"
            },
            "t_array(t_uint256)dyn_storage": {
              "label": "uint256[]",
              "numberOfBytes": "32"
            },
            "t_bool": {
              "label": "bool",
              "numberOfBytes": "1"
            },
            "t_mapping(t_address,t_array(t_struct(Notify)52_storage)dyn_storage)": {
              "label": "mapping(address => struct MainCleanContract.Notify[])",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_array(t_uint256)dyn_storage)": {
              "label": "mapping(address => uint256[])",
              "numberOfBytes": "32"
            },
            "t_mapping(t_uint256,t_struct(CleanContract)39_storage)": {
              "label": "mapping(uint256 => struct MainCleanContract.CleanContract)",
              "numberOfBytes": "32"
            },
            "t_string_storage": {
              "label": "string",
              "numberOfBytes": "32"
            },
            "t_struct(CleanContract)39_storage": {
              "label": "struct MainCleanContract.CleanContract",
              "members": [
                {
                  "label": "contractId",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "0"
                },
                {
                  "label": "companyName",
                  "type": "t_string_storage",
                  "offset": 0,
                  "slot": "1"
                },
                {
                  "label": "contractType",
                  "type": "t_string_storage",
                  "offset": 0,
                  "slot": "2"
                },
                {
                  "label": "contractURI",
                  "type": "t_string_storage",
                  "offset": 0,
                  "slot": "3"
                },
                {
                  "label": "dateFrom",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "4"
                },
                {
                  "label": "dateTo",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "5"
                },
                {
                  "label": "agreedPrice",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "6"
                },
                {
                  "label": "currency",
                  "type": "t_string_storage",
                  "offset": 0,
                  "slot": "7"
                },
                {
                  "label": "creator",
                  "type": "t_address",
                  "offset": 0,
                  "slot": "8"
                },
                {
                  "label": "owner",
                  "type": "t_address",
                  "offset": 0,
                  "slot": "9"
                },
                {
                  "label": "creatorApproval",
                  "type": "t_bool",
                  "offset": 20,
                  "slot": "9"
                },
                {
                  "label": "creatorSignDate",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "10"
                },
                {
                  "label": "contractSigner",
                  "type": "t_address",
                  "offset": 0,
                  "slot": "11"
                },
                {
                  "label": "signerApproval",
                  "type": "t_bool",
                  "offset": 20,
                  "slot": "11"
                },
                {
                  "label": "signerSignDate",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "12"
                },
                {
                  "label": "status",
                  "type": "t_string_storage",
                  "offset": 0,
                  "slot": "13"
                }
              ],
              "numberOfBytes": "448"
            },
            "t_struct(Notify)52_storage": {
              "label": "struct MainCleanContract.Notify",
              "members": [
                {
                  "label": "nSender",
                  "type": "t_address",
                  "offset": 0,
                  "slot": "0"
                },
                {
                  "label": "nReceiver",
                  "type": "t_address",
                  "offset": 0,
                  "slot": "1"
                },
                {
                  "label": "ccID",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "2"
                },
                {
                  "label": "notifySentTime",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "3"
                },
                {
                  "label": "notifyContent",
                  "type": "t_string_storage",
                  "offset": 0,
                  "slot": "4"
                },
                {
                  "label": "status",
                  "type": "t_bool",
                  "offset": 0,
                  "slot": "5"
                }
              ],
              "numberOfBytes": "192"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            }
          },
          "layoutVersion": "1.1",
          "flat": true
        }
      }
    },
    {
      "ThirdParty": {
        "src": "contracts\\ThirdParty.sol:5",
        "version": {
          "withMetadata": "d53521b340872e1cb19a829da8b6f983b51ec0caaaaed0ba0db377ea1dcf6c41",
          "withoutMetadata": "3acbde7a57100e491145d86dc06d6a1d005f910761389ab6ab79b372a76c9ad9",
          "linkedWithoutMetadata": "3acbde7a57100e491145d86dc06d6a1d005f910761389ab6ab79b372a76c9ad9"
        },
        "inherit": [],
        "libraries": [],
        "methods": [
          "getAllCategories()",
          "addCategory(string,uint256[])",
          "editCategory(uint256,string,uint256[])",
          "deleteCategory(uint256)",
          "getAllProperties()",
          "addProperty(string)",
          "editProperty(uint256,string)",
          "deleteProperty(uint256)",
          "getPackagesByCategory(uint256)",
          "addPackage(uint256,string,uint256,uint256,uint256,bool[])",
          "editPackage(uint256,uint256,string,uint256,uint256,uint256,bool[])",
          "deletePackage(uint256,uint256)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [
            {
              "label": "categoryCounter",
              "offset": 0,
              "slot": "0",
              "type": "t_uint256",
              "contract": "ThirdParty",
              "src": "contracts\\ThirdParty.sol:12"
            },
            {
              "label": "packageCounter",
              "offset": 0,
              "slot": "1",
              "type": "t_uint256",
              "contract": "ThirdParty",
              "src": "contracts\\ThirdParty.sol:23"
            },
            {
              "label": "propertyCounter",
              "offset": 0,
              "slot": "2",
              "type": "t_uint256",
              "contract": "ThirdParty",
              "src": "contracts\\ThirdParty.sol:29"
            },
            {
              "label": "allCategories",
              "offset": 0,
              "slot": "3",
              "type": "t_array(t_struct(Category)11_storage)dyn_storage",
              "contract": "ThirdParty",
              "src": "contracts\\ThirdParty.sol:31"
            },
            {
              "label": "allPackages",
              "offset": 0,
              "slot": "4",
              "type": "t_mapping(t_uint256,t_array(t_struct(Package)29_storage)dyn_storage)",
              "contract": "ThirdParty",
              "src": "contracts\\ThirdParty.sol:34"
            },
            {
              "label": "allProperties",
              "offset": 0,
              "slot": "5",
              "type": "t_array(t_struct(Property)36_storage)dyn_storage",
              "contract": "ThirdParty",
              "src": "contracts\\ThirdParty.sol:37"
            }
          ],
          "types": {
            "t_array(t_bool)dyn_storage": {
              "label": "bool[]",
              "numberOfBytes": "32"
            },
            "t_array(t_struct(Category)11_storage)dyn_storage": {
              "label": "struct ThirdParty.Category[]",
              "numberOfBytes": "32"
            },
            "t_array(t_struct(Package)29_storage)dyn_storage": {
              "label": "struct ThirdParty.Package[]",
              "numberOfBytes": "32"
            },
            "t_array(t_struct(Property)36_storage)dyn_storage": {
              "label": "struct ThirdParty.Property[]",
              "numberOfBytes": "32"
            },
            "t_array(t_uint256)dyn_storage": {
              "label": "uint256[]",
              "numberOfBytes": "32"
            },
            "t_bool": {
              "label": "bool",
              "numberOfBytes": "1"
            },
            "t_mapping(t_uint256,t_array(t_struct(Package)29_storage)dyn_storage)": {
              "label": "mapping(uint256 => struct ThirdParty.Package[])",
              "numberOfBytes": "32"
            },
            "t_string_storage": {
              "label": "string",
              "numberOfBytes": "32"
            },
            "t_struct(Category)11_storage": {
              "label": "struct ThirdParty.Category",
              "members": [
                {
                  "label": "categoryID",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "0"
                },
                {
                  "label": "cartegoryName",
                  "type": "t_string_storage",
                  "offset": 0,
                  "slot": "1"
                },
                {
                  "label": "properties",
                  "type": "t_array(t_uint256)dyn_storage",
                  "offset": 0,
                  "slot": "2"
                },
                {
                  "label": "visible",
                  "type": "t_bool",
                  "offset": 0,
                  "slot": "3"
                }
              ],
              "numberOfBytes": "128"
            },
            "t_struct(Package)29_storage": {
              "label": "struct ThirdParty.Package",
              "members": [
                {
                  "label": "categoryID",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "0"
                },
                {
                  "label": "packageID",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "1"
                },
                {
                  "label": "packageName",
                  "type": "t_string_storage",
                  "offset": 0,
                  "slot": "2"
                },
                {
                  "label": "price",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "3"
                },
                {
                  "label": "period",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "4"
                },
                {
                  "label": "dataLimit",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "5"
                },
                {
                  "label": "propertyVisible",
                  "type": "t_array(t_bool)dyn_storage",
                  "offset": 0,
                  "slot": "6"
                }
              ],
              "numberOfBytes": "224"
            },
            "t_struct(Property)36_storage": {
              "label": "struct ThirdParty.Property",
              "members": [
                {
                  "label": "propertyID",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "0"
                },
                {
                  "label": "propertyName",
                  "type": "t_string_storage",
                  "offset": 0,
                  "slot": "1"
                }
              ],
              "numberOfBytes": "64"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            }
          },
          "layoutVersion": "1.1",
          "flat": true
        }
      }
    },
    {
      "Context": {
        "src": "contracts\\TokenContract.sol:30",
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "HouseBusinessToken": {
        "src": "contracts\\TokenContract.sol:41",
        "version": {
          "withMetadata": "4f990ca86e03541351e9529165a17d7cb67b9b8bd35a9c3adb0efa9a825a1bb9",
          "withoutMetadata": "b737d4aaacef72af795cc4b42f15838a2ae9bc1e52c8c3e49d32ef8fdcd6230d",
          "linkedWithoutMetadata": "b737d4aaacef72af795cc4b42f15838a2ae9bc1e52c8c3e49d32ef8fdcd6230d"
        },
        "inherit": [
          "IERC20Metadata",
          "IERC20",
          "Context"
        ],
        "libraries": [],
        "methods": [
          "()",
          "name()",
          "symbol()",
          "decimals()",
          "totalSupply()",
          "balanceOf(address)",
          "transfer(address,uint256)",
          "allowance(address,address)",
          "approve(address,uint256)",
          "transferFrom(address,address,uint256)",
          "increaseAllowance(address,uint256)",
          "decreaseAllowance(address,uint256)",
          "_mint(address,uint256)"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "HouseBusinessToken",
            "src": "contracts\\TokenContract.sol:50"
          },
          {
            "kind": "state-variable-assignment",
            "name": "_name",
            "src": "contracts\\TokenContract.sol:45"
          },
          {
            "kind": "state-variable-assignment",
            "name": "_symbol",
            "src": "contracts\\TokenContract.sol:46"
          },
          {
            "kind": "state-variable-assignment",
            "name": "_decimals",
            "src": "contracts\\TokenContract.sol:47"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "_balances",
              "offset": 0,
              "slot": "0",
              "type": "t_mapping(t_address,t_uint256)",
              "contract": "HouseBusinessToken",
              "src": "contracts\\TokenContract.sol:42"
            },
            {
              "label": "_allowances",
              "offset": 0,
              "slot": "1",
              "type": "t_mapping(t_address,t_mapping(t_address,t_uint256))",
              "contract": "HouseBusinessToken",
              "src": "contracts\\TokenContract.sol:43"
            },
            {
              "label": "_totalSupply",
              "offset": 0,
              "slot": "2",
              "type": "t_uint256",
              "contract": "HouseBusinessToken",
              "src": "contracts\\TokenContract.sol:44"
            },
            {
              "label": "_name",
              "offset": 0,
              "slot": "3",
              "type": "t_string_storage",
              "contract": "HouseBusinessToken",
              "src": "contracts\\TokenContract.sol:45"
            },
            {
              "label": "_symbol",
              "offset": 0,
              "slot": "4",
              "type": "t_string_storage",
              "contract": "HouseBusinessToken",
              "src": "contracts\\TokenContract.sol:46"
            },
            {
              "label": "_decimals",
              "offset": 0,
              "slot": "5",
              "type": "t_uint8",
              "contract": "HouseBusinessToken",
              "src": "contracts\\TokenContract.sol:47"
            },
            {
              "label": "_owner",
              "offset": 1,
              "slot": "5",
              "type": "t_address",
              "contract": "HouseBusinessToken",
              "src": "contracts\\TokenContract.sol:48"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            },
            "t_mapping(t_address,t_mapping(t_address,t_uint256))": {
              "label": "mapping(address => mapping(address => uint256))",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_uint256)": {
              "label": "mapping(address => uint256)",
              "numberOfBytes": "32"
            },
            "t_string_storage": {
              "label": "string",
              "numberOfBytes": "32"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            },
            "t_uint8": {
              "label": "uint8",
              "numberOfBytes": "1"
            }
          },
          "layoutVersion": "1.1",
          "flat": true
        }
      },
      "IERC20": {
        "src": "contracts\\TokenContract.sol:5",
        "inherit": [],
        "libraries": [],
        "methods": [
          "totalSupply()",
          "balanceOf(address)",
          "transfer(address,uint256)",
          "allowance(address,address)",
          "approve(address,uint256)",
          "transferFrom(address,address,uint256)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "IERC20Metadata": {
        "src": "contracts\\TokenContract.sol:22",
        "inherit": [
          "IERC20"
        ],
        "libraries": [],
        "methods": [
          "name()",
          "symbol()",
          "decimals()"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      }
    },
    {
      "IPRC20": {
        "src": "contracts\\interfaces\\IPRC20.sol:4",
        "inherit": [],
        "libraries": [],
        "methods": [
          "totalSupply()",
          "balanceOf(address)",
          "transfer(address,uint256)",
          "allowance(address,address)",
          "approve(address,uint256)",
          "transferFrom(address,address,uint256)",
          "decimals()"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      }
    },
    {
      "IHouseBusiness": {
        "src": "contracts\\Operator.sol:3",
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "Operator": {
        "src": "contracts\\Operator.sol:7",
        "version": {
          "withMetadata": "46af2c88135d313320332230d694075ef454de90ae3c17b467e0cf99b420bdc4",
          "withoutMetadata": "ac0db523ddc3e330f735df7b3b0b24460531c71290a891170e840f8f67d5ff6b",
          "linkedWithoutMetadata": "ac0db523ddc3e330f735df7b3b0b24460531c71290a891170e840f8f67d5ff6b"
        },
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      }
    },
    {
      "MainCleanContract": {
        "src": "contracts\\Contract.sol:6",
        "version": {
          "withMetadata": "010468631cbf91e131d43c059b189b55d220c871cd6c9bf91654f94d798103f1",
          "withoutMetadata": "e5b88dc6dff55c5639dcf382191cb4bb5323b9b8daccad7765611efdf8c82446",
          "linkedWithoutMetadata": "e5b88dc6dff55c5639dcf382191cb4bb5323b9b8daccad7765611efdf8c82446"
        },
        "inherit": [],
        "libraries": [],
        "methods": [
          "(address)",
          "ccCreation(string,string,address,string,uint256,uint256,uint256,string)",
          "getAllContractsByOwner()",
          "getAllContractsBySigner()",
          "getContractById(uint256)",
          "addContractSigner(uint256,address)",
          "signContract(uint256)",
          "sendNotify(address,string,uint256)",
          "getUploadedCounter()",
          "getAllNotifies()",
          "calcDiv(uint256,uint256)",
          "toString(bytes)",
          "addressToString(address)",
          "uintToString(uint256)",
          "bytesToString(bytes32)",
          "transferContractOwnership(uint256,address,address)"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "MainCleanContract",
            "src": "contracts\\Contract.sol:52"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "ccCounter",
              "offset": 0,
              "slot": "0",
              "type": "t_uint256",
              "contract": "MainCleanContract",
              "src": "contracts\\Contract.sol:8"
            },
            {
              "label": "houseNFTAddress",
              "offset": 0,
              "slot": "1",
              "type": "t_address",
              "contract": "MainCleanContract",
              "src": "contracts\\Contract.sol:11"
            },
            {
              "label": "allCleanContracts",
              "offset": 0,
              "slot": "2",
              "type": "t_mapping(t_uint256,t_struct(CleanContract)39_storage)",
              "contract": "MainCleanContract",
              "src": "contracts\\Contract.sol:44"
            },
            {
              "label": "allContractsByOwner",
              "offset": 0,
              "slot": "3",
              "type": "t_mapping(t_address,t_array(t_uint256)dyn_storage)",
              "contract": "MainCleanContract",
              "src": "contracts\\Contract.sol:46"
            },
            {
              "label": "allContractsBySigner",
              "offset": 0,
              "slot": "4",
              "type": "t_mapping(t_address,t_array(t_uint256)dyn_storage)",
              "contract": "MainCleanContract",
              "src": "contracts\\Contract.sol:48"
            },
            {
              "label": "allNotifies",
              "offset": 0,
              "slot": "5",
              "type": "t_mapping(t_address,t_array(t_struct(Notify)52_storage)dyn_storage)",
              "contract": "MainCleanContract",
              "src": "contracts\\Contract.sol:50"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            },
            "t_array(t_struct(Notify)52_storage)dyn_storage": {
              "label": "struct MainCleanContract.Notify[]",
              "numberOfBytes": "32"
            },
            "t_array(t_uint256)dyn_storage": {
              "label": "uint256[]",
              "numberOfBytes": "32"
            },
            "t_bool": {
              "label": "bool",
              "numberOfBytes": "1"
            },
            "t_mapping(t_address,t_array(t_struct(Notify)52_storage)dyn_storage)": {
              "label": "mapping(address => struct MainCleanContract.Notify[])",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_array(t_uint256)dyn_storage)": {
              "label": "mapping(address => uint256[])",
              "numberOfBytes": "32"
            },
            "t_mapping(t_uint256,t_struct(CleanContract)39_storage)": {
              "label": "mapping(uint256 => struct MainCleanContract.CleanContract)",
              "numberOfBytes": "32"
            },
            "t_string_storage": {
              "label": "string",
              "numberOfBytes": "32"
            },
            "t_struct(CleanContract)39_storage": {
              "label": "struct MainCleanContract.CleanContract",
              "members": [
                {
                  "label": "contractId",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "0"
                },
                {
                  "label": "companyName",
                  "type": "t_string_storage",
                  "offset": 0,
                  "slot": "1"
                },
                {
                  "label": "contractType",
                  "type": "t_string_storage",
                  "offset": 0,
                  "slot": "2"
                },
                {
                  "label": "contractURI",
                  "type": "t_string_storage",
                  "offset": 0,
                  "slot": "3"
                },
                {
                  "label": "dateFrom",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "4"
                },
                {
                  "label": "dateTo",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "5"
                },
                {
                  "label": "agreedPrice",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "6"
                },
                {
                  "label": "currency",
                  "type": "t_string_storage",
                  "offset": 0,
                  "slot": "7"
                },
                {
                  "label": "creator",
                  "type": "t_address",
                  "offset": 0,
                  "slot": "8"
                },
                {
                  "label": "owner",
                  "type": "t_address",
                  "offset": 0,
                  "slot": "9"
                },
                {
                  "label": "creatorApproval",
                  "type": "t_bool",
                  "offset": 20,
                  "slot": "9"
                },
                {
                  "label": "creatorSignDate",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "10"
                },
                {
                  "label": "contractSigner",
                  "type": "t_address",
                  "offset": 0,
                  "slot": "11"
                },
                {
                  "label": "signerApproval",
                  "type": "t_bool",
                  "offset": 20,
                  "slot": "11"
                },
                {
                  "label": "signerSignDate",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "12"
                },
                {
                  "label": "status",
                  "type": "t_string_storage",
                  "offset": 0,
                  "slot": "13"
                }
              ],
              "numberOfBytes": "448"
            },
            "t_struct(Notify)52_storage": {
              "label": "struct MainCleanContract.Notify",
              "members": [
                {
                  "label": "nSender",
                  "type": "t_address",
                  "offset": 0,
                  "slot": "0"
                },
                {
                  "label": "nReceiver",
                  "type": "t_address",
                  "offset": 0,
                  "slot": "1"
                },
                {
                  "label": "ccID",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "2"
                },
                {
                  "label": "notifySentTime",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "3"
                },
                {
                  "label": "notifyContent",
                  "type": "t_string_storage",
                  "offset": 0,
                  "slot": "4"
                },
                {
                  "label": "status",
                  "type": "t_bool",
                  "offset": 0,
                  "slot": "5"
                }
              ],
              "numberOfBytes": "192"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            }
          },
          "layoutVersion": "1.1",
          "flat": true
        }
      }
    },
    {
      "ThirdParty": {
        "src": "contracts\\ThirdParty.sol:5",
        "version": {
          "withMetadata": "d53521b340872e1cb19a829da8b6f983b51ec0caaaaed0ba0db377ea1dcf6c41",
          "withoutMetadata": "3acbde7a57100e491145d86dc06d6a1d005f910761389ab6ab79b372a76c9ad9",
          "linkedWithoutMetadata": "3acbde7a57100e491145d86dc06d6a1d005f910761389ab6ab79b372a76c9ad9"
        },
        "inherit": [],
        "libraries": [],
        "methods": [
          "getAllCategories()",
          "addCategory(string,uint256[])",
          "editCategory(uint256,string,uint256[])",
          "deleteCategory(uint256)",
          "getAllProperties()",
          "addProperty(string)",
          "editProperty(uint256,string)",
          "deleteProperty(uint256)",
          "getPackagesByCategory(uint256)",
          "addPackage(uint256,string,uint256,uint256,uint256,bool[])",
          "editPackage(uint256,uint256,string,uint256,uint256,uint256,bool[])",
          "deletePackage(uint256,uint256)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [
            {
              "label": "categoryCounter",
              "offset": 0,
              "slot": "0",
              "type": "t_uint256",
              "contract": "ThirdParty",
              "src": "contracts\\ThirdParty.sol:12"
            },
            {
              "label": "packageCounter",
              "offset": 0,
              "slot": "1",
              "type": "t_uint256",
              "contract": "ThirdParty",
              "src": "contracts\\ThirdParty.sol:23"
            },
            {
              "label": "propertyCounter",
              "offset": 0,
              "slot": "2",
              "type": "t_uint256",
              "contract": "ThirdParty",
              "src": "contracts\\ThirdParty.sol:29"
            },
            {
              "label": "allCategories",
              "offset": 0,
              "slot": "3",
              "type": "t_array(t_struct(Category)11_storage)dyn_storage",
              "contract": "ThirdParty",
              "src": "contracts\\ThirdParty.sol:31"
            },
            {
              "label": "allPackages",
              "offset": 0,
              "slot": "4",
              "type": "t_mapping(t_uint256,t_array(t_struct(Package)29_storage)dyn_storage)",
              "contract": "ThirdParty",
              "src": "contracts\\ThirdParty.sol:34"
            },
            {
              "label": "allProperties",
              "offset": 0,
              "slot": "5",
              "type": "t_array(t_struct(Property)36_storage)dyn_storage",
              "contract": "ThirdParty",
              "src": "contracts\\ThirdParty.sol:37"
            }
          ],
          "types": {
            "t_array(t_bool)dyn_storage": {
              "label": "bool[]",
              "numberOfBytes": "32"
            },
            "t_array(t_struct(Category)11_storage)dyn_storage": {
              "label": "struct ThirdParty.Category[]",
              "numberOfBytes": "32"
            },
            "t_array(t_struct(Package)29_storage)dyn_storage": {
              "label": "struct ThirdParty.Package[]",
              "numberOfBytes": "32"
            },
            "t_array(t_struct(Property)36_storage)dyn_storage": {
              "label": "struct ThirdParty.Property[]",
              "numberOfBytes": "32"
            },
            "t_array(t_uint256)dyn_storage": {
              "label": "uint256[]",
              "numberOfBytes": "32"
            },
            "t_bool": {
              "label": "bool",
              "numberOfBytes": "1"
            },
            "t_mapping(t_uint256,t_array(t_struct(Package)29_storage)dyn_storage)": {
              "label": "mapping(uint256 => struct ThirdParty.Package[])",
              "numberOfBytes": "32"
            },
            "t_string_storage": {
              "label": "string",
              "numberOfBytes": "32"
            },
            "t_struct(Category)11_storage": {
              "label": "struct ThirdParty.Category",
              "members": [
                {
                  "label": "categoryID",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "0"
                },
                {
                  "label": "cartegoryName",
                  "type": "t_string_storage",
                  "offset": 0,
                  "slot": "1"
                },
                {
                  "label": "properties",
                  "type": "t_array(t_uint256)dyn_storage",
                  "offset": 0,
                  "slot": "2"
                },
                {
                  "label": "visible",
                  "type": "t_bool",
                  "offset": 0,
                  "slot": "3"
                }
              ],
              "numberOfBytes": "128"
            },
            "t_struct(Package)29_storage": {
              "label": "struct ThirdParty.Package",
              "members": [
                {
                  "label": "categoryID",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "0"
                },
                {
                  "label": "packageID",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "1"
                },
                {
                  "label": "packageName",
                  "type": "t_string_storage",
                  "offset": 0,
                  "slot": "2"
                },
                {
                  "label": "price",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "3"
                },
                {
                  "label": "period",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "4"
                },
                {
                  "label": "dataLimit",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "5"
                },
                {
                  "label": "propertyVisible",
                  "type": "t_array(t_bool)dyn_storage",
                  "offset": 0,
                  "slot": "6"
                }
              ],
              "numberOfBytes": "224"
            },
            "t_struct(Property)36_storage": {
              "label": "struct ThirdParty.Property",
              "members": [
                {
                  "label": "propertyID",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "0"
                },
                {
                  "label": "propertyName",
                  "type": "t_string_storage",
                  "offset": 0,
                  "slot": "1"
                }
              ],
              "numberOfBytes": "64"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            }
          },
          "layoutVersion": "1.1",
          "flat": true
        }
      }
    },
    {
      "Context": {
        "src": "contracts\\TokenContract.sol:30",
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "HouseBusinessToken": {
        "src": "contracts\\TokenContract.sol:41",
        "version": {
          "withMetadata": "4f990ca86e03541351e9529165a17d7cb67b9b8bd35a9c3adb0efa9a825a1bb9",
          "withoutMetadata": "b737d4aaacef72af795cc4b42f15838a2ae9bc1e52c8c3e49d32ef8fdcd6230d",
          "linkedWithoutMetadata": "b737d4aaacef72af795cc4b42f15838a2ae9bc1e52c8c3e49d32ef8fdcd6230d"
        },
        "inherit": [
          "IERC20Metadata",
          "IERC20",
          "Context"
        ],
        "libraries": [],
        "methods": [
          "()",
          "name()",
          "symbol()",
          "decimals()",
          "totalSupply()",
          "balanceOf(address)",
          "transfer(address,uint256)",
          "allowance(address,address)",
          "approve(address,uint256)",
          "transferFrom(address,address,uint256)",
          "increaseAllowance(address,uint256)",
          "decreaseAllowance(address,uint256)",
          "_mint(address,uint256)"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "HouseBusinessToken",
            "src": "contracts\\TokenContract.sol:50"
          },
          {
            "kind": "state-variable-assignment",
            "name": "_name",
            "src": "contracts\\TokenContract.sol:45"
          },
          {
            "kind": "state-variable-assignment",
            "name": "_symbol",
            "src": "contracts\\TokenContract.sol:46"
          },
          {
            "kind": "state-variable-assignment",
            "name": "_decimals",
            "src": "contracts\\TokenContract.sol:47"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "_balances",
              "offset": 0,
              "slot": "0",
              "type": "t_mapping(t_address,t_uint256)",
              "contract": "HouseBusinessToken",
              "src": "contracts\\TokenContract.sol:42"
            },
            {
              "label": "_allowances",
              "offset": 0,
              "slot": "1",
              "type": "t_mapping(t_address,t_mapping(t_address,t_uint256))",
              "contract": "HouseBusinessToken",
              "src": "contracts\\TokenContract.sol:43"
            },
            {
              "label": "_totalSupply",
              "offset": 0,
              "slot": "2",
              "type": "t_uint256",
              "contract": "HouseBusinessToken",
              "src": "contracts\\TokenContract.sol:44"
            },
            {
              "label": "_name",
              "offset": 0,
              "slot": "3",
              "type": "t_string_storage",
              "contract": "HouseBusinessToken",
              "src": "contracts\\TokenContract.sol:45"
            },
            {
              "label": "_symbol",
              "offset": 0,
              "slot": "4",
              "type": "t_string_storage",
              "contract": "HouseBusinessToken",
              "src": "contracts\\TokenContract.sol:46"
            },
            {
              "label": "_decimals",
              "offset": 0,
              "slot": "5",
              "type": "t_uint8",
              "contract": "HouseBusinessToken",
              "src": "contracts\\TokenContract.sol:47"
            },
            {
              "label": "_owner",
              "offset": 1,
              "slot": "5",
              "type": "t_address",
              "contract": "HouseBusinessToken",
              "src": "contracts\\TokenContract.sol:48"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            },
            "t_mapping(t_address,t_mapping(t_address,t_uint256))": {
              "label": "mapping(address => mapping(address => uint256))",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_uint256)": {
              "label": "mapping(address => uint256)",
              "numberOfBytes": "32"
            },
            "t_string_storage": {
              "label": "string",
              "numberOfBytes": "32"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            },
            "t_uint8": {
              "label": "uint8",
              "numberOfBytes": "1"
            }
          },
          "layoutVersion": "1.1",
          "flat": true
        }
      },
      "IERC20": {
        "src": "contracts\\TokenContract.sol:5",
        "inherit": [],
        "libraries": [],
        "methods": [
          "totalSupply()",
          "balanceOf(address)",
          "transfer(address,uint256)",
          "allowance(address,address)",
          "approve(address,uint256)",
          "transferFrom(address,address,uint256)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "IERC20Metadata": {
        "src": "contracts\\TokenContract.sol:22",
        "inherit": [
          "IERC20"
        ],
        "libraries": [],
        "methods": [
          "name()",
          "symbol()",
          "decimals()"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      }
    },
    {
      "IPRC20": {
        "src": "contracts\\interfaces\\IPRC20.sol:4",
        "inherit": [],
        "libraries": [],
        "methods": [
          "totalSupply()",
          "balanceOf(address)",
          "transfer(address,uint256)",
          "allowance(address,address)",
          "approve(address,uint256)",
          "transferFrom(address,address,uint256)",
          "decimals()"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      }
    },
    {
      "IHouseBusiness": {
        "src": "contracts\\Operator.sol:3",
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "Operator": {
        "src": "contracts\\Operator.sol:7",
        "version": {
          "withMetadata": "46af2c88135d313320332230d694075ef454de90ae3c17b467e0cf99b420bdc4",
          "withoutMetadata": "ac0db523ddc3e330f735df7b3b0b24460531c71290a891170e840f8f67d5ff6b",
          "linkedWithoutMetadata": "ac0db523ddc3e330f735df7b3b0b24460531c71290a891170e840f8f67d5ff6b"
        },
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      }
    },
    {
      "MainCleanContract": {
        "src": "contracts\\Contract.sol:6",
        "version": {
          "withMetadata": "010468631cbf91e131d43c059b189b55d220c871cd6c9bf91654f94d798103f1",
          "withoutMetadata": "e5b88dc6dff55c5639dcf382191cb4bb5323b9b8daccad7765611efdf8c82446",
          "linkedWithoutMetadata": "e5b88dc6dff55c5639dcf382191cb4bb5323b9b8daccad7765611efdf8c82446"
        },
        "inherit": [],
        "libraries": [],
        "methods": [
          "(address)",
          "ccCreation(string,string,address,string,uint256,uint256,uint256,string)",
          "getAllContractsByOwner()",
          "getAllContractsBySigner()",
          "getContractById(uint256)",
          "addContractSigner(uint256,address)",
          "signContract(uint256)",
          "sendNotify(address,string,uint256)",
          "getUploadedCounter()",
          "getAllNotifies()",
          "calcDiv(uint256,uint256)",
          "toString(bytes)",
          "addressToString(address)",
          "uintToString(uint256)",
          "bytesToString(bytes32)",
          "transferContractOwnership(uint256,address,address)"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "MainCleanContract",
            "src": "contracts\\Contract.sol:52"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "ccCounter",
              "offset": 0,
              "slot": "0",
              "type": "t_uint256",
              "contract": "MainCleanContract",
              "src": "contracts\\Contract.sol:8"
            },
            {
              "label": "houseNFTAddress",
              "offset": 0,
              "slot": "1",
              "type": "t_address",
              "contract": "MainCleanContract",
              "src": "contracts\\Contract.sol:11"
            },
            {
              "label": "allCleanContracts",
              "offset": 0,
              "slot": "2",
              "type": "t_mapping(t_uint256,t_struct(CleanContract)39_storage)",
              "contract": "MainCleanContract",
              "src": "contracts\\Contract.sol:44"
            },
            {
              "label": "allContractsByOwner",
              "offset": 0,
              "slot": "3",
              "type": "t_mapping(t_address,t_array(t_uint256)dyn_storage)",
              "contract": "MainCleanContract",
              "src": "contracts\\Contract.sol:46"
            },
            {
              "label": "allContractsBySigner",
              "offset": 0,
              "slot": "4",
              "type": "t_mapping(t_address,t_array(t_uint256)dyn_storage)",
              "contract": "MainCleanContract",
              "src": "contracts\\Contract.sol:48"
            },
            {
              "label": "allNotifies",
              "offset": 0,
              "slot": "5",
              "type": "t_mapping(t_address,t_array(t_struct(Notify)52_storage)dyn_storage)",
              "contract": "MainCleanContract",
              "src": "contracts\\Contract.sol:50"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            },
            "t_array(t_struct(Notify)52_storage)dyn_storage": {
              "label": "struct MainCleanContract.Notify[]",
              "numberOfBytes": "32"
            },
            "t_array(t_uint256)dyn_storage": {
              "label": "uint256[]",
              "numberOfBytes": "32"
            },
            "t_bool": {
              "label": "bool",
              "numberOfBytes": "1"
            },
            "t_mapping(t_address,t_array(t_struct(Notify)52_storage)dyn_storage)": {
              "label": "mapping(address => struct MainCleanContract.Notify[])",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_array(t_uint256)dyn_storage)": {
              "label": "mapping(address => uint256[])",
              "numberOfBytes": "32"
            },
            "t_mapping(t_uint256,t_struct(CleanContract)39_storage)": {
              "label": "mapping(uint256 => struct MainCleanContract.CleanContract)",
              "numberOfBytes": "32"
            },
            "t_string_storage": {
              "label": "string",
              "numberOfBytes": "32"
            },
            "t_struct(CleanContract)39_storage": {
              "label": "struct MainCleanContract.CleanContract",
              "members": [
                {
                  "label": "contractId",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "0"
                },
                {
                  "label": "companyName",
                  "type": "t_string_storage",
                  "offset": 0,
                  "slot": "1"
                },
                {
                  "label": "contractType",
                  "type": "t_string_storage",
                  "offset": 0,
                  "slot": "2"
                },
                {
                  "label": "contractURI",
                  "type": "t_string_storage",
                  "offset": 0,
                  "slot": "3"
                },
                {
                  "label": "dateFrom",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "4"
                },
                {
                  "label": "dateTo",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "5"
                },
                {
                  "label": "agreedPrice",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "6"
                },
                {
                  "label": "currency",
                  "type": "t_string_storage",
                  "offset": 0,
                  "slot": "7"
                },
                {
                  "label": "creator",
                  "type": "t_address",
                  "offset": 0,
                  "slot": "8"
                },
                {
                  "label": "owner",
                  "type": "t_address",
                  "offset": 0,
                  "slot": "9"
                },
                {
                  "label": "creatorApproval",
                  "type": "t_bool",
                  "offset": 20,
                  "slot": "9"
                },
                {
                  "label": "creatorSignDate",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "10"
                },
                {
                  "label": "contractSigner",
                  "type": "t_address",
                  "offset": 0,
                  "slot": "11"
                },
                {
                  "label": "signerApproval",
                  "type": "t_bool",
                  "offset": 20,
                  "slot": "11"
                },
                {
                  "label": "signerSignDate",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "12"
                },
                {
                  "label": "status",
                  "type": "t_string_storage",
                  "offset": 0,
                  "slot": "13"
                }
              ],
              "numberOfBytes": "448"
            },
            "t_struct(Notify)52_storage": {
              "label": "struct MainCleanContract.Notify",
              "members": [
                {
                  "label": "nSender",
                  "type": "t_address",
                  "offset": 0,
                  "slot": "0"
                },
                {
                  "label": "nReceiver",
                  "type": "t_address",
                  "offset": 0,
                  "slot": "1"
                },
                {
                  "label": "ccID",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "2"
                },
                {
                  "label": "notifySentTime",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "3"
                },
                {
                  "label": "notifyContent",
                  "type": "t_string_storage",
                  "offset": 0,
                  "slot": "4"
                },
                {
                  "label": "status",
                  "type": "t_bool",
                  "offset": 0,
                  "slot": "5"
                }
              ],
              "numberOfBytes": "192"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            }
          },
          "layoutVersion": "1.1",
          "flat": true
        }
      }
    },
    {
      "ThirdParty": {
        "src": "contracts\\ThirdParty.sol:5",
        "version": {
          "withMetadata": "d53521b340872e1cb19a829da8b6f983b51ec0caaaaed0ba0db377ea1dcf6c41",
          "withoutMetadata": "3acbde7a57100e491145d86dc06d6a1d005f910761389ab6ab79b372a76c9ad9",
          "linkedWithoutMetadata": "3acbde7a57100e491145d86dc06d6a1d005f910761389ab6ab79b372a76c9ad9"
        },
        "inherit": [],
        "libraries": [],
        "methods": [
          "getAllCategories()",
          "addCategory(string,uint256[])",
          "editCategory(uint256,string,uint256[])",
          "deleteCategory(uint256)",
          "getAllProperties()",
          "addProperty(string)",
          "editProperty(uint256,string)",
          "deleteProperty(uint256)",
          "getPackagesByCategory(uint256)",
          "addPackage(uint256,string,uint256,uint256,uint256,bool[])",
          "editPackage(uint256,uint256,string,uint256,uint256,uint256,bool[])",
          "deletePackage(uint256,uint256)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [
            {
              "label": "categoryCounter",
              "offset": 0,
              "slot": "0",
              "type": "t_uint256",
              "contract": "ThirdParty",
              "src": "contracts\\ThirdParty.sol:12"
            },
            {
              "label": "packageCounter",
              "offset": 0,
              "slot": "1",
              "type": "t_uint256",
              "contract": "ThirdParty",
              "src": "contracts\\ThirdParty.sol:23"
            },
            {
              "label": "propertyCounter",
              "offset": 0,
              "slot": "2",
              "type": "t_uint256",
              "contract": "ThirdParty",
              "src": "contracts\\ThirdParty.sol:29"
            },
            {
              "label": "allCategories",
              "offset": 0,
              "slot": "3",
              "type": "t_array(t_struct(Category)11_storage)dyn_storage",
              "contract": "ThirdParty",
              "src": "contracts\\ThirdParty.sol:31"
            },
            {
              "label": "allPackages",
              "offset": 0,
              "slot": "4",
              "type": "t_mapping(t_uint256,t_array(t_struct(Package)29_storage)dyn_storage)",
              "contract": "ThirdParty",
              "src": "contracts\\ThirdParty.sol:34"
            },
            {
              "label": "allProperties",
              "offset": 0,
              "slot": "5",
              "type": "t_array(t_struct(Property)36_storage)dyn_storage",
              "contract": "ThirdParty",
              "src": "contracts\\ThirdParty.sol:37"
            }
          ],
          "types": {
            "t_array(t_bool)dyn_storage": {
              "label": "bool[]",
              "numberOfBytes": "32"
            },
            "t_array(t_struct(Category)11_storage)dyn_storage": {
              "label": "struct ThirdParty.Category[]",
              "numberOfBytes": "32"
            },
            "t_array(t_struct(Package)29_storage)dyn_storage": {
              "label": "struct ThirdParty.Package[]",
              "numberOfBytes": "32"
            },
            "t_array(t_struct(Property)36_storage)dyn_storage": {
              "label": "struct ThirdParty.Property[]",
              "numberOfBytes": "32"
            },
            "t_array(t_uint256)dyn_storage": {
              "label": "uint256[]",
              "numberOfBytes": "32"
            },
            "t_bool": {
              "label": "bool",
              "numberOfBytes": "1"
            },
            "t_mapping(t_uint256,t_array(t_struct(Package)29_storage)dyn_storage)": {
              "label": "mapping(uint256 => struct ThirdParty.Package[])",
              "numberOfBytes": "32"
            },
            "t_string_storage": {
              "label": "string",
              "numberOfBytes": "32"
            },
            "t_struct(Category)11_storage": {
              "label": "struct ThirdParty.Category",
              "members": [
                {
                  "label": "categoryID",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "0"
                },
                {
                  "label": "cartegoryName",
                  "type": "t_string_storage",
                  "offset": 0,
                  "slot": "1"
                },
                {
                  "label": "properties",
                  "type": "t_array(t_uint256)dyn_storage",
                  "offset": 0,
                  "slot": "2"
                },
                {
                  "label": "visible",
                  "type": "t_bool",
                  "offset": 0,
                  "slot": "3"
                }
              ],
              "numberOfBytes": "128"
            },
            "t_struct(Package)29_storage": {
              "label": "struct ThirdParty.Package",
              "members": [
                {
                  "label": "categoryID",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "0"
                },
                {
                  "label": "packageID",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "1"
                },
                {
                  "label": "packageName",
                  "type": "t_string_storage",
                  "offset": 0,
                  "slot": "2"
                },
                {
                  "label": "price",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "3"
                },
                {
                  "label": "period",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "4"
                },
                {
                  "label": "dataLimit",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "5"
                },
                {
                  "label": "propertyVisible",
                  "type": "t_array(t_bool)dyn_storage",
                  "offset": 0,
                  "slot": "6"
                }
              ],
              "numberOfBytes": "224"
            },
            "t_struct(Property)36_storage": {
              "label": "struct ThirdParty.Property",
              "members": [
                {
                  "label": "propertyID",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "0"
                },
                {
                  "label": "propertyName",
                  "type": "t_string_storage",
                  "offset": 0,
                  "slot": "1"
                }
              ],
              "numberOfBytes": "64"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            }
          },
          "layoutVersion": "1.1",
          "flat": true
        }
      }
    },
    {
      "Context": {
        "src": "contracts\\TokenContract.sol:30",
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "HouseBusinessToken": {
        "src": "contracts\\TokenContract.sol:41",
        "version": {
          "withMetadata": "4f990ca86e03541351e9529165a17d7cb67b9b8bd35a9c3adb0efa9a825a1bb9",
          "withoutMetadata": "b737d4aaacef72af795cc4b42f15838a2ae9bc1e52c8c3e49d32ef8fdcd6230d",
          "linkedWithoutMetadata": "b737d4aaacef72af795cc4b42f15838a2ae9bc1e52c8c3e49d32ef8fdcd6230d"
        },
        "inherit": [
          "IERC20Metadata",
          "IERC20",
          "Context"
        ],
        "libraries": [],
        "methods": [
          "()",
          "name()",
          "symbol()",
          "decimals()",
          "totalSupply()",
          "balanceOf(address)",
          "transfer(address,uint256)",
          "allowance(address,address)",
          "approve(address,uint256)",
          "transferFrom(address,address,uint256)",
          "increaseAllowance(address,uint256)",
          "decreaseAllowance(address,uint256)",
          "_mint(address,uint256)"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "HouseBusinessToken",
            "src": "contracts\\TokenContract.sol:50"
          },
          {
            "kind": "state-variable-assignment",
            "name": "_name",
            "src": "contracts\\TokenContract.sol:45"
          },
          {
            "kind": "state-variable-assignment",
            "name": "_symbol",
            "src": "contracts\\TokenContract.sol:46"
          },
          {
            "kind": "state-variable-assignment",
            "name": "_decimals",
            "src": "contracts\\TokenContract.sol:47"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "_balances",
              "offset": 0,
              "slot": "0",
              "type": "t_mapping(t_address,t_uint256)",
              "contract": "HouseBusinessToken",
              "src": "contracts\\TokenContract.sol:42"
            },
            {
              "label": "_allowances",
              "offset": 0,
              "slot": "1",
              "type": "t_mapping(t_address,t_mapping(t_address,t_uint256))",
              "contract": "HouseBusinessToken",
              "src": "contracts\\TokenContract.sol:43"
            },
            {
              "label": "_totalSupply",
              "offset": 0,
              "slot": "2",
              "type": "t_uint256",
              "contract": "HouseBusinessToken",
              "src": "contracts\\TokenContract.sol:44"
            },
            {
              "label": "_name",
              "offset": 0,
              "slot": "3",
              "type": "t_string_storage",
              "contract": "HouseBusinessToken",
              "src": "contracts\\TokenContract.sol:45"
            },
            {
              "label": "_symbol",
              "offset": 0,
              "slot": "4",
              "type": "t_string_storage",
              "contract": "HouseBusinessToken",
              "src": "contracts\\TokenContract.sol:46"
            },
            {
              "label": "_decimals",
              "offset": 0,
              "slot": "5",
              "type": "t_uint8",
              "contract": "HouseBusinessToken",
              "src": "contracts\\TokenContract.sol:47"
            },
            {
              "label": "_owner",
              "offset": 1,
              "slot": "5",
              "type": "t_address",
              "contract": "HouseBusinessToken",
              "src": "contracts\\TokenContract.sol:48"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            },
            "t_mapping(t_address,t_mapping(t_address,t_uint256))": {
              "label": "mapping(address => mapping(address => uint256))",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_uint256)": {
              "label": "mapping(address => uint256)",
              "numberOfBytes": "32"
            },
            "t_string_storage": {
              "label": "string",
              "numberOfBytes": "32"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            },
            "t_uint8": {
              "label": "uint8",
              "numberOfBytes": "1"
            }
          },
          "layoutVersion": "1.1",
          "flat": true
        }
      },
      "IERC20": {
        "src": "contracts\\TokenContract.sol:5",
        "inherit": [],
        "libraries": [],
        "methods": [
          "totalSupply()",
          "balanceOf(address)",
          "transfer(address,uint256)",
          "allowance(address,address)",
          "approve(address,uint256)",
          "transferFrom(address,address,uint256)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "IERC20Metadata": {
        "src": "contracts\\TokenContract.sol:22",
        "inherit": [
          "IERC20"
        ],
        "libraries": [],
        "methods": [
          "name()",
          "symbol()",
          "decimals()"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      }
    },
    {
      "IPRC20": {
        "src": "contracts\\interfaces\\IPRC20.sol:4",
        "inherit": [],
        "libraries": [],
        "methods": [
          "totalSupply()",
          "balanceOf(address)",
          "transfer(address,uint256)",
          "allowance(address,address)",
          "approve(address,uint256)",
          "transferFrom(address,address,uint256)",
          "decimals()"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      }
    },
    {
      "IHouseBusiness": {
        "src": "contracts\\Operator.sol:3",
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "Operator": {
        "src": "contracts\\Operator.sol:7",
        "version": {
          "withMetadata": "46af2c88135d313320332230d694075ef454de90ae3c17b467e0cf99b420bdc4",
          "withoutMetadata": "ac0db523ddc3e330f735df7b3b0b24460531c71290a891170e840f8f67d5ff6b",
          "linkedWithoutMetadata": "ac0db523ddc3e330f735df7b3b0b24460531c71290a891170e840f8f67d5ff6b"
        },
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      }
    },
    {
      "MainCleanContract": {
        "src": "contracts\\Contract.sol:6",
        "version": {
          "withMetadata": "010468631cbf91e131d43c059b189b55d220c871cd6c9bf91654f94d798103f1",
          "withoutMetadata": "e5b88dc6dff55c5639dcf382191cb4bb5323b9b8daccad7765611efdf8c82446",
          "linkedWithoutMetadata": "e5b88dc6dff55c5639dcf382191cb4bb5323b9b8daccad7765611efdf8c82446"
        },
        "inherit": [],
        "libraries": [],
        "methods": [
          "(address)",
          "ccCreation(string,string,address,string,uint256,uint256,uint256,string)",
          "getAllContractsByOwner()",
          "getAllContractsBySigner()",
          "getContractById(uint256)",
          "addContractSigner(uint256,address)",
          "signContract(uint256)",
          "sendNotify(address,string,uint256)",
          "getUploadedCounter()",
          "getAllNotifies()",
          "calcDiv(uint256,uint256)",
          "toString(bytes)",
          "addressToString(address)",
          "uintToString(uint256)",
          "bytesToString(bytes32)",
          "transferContractOwnership(uint256,address,address)"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "MainCleanContract",
            "src": "contracts\\Contract.sol:52"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "ccCounter",
              "offset": 0,
              "slot": "0",
              "type": "t_uint256",
              "contract": "MainCleanContract",
              "src": "contracts\\Contract.sol:8"
            },
            {
              "label": "houseNFTAddress",
              "offset": 0,
              "slot": "1",
              "type": "t_address",
              "contract": "MainCleanContract",
              "src": "contracts\\Contract.sol:11"
            },
            {
              "label": "allCleanContracts",
              "offset": 0,
              "slot": "2",
              "type": "t_mapping(t_uint256,t_struct(CleanContract)39_storage)",
              "contract": "MainCleanContract",
              "src": "contracts\\Contract.sol:44"
            },
            {
              "label": "allContractsByOwner",
              "offset": 0,
              "slot": "3",
              "type": "t_mapping(t_address,t_array(t_uint256)dyn_storage)",
              "contract": "MainCleanContract",
              "src": "contracts\\Contract.sol:46"
            },
            {
              "label": "allContractsBySigner",
              "offset": 0,
              "slot": "4",
              "type": "t_mapping(t_address,t_array(t_uint256)dyn_storage)",
              "contract": "MainCleanContract",
              "src": "contracts\\Contract.sol:48"
            },
            {
              "label": "allNotifies",
              "offset": 0,
              "slot": "5",
              "type": "t_mapping(t_address,t_array(t_struct(Notify)52_storage)dyn_storage)",
              "contract": "MainCleanContract",
              "src": "contracts\\Contract.sol:50"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            },
            "t_array(t_struct(Notify)52_storage)dyn_storage": {
              "label": "struct MainCleanContract.Notify[]",
              "numberOfBytes": "32"
            },
            "t_array(t_uint256)dyn_storage": {
              "label": "uint256[]",
              "numberOfBytes": "32"
            },
            "t_bool": {
              "label": "bool",
              "numberOfBytes": "1"
            },
            "t_mapping(t_address,t_array(t_struct(Notify)52_storage)dyn_storage)": {
              "label": "mapping(address => struct MainCleanContract.Notify[])",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_array(t_uint256)dyn_storage)": {
              "label": "mapping(address => uint256[])",
              "numberOfBytes": "32"
            },
            "t_mapping(t_uint256,t_struct(CleanContract)39_storage)": {
              "label": "mapping(uint256 => struct MainCleanContract.CleanContract)",
              "numberOfBytes": "32"
            },
            "t_string_storage": {
              "label": "string",
              "numberOfBytes": "32"
            },
            "t_struct(CleanContract)39_storage": {
              "label": "struct MainCleanContract.CleanContract",
              "members": [
                {
                  "label": "contractId",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "0"
                },
                {
                  "label": "companyName",
                  "type": "t_string_storage",
                  "offset": 0,
                  "slot": "1"
                },
                {
                  "label": "contractType",
                  "type": "t_string_storage",
                  "offset": 0,
                  "slot": "2"
                },
                {
                  "label": "contractURI",
                  "type": "t_string_storage",
                  "offset": 0,
                  "slot": "3"
                },
                {
                  "label": "dateFrom",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "4"
                },
                {
                  "label": "dateTo",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "5"
                },
                {
                  "label": "agreedPrice",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "6"
                },
                {
                  "label": "currency",
                  "type": "t_string_storage",
                  "offset": 0,
                  "slot": "7"
                },
                {
                  "label": "creator",
                  "type": "t_address",
                  "offset": 0,
                  "slot": "8"
                },
                {
                  "label": "owner",
                  "type": "t_address",
                  "offset": 0,
                  "slot": "9"
                },
                {
                  "label": "creatorApproval",
                  "type": "t_bool",
                  "offset": 20,
                  "slot": "9"
                },
                {
                  "label": "creatorSignDate",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "10"
                },
                {
                  "label": "contractSigner",
                  "type": "t_address",
                  "offset": 0,
                  "slot": "11"
                },
                {
                  "label": "signerApproval",
                  "type": "t_bool",
                  "offset": 20,
                  "slot": "11"
                },
                {
                  "label": "signerSignDate",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "12"
                },
                {
                  "label": "status",
                  "type": "t_string_storage",
                  "offset": 0,
                  "slot": "13"
                }
              ],
              "numberOfBytes": "448"
            },
            "t_struct(Notify)52_storage": {
              "label": "struct MainCleanContract.Notify",
              "members": [
                {
                  "label": "nSender",
                  "type": "t_address",
                  "offset": 0,
                  "slot": "0"
                },
                {
                  "label": "nReceiver",
                  "type": "t_address",
                  "offset": 0,
                  "slot": "1"
                },
                {
                  "label": "ccID",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "2"
                },
                {
                  "label": "notifySentTime",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "3"
                },
                {
                  "label": "notifyContent",
                  "type": "t_string_storage",
                  "offset": 0,
                  "slot": "4"
                },
                {
                  "label": "status",
                  "type": "t_bool",
                  "offset": 0,
                  "slot": "5"
                }
              ],
              "numberOfBytes": "192"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            }
          },
          "layoutVersion": "1.1",
          "flat": true
        }
      }
    },
    {
      "ThirdParty": {
        "src": "contracts\\ThirdParty.sol:5",
        "version": {
          "withMetadata": "d53521b340872e1cb19a829da8b6f983b51ec0caaaaed0ba0db377ea1dcf6c41",
          "withoutMetadata": "3acbde7a57100e491145d86dc06d6a1d005f910761389ab6ab79b372a76c9ad9",
          "linkedWithoutMetadata": "3acbde7a57100e491145d86dc06d6a1d005f910761389ab6ab79b372a76c9ad9"
        },
        "inherit": [],
        "libraries": [],
        "methods": [
          "getAllCategories()",
          "addCategory(string,uint256[])",
          "editCategory(uint256,string,uint256[])",
          "deleteCategory(uint256)",
          "getAllProperties()",
          "addProperty(string)",
          "editProperty(uint256,string)",
          "deleteProperty(uint256)",
          "getPackagesByCategory(uint256)",
          "addPackage(uint256,string,uint256,uint256,uint256,bool[])",
          "editPackage(uint256,uint256,string,uint256,uint256,uint256,bool[])",
          "deletePackage(uint256,uint256)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [
            {
              "label": "categoryCounter",
              "offset": 0,
              "slot": "0",
              "type": "t_uint256",
              "contract": "ThirdParty",
              "src": "contracts\\ThirdParty.sol:12"
            },
            {
              "label": "packageCounter",
              "offset": 0,
              "slot": "1",
              "type": "t_uint256",
              "contract": "ThirdParty",
              "src": "contracts\\ThirdParty.sol:23"
            },
            {
              "label": "propertyCounter",
              "offset": 0,
              "slot": "2",
              "type": "t_uint256",
              "contract": "ThirdParty",
              "src": "contracts\\ThirdParty.sol:29"
            },
            {
              "label": "allCategories",
              "offset": 0,
              "slot": "3",
              "type": "t_array(t_struct(Category)11_storage)dyn_storage",
              "contract": "ThirdParty",
              "src": "contracts\\ThirdParty.sol:31"
            },
            {
              "label": "allPackages",
              "offset": 0,
              "slot": "4",
              "type": "t_mapping(t_uint256,t_array(t_struct(Package)29_storage)dyn_storage)",
              "contract": "ThirdParty",
              "src": "contracts\\ThirdParty.sol:34"
            },
            {
              "label": "allProperties",
              "offset": 0,
              "slot": "5",
              "type": "t_array(t_struct(Property)36_storage)dyn_storage",
              "contract": "ThirdParty",
              "src": "contracts\\ThirdParty.sol:37"
            }
          ],
          "types": {
            "t_array(t_bool)dyn_storage": {
              "label": "bool[]",
              "numberOfBytes": "32"
            },
            "t_array(t_struct(Category)11_storage)dyn_storage": {
              "label": "struct ThirdParty.Category[]",
              "numberOfBytes": "32"
            },
            "t_array(t_struct(Package)29_storage)dyn_storage": {
              "label": "struct ThirdParty.Package[]",
              "numberOfBytes": "32"
            },
            "t_array(t_struct(Property)36_storage)dyn_storage": {
              "label": "struct ThirdParty.Property[]",
              "numberOfBytes": "32"
            },
            "t_array(t_uint256)dyn_storage": {
              "label": "uint256[]",
              "numberOfBytes": "32"
            },
            "t_bool": {
              "label": "bool",
              "numberOfBytes": "1"
            },
            "t_mapping(t_uint256,t_array(t_struct(Package)29_storage)dyn_storage)": {
              "label": "mapping(uint256 => struct ThirdParty.Package[])",
              "numberOfBytes": "32"
            },
            "t_string_storage": {
              "label": "string",
              "numberOfBytes": "32"
            },
            "t_struct(Category)11_storage": {
              "label": "struct ThirdParty.Category",
              "members": [
                {
                  "label": "categoryID",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "0"
                },
                {
                  "label": "cartegoryName",
                  "type": "t_string_storage",
                  "offset": 0,
                  "slot": "1"
                },
                {
                  "label": "properties",
                  "type": "t_array(t_uint256)dyn_storage",
                  "offset": 0,
                  "slot": "2"
                },
                {
                  "label": "visible",
                  "type": "t_bool",
                  "offset": 0,
                  "slot": "3"
                }
              ],
              "numberOfBytes": "128"
            },
            "t_struct(Package)29_storage": {
              "label": "struct ThirdParty.Package",
              "members": [
                {
                  "label": "categoryID",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "0"
                },
                {
                  "label": "packageID",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "1"
                },
                {
                  "label": "packageName",
                  "type": "t_string_storage",
                  "offset": 0,
                  "slot": "2"
                },
                {
                  "label": "price",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "3"
                },
                {
                  "label": "period",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "4"
                },
                {
                  "label": "dataLimit",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "5"
                },
                {
                  "label": "propertyVisible",
                  "type": "t_array(t_bool)dyn_storage",
                  "offset": 0,
                  "slot": "6"
                }
              ],
              "numberOfBytes": "224"
            },
            "t_struct(Property)36_storage": {
              "label": "struct ThirdParty.Property",
              "members": [
                {
                  "label": "propertyID",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "0"
                },
                {
                  "label": "propertyName",
                  "type": "t_string_storage",
                  "offset": 0,
                  "slot": "1"
                }
              ],
              "numberOfBytes": "64"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            }
          },
          "layoutVersion": "1.1",
          "flat": true
        }
      }
    },
    {
      "Context": {
        "src": "contracts\\TokenContract.sol:30",
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "HouseBusinessToken": {
        "src": "contracts\\TokenContract.sol:41",
        "version": {
          "withMetadata": "4f990ca86e03541351e9529165a17d7cb67b9b8bd35a9c3adb0efa9a825a1bb9",
          "withoutMetadata": "b737d4aaacef72af795cc4b42f15838a2ae9bc1e52c8c3e49d32ef8fdcd6230d",
          "linkedWithoutMetadata": "b737d4aaacef72af795cc4b42f15838a2ae9bc1e52c8c3e49d32ef8fdcd6230d"
        },
        "inherit": [
          "IERC20Metadata",
          "IERC20",
          "Context"
        ],
        "libraries": [],
        "methods": [
          "()",
          "name()",
          "symbol()",
          "decimals()",
          "totalSupply()",
          "balanceOf(address)",
          "transfer(address,uint256)",
          "allowance(address,address)",
          "approve(address,uint256)",
          "transferFrom(address,address,uint256)",
          "increaseAllowance(address,uint256)",
          "decreaseAllowance(address,uint256)",
          "_mint(address,uint256)"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "HouseBusinessToken",
            "src": "contracts\\TokenContract.sol:50"
          },
          {
            "kind": "state-variable-assignment",
            "name": "_name",
            "src": "contracts\\TokenContract.sol:45"
          },
          {
            "kind": "state-variable-assignment",
            "name": "_symbol",
            "src": "contracts\\TokenContract.sol:46"
          },
          {
            "kind": "state-variable-assignment",
            "name": "_decimals",
            "src": "contracts\\TokenContract.sol:47"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "_balances",
              "offset": 0,
              "slot": "0",
              "type": "t_mapping(t_address,t_uint256)",
              "contract": "HouseBusinessToken",
              "src": "contracts\\TokenContract.sol:42"
            },
            {
              "label": "_allowances",
              "offset": 0,
              "slot": "1",
              "type": "t_mapping(t_address,t_mapping(t_address,t_uint256))",
              "contract": "HouseBusinessToken",
              "src": "contracts\\TokenContract.sol:43"
            },
            {
              "label": "_totalSupply",
              "offset": 0,
              "slot": "2",
              "type": "t_uint256",
              "contract": "HouseBusinessToken",
              "src": "contracts\\TokenContract.sol:44"
            },
            {
              "label": "_name",
              "offset": 0,
              "slot": "3",
              "type": "t_string_storage",
              "contract": "HouseBusinessToken",
              "src": "contracts\\TokenContract.sol:45"
            },
            {
              "label": "_symbol",
              "offset": 0,
              "slot": "4",
              "type": "t_string_storage",
              "contract": "HouseBusinessToken",
              "src": "contracts\\TokenContract.sol:46"
            },
            {
              "label": "_decimals",
              "offset": 0,
              "slot": "5",
              "type": "t_uint8",
              "contract": "HouseBusinessToken",
              "src": "contracts\\TokenContract.sol:47"
            },
            {
              "label": "_owner",
              "offset": 1,
              "slot": "5",
              "type": "t_address",
              "contract": "HouseBusinessToken",
              "src": "contracts\\TokenContract.sol:48"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            },
            "t_mapping(t_address,t_mapping(t_address,t_uint256))": {
              "label": "mapping(address => mapping(address => uint256))",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_uint256)": {
              "label": "mapping(address => uint256)",
              "numberOfBytes": "32"
            },
            "t_string_storage": {
              "label": "string",
              "numberOfBytes": "32"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            },
            "t_uint8": {
              "label": "uint8",
              "numberOfBytes": "1"
            }
          },
          "layoutVersion": "1.1",
          "flat": true
        }
      },
      "IERC20": {
        "src": "contracts\\TokenContract.sol:5",
        "inherit": [],
        "libraries": [],
        "methods": [
          "totalSupply()",
          "balanceOf(address)",
          "transfer(address,uint256)",
          "allowance(address,address)",
          "approve(address,uint256)",
          "transferFrom(address,address,uint256)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "IERC20Metadata": {
        "src": "contracts\\TokenContract.sol:22",
        "inherit": [
          "IERC20"
        ],
        "libraries": [],
        "methods": [
          "name()",
          "symbol()",
          "decimals()"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      }
    },
    {
      "IHouseBusiness": {
        "src": "contracts\\Operator.sol:3",
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "Operator": {
        "src": "contracts\\Operator.sol:7",
        "version": {
          "withMetadata": "46af2c88135d313320332230d694075ef454de90ae3c17b467e0cf99b420bdc4",
          "withoutMetadata": "ac0db523ddc3e330f735df7b3b0b24460531c71290a891170e840f8f67d5ff6b",
          "linkedWithoutMetadata": "ac0db523ddc3e330f735df7b3b0b24460531c71290a891170e840f8f67d5ff6b"
        },
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      }
    },
    {
      "IPRC20": {
        "src": "contracts\\interfaces\\IPRC20.sol:4",
        "inherit": [],
        "libraries": [],
        "methods": [
          "totalSupply()",
          "balanceOf(address)",
          "transfer(address,uint256)",
          "allowance(address,address)",
          "approve(address,uint256)",
          "transferFrom(address,address,uint256)",
          "decimals()"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      }
    },
    {
      "MainCleanContract": {
        "src": "contracts\\Contract.sol:6",
        "version": {
          "withMetadata": "010468631cbf91e131d43c059b189b55d220c871cd6c9bf91654f94d798103f1",
          "withoutMetadata": "e5b88dc6dff55c5639dcf382191cb4bb5323b9b8daccad7765611efdf8c82446",
          "linkedWithoutMetadata": "e5b88dc6dff55c5639dcf382191cb4bb5323b9b8daccad7765611efdf8c82446"
        },
        "inherit": [],
        "libraries": [],
        "methods": [
          "(address)",
          "ccCreation(string,string,address,string,uint256,uint256,uint256,string)",
          "getAllContractsByOwner()",
          "getAllContractsBySigner()",
          "getContractById(uint256)",
          "addContractSigner(uint256,address)",
          "signContract(uint256)",
          "sendNotify(address,string,uint256)",
          "getUploadedCounter()",
          "getAllNotifies()",
          "calcDiv(uint256,uint256)",
          "toString(bytes)",
          "addressToString(address)",
          "uintToString(uint256)",
          "bytesToString(bytes32)",
          "transferContractOwnership(uint256,address,address)"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "MainCleanContract",
            "src": "contracts\\Contract.sol:52"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "ccCounter",
              "offset": 0,
              "slot": "0",
              "type": "t_uint256",
              "contract": "MainCleanContract",
              "src": "contracts\\Contract.sol:8"
            },
            {
              "label": "houseNFTAddress",
              "offset": 0,
              "slot": "1",
              "type": "t_address",
              "contract": "MainCleanContract",
              "src": "contracts\\Contract.sol:11"
            },
            {
              "label": "allCleanContracts",
              "offset": 0,
              "slot": "2",
              "type": "t_mapping(t_uint256,t_struct(CleanContract)39_storage)",
              "contract": "MainCleanContract",
              "src": "contracts\\Contract.sol:44"
            },
            {
              "label": "allContractsByOwner",
              "offset": 0,
              "slot": "3",
              "type": "t_mapping(t_address,t_array(t_uint256)dyn_storage)",
              "contract": "MainCleanContract",
              "src": "contracts\\Contract.sol:46"
            },
            {
              "label": "allContractsBySigner",
              "offset": 0,
              "slot": "4",
              "type": "t_mapping(t_address,t_array(t_uint256)dyn_storage)",
              "contract": "MainCleanContract",
              "src": "contracts\\Contract.sol:48"
            },
            {
              "label": "allNotifies",
              "offset": 0,
              "slot": "5",
              "type": "t_mapping(t_address,t_array(t_struct(Notify)52_storage)dyn_storage)",
              "contract": "MainCleanContract",
              "src": "contracts\\Contract.sol:50"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            },
            "t_array(t_struct(Notify)52_storage)dyn_storage": {
              "label": "struct MainCleanContract.Notify[]",
              "numberOfBytes": "32"
            },
            "t_array(t_uint256)dyn_storage": {
              "label": "uint256[]",
              "numberOfBytes": "32"
            },
            "t_bool": {
              "label": "bool",
              "numberOfBytes": "1"
            },
            "t_mapping(t_address,t_array(t_struct(Notify)52_storage)dyn_storage)": {
              "label": "mapping(address => struct MainCleanContract.Notify[])",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_array(t_uint256)dyn_storage)": {
              "label": "mapping(address => uint256[])",
              "numberOfBytes": "32"
            },
            "t_mapping(t_uint256,t_struct(CleanContract)39_storage)": {
              "label": "mapping(uint256 => struct MainCleanContract.CleanContract)",
              "numberOfBytes": "32"
            },
            "t_string_storage": {
              "label": "string",
              "numberOfBytes": "32"
            },
            "t_struct(CleanContract)39_storage": {
              "label": "struct MainCleanContract.CleanContract",
              "members": [
                {
                  "label": "contractId",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "0"
                },
                {
                  "label": "companyName",
                  "type": "t_string_storage",
                  "offset": 0,
                  "slot": "1"
                },
                {
                  "label": "contractType",
                  "type": "t_string_storage",
                  "offset": 0,
                  "slot": "2"
                },
                {
                  "label": "contractURI",
                  "type": "t_string_storage",
                  "offset": 0,
                  "slot": "3"
                },
                {
                  "label": "dateFrom",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "4"
                },
                {
                  "label": "dateTo",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "5"
                },
                {
                  "label": "agreedPrice",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "6"
                },
                {
                  "label": "currency",
                  "type": "t_string_storage",
                  "offset": 0,
                  "slot": "7"
                },
                {
                  "label": "creator",
                  "type": "t_address",
                  "offset": 0,
                  "slot": "8"
                },
                {
                  "label": "owner",
                  "type": "t_address",
                  "offset": 0,
                  "slot": "9"
                },
                {
                  "label": "creatorApproval",
                  "type": "t_bool",
                  "offset": 20,
                  "slot": "9"
                },
                {
                  "label": "creatorSignDate",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "10"
                },
                {
                  "label": "contractSigner",
                  "type": "t_address",
                  "offset": 0,
                  "slot": "11"
                },
                {
                  "label": "signerApproval",
                  "type": "t_bool",
                  "offset": 20,
                  "slot": "11"
                },
                {
                  "label": "signerSignDate",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "12"
                },
                {
                  "label": "status",
                  "type": "t_string_storage",
                  "offset": 0,
                  "slot": "13"
                }
              ],
              "numberOfBytes": "448"
            },
            "t_struct(Notify)52_storage": {
              "label": "struct MainCleanContract.Notify",
              "members": [
                {
                  "label": "nSender",
                  "type": "t_address",
                  "offset": 0,
                  "slot": "0"
                },
                {
                  "label": "nReceiver",
                  "type": "t_address",
                  "offset": 0,
                  "slot": "1"
                },
                {
                  "label": "ccID",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "2"
                },
                {
                  "label": "notifySentTime",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "3"
                },
                {
                  "label": "notifyContent",
                  "type": "t_string_storage",
                  "offset": 0,
                  "slot": "4"
                },
                {
                  "label": "status",
                  "type": "t_bool",
                  "offset": 0,
                  "slot": "5"
                }
              ],
              "numberOfBytes": "192"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            }
          },
          "layoutVersion": "1.1",
          "flat": true
        }
      }
    },
    {
      "ThirdParty": {
        "src": "contracts\\ThirdParty.sol:5",
        "version": {
          "withMetadata": "d53521b340872e1cb19a829da8b6f983b51ec0caaaaed0ba0db377ea1dcf6c41",
          "withoutMetadata": "3acbde7a57100e491145d86dc06d6a1d005f910761389ab6ab79b372a76c9ad9",
          "linkedWithoutMetadata": "3acbde7a57100e491145d86dc06d6a1d005f910761389ab6ab79b372a76c9ad9"
        },
        "inherit": [],
        "libraries": [],
        "methods": [
          "getAllCategories()",
          "addCategory(string,uint256[])",
          "editCategory(uint256,string,uint256[])",
          "deleteCategory(uint256)",
          "getAllProperties()",
          "addProperty(string)",
          "editProperty(uint256,string)",
          "deleteProperty(uint256)",
          "getPackagesByCategory(uint256)",
          "addPackage(uint256,string,uint256,uint256,uint256,bool[])",
          "editPackage(uint256,uint256,string,uint256,uint256,uint256,bool[])",
          "deletePackage(uint256,uint256)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [
            {
              "label": "categoryCounter",
              "offset": 0,
              "slot": "0",
              "type": "t_uint256",
              "contract": "ThirdParty",
              "src": "contracts\\ThirdParty.sol:12"
            },
            {
              "label": "packageCounter",
              "offset": 0,
              "slot": "1",
              "type": "t_uint256",
              "contract": "ThirdParty",
              "src": "contracts\\ThirdParty.sol:23"
            },
            {
              "label": "propertyCounter",
              "offset": 0,
              "slot": "2",
              "type": "t_uint256",
              "contract": "ThirdParty",
              "src": "contracts\\ThirdParty.sol:29"
            },
            {
              "label": "allCategories",
              "offset": 0,
              "slot": "3",
              "type": "t_array(t_struct(Category)11_storage)dyn_storage",
              "contract": "ThirdParty",
              "src": "contracts\\ThirdParty.sol:31"
            },
            {
              "label": "allPackages",
              "offset": 0,
              "slot": "4",
              "type": "t_mapping(t_uint256,t_array(t_struct(Package)29_storage)dyn_storage)",
              "contract": "ThirdParty",
              "src": "contracts\\ThirdParty.sol:34"
            },
            {
              "label": "allProperties",
              "offset": 0,
              "slot": "5",
              "type": "t_array(t_struct(Property)36_storage)dyn_storage",
              "contract": "ThirdParty",
              "src": "contracts\\ThirdParty.sol:37"
            }
          ],
          "types": {
            "t_array(t_bool)dyn_storage": {
              "label": "bool[]",
              "numberOfBytes": "32"
            },
            "t_array(t_struct(Category)11_storage)dyn_storage": {
              "label": "struct ThirdParty.Category[]",
              "numberOfBytes": "32"
            },
            "t_array(t_struct(Package)29_storage)dyn_storage": {
              "label": "struct ThirdParty.Package[]",
              "numberOfBytes": "32"
            },
            "t_array(t_struct(Property)36_storage)dyn_storage": {
              "label": "struct ThirdParty.Property[]",
              "numberOfBytes": "32"
            },
            "t_array(t_uint256)dyn_storage": {
              "label": "uint256[]",
              "numberOfBytes": "32"
            },
            "t_bool": {
              "label": "bool",
              "numberOfBytes": "1"
            },
            "t_mapping(t_uint256,t_array(t_struct(Package)29_storage)dyn_storage)": {
              "label": "mapping(uint256 => struct ThirdParty.Package[])",
              "numberOfBytes": "32"
            },
            "t_string_storage": {
              "label": "string",
              "numberOfBytes": "32"
            },
            "t_struct(Category)11_storage": {
              "label": "struct ThirdParty.Category",
              "members": [
                {
                  "label": "categoryID",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "0"
                },
                {
                  "label": "cartegoryName",
                  "type": "t_string_storage",
                  "offset": 0,
                  "slot": "1"
                },
                {
                  "label": "properties",
                  "type": "t_array(t_uint256)dyn_storage",
                  "offset": 0,
                  "slot": "2"
                },
                {
                  "label": "visible",
                  "type": "t_bool",
                  "offset": 0,
                  "slot": "3"
                }
              ],
              "numberOfBytes": "128"
            },
            "t_struct(Package)29_storage": {
              "label": "struct ThirdParty.Package",
              "members": [
                {
                  "label": "categoryID",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "0"
                },
                {
                  "label": "packageID",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "1"
                },
                {
                  "label": "packageName",
                  "type": "t_string_storage",
                  "offset": 0,
                  "slot": "2"
                },
                {
                  "label": "price",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "3"
                },
                {
                  "label": "period",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "4"
                },
                {
                  "label": "dataLimit",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "5"
                },
                {
                  "label": "propertyVisible",
                  "type": "t_array(t_bool)dyn_storage",
                  "offset": 0,
                  "slot": "6"
                }
              ],
              "numberOfBytes": "224"
            },
            "t_struct(Property)36_storage": {
              "label": "struct ThirdParty.Property",
              "members": [
                {
                  "label": "propertyID",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "0"
                },
                {
                  "label": "propertyName",
                  "type": "t_string_storage",
                  "offset": 0,
                  "slot": "1"
                }
              ],
              "numberOfBytes": "64"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            }
          },
          "layoutVersion": "1.1",
          "flat": true
        }
      }
    },
    {
      "Context": {
        "src": "contracts\\TokenContract.sol:30",
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "HouseBusinessToken": {
        "src": "contracts\\TokenContract.sol:41",
        "version": {
          "withMetadata": "4f990ca86e03541351e9529165a17d7cb67b9b8bd35a9c3adb0efa9a825a1bb9",
          "withoutMetadata": "b737d4aaacef72af795cc4b42f15838a2ae9bc1e52c8c3e49d32ef8fdcd6230d",
          "linkedWithoutMetadata": "b737d4aaacef72af795cc4b42f15838a2ae9bc1e52c8c3e49d32ef8fdcd6230d"
        },
        "inherit": [
          "IERC20Metadata",
          "IERC20",
          "Context"
        ],
        "libraries": [],
        "methods": [
          "()",
          "name()",
          "symbol()",
          "decimals()",
          "totalSupply()",
          "balanceOf(address)",
          "transfer(address,uint256)",
          "allowance(address,address)",
          "approve(address,uint256)",
          "transferFrom(address,address,uint256)",
          "increaseAllowance(address,uint256)",
          "decreaseAllowance(address,uint256)",
          "_mint(address,uint256)"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "HouseBusinessToken",
            "src": "contracts\\TokenContract.sol:50"
          },
          {
            "kind": "state-variable-assignment",
            "name": "_name",
            "src": "contracts\\TokenContract.sol:45"
          },
          {
            "kind": "state-variable-assignment",
            "name": "_symbol",
            "src": "contracts\\TokenContract.sol:46"
          },
          {
            "kind": "state-variable-assignment",
            "name": "_decimals",
            "src": "contracts\\TokenContract.sol:47"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "_balances",
              "offset": 0,
              "slot": "0",
              "type": "t_mapping(t_address,t_uint256)",
              "contract": "HouseBusinessToken",
              "src": "contracts\\TokenContract.sol:42"
            },
            {
              "label": "_allowances",
              "offset": 0,
              "slot": "1",
              "type": "t_mapping(t_address,t_mapping(t_address,t_uint256))",
              "contract": "HouseBusinessToken",
              "src": "contracts\\TokenContract.sol:43"
            },
            {
              "label": "_totalSupply",
              "offset": 0,
              "slot": "2",
              "type": "t_uint256",
              "contract": "HouseBusinessToken",
              "src": "contracts\\TokenContract.sol:44"
            },
            {
              "label": "_name",
              "offset": 0,
              "slot": "3",
              "type": "t_string_storage",
              "contract": "HouseBusinessToken",
              "src": "contracts\\TokenContract.sol:45"
            },
            {
              "label": "_symbol",
              "offset": 0,
              "slot": "4",
              "type": "t_string_storage",
              "contract": "HouseBusinessToken",
              "src": "contracts\\TokenContract.sol:46"
            },
            {
              "label": "_decimals",
              "offset": 0,
              "slot": "5",
              "type": "t_uint8",
              "contract": "HouseBusinessToken",
              "src": "contracts\\TokenContract.sol:47"
            },
            {
              "label": "_owner",
              "offset": 1,
              "slot": "5",
              "type": "t_address",
              "contract": "HouseBusinessToken",
              "src": "contracts\\TokenContract.sol:48"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            },
            "t_mapping(t_address,t_mapping(t_address,t_uint256))": {
              "label": "mapping(address => mapping(address => uint256))",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_uint256)": {
              "label": "mapping(address => uint256)",
              "numberOfBytes": "32"
            },
            "t_string_storage": {
              "label": "string",
              "numberOfBytes": "32"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            },
            "t_uint8": {
              "label": "uint8",
              "numberOfBytes": "1"
            }
          },
          "layoutVersion": "1.1",
          "flat": true
        }
      },
      "IERC20": {
        "src": "contracts\\TokenContract.sol:5",
        "inherit": [],
        "libraries": [],
        "methods": [
          "totalSupply()",
          "balanceOf(address)",
          "transfer(address,uint256)",
          "allowance(address,address)",
          "approve(address,uint256)",
          "transferFrom(address,address,uint256)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "IERC20Metadata": {
        "src": "contracts\\TokenContract.sol:22",
        "inherit": [
          "IERC20"
        ],
        "libraries": [],
        "methods": [
          "name()",
          "symbol()",
          "decimals()"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      }
    },
    {
      "IPRC20": {
        "src": "contracts\\interfaces\\IPRC20.sol:4",
        "inherit": [],
        "libraries": [],
        "methods": [
          "totalSupply()",
          "balanceOf(address)",
          "transfer(address,uint256)",
          "allowance(address,address)",
          "approve(address,uint256)",
          "transferFrom(address,address,uint256)",
          "decimals()"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      }
    },
    {
      "IHouseBusiness": {
        "src": "contracts\\Operator.sol:3",
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "Operator": {
        "src": "contracts\\Operator.sol:7",
        "version": {
          "withMetadata": "46af2c88135d313320332230d694075ef454de90ae3c17b467e0cf99b420bdc4",
          "withoutMetadata": "ac0db523ddc3e330f735df7b3b0b24460531c71290a891170e840f8f67d5ff6b",
          "linkedWithoutMetadata": "ac0db523ddc3e330f735df7b3b0b24460531c71290a891170e840f8f67d5ff6b"
        },
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      }
    },
    {
      "IERC20": {
        "src": "@openzeppelin\\contracts\\token\\ERC20\\IERC20.sol:9",
        "inherit": [],
        "libraries": [],
        "methods": [
          "totalSupply()",
          "balanceOf(address)",
          "transfer(address,uint256)",
          "allowance(address,address)",
          "approve(address,uint256)",
          "transferFrom(address,address,uint256)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "ERC721": {
        "src": "@openzeppelin\\contracts\\token\\ERC721\\ERC721.sol:19",
        "version": {
          "withMetadata": "9ebb68faadef327bc83697ff51da508f0484dd0c5450e42d0a1ac6a2ec46a24e",
          "withoutMetadata": "ed4023ae10fc078ca9d410a0661cf3fd9603fe9627b15a17e4c2487e2a48d65d",
          "linkedWithoutMetadata": "ed4023ae10fc078ca9d410a0661cf3fd9603fe9627b15a17e4c2487e2a48d65d"
        },
        "inherit": [
          "IERC721Metadata",
          "IERC721",
          "ERC165",
          "IERC165",
          "Context"
        ],
        "libraries": [
          "Address",
          "Strings"
        ],
        "methods": [
          "(string,string)",
          "supportsInterface(bytes4)",
          "balanceOf(address)",
          "ownerOf(uint256)",
          "name()",
          "symbol()",
          "tokenURI(uint256)",
          "approve(address,uint256)",
          "getApproved(uint256)",
          "setApprovalForAll(address,bool)",
          "isApprovedForAll(address,address)",
          "transferFrom(address,address,uint256)",
          "safeTransferFrom(address,address,uint256)",
          "safeTransferFrom(address,address,uint256,bytes)"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "ERC721",
            "src": "@openzeppelin\\contracts\\token\\ERC721\\ERC721.sol:44"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "_name",
              "offset": 0,
              "slot": "0",
              "type": "t_string_storage",
              "contract": "ERC721",
              "src": "@openzeppelin\\contracts\\token\\ERC721\\ERC721.sol:24"
            },
            {
              "label": "_symbol",
              "offset": 0,
              "slot": "1",
              "type": "t_string_storage",
              "contract": "ERC721",
              "src": "@openzeppelin\\contracts\\token\\ERC721\\ERC721.sol:27"
            },
            {
              "label": "_owners",
              "offset": 0,
              "slot": "2",
              "type": "t_mapping(t_uint256,t_address)",
              "contract": "ERC721",
              "src": "@openzeppelin\\contracts\\token\\ERC721\\ERC721.sol:30"
            },
            {
              "label": "_balances",
              "offset": 0,
              "slot": "3",
              "type": "t_mapping(t_address,t_uint256)",
              "contract": "ERC721",
              "src": "@openzeppelin\\contracts\\token\\ERC721\\ERC721.sol:33"
            },
            {
              "label": "_tokenApprovals",
              "offset": 0,
              "slot": "4",
              "type": "t_mapping(t_uint256,t_address)",
              "contract": "ERC721",
              "src": "@openzeppelin\\contracts\\token\\ERC721\\ERC721.sol:36"
            },
            {
              "label": "_operatorApprovals",
              "offset": 0,
              "slot": "5",
              "type": "t_mapping(t_address,t_mapping(t_address,t_bool))",
              "contract": "ERC721",
              "src": "@openzeppelin\\contracts\\token\\ERC721\\ERC721.sol:39"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            },
            "t_bool": {
              "label": "bool",
              "numberOfBytes": "1"
            },
            "t_mapping(t_address,t_bool)": {
              "label": "mapping(address => bool)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_mapping(t_address,t_bool))": {
              "label": "mapping(address => mapping(address => bool))",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_uint256)": {
              "label": "mapping(address => uint256)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_uint256,t_address)": {
              "label": "mapping(uint256 => address)",
              "numberOfBytes": "32"
            },
            "t_string_storage": {
              "label": "string",
              "numberOfBytes": "32"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            }
          },
          "layoutVersion": "1.1",
          "flat": true
        }
      },
      "IERC721": {
        "src": "@openzeppelin\\contracts\\token\\ERC721\\IERC721.sol:11",
        "inherit": [
          "IERC165"
        ],
        "libraries": [],
        "methods": [
          "balanceOf(address)",
          "ownerOf(uint256)",
          "safeTransferFrom(address,address,uint256,bytes)",
          "safeTransferFrom(address,address,uint256)",
          "transferFrom(address,address,uint256)",
          "approve(address,uint256)",
          "setApprovalForAll(address,bool)",
          "getApproved(uint256)",
          "isApprovedForAll(address,address)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "IERC721Receiver": {
        "src": "@openzeppelin\\contracts\\token\\ERC721\\IERC721Receiver.sol:11",
        "inherit": [],
        "libraries": [],
        "methods": [
          "onERC721Received(address,address,uint256,bytes)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "ERC721URIStorage": {
        "src": "@openzeppelin\\contracts\\token\\ERC721\\extensions\\ERC721URIStorage.sol:11",
        "inherit": [
          "ERC721",
          "IERC721Metadata",
          "IERC721",
          "ERC165",
          "IERC165",
          "Context"
        ],
        "libraries": [
          "Strings"
        ],
        "methods": [
          "tokenURI(uint256)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [
            {
              "label": "_name",
              "offset": 0,
              "slot": "0",
              "type": "t_string_storage",
              "contract": "ERC721",
              "src": "@openzeppelin\\contracts\\token\\ERC721\\ERC721.sol:24"
            },
            {
              "label": "_symbol",
              "offset": 0,
              "slot": "1",
              "type": "t_string_storage",
              "contract": "ERC721",
              "src": "@openzeppelin\\contracts\\token\\ERC721\\ERC721.sol:27"
            },
            {
              "label": "_owners",
              "offset": 0,
              "slot": "2",
              "type": "t_mapping(t_uint256,t_address)",
              "contract": "ERC721",
              "src": "@openzeppelin\\contracts\\token\\ERC721\\ERC721.sol:30"
            },
            {
              "label": "_balances",
              "offset": 0,
              "slot": "3",
              "type": "t_mapping(t_address,t_uint256)",
              "contract": "ERC721",
              "src": "@openzeppelin\\contracts\\token\\ERC721\\ERC721.sol:33"
            },
            {
              "label": "_tokenApprovals",
              "offset": 0,
              "slot": "4",
              "type": "t_mapping(t_uint256,t_address)",
              "contract": "ERC721",
              "src": "@openzeppelin\\contracts\\token\\ERC721\\ERC721.sol:36"
            },
            {
              "label": "_operatorApprovals",
              "offset": 0,
              "slot": "5",
              "type": "t_mapping(t_address,t_mapping(t_address,t_bool))",
              "contract": "ERC721",
              "src": "@openzeppelin\\contracts\\token\\ERC721\\ERC721.sol:39"
            },
            {
              "label": "_tokenURIs",
              "offset": 0,
              "slot": "6",
              "type": "t_mapping(t_uint256,t_string_storage)",
              "contract": "ERC721URIStorage",
              "src": "@openzeppelin\\contracts\\token\\ERC721\\extensions\\ERC721URIStorage.sol:15"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            },
            "t_bool": {
              "label": "bool",
              "numberOfBytes": "1"
            },
            "t_mapping(t_address,t_bool)": {
              "label": "mapping(address => bool)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_mapping(t_address,t_bool))": {
              "label": "mapping(address => mapping(address => bool))",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_uint256)": {
              "label": "mapping(address => uint256)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_uint256,t_address)": {
              "label": "mapping(uint256 => address)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_uint256,t_string_storage)": {
              "label": "mapping(uint256 => string)",
              "numberOfBytes": "32"
            },
            "t_string_storage": {
              "label": "string",
              "numberOfBytes": "32"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            }
          },
          "layoutVersion": "1.1",
          "flat": true
        }
      },
      "IERC721Metadata": {
        "src": "@openzeppelin\\contracts\\token\\ERC721\\extensions\\IERC721Metadata.sol:12",
        "inherit": [
          "IERC721",
          "IERC165"
        ],
        "libraries": [],
        "methods": [
          "name()",
          "symbol()",
          "tokenURI(uint256)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "Address": {
        "src": "@openzeppelin\\contracts\\utils\\Address.sol:9",
        "version": {
          "withMetadata": "469e62629df74b2ae5b04765782886d27065c542dd4360d0c359e2ee52715c29",
          "withoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db",
          "linkedWithoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db"
        },
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [
          {
            "kind": "delegatecall",
            "src": "@openzeppelin\\contracts\\utils\\Address.sol:185"
          }
        ],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "Context": {
        "src": "@openzeppelin\\contracts\\utils\\Context.sol:16",
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "Strings": {
        "src": "@openzeppelin\\contracts\\utils\\Strings.sol:11",
        "version": {
          "withMetadata": "6be811318460a6651038bb5171cc0bf109c3d8e875d32b6e6bac849bd51da11e",
          "withoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db",
          "linkedWithoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db"
        },
        "inherit": [],
        "libraries": [
          "Math"
        ],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "ERC165": {
        "src": "@openzeppelin\\contracts\\utils\\introspection\\ERC165.sol:22",
        "inherit": [
          "IERC165"
        ],
        "libraries": [],
        "methods": [
          "supportsInterface(bytes4)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "IERC165": {
        "src": "@openzeppelin\\contracts\\utils\\introspection\\IERC165.sol:15",
        "inherit": [],
        "libraries": [],
        "methods": [
          "supportsInterface(bytes4)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "Math": {
        "src": "@openzeppelin\\contracts\\utils\\math\\Math.sol:9",
        "version": {
          "withMetadata": "ced272d222c66646c1870669cdc514a1ba479b3f9b42ba7792c596dbf0a1a986",
          "withoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db",
          "linkedWithoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db"
        },
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "HouseBusiness": {
        "src": "contracts\\HouseBusiness.sol:12",
        "version": {
          "withMetadata": "347bc17941376b9a64b6dd9d9ff58da85fc5ed9df96b77949d079408eac5d989",
          "withoutMetadata": "14f0460a25cc208e58d8c7ced48f4483498787247a266a81433b42432f817823",
          "linkedWithoutMetadata": "14f0460a25cc208e58d8c7ced48f4483498787247a266a81433b42432f817823"
        },
        "inherit": [
          "ERC721URIStorage",
          "ERC721",
          "IERC721Metadata",
          "IERC721",
          "ERC165",
          "IERC165",
          "Context"
        ],
        "libraries": [],
        "methods": [
          "(address)",
          "setMinMaxHousePrice(uint256,uint256)",
          "setConfigToken(address)",
          "isMember()",
          "addMember(address)",
          "removeMember(address)",
          "tokenURI(uint256)",
          "setCContractAddress(address)",
          "setStakingContractAddress(address)",
          "setPayable(uint256,address,bool)",
          "mintHouse(string,string,string,string)",
          "addAllowList(uint256,address)",
          "removeAllowList(uint256,address)",
          "checkAllowedList(uint256,address)",
          "addHistory(uint256,uint256,uint256,string,string,string,string,string,uint256)",
          "getHistory(uint256)",
          "editHistory(uint256,uint256,string,string,string,string,string,uint256)",
          "getHistoryType()",
          "addOrEditHType(uint256,string,bool,bool,bool,bool,bool,bool,bool)",
          "removeHistoryType(uint256)",
          "getMinMaxNFT()",
          "getTokenOwner(uint256)",
          "disconnectContract(uint256,uint256,uint256)",
          "buyHouseNft(uint256)",
          "changeHousePrice(uint256,uint256)",
          "sendToken(address,uint256)",
          "changeTokenPrice(uint256,uint256)",
          "getAllHouses()",
          "getAllPayableHouses()",
          "getAllMyHouses()",
          "withdrawToken(uint256)",
          "withdrawETH(uint256)",
          "getTotalInfo()",
          "getTokenPrice(uint256)",
          "setHouseStakedStatus(uint256,bool)",
          "getRoyaltyCreator()",
          "setRoyaltyCreator(uint256)",
          "getRoyaltyMarket()",
          "setRoyaltyMarket(uint256)"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "HouseBusiness",
            "src": "contracts\\HouseBusiness.sol:94"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "_name",
              "offset": 0,
              "slot": "0",
              "type": "t_string_storage",
              "contract": "ERC721",
              "src": "@openzeppelin\\contracts\\token\\ERC721\\ERC721.sol:24"
            },
            {
              "label": "_symbol",
              "offset": 0,
              "slot": "1",
              "type": "t_string_storage",
              "contract": "ERC721",
              "src": "@openzeppelin\\contracts\\token\\ERC721\\ERC721.sol:27"
            },
            {
              "label": "_owners",
              "offset": 0,
              "slot": "2",
              "type": "t_mapping(t_uint256,t_address)",
              "contract": "ERC721",
              "src": "@openzeppelin\\contracts\\token\\ERC721\\ERC721.sol:30"
            },
            {
              "label": "_balances",
              "offset": 0,
              "slot": "3",
              "type": "t_mapping(t_address,t_uint256)",
              "contract": "ERC721",
              "src": "@openzeppelin\\contracts\\token\\ERC721\\ERC721.sol:33"
            },
            {
              "label": "_tokenApprovals",
              "offset": 0,
              "slot": "4",
              "type": "t_mapping(t_uint256,t_address)",
              "contract": "ERC721",
              "src": "@openzeppelin\\contracts\\token\\ERC721\\ERC721.sol:36"
            },
            {
              "label": "_operatorApprovals",
              "offset": 0,
              "slot": "5",
              "type": "t_mapping(t_address,t_mapping(t_address,t_bool))",
              "contract": "ERC721",
              "src": "@openzeppelin\\contracts\\token\\ERC721\\ERC721.sol:39"
            },
            {
              "label": "_tokenURIs",
              "offset": 0,
              "slot": "6",
              "type": "t_mapping(t_uint256,t_string_storage)",
              "contract": "ERC721URIStorage",
              "src": "@openzeppelin\\contracts\\token\\ERC721\\extensions\\ERC721URIStorage.sol:15"
            },
            {
              "label": "collectionName",
              "offset": 0,
              "slot": "7",
              "type": "t_string_storage",
              "contract": "HouseBusiness",
              "src": "contracts\\HouseBusiness.sol:14"
            },
            {
              "label": "collectionNameSymbol",
              "offset": 0,
              "slot": "8",
              "type": "t_string_storage",
              "contract": "HouseBusiness",
              "src": "contracts\\HouseBusiness.sol:16"
            },
            {
              "label": "houseCounter",
              "offset": 0,
              "slot": "9",
              "type": "t_uint256",
              "contract": "HouseBusiness",
              "src": "contracts\\HouseBusiness.sol:18"
            },
            {
              "label": "soldedCounter",
              "offset": 0,
              "slot": "10",
              "type": "t_uint256",
              "contract": "HouseBusiness",
              "src": "contracts\\HouseBusiness.sol:21"
            },
            {
              "label": "hTypeCounter",
              "offset": 0,
              "slot": "11",
              "type": "t_uint256",
              "contract": "HouseBusiness",
              "src": "contracts\\HouseBusiness.sol:23"
            },
            {
              "label": "_token",
              "offset": 0,
              "slot": "12",
              "type": "t_contract(IERC20)77",
              "contract": "HouseBusiness",
              "src": "contracts\\HouseBusiness.sol:25"
            },
            {
              "label": "minPrice",
              "offset": 0,
              "slot": "13",
              "type": "t_uint256",
              "contract": "HouseBusiness",
              "src": "contracts\\HouseBusiness.sol:27"
            },
            {
              "label": "maxPrice",
              "offset": 0,
              "slot": "14",
              "type": "t_uint256",
              "contract": "HouseBusiness",
              "src": "contracts\\HouseBusiness.sol:29"
            },
            {
              "label": "royaltyCreator",
              "offset": 0,
              "slot": "15",
              "type": "t_uint256",
              "contract": "HouseBusiness",
              "src": "contracts\\HouseBusiness.sol:31"
            },
            {
              "label": "royaltyMarket",
              "offset": 0,
              "slot": "16",
              "type": "t_uint256",
              "contract": "HouseBusiness",
              "src": "contracts\\HouseBusiness.sol:32"
            },
            {
              "label": "cContract",
              "offset": 0,
              "slot": "17",
              "type": "t_contract(IMainCleanContract)5387",
              "contract": "HouseBusiness",
              "src": "contracts\\HouseBusiness.sol:34"
            },
            {
              "label": "historyTypes",
              "offset": 0,
              "slot": "18",
              "type": "t_array(t_struct(HistoryType)2835_storage)dyn_storage",
              "contract": "HouseBusiness",
              "src": "contracts\\HouseBusiness.sol:75"
            },
            {
              "label": "houseHistories",
              "offset": 0,
              "slot": "19",
              "type": "t_mapping(t_uint256,t_array(t_struct(History)2816_storage)dyn_storage)",
              "contract": "HouseBusiness",
              "src": "contracts\\HouseBusiness.sol:77"
            },
            {
              "label": "allMembers",
              "offset": 0,
              "slot": "20",
              "type": "t_mapping(t_address,t_bool)",
              "contract": "HouseBusiness",
              "src": "contracts\\HouseBusiness.sol:79"
            },
            {
              "label": "allHouses",
              "offset": 0,
              "slot": "21",
              "type": "t_mapping(t_uint256,t_struct(House)2799_storage)",
              "contract": "HouseBusiness",
              "src": "contracts\\HouseBusiness.sol:81"
            },
            {
              "label": "allowedList",
              "offset": 0,
              "slot": "22",
              "type": "t_mapping(t_uint256,t_mapping(t_address,t_bool))",
              "contract": "HouseBusiness",
              "src": "contracts\\HouseBusiness.sol:83"
            },
            {
              "label": "stakingContractAddress",
              "offset": 0,
              "slot": "23",
              "type": "t_address",
              "contract": "HouseBusiness",
              "src": "contracts\\HouseBusiness.sol:86"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            },
            "t_array(t_struct(History)2816_storage)dyn_storage": {
              "label": "struct HouseBusiness.History[]",
              "numberOfBytes": "32"
            },
            "t_array(t_struct(HistoryType)2835_storage)dyn_storage": {
              "label": "struct HouseBusiness.HistoryType[]",
              "numberOfBytes": "32"
            },
            "t_bool": {
              "label": "bool",
              "numberOfBytes": "1"
            },
            "t_contract(IERC20)77": {
              "label": "contract IERC20",
              "numberOfBytes": "20"
            },
            "t_contract(IMainCleanContract)5387": {
              "label": "contract IMainCleanContract",
              "numberOfBytes": "20"
            },
            "t_mapping(t_address,t_bool)": {
              "label": "mapping(address => bool)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_mapping(t_address,t_bool))": {
              "label": "mapping(address => mapping(address => bool))",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_uint256)": {
              "label": "mapping(address => uint256)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_uint256,t_address)": {
              "label": "mapping(uint256 => address)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_uint256,t_array(t_struct(History)2816_storage)dyn_storage)": {
              "label": "mapping(uint256 => struct HouseBusiness.History[])",
              "numberOfBytes": "32"
            },
            "t_mapping(t_uint256,t_mapping(t_address,t_bool))": {
              "label": "mapping(uint256 => mapping(address => bool))",
              "numberOfBytes": "32"
            },
            "t_mapping(t_uint256,t_string_storage)": {
              "label": "mapping(uint256 => string)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_uint256,t_struct(House)2799_storage)": {
              "label": "mapping(uint256 => struct HouseBusiness.House)",
              "numberOfBytes": "32"
            },
            "t_string_storage": {
              "label": "string",
              "numberOfBytes": "32"
            },
            "t_struct(History)2816_storage": {
              "label": "struct HouseBusiness.History",
              "members": [
                {
                  "label": "hID",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "0"
                },
                {
                  "label": "contractId",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "1"
                },
                {
                  "label": "houseImg",
                  "type": "t_string_storage",
                  "offset": 0,
                  "slot": "2"
                },
                {
                  "label": "houseBrand",
                  "type": "t_string_storage",
                  "offset": 0,
                  "slot": "3"
                },
                {
                  "label": "desc",
                  "type": "t_string_storage",
                  "offset": 0,
                  "slot": "4"
                },
                {
                  "label": "history",
                  "type": "t_string_storage",
                  "offset": 0,
                  "slot": "5"
                },
                {
                  "label": "brandType",
                  "type": "t_string_storage",
                  "offset": 0,
                  "slot": "6"
                },
                {
                  "label": "yearField",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "7"
                }
              ],
              "numberOfBytes": "256"
            },
            "t_struct(HistoryType)2835_storage": {
              "label": "struct HouseBusiness.HistoryType",
              "members": [
                {
                  "label": "hID",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "0"
                },
                {
                  "label": "hLabel",
                  "type": "t_string_storage",
                  "offset": 0,
                  "slot": "1"
                },
                {
                  "label": "connectContract",
                  "type": "t_bool",
                  "offset": 0,
                  "slot": "2"
                },
                {
                  "label": "imgNeed",
                  "type": "t_bool",
                  "offset": 1,
                  "slot": "2"
                },
                {
                  "label": "brandNeed",
                  "type": "t_bool",
                  "offset": 2,
                  "slot": "2"
                },
                {
                  "label": "descNeed",
                  "type": "t_bool",
                  "offset": 3,
                  "slot": "2"
                },
                {
                  "label": "brandTypeNeed",
                  "type": "t_bool",
                  "offset": 4,
                  "slot": "2"
                },
                {
                  "label": "yearNeed",
                  "type": "t_bool",
                  "offset": 5,
                  "slot": "2"
                },
                {
                  "label": "checkMark",
                  "type": "t_bool",
                  "offset": 6,
                  "slot": "2"
                }
              ],
              "numberOfBytes": "96"
            },
            "t_struct(House)2799_storage": {
              "label": "struct HouseBusiness.House",
              "members": [
                {
                  "label": "tokenId",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "0"
                },
                {
                  "label": "tokenName",
                  "type": "t_string_storage",
                  "offset": 0,
                  "slot": "1"
                },
                {
                  "label": "tokenURI",
                  "type": "t_string_storage",
                  "offset": 0,
                  "slot": "2"
                },
                {
                  "label": "tokenType",
                  "type": "t_string_storage",
                  "offset": 0,
                  "slot": "3"
                },
                {
                  "label": "currentOwner",
                  "type": "t_address",
                  "offset": 0,
                  "slot": "4"
                },
                {
                  "label": "previousOwner",
                  "type": "t_address",
                  "offset": 0,
                  "slot": "5"
                },
                {
                  "label": "buyer",
                  "type": "t_address",
                  "offset": 0,
                  "slot": "6"
                },
                {
                  "label": "creator",
                  "type": "t_address",
                  "offset": 0,
                  "slot": "7"
                },
                {
                  "label": "price",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "8"
                },
                {
                  "label": "numberOfTransfers",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "9"
                },
                {
                  "label": "nftPayable",
                  "type": "t_bool",
                  "offset": 0,
                  "slot": "10"
                },
                {
                  "label": "staked",
                  "type": "t_bool",
                  "offset": 1,
                  "slot": "10"
                },
                {
                  "label": "soldStatus",
                  "type": "t_bool",
                  "offset": 2,
                  "slot": "10"
                }
              ],
              "numberOfBytes": "352"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            }
          },
          "layoutVersion": "1.1",
          "flat": true
        }
      },
      "HouseStaking": {
        "src": "contracts\\Staking.sol:8",
        "version": {
          "withMetadata": "b1cabf603358ddf2982335716f56c7f2ca0af69d18bcb2c2739c508aa1df1088",
          "withoutMetadata": "5e0e94dd2f16bbdc4e25750961cf5b6c8a1dee0c312873152f1aa659f790b910",
          "linkedWithoutMetadata": "5e0e94dd2f16bbdc4e25750961cf5b6c8a1dee0c312873152f1aa659f790b910"
        },
        "inherit": [],
        "libraries": [],
        "methods": [
          "(address,address)",
          "calcDiv(uint256,uint256)",
          "setAPYConfig(uint256,uint256)",
          "getAllAPYTypes()",
          "stake(uint256,uint256)",
          "unstake(uint256)",
          "stakingFinished(uint256)",
          "totalRewards(address)",
          "claimRewards(address)",
          "getAllMyStakedNFTs()",
          "getAllAPYs()",
          "getPenalty()",
          "setPenalty(uint256)",
          "updateAPYConfig(uint256,uint256)"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "HouseStaking",
            "src": "contracts\\Staking.sol:35"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "stakedCounter",
              "offset": 0,
              "slot": "0",
              "type": "t_uint256",
              "contract": "HouseStaking",
              "src": "contracts\\Staking.sol:10"
            },
            {
              "label": "penalty",
              "offset": 0,
              "slot": "1",
              "type": "t_uint256",
              "contract": "HouseStaking",
              "src": "contracts\\Staking.sol:12"
            },
            {
              "label": "APYtypes",
              "offset": 0,
              "slot": "2",
              "type": "t_array(t_uint256)dyn_storage",
              "contract": "HouseStaking",
              "src": "contracts\\Staking.sol:14"
            },
            {
              "label": "APYConfig",
              "offset": 0,
              "slot": "3",
              "type": "t_mapping(t_uint256,t_uint256)",
              "contract": "HouseStaking",
              "src": "contracts\\Staking.sol:17"
            },
            {
              "label": "stakedNfts",
              "offset": 0,
              "slot": "4",
              "type": "t_mapping(t_address,t_array(t_struct(StakedNft)4515_storage)dyn_storage)",
              "contract": "HouseStaking",
              "src": "contracts\\Staking.sol:18"
            },
            {
              "label": "tokenAddress",
              "offset": 0,
              "slot": "5",
              "type": "t_address",
              "contract": "HouseStaking",
              "src": "contracts\\Staking.sol:20"
            },
            {
              "label": "houseNFTAddress",
              "offset": 0,
              "slot": "6",
              "type": "t_address",
              "contract": "HouseStaking",
              "src": "contracts\\Staking.sol:21"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            },
            "t_array(t_struct(StakedNft)4515_storage)dyn_storage": {
              "label": "struct HouseStaking.StakedNft[]",
              "numberOfBytes": "32"
            },
            "t_array(t_uint256)dyn_storage": {
              "label": "uint256[]",
              "numberOfBytes": "32"
            },
            "t_bool": {
              "label": "bool",
              "numberOfBytes": "1"
            },
            "t_mapping(t_address,t_array(t_struct(StakedNft)4515_storage)dyn_storage)": {
              "label": "mapping(address => struct HouseStaking.StakedNft[])",
              "numberOfBytes": "32"
            },
            "t_mapping(t_uint256,t_uint256)": {
              "label": "mapping(uint256 => uint256)",
              "numberOfBytes": "32"
            },
            "t_struct(StakedNft)4515_storage": {
              "label": "struct HouseStaking.StakedNft",
              "members": [
                {
                  "label": "owner",
                  "type": "t_address",
                  "offset": 0,
                  "slot": "0"
                },
                {
                  "label": "tokenId",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "1"
                },
                {
                  "label": "startedDate",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "2"
                },
                {
                  "label": "endDate",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "3"
                },
                {
                  "label": "claimDate",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "4"
                },
                {
                  "label": "stakingType",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "5"
                },
                {
                  "label": "perSecRewards",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "6"
                },
                {
                  "label": "stakingStatus",
                  "type": "t_bool",
                  "offset": 0,
                  "slot": "7"
                }
              ],
              "numberOfBytes": "256"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            }
          },
          "layoutVersion": "1.1",
          "flat": true
        }
      },
      "IMainCleanContract": {
        "src": "contracts\\interfaces\\IContract.sol:6",
        "inherit": [],
        "libraries": [],
        "methods": [
          "getContractById(uint256)",
          "transferContractOwnership(uint256,address,address)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "IHouseBusiness": {
        "src": "contracts\\interfaces\\IHouseBusiness.sol:5",
        "inherit": [],
        "libraries": [],
        "methods": [
          "collectionName()",
          "collectionNameSymbol()",
          "houseCounter()",
          "stakedCounter()",
          "soldedCounter()",
          "hTypeCounter()",
          "minPrice()",
          "maxPrice()",
          "penalty()",
          "royalty()",
          "historyTypes(uint256)",
          "houseHistories(uint256)",
          "allMembers(address)",
          "allHouses(uint256)",
          "stakedNfts(address)",
          "setMinMaxHousePrice(uint256,uint256)",
          "setConfigToken(address)",
          "isMember()",
          "addMember(address)",
          "removeMember(address)",
          "tokenURI(uint256)",
          "setPayable(uint256,address,bool)",
          "mintHouse(string,string,string,string,uint256)",
          "addAllowList(uint256,address)",
          "removeAllowList(uint256,address)",
          "checkAllowedList(uint256,address)",
          "addHistory(uint256,uint256,string,string,string,string,string,uint256)",
          "getHistory(uint256)",
          "editHistory(uint256,uint256,string,string,string,string,string,uint256)",
          "getHistoryType()",
          "addOrEditHType(uint256,string,bool,bool,bool,bool,bool,bool,bool)",
          "removeHistoryType(uint256)",
          "getMinMaxNFT()",
          "getTokenOwner(uint256)",
          "buyHouseNft(uint256)",
          "sendToken(address,uint256)",
          "changeTokenPrice(uint256,uint256)",
          "getAllHouses()",
          "getAllPayableHouses()",
          "getAllMyHouses()",
          "withdrawToken(uint256)",
          "withdrawETH(uint256)",
          "setAPYConfig(uint256,uint256)",
          "getAllAPYTypes()",
          "stake(uint256,uint256)",
          "unstake(uint256)",
          "stakingFinished(uint256)",
          "totalRewards(address)",
          "claimRewards(address)",
          "getAllMyStakedNFTs()",
          "getTotalInfo()",
          "getAllAPYs()",
          "getPenalty()",
          "setPenalty(uint256)",
          "getRoyalty()",
          "setRoyalty(uint256)",
          "ownerOf(uint256)",
          "getTokenPrice(uint256)",
          "setHouseStakedStatus(uint256,bool)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "IStaking": {
        "src": "contracts\\interfaces\\IStaking.sol:5",
        "inherit": [],
        "libraries": [],
        "methods": [
          "stakedCounter()"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      }
    },
    {
      "IERC20": {
        "src": "@openzeppelin\\contracts\\token\\ERC20\\IERC20.sol:9",
        "inherit": [],
        "libraries": [],
        "methods": [
          "totalSupply()",
          "balanceOf(address)",
          "transfer(address,uint256)",
          "allowance(address,address)",
          "approve(address,uint256)",
          "transferFrom(address,address,uint256)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "ERC721": {
        "src": "@openzeppelin\\contracts\\token\\ERC721\\ERC721.sol:19",
        "version": {
          "withMetadata": "9ebb68faadef327bc83697ff51da508f0484dd0c5450e42d0a1ac6a2ec46a24e",
          "withoutMetadata": "ed4023ae10fc078ca9d410a0661cf3fd9603fe9627b15a17e4c2487e2a48d65d",
          "linkedWithoutMetadata": "ed4023ae10fc078ca9d410a0661cf3fd9603fe9627b15a17e4c2487e2a48d65d"
        },
        "inherit": [
          "IERC721Metadata",
          "IERC721",
          "ERC165",
          "IERC165",
          "Context"
        ],
        "libraries": [
          "Address",
          "Strings"
        ],
        "methods": [
          "(string,string)",
          "supportsInterface(bytes4)",
          "balanceOf(address)",
          "ownerOf(uint256)",
          "name()",
          "symbol()",
          "tokenURI(uint256)",
          "approve(address,uint256)",
          "getApproved(uint256)",
          "setApprovalForAll(address,bool)",
          "isApprovedForAll(address,address)",
          "transferFrom(address,address,uint256)",
          "safeTransferFrom(address,address,uint256)",
          "safeTransferFrom(address,address,uint256,bytes)"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "ERC721",
            "src": "@openzeppelin\\contracts\\token\\ERC721\\ERC721.sol:44"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "_name",
              "offset": 0,
              "slot": "0",
              "type": "t_string_storage",
              "contract": "ERC721",
              "src": "@openzeppelin\\contracts\\token\\ERC721\\ERC721.sol:24"
            },
            {
              "label": "_symbol",
              "offset": 0,
              "slot": "1",
              "type": "t_string_storage",
              "contract": "ERC721",
              "src": "@openzeppelin\\contracts\\token\\ERC721\\ERC721.sol:27"
            },
            {
              "label": "_owners",
              "offset": 0,
              "slot": "2",
              "type": "t_mapping(t_uint256,t_address)",
              "contract": "ERC721",
              "src": "@openzeppelin\\contracts\\token\\ERC721\\ERC721.sol:30"
            },
            {
              "label": "_balances",
              "offset": 0,
              "slot": "3",
              "type": "t_mapping(t_address,t_uint256)",
              "contract": "ERC721",
              "src": "@openzeppelin\\contracts\\token\\ERC721\\ERC721.sol:33"
            },
            {
              "label": "_tokenApprovals",
              "offset": 0,
              "slot": "4",
              "type": "t_mapping(t_uint256,t_address)",
              "contract": "ERC721",
              "src": "@openzeppelin\\contracts\\token\\ERC721\\ERC721.sol:36"
            },
            {
              "label": "_operatorApprovals",
              "offset": 0,
              "slot": "5",
              "type": "t_mapping(t_address,t_mapping(t_address,t_bool))",
              "contract": "ERC721",
              "src": "@openzeppelin\\contracts\\token\\ERC721\\ERC721.sol:39"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            },
            "t_bool": {
              "label": "bool",
              "numberOfBytes": "1"
            },
            "t_mapping(t_address,t_bool)": {
              "label": "mapping(address => bool)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_mapping(t_address,t_bool))": {
              "label": "mapping(address => mapping(address => bool))",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_uint256)": {
              "label": "mapping(address => uint256)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_uint256,t_address)": {
              "label": "mapping(uint256 => address)",
              "numberOfBytes": "32"
            },
            "t_string_storage": {
              "label": "string",
              "numberOfBytes": "32"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            }
          },
          "layoutVersion": "1.1",
          "flat": true
        }
      },
      "IERC721": {
        "src": "@openzeppelin\\contracts\\token\\ERC721\\IERC721.sol:11",
        "inherit": [
          "IERC165"
        ],
        "libraries": [],
        "methods": [
          "balanceOf(address)",
          "ownerOf(uint256)",
          "safeTransferFrom(address,address,uint256,bytes)",
          "safeTransferFrom(address,address,uint256)",
          "transferFrom(address,address,uint256)",
          "approve(address,uint256)",
          "setApprovalForAll(address,bool)",
          "getApproved(uint256)",
          "isApprovedForAll(address,address)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "IERC721Receiver": {
        "src": "@openzeppelin\\contracts\\token\\ERC721\\IERC721Receiver.sol:11",
        "inherit": [],
        "libraries": [],
        "methods": [
          "onERC721Received(address,address,uint256,bytes)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "ERC721URIStorage": {
        "src": "@openzeppelin\\contracts\\token\\ERC721\\extensions\\ERC721URIStorage.sol:11",
        "inherit": [
          "ERC721",
          "IERC721Metadata",
          "IERC721",
          "ERC165",
          "IERC165",
          "Context"
        ],
        "libraries": [
          "Strings"
        ],
        "methods": [
          "tokenURI(uint256)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [
            {
              "label": "_name",
              "offset": 0,
              "slot": "0",
              "type": "t_string_storage",
              "contract": "ERC721",
              "src": "@openzeppelin\\contracts\\token\\ERC721\\ERC721.sol:24"
            },
            {
              "label": "_symbol",
              "offset": 0,
              "slot": "1",
              "type": "t_string_storage",
              "contract": "ERC721",
              "src": "@openzeppelin\\contracts\\token\\ERC721\\ERC721.sol:27"
            },
            {
              "label": "_owners",
              "offset": 0,
              "slot": "2",
              "type": "t_mapping(t_uint256,t_address)",
              "contract": "ERC721",
              "src": "@openzeppelin\\contracts\\token\\ERC721\\ERC721.sol:30"
            },
            {
              "label": "_balances",
              "offset": 0,
              "slot": "3",
              "type": "t_mapping(t_address,t_uint256)",
              "contract": "ERC721",
              "src": "@openzeppelin\\contracts\\token\\ERC721\\ERC721.sol:33"
            },
            {
              "label": "_tokenApprovals",
              "offset": 0,
              "slot": "4",
              "type": "t_mapping(t_uint256,t_address)",
              "contract": "ERC721",
              "src": "@openzeppelin\\contracts\\token\\ERC721\\ERC721.sol:36"
            },
            {
              "label": "_operatorApprovals",
              "offset": 0,
              "slot": "5",
              "type": "t_mapping(t_address,t_mapping(t_address,t_bool))",
              "contract": "ERC721",
              "src": "@openzeppelin\\contracts\\token\\ERC721\\ERC721.sol:39"
            },
            {
              "label": "_tokenURIs",
              "offset": 0,
              "slot": "6",
              "type": "t_mapping(t_uint256,t_string_storage)",
              "contract": "ERC721URIStorage",
              "src": "@openzeppelin\\contracts\\token\\ERC721\\extensions\\ERC721URIStorage.sol:15"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            },
            "t_bool": {
              "label": "bool",
              "numberOfBytes": "1"
            },
            "t_mapping(t_address,t_bool)": {
              "label": "mapping(address => bool)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_mapping(t_address,t_bool))": {
              "label": "mapping(address => mapping(address => bool))",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_uint256)": {
              "label": "mapping(address => uint256)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_uint256,t_address)": {
              "label": "mapping(uint256 => address)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_uint256,t_string_storage)": {
              "label": "mapping(uint256 => string)",
              "numberOfBytes": "32"
            },
            "t_string_storage": {
              "label": "string",
              "numberOfBytes": "32"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            }
          },
          "layoutVersion": "1.1",
          "flat": true
        }
      },
      "IERC721Metadata": {
        "src": "@openzeppelin\\contracts\\token\\ERC721\\extensions\\IERC721Metadata.sol:12",
        "inherit": [
          "IERC721",
          "IERC165"
        ],
        "libraries": [],
        "methods": [
          "name()",
          "symbol()",
          "tokenURI(uint256)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "Address": {
        "src": "@openzeppelin\\contracts\\utils\\Address.sol:9",
        "version": {
          "withMetadata": "469e62629df74b2ae5b04765782886d27065c542dd4360d0c359e2ee52715c29",
          "withoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db",
          "linkedWithoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db"
        },
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [
          {
            "kind": "delegatecall",
            "src": "@openzeppelin\\contracts\\utils\\Address.sol:185"
          }
        ],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "Context": {
        "src": "@openzeppelin\\contracts\\utils\\Context.sol:16",
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "Strings": {
        "src": "@openzeppelin\\contracts\\utils\\Strings.sol:11",
        "version": {
          "withMetadata": "6be811318460a6651038bb5171cc0bf109c3d8e875d32b6e6bac849bd51da11e",
          "withoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db",
          "linkedWithoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db"
        },
        "inherit": [],
        "libraries": [
          "Math"
        ],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "ERC165": {
        "src": "@openzeppelin\\contracts\\utils\\introspection\\ERC165.sol:22",
        "inherit": [
          "IERC165"
        ],
        "libraries": [],
        "methods": [
          "supportsInterface(bytes4)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "IERC165": {
        "src": "@openzeppelin\\contracts\\utils\\introspection\\IERC165.sol:15",
        "inherit": [],
        "libraries": [],
        "methods": [
          "supportsInterface(bytes4)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "Math": {
        "src": "@openzeppelin\\contracts\\utils\\math\\Math.sol:9",
        "version": {
          "withMetadata": "ced272d222c66646c1870669cdc514a1ba479b3f9b42ba7792c596dbf0a1a986",
          "withoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db",
          "linkedWithoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db"
        },
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "HouseBusiness": {
        "src": "contracts\\HouseBusiness.sol:12",
        "version": {
          "withMetadata": "11cab9aa605d2203841c8dccfbef68b9d0c3478194246acc130ed01097ddfc72",
          "withoutMetadata": "ee1b4abe57845ea235cc56b37fc48745dcbf49953e826ee224ff9a7500048264",
          "linkedWithoutMetadata": "ee1b4abe57845ea235cc56b37fc48745dcbf49953e826ee224ff9a7500048264"
        },
        "inherit": [
          "ERC721URIStorage",
          "ERC721",
          "IERC721Metadata",
          "IERC721",
          "ERC165",
          "IERC165",
          "Context"
        ],
        "libraries": [],
        "methods": [
          "(address)",
          "setMinMaxHousePrice(uint256,uint256)",
          "setConfigToken(address)",
          "isMember()",
          "addMember(address)",
          "removeMember(address)",
          "tokenURI(uint256)",
          "setCContractAddress(address)",
          "setStakingContractAddress(address)",
          "setPayable(uint256,address,bool)",
          "mintHouse(string,string,string,string)",
          "addAllowList(uint256,address)",
          "removeAllowList(uint256,address)",
          "checkAllowedList(uint256,address)",
          "addHistory(uint256,uint256,uint256,string,string,string,string,string,uint256)",
          "getHistory(uint256)",
          "editHistory(uint256,uint256,string,string,string,string,string,uint256)",
          "getHistoryType()",
          "addOrEditHType(uint256,string,bool,bool,bool,bool,bool,bool,bool)",
          "removeHistoryType(uint256)",
          "getMinMaxNFT()",
          "getTokenOwner(uint256)",
          "disconnectContract(uint256,uint256,uint256)",
          "buyHouseNft(uint256)",
          "changeHousePrice(uint256,uint256)",
          "sendToken(address,uint256)",
          "changeTokenPrice(uint256,uint256)",
          "getAllHouses()",
          "getAllPayableHouses()",
          "getAllMyHouses()",
          "withdrawToken(uint256)",
          "withdrawETH(uint256)",
          "getTotalInfo()",
          "getTokenPrice(uint256)",
          "setHouseStakedStatus(uint256,bool)",
          "getRoyaltyCreator()",
          "setRoyaltyCreator(uint256)",
          "getRoyaltyMarket()",
          "setRoyaltyMarket(uint256)"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "HouseBusiness",
            "src": "contracts\\HouseBusiness.sol:94"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "_name",
              "offset": 0,
              "slot": "0",
              "type": "t_string_storage",
              "contract": "ERC721",
              "src": "@openzeppelin\\contracts\\token\\ERC721\\ERC721.sol:24"
            },
            {
              "label": "_symbol",
              "offset": 0,
              "slot": "1",
              "type": "t_string_storage",
              "contract": "ERC721",
              "src": "@openzeppelin\\contracts\\token\\ERC721\\ERC721.sol:27"
            },
            {
              "label": "_owners",
              "offset": 0,
              "slot": "2",
              "type": "t_mapping(t_uint256,t_address)",
              "contract": "ERC721",
              "src": "@openzeppelin\\contracts\\token\\ERC721\\ERC721.sol:30"
            },
            {
              "label": "_balances",
              "offset": 0,
              "slot": "3",
              "type": "t_mapping(t_address,t_uint256)",
              "contract": "ERC721",
              "src": "@openzeppelin\\contracts\\token\\ERC721\\ERC721.sol:33"
            },
            {
              "label": "_tokenApprovals",
              "offset": 0,
              "slot": "4",
              "type": "t_mapping(t_uint256,t_address)",
              "contract": "ERC721",
              "src": "@openzeppelin\\contracts\\token\\ERC721\\ERC721.sol:36"
            },
            {
              "label": "_operatorApprovals",
              "offset": 0,
              "slot": "5",
              "type": "t_mapping(t_address,t_mapping(t_address,t_bool))",
              "contract": "ERC721",
              "src": "@openzeppelin\\contracts\\token\\ERC721\\ERC721.sol:39"
            },
            {
              "label": "_tokenURIs",
              "offset": 0,
              "slot": "6",
              "type": "t_mapping(t_uint256,t_string_storage)",
              "contract": "ERC721URIStorage",
              "src": "@openzeppelin\\contracts\\token\\ERC721\\extensions\\ERC721URIStorage.sol:15"
            },
            {
              "label": "collectionName",
              "offset": 0,
              "slot": "7",
              "type": "t_string_storage",
              "contract": "HouseBusiness",
              "src": "contracts\\HouseBusiness.sol:14"
            },
            {
              "label": "collectionNameSymbol",
              "offset": 0,
              "slot": "8",
              "type": "t_string_storage",
              "contract": "HouseBusiness",
              "src": "contracts\\HouseBusiness.sol:16"
            },
            {
              "label": "houseCounter",
              "offset": 0,
              "slot": "9",
              "type": "t_uint256",
              "contract": "HouseBusiness",
              "src": "contracts\\HouseBusiness.sol:18"
            },
            {
              "label": "soldedCounter",
              "offset": 0,
              "slot": "10",
              "type": "t_uint256",
              "contract": "HouseBusiness",
              "src": "contracts\\HouseBusiness.sol:21"
            },
            {
              "label": "hTypeCounter",
              "offset": 0,
              "slot": "11",
              "type": "t_uint256",
              "contract": "HouseBusiness",
              "src": "contracts\\HouseBusiness.sol:23"
            },
            {
              "label": "_token",
              "offset": 0,
              "slot": "12",
              "type": "t_contract(IERC20)77",
              "contract": "HouseBusiness",
              "src": "contracts\\HouseBusiness.sol:25"
            },
            {
              "label": "minPrice",
              "offset": 0,
              "slot": "13",
              "type": "t_uint256",
              "contract": "HouseBusiness",
              "src": "contracts\\HouseBusiness.sol:27"
            },
            {
              "label": "maxPrice",
              "offset": 0,
              "slot": "14",
              "type": "t_uint256",
              "contract": "HouseBusiness",
              "src": "contracts\\HouseBusiness.sol:29"
            },
            {
              "label": "royaltyCreator",
              "offset": 0,
              "slot": "15",
              "type": "t_uint256",
              "contract": "HouseBusiness",
              "src": "contracts\\HouseBusiness.sol:31"
            },
            {
              "label": "royaltyMarket",
              "offset": 0,
              "slot": "16",
              "type": "t_uint256",
              "contract": "HouseBusiness",
              "src": "contracts\\HouseBusiness.sol:32"
            },
            {
              "label": "cContract",
              "offset": 0,
              "slot": "17",
              "type": "t_contract(IMainCleanContract)5387",
              "contract": "HouseBusiness",
              "src": "contracts\\HouseBusiness.sol:34"
            },
            {
              "label": "historyTypes",
              "offset": 0,
              "slot": "18",
              "type": "t_array(t_struct(HistoryType)2835_storage)dyn_storage",
              "contract": "HouseBusiness",
              "src": "contracts\\HouseBusiness.sol:75"
            },
            {
              "label": "houseHistories",
              "offset": 0,
              "slot": "19",
              "type": "t_mapping(t_uint256,t_array(t_struct(History)2816_storage)dyn_storage)",
              "contract": "HouseBusiness",
              "src": "contracts\\HouseBusiness.sol:77"
            },
            {
              "label": "allMembers",
              "offset": 0,
              "slot": "20",
              "type": "t_mapping(t_address,t_bool)",
              "contract": "HouseBusiness",
              "src": "contracts\\HouseBusiness.sol:79"
            },
            {
              "label": "allHouses",
              "offset": 0,
              "slot": "21",
              "type": "t_mapping(t_uint256,t_struct(House)2799_storage)",
              "contract": "HouseBusiness",
              "src": "contracts\\HouseBusiness.sol:81"
            },
            {
              "label": "allowedList",
              "offset": 0,
              "slot": "22",
              "type": "t_mapping(t_uint256,t_mapping(t_address,t_bool))",
              "contract": "HouseBusiness",
              "src": "contracts\\HouseBusiness.sol:83"
            },
            {
              "label": "stakingContractAddress",
              "offset": 0,
              "slot": "23",
              "type": "t_address",
              "contract": "HouseBusiness",
              "src": "contracts\\HouseBusiness.sol:86"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            },
            "t_array(t_struct(History)2816_storage)dyn_storage": {
              "label": "struct HouseBusiness.History[]",
              "numberOfBytes": "32"
            },
            "t_array(t_struct(HistoryType)2835_storage)dyn_storage": {
              "label": "struct HouseBusiness.HistoryType[]",
              "numberOfBytes": "32"
            },
            "t_bool": {
              "label": "bool",
              "numberOfBytes": "1"
            },
            "t_contract(IERC20)77": {
              "label": "contract IERC20",
              "numberOfBytes": "20"
            },
            "t_contract(IMainCleanContract)5387": {
              "label": "contract IMainCleanContract",
              "numberOfBytes": "20"
            },
            "t_mapping(t_address,t_bool)": {
              "label": "mapping(address => bool)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_mapping(t_address,t_bool))": {
              "label": "mapping(address => mapping(address => bool))",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_uint256)": {
              "label": "mapping(address => uint256)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_uint256,t_address)": {
              "label": "mapping(uint256 => address)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_uint256,t_array(t_struct(History)2816_storage)dyn_storage)": {
              "label": "mapping(uint256 => struct HouseBusiness.History[])",
              "numberOfBytes": "32"
            },
            "t_mapping(t_uint256,t_mapping(t_address,t_bool))": {
              "label": "mapping(uint256 => mapping(address => bool))",
              "numberOfBytes": "32"
            },
            "t_mapping(t_uint256,t_string_storage)": {
              "label": "mapping(uint256 => string)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_uint256,t_struct(House)2799_storage)": {
              "label": "mapping(uint256 => struct HouseBusiness.House)",
              "numberOfBytes": "32"
            },
            "t_string_storage": {
              "label": "string",
              "numberOfBytes": "32"
            },
            "t_struct(History)2816_storage": {
              "label": "struct HouseBusiness.History",
              "members": [
                {
                  "label": "hID",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "0"
                },
                {
                  "label": "contractId",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "1"
                },
                {
                  "label": "houseImg",
                  "type": "t_string_storage",
                  "offset": 0,
                  "slot": "2"
                },
                {
                  "label": "houseBrand",
                  "type": "t_string_storage",
                  "offset": 0,
                  "slot": "3"
                },
                {
                  "label": "desc",
                  "type": "t_string_storage",
                  "offset": 0,
                  "slot": "4"
                },
                {
                  "label": "history",
                  "type": "t_string_storage",
                  "offset": 0,
                  "slot": "5"
                },
                {
                  "label": "brandType",
                  "type": "t_string_storage",
                  "offset": 0,
                  "slot": "6"
                },
                {
                  "label": "yearField",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "7"
                }
              ],
              "numberOfBytes": "256"
            },
            "t_struct(HistoryType)2835_storage": {
              "label": "struct HouseBusiness.HistoryType",
              "members": [
                {
                  "label": "hID",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "0"
                },
                {
                  "label": "hLabel",
                  "type": "t_string_storage",
                  "offset": 0,
                  "slot": "1"
                },
                {
                  "label": "connectContract",
                  "type": "t_bool",
                  "offset": 0,
                  "slot": "2"
                },
                {
                  "label": "imgNeed",
                  "type": "t_bool",
                  "offset": 1,
                  "slot": "2"
                },
                {
                  "label": "brandNeed",
                  "type": "t_bool",
                  "offset": 2,
                  "slot": "2"
                },
                {
                  "label": "descNeed",
                  "type": "t_bool",
                  "offset": 3,
                  "slot": "2"
                },
                {
                  "label": "brandTypeNeed",
                  "type": "t_bool",
                  "offset": 4,
                  "slot": "2"
                },
                {
                  "label": "yearNeed",
                  "type": "t_bool",
                  "offset": 5,
                  "slot": "2"
                },
                {
                  "label": "checkMark",
                  "type": "t_bool",
                  "offset": 6,
                  "slot": "2"
                }
              ],
              "numberOfBytes": "96"
            },
            "t_struct(House)2799_storage": {
              "label": "struct HouseBusiness.House",
              "members": [
                {
                  "label": "tokenId",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "0"
                },
                {
                  "label": "tokenName",
                  "type": "t_string_storage",
                  "offset": 0,
                  "slot": "1"
                },
                {
                  "label": "tokenURI",
                  "type": "t_string_storage",
                  "offset": 0,
                  "slot": "2"
                },
                {
                  "label": "tokenType",
                  "type": "t_string_storage",
                  "offset": 0,
                  "slot": "3"
                },
                {
                  "label": "currentOwner",
                  "type": "t_address",
                  "offset": 0,
                  "slot": "4"
                },
                {
                  "label": "previousOwner",
                  "type": "t_address",
                  "offset": 0,
                  "slot": "5"
                },
                {
                  "label": "buyer",
                  "type": "t_address",
                  "offset": 0,
                  "slot": "6"
                },
                {
                  "label": "creator",
                  "type": "t_address",
                  "offset": 0,
                  "slot": "7"
                },
                {
                  "label": "price",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "8"
                },
                {
                  "label": "numberOfTransfers",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "9"
                },
                {
                  "label": "nftPayable",
                  "type": "t_bool",
                  "offset": 0,
                  "slot": "10"
                },
                {
                  "label": "staked",
                  "type": "t_bool",
                  "offset": 1,
                  "slot": "10"
                },
                {
                  "label": "soldStatus",
                  "type": "t_bool",
                  "offset": 2,
                  "slot": "10"
                }
              ],
              "numberOfBytes": "352"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            }
          },
          "layoutVersion": "1.1",
          "flat": true
        }
      },
      "HouseStaking": {
        "src": "contracts\\Staking.sol:6",
        "version": {
          "withMetadata": "9b976bfaf664ddfaf5e8da8ba755f35d3900607aea05769cbead9e088433cd51",
          "withoutMetadata": "5e0e94dd2f16bbdc4e25750961cf5b6c8a1dee0c312873152f1aa659f790b910",
          "linkedWithoutMetadata": "5e0e94dd2f16bbdc4e25750961cf5b6c8a1dee0c312873152f1aa659f790b910"
        },
        "inherit": [],
        "libraries": [],
        "methods": [
          "(address,address)",
          "calcDiv(uint256,uint256)",
          "setAPYConfig(uint256,uint256)",
          "getAllAPYTypes()",
          "stake(uint256,uint256)",
          "unstake(uint256)",
          "stakingFinished(uint256)",
          "totalRewards(address)",
          "claimRewards(address)",
          "getAllMyStakedNFTs()",
          "getAllAPYs()",
          "getPenalty()",
          "setPenalty(uint256)",
          "updateAPYConfig(uint256,uint256)"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "HouseStaking",
            "src": "contracts\\Staking.sol:33"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "stakedCounter",
              "offset": 0,
              "slot": "0",
              "type": "t_uint256",
              "contract": "HouseStaking",
              "src": "contracts\\Staking.sol:8"
            },
            {
              "label": "penalty",
              "offset": 0,
              "slot": "1",
              "type": "t_uint256",
              "contract": "HouseStaking",
              "src": "contracts\\Staking.sol:10"
            },
            {
              "label": "APYtypes",
              "offset": 0,
              "slot": "2",
              "type": "t_array(t_uint256)dyn_storage",
              "contract": "HouseStaking",
              "src": "contracts\\Staking.sol:12"
            },
            {
              "label": "APYConfig",
              "offset": 0,
              "slot": "3",
              "type": "t_mapping(t_uint256,t_uint256)",
              "contract": "HouseStaking",
              "src": "contracts\\Staking.sol:15"
            },
            {
              "label": "stakedNfts",
              "offset": 0,
              "slot": "4",
              "type": "t_mapping(t_address,t_array(t_struct(StakedNft)4515_storage)dyn_storage)",
              "contract": "HouseStaking",
              "src": "contracts\\Staking.sol:16"
            },
            {
              "label": "tokenAddress",
              "offset": 0,
              "slot": "5",
              "type": "t_address",
              "contract": "HouseStaking",
              "src": "contracts\\Staking.sol:18"
            },
            {
              "label": "houseNFTAddress",
              "offset": 0,
              "slot": "6",
              "type": "t_address",
              "contract": "HouseStaking",
              "src": "contracts\\Staking.sol:19"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            },
            "t_array(t_struct(StakedNft)4515_storage)dyn_storage": {
              "label": "struct HouseStaking.StakedNft[]",
              "numberOfBytes": "32"
            },
            "t_array(t_uint256)dyn_storage": {
              "label": "uint256[]",
              "numberOfBytes": "32"
            },
            "t_bool": {
              "label": "bool",
              "numberOfBytes": "1"
            },
            "t_mapping(t_address,t_array(t_struct(StakedNft)4515_storage)dyn_storage)": {
              "label": "mapping(address => struct HouseStaking.StakedNft[])",
              "numberOfBytes": "32"
            },
            "t_mapping(t_uint256,t_uint256)": {
              "label": "mapping(uint256 => uint256)",
              "numberOfBytes": "32"
            },
            "t_struct(StakedNft)4515_storage": {
              "label": "struct HouseStaking.StakedNft",
              "members": [
                {
                  "label": "owner",
                  "type": "t_address",
                  "offset": 0,
                  "slot": "0"
                },
                {
                  "label": "tokenId",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "1"
                },
                {
                  "label": "startedDate",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "2"
                },
                {
                  "label": "endDate",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "3"
                },
                {
                  "label": "claimDate",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "4"
                },
                {
                  "label": "stakingType",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "5"
                },
                {
                  "label": "perSecRewards",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "6"
                },
                {
                  "label": "stakingStatus",
                  "type": "t_bool",
                  "offset": 0,
                  "slot": "7"
                }
              ],
              "numberOfBytes": "256"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            }
          },
          "layoutVersion": "1.1",
          "flat": true
        }
      },
      "IMainCleanContract": {
        "src": "contracts\\interfaces\\IContract.sol:6",
        "inherit": [],
        "libraries": [],
        "methods": [
          "getContractById(uint256)",
          "transferContractOwnership(uint256,address,address)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "IHouseBusiness": {
        "src": "contracts\\interfaces\\IHouseBusiness.sol:5",
        "inherit": [],
        "libraries": [],
        "methods": [
          "collectionName()",
          "collectionNameSymbol()",
          "houseCounter()",
          "stakedCounter()",
          "soldedCounter()",
          "hTypeCounter()",
          "minPrice()",
          "maxPrice()",
          "penalty()",
          "royalty()",
          "historyTypes(uint256)",
          "houseHistories(uint256)",
          "allMembers(address)",
          "allHouses(uint256)",
          "stakedNfts(address)",
          "setMinMaxHousePrice(uint256,uint256)",
          "setConfigToken(address)",
          "isMember()",
          "addMember(address)",
          "removeMember(address)",
          "tokenURI(uint256)",
          "setPayable(uint256,address,bool)",
          "mintHouse(string,string,string,string,uint256)",
          "addAllowList(uint256,address)",
          "removeAllowList(uint256,address)",
          "checkAllowedList(uint256,address)",
          "addHistory(uint256,uint256,string,string,string,string,string,uint256)",
          "getHistory(uint256)",
          "editHistory(uint256,uint256,string,string,string,string,string,uint256)",
          "getHistoryType()",
          "addOrEditHType(uint256,string,bool,bool,bool,bool,bool,bool,bool)",
          "removeHistoryType(uint256)",
          "getMinMaxNFT()",
          "getTokenOwner(uint256)",
          "buyHouseNft(uint256)",
          "sendToken(address,uint256)",
          "changeTokenPrice(uint256,uint256)",
          "getAllHouses()",
          "getAllPayableHouses()",
          "getAllMyHouses()",
          "withdrawToken(uint256)",
          "withdrawETH(uint256)",
          "setAPYConfig(uint256,uint256)",
          "getAllAPYTypes()",
          "stake(uint256,uint256)",
          "unstake(uint256)",
          "stakingFinished(uint256)",
          "totalRewards(address)",
          "claimRewards(address)",
          "getAllMyStakedNFTs()",
          "getTotalInfo()",
          "getAllAPYs()",
          "getPenalty()",
          "setPenalty(uint256)",
          "getRoyalty()",
          "setRoyalty(uint256)",
          "ownerOf(uint256)",
          "getTokenPrice(uint256)",
          "setHouseStakedStatus(uint256,bool)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "IStaking": {
        "src": "contracts\\interfaces\\IStaking.sol:5",
        "inherit": [],
        "libraries": [],
        "methods": [
          "stakedCounter()"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      }
    },
    {
      "Context": {
        "src": "contracts\\TokenContract.sol:30",
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "HouseBusinessToken": {
        "src": "contracts\\TokenContract.sol:41",
        "version": {
          "withMetadata": "4f990ca86e03541351e9529165a17d7cb67b9b8bd35a9c3adb0efa9a825a1bb9",
          "withoutMetadata": "b737d4aaacef72af795cc4b42f15838a2ae9bc1e52c8c3e49d32ef8fdcd6230d",
          "linkedWithoutMetadata": "b737d4aaacef72af795cc4b42f15838a2ae9bc1e52c8c3e49d32ef8fdcd6230d"
        },
        "inherit": [
          "IERC20Metadata",
          "IERC20",
          "Context"
        ],
        "libraries": [],
        "methods": [
          "()",
          "name()",
          "symbol()",
          "decimals()",
          "totalSupply()",
          "balanceOf(address)",
          "transfer(address,uint256)",
          "allowance(address,address)",
          "approve(address,uint256)",
          "transferFrom(address,address,uint256)",
          "increaseAllowance(address,uint256)",
          "decreaseAllowance(address,uint256)",
          "_mint(address,uint256)"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "HouseBusinessToken",
            "src": "contracts\\TokenContract.sol:50"
          },
          {
            "kind": "state-variable-assignment",
            "name": "_name",
            "src": "contracts\\TokenContract.sol:45"
          },
          {
            "kind": "state-variable-assignment",
            "name": "_symbol",
            "src": "contracts\\TokenContract.sol:46"
          },
          {
            "kind": "state-variable-assignment",
            "name": "_decimals",
            "src": "contracts\\TokenContract.sol:47"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "_balances",
              "offset": 0,
              "slot": "0",
              "type": "t_mapping(t_address,t_uint256)",
              "contract": "HouseBusinessToken",
              "src": "contracts\\TokenContract.sol:42"
            },
            {
              "label": "_allowances",
              "offset": 0,
              "slot": "1",
              "type": "t_mapping(t_address,t_mapping(t_address,t_uint256))",
              "contract": "HouseBusinessToken",
              "src": "contracts\\TokenContract.sol:43"
            },
            {
              "label": "_totalSupply",
              "offset": 0,
              "slot": "2",
              "type": "t_uint256",
              "contract": "HouseBusinessToken",
              "src": "contracts\\TokenContract.sol:44"
            },
            {
              "label": "_name",
              "offset": 0,
              "slot": "3",
              "type": "t_string_storage",
              "contract": "HouseBusinessToken",
              "src": "contracts\\TokenContract.sol:45"
            },
            {
              "label": "_symbol",
              "offset": 0,
              "slot": "4",
              "type": "t_string_storage",
              "contract": "HouseBusinessToken",
              "src": "contracts\\TokenContract.sol:46"
            },
            {
              "label": "_decimals",
              "offset": 0,
              "slot": "5",
              "type": "t_uint8",
              "contract": "HouseBusinessToken",
              "src": "contracts\\TokenContract.sol:47"
            },
            {
              "label": "_owner",
              "offset": 1,
              "slot": "5",
              "type": "t_address",
              "contract": "HouseBusinessToken",
              "src": "contracts\\TokenContract.sol:48"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            },
            "t_mapping(t_address,t_mapping(t_address,t_uint256))": {
              "label": "mapping(address => mapping(address => uint256))",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_uint256)": {
              "label": "mapping(address => uint256)",
              "numberOfBytes": "32"
            },
            "t_string_storage": {
              "label": "string",
              "numberOfBytes": "32"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            },
            "t_uint8": {
              "label": "uint8",
              "numberOfBytes": "1"
            }
          },
          "layoutVersion": "1.1",
          "flat": true
        }
      },
      "IERC20": {
        "src": "contracts\\TokenContract.sol:5",
        "inherit": [],
        "libraries": [],
        "methods": [
          "totalSupply()",
          "balanceOf(address)",
          "transfer(address,uint256)",
          "allowance(address,address)",
          "approve(address,uint256)",
          "transferFrom(address,address,uint256)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "IERC20Metadata": {
        "src": "contracts\\TokenContract.sol:22",
        "inherit": [
          "IERC20"
        ],
        "libraries": [],
        "methods": [
          "name()",
          "symbol()",
          "decimals()"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      }
    },
    {
      "ThirdParty": {
        "src": "contracts\\ThirdParty.sol:5",
        "version": {
          "withMetadata": "d53521b340872e1cb19a829da8b6f983b51ec0caaaaed0ba0db377ea1dcf6c41",
          "withoutMetadata": "3acbde7a57100e491145d86dc06d6a1d005f910761389ab6ab79b372a76c9ad9",
          "linkedWithoutMetadata": "3acbde7a57100e491145d86dc06d6a1d005f910761389ab6ab79b372a76c9ad9"
        },
        "inherit": [],
        "libraries": [],
        "methods": [
          "getAllCategories()",
          "addCategory(string,uint256[])",
          "editCategory(uint256,string,uint256[])",
          "deleteCategory(uint256)",
          "getAllProperties()",
          "addProperty(string)",
          "editProperty(uint256,string)",
          "deleteProperty(uint256)",
          "getPackagesByCategory(uint256)",
          "addPackage(uint256,string,uint256,uint256,uint256,bool[])",
          "editPackage(uint256,uint256,string,uint256,uint256,uint256,bool[])",
          "deletePackage(uint256,uint256)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [
            {
              "label": "categoryCounter",
              "offset": 0,
              "slot": "0",
              "type": "t_uint256",
              "contract": "ThirdParty",
              "src": "contracts\\ThirdParty.sol:12"
            },
            {
              "label": "packageCounter",
              "offset": 0,
              "slot": "1",
              "type": "t_uint256",
              "contract": "ThirdParty",
              "src": "contracts\\ThirdParty.sol:23"
            },
            {
              "label": "propertyCounter",
              "offset": 0,
              "slot": "2",
              "type": "t_uint256",
              "contract": "ThirdParty",
              "src": "contracts\\ThirdParty.sol:29"
            },
            {
              "label": "allCategories",
              "offset": 0,
              "slot": "3",
              "type": "t_array(t_struct(Category)11_storage)dyn_storage",
              "contract": "ThirdParty",
              "src": "contracts\\ThirdParty.sol:31"
            },
            {
              "label": "allPackages",
              "offset": 0,
              "slot": "4",
              "type": "t_mapping(t_uint256,t_array(t_struct(Package)29_storage)dyn_storage)",
              "contract": "ThirdParty",
              "src": "contracts\\ThirdParty.sol:34"
            },
            {
              "label": "allProperties",
              "offset": 0,
              "slot": "5",
              "type": "t_array(t_struct(Property)36_storage)dyn_storage",
              "contract": "ThirdParty",
              "src": "contracts\\ThirdParty.sol:37"
            }
          ],
          "types": {
            "t_array(t_bool)dyn_storage": {
              "label": "bool[]",
              "numberOfBytes": "32"
            },
            "t_array(t_struct(Category)11_storage)dyn_storage": {
              "label": "struct ThirdParty.Category[]",
              "numberOfBytes": "32"
            },
            "t_array(t_struct(Package)29_storage)dyn_storage": {
              "label": "struct ThirdParty.Package[]",
              "numberOfBytes": "32"
            },
            "t_array(t_struct(Property)36_storage)dyn_storage": {
              "label": "struct ThirdParty.Property[]",
              "numberOfBytes": "32"
            },
            "t_array(t_uint256)dyn_storage": {
              "label": "uint256[]",
              "numberOfBytes": "32"
            },
            "t_bool": {
              "label": "bool",
              "numberOfBytes": "1"
            },
            "t_mapping(t_uint256,t_array(t_struct(Package)29_storage)dyn_storage)": {
              "label": "mapping(uint256 => struct ThirdParty.Package[])",
              "numberOfBytes": "32"
            },
            "t_string_storage": {
              "label": "string",
              "numberOfBytes": "32"
            },
            "t_struct(Category)11_storage": {
              "label": "struct ThirdParty.Category",
              "members": [
                {
                  "label": "categoryID",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "0"
                },
                {
                  "label": "cartegoryName",
                  "type": "t_string_storage",
                  "offset": 0,
                  "slot": "1"
                },
                {
                  "label": "properties",
                  "type": "t_array(t_uint256)dyn_storage",
                  "offset": 0,
                  "slot": "2"
                },
                {
                  "label": "visible",
                  "type": "t_bool",
                  "offset": 0,
                  "slot": "3"
                }
              ],
              "numberOfBytes": "128"
            },
            "t_struct(Package)29_storage": {
              "label": "struct ThirdParty.Package",
              "members": [
                {
                  "label": "categoryID",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "0"
                },
                {
                  "label": "packageID",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "1"
                },
                {
                  "label": "packageName",
                  "type": "t_string_storage",
                  "offset": 0,
                  "slot": "2"
                },
                {
                  "label": "price",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "3"
                },
                {
                  "label": "period",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "4"
                },
                {
                  "label": "dataLimit",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "5"
                },
                {
                  "label": "propertyVisible",
                  "type": "t_array(t_bool)dyn_storage",
                  "offset": 0,
                  "slot": "6"
                }
              ],
              "numberOfBytes": "224"
            },
            "t_struct(Property)36_storage": {
              "label": "struct ThirdParty.Property",
              "members": [
                {
                  "label": "propertyID",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "0"
                },
                {
                  "label": "propertyName",
                  "type": "t_string_storage",
                  "offset": 0,
                  "slot": "1"
                }
              ],
              "numberOfBytes": "64"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            }
          },
          "layoutVersion": "1.1",
          "flat": true
        }
      }
    },
    {
      "MainCleanContract": {
        "src": "contracts\\Contract.sol:6",
        "version": {
          "withMetadata": "010468631cbf91e131d43c059b189b55d220c871cd6c9bf91654f94d798103f1",
          "withoutMetadata": "e5b88dc6dff55c5639dcf382191cb4bb5323b9b8daccad7765611efdf8c82446",
          "linkedWithoutMetadata": "e5b88dc6dff55c5639dcf382191cb4bb5323b9b8daccad7765611efdf8c82446"
        },
        "inherit": [],
        "libraries": [],
        "methods": [
          "(address)",
          "ccCreation(string,string,address,string,uint256,uint256,uint256,string)",
          "getAllContractsByOwner()",
          "getAllContractsBySigner()",
          "getContractById(uint256)",
          "addContractSigner(uint256,address)",
          "signContract(uint256)",
          "sendNotify(address,string,uint256)",
          "getUploadedCounter()",
          "getAllNotifies()",
          "calcDiv(uint256,uint256)",
          "toString(bytes)",
          "addressToString(address)",
          "uintToString(uint256)",
          "bytesToString(bytes32)",
          "transferContractOwnership(uint256,address,address)"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "MainCleanContract",
            "src": "contracts\\Contract.sol:52"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "ccCounter",
              "offset": 0,
              "slot": "0",
              "type": "t_uint256",
              "contract": "MainCleanContract",
              "src": "contracts\\Contract.sol:8"
            },
            {
              "label": "houseNFTAddress",
              "offset": 0,
              "slot": "1",
              "type": "t_address",
              "contract": "MainCleanContract",
              "src": "contracts\\Contract.sol:11"
            },
            {
              "label": "allCleanContracts",
              "offset": 0,
              "slot": "2",
              "type": "t_mapping(t_uint256,t_struct(CleanContract)39_storage)",
              "contract": "MainCleanContract",
              "src": "contracts\\Contract.sol:44"
            },
            {
              "label": "allContractsByOwner",
              "offset": 0,
              "slot": "3",
              "type": "t_mapping(t_address,t_array(t_uint256)dyn_storage)",
              "contract": "MainCleanContract",
              "src": "contracts\\Contract.sol:46"
            },
            {
              "label": "allContractsBySigner",
              "offset": 0,
              "slot": "4",
              "type": "t_mapping(t_address,t_array(t_uint256)dyn_storage)",
              "contract": "MainCleanContract",
              "src": "contracts\\Contract.sol:48"
            },
            {
              "label": "allNotifies",
              "offset": 0,
              "slot": "5",
              "type": "t_mapping(t_address,t_array(t_struct(Notify)52_storage)dyn_storage)",
              "contract": "MainCleanContract",
              "src": "contracts\\Contract.sol:50"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            },
            "t_array(t_struct(Notify)52_storage)dyn_storage": {
              "label": "struct MainCleanContract.Notify[]",
              "numberOfBytes": "32"
            },
            "t_array(t_uint256)dyn_storage": {
              "label": "uint256[]",
              "numberOfBytes": "32"
            },
            "t_bool": {
              "label": "bool",
              "numberOfBytes": "1"
            },
            "t_mapping(t_address,t_array(t_struct(Notify)52_storage)dyn_storage)": {
              "label": "mapping(address => struct MainCleanContract.Notify[])",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_array(t_uint256)dyn_storage)": {
              "label": "mapping(address => uint256[])",
              "numberOfBytes": "32"
            },
            "t_mapping(t_uint256,t_struct(CleanContract)39_storage)": {
              "label": "mapping(uint256 => struct MainCleanContract.CleanContract)",
              "numberOfBytes": "32"
            },
            "t_string_storage": {
              "label": "string",
              "numberOfBytes": "32"
            },
            "t_struct(CleanContract)39_storage": {
              "label": "struct MainCleanContract.CleanContract",
              "members": [
                {
                  "label": "contractId",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "0"
                },
                {
                  "label": "companyName",
                  "type": "t_string_storage",
                  "offset": 0,
                  "slot": "1"
                },
                {
                  "label": "contractType",
                  "type": "t_string_storage",
                  "offset": 0,
                  "slot": "2"
                },
                {
                  "label": "contractURI",
                  "type": "t_string_storage",
                  "offset": 0,
                  "slot": "3"
                },
                {
                  "label": "dateFrom",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "4"
                },
                {
                  "label": "dateTo",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "5"
                },
                {
                  "label": "agreedPrice",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "6"
                },
                {
                  "label": "currency",
                  "type": "t_string_storage",
                  "offset": 0,
                  "slot": "7"
                },
                {
                  "label": "creator",
                  "type": "t_address",
                  "offset": 0,
                  "slot": "8"
                },
                {
                  "label": "owner",
                  "type": "t_address",
                  "offset": 0,
                  "slot": "9"
                },
                {
                  "label": "creatorApproval",
                  "type": "t_bool",
                  "offset": 20,
                  "slot": "9"
                },
                {
                  "label": "creatorSignDate",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "10"
                },
                {
                  "label": "contractSigner",
                  "type": "t_address",
                  "offset": 0,
                  "slot": "11"
                },
                {
                  "label": "signerApproval",
                  "type": "t_bool",
                  "offset": 20,
                  "slot": "11"
                },
                {
                  "label": "signerSignDate",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "12"
                },
                {
                  "label": "status",
                  "type": "t_string_storage",
                  "offset": 0,
                  "slot": "13"
                }
              ],
              "numberOfBytes": "448"
            },
            "t_struct(Notify)52_storage": {
              "label": "struct MainCleanContract.Notify",
              "members": [
                {
                  "label": "nSender",
                  "type": "t_address",
                  "offset": 0,
                  "slot": "0"
                },
                {
                  "label": "nReceiver",
                  "type": "t_address",
                  "offset": 0,
                  "slot": "1"
                },
                {
                  "label": "ccID",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "2"
                },
                {
                  "label": "notifySentTime",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "3"
                },
                {
                  "label": "notifyContent",
                  "type": "t_string_storage",
                  "offset": 0,
                  "slot": "4"
                },
                {
                  "label": "status",
                  "type": "t_bool",
                  "offset": 0,
                  "slot": "5"
                }
              ],
              "numberOfBytes": "192"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            }
          },
          "layoutVersion": "1.1",
          "flat": true
        }
      }
    },
    {
      "IPRC20": {
        "src": "contracts\\interfaces\\IPRC20.sol:4",
        "inherit": [],
        "libraries": [],
        "methods": [
          "totalSupply()",
          "balanceOf(address)",
          "transfer(address,uint256)",
          "allowance(address,address)",
          "approve(address,uint256)",
          "transferFrom(address,address,uint256)",
          "decimals()"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      }
    },
    {
      "ThirdParty": {
        "src": "contracts\\ThirdParty.sol:5",
        "version": {
          "withMetadata": "d53521b340872e1cb19a829da8b6f983b51ec0caaaaed0ba0db377ea1dcf6c41",
          "withoutMetadata": "3acbde7a57100e491145d86dc06d6a1d005f910761389ab6ab79b372a76c9ad9",
          "linkedWithoutMetadata": "3acbde7a57100e491145d86dc06d6a1d005f910761389ab6ab79b372a76c9ad9"
        },
        "inherit": [],
        "libraries": [],
        "methods": [
          "getAllCategories()",
          "addCategory(string,uint256[])",
          "editCategory(uint256,string,uint256[])",
          "deleteCategory(uint256)",
          "getAllProperties()",
          "addProperty(string)",
          "editProperty(uint256,string)",
          "deleteProperty(uint256)",
          "getPackagesByCategory(uint256)",
          "addPackage(uint256,string,uint256,uint256,uint256,bool[])",
          "editPackage(uint256,uint256,string,uint256,uint256,uint256,bool[])",
          "deletePackage(uint256,uint256)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [
            {
              "label": "categoryCounter",
              "offset": 0,
              "slot": "0",
              "type": "t_uint256",
              "contract": "ThirdParty",
              "src": "contracts\\ThirdParty.sol:12"
            },
            {
              "label": "packageCounter",
              "offset": 0,
              "slot": "1",
              "type": "t_uint256",
              "contract": "ThirdParty",
              "src": "contracts\\ThirdParty.sol:23"
            },
            {
              "label": "propertyCounter",
              "offset": 0,
              "slot": "2",
              "type": "t_uint256",
              "contract": "ThirdParty",
              "src": "contracts\\ThirdParty.sol:29"
            },
            {
              "label": "allCategories",
              "offset": 0,
              "slot": "3",
              "type": "t_array(t_struct(Category)11_storage)dyn_storage",
              "contract": "ThirdParty",
              "src": "contracts\\ThirdParty.sol:31"
            },
            {
              "label": "allPackages",
              "offset": 0,
              "slot": "4",
              "type": "t_mapping(t_uint256,t_array(t_struct(Package)29_storage)dyn_storage)",
              "contract": "ThirdParty",
              "src": "contracts\\ThirdParty.sol:34"
            },
            {
              "label": "allProperties",
              "offset": 0,
              "slot": "5",
              "type": "t_array(t_struct(Property)36_storage)dyn_storage",
              "contract": "ThirdParty",
              "src": "contracts\\ThirdParty.sol:37"
            }
          ],
          "types": {
            "t_array(t_bool)dyn_storage": {
              "label": "bool[]",
              "numberOfBytes": "32"
            },
            "t_array(t_struct(Category)11_storage)dyn_storage": {
              "label": "struct ThirdParty.Category[]",
              "numberOfBytes": "32"
            },
            "t_array(t_struct(Package)29_storage)dyn_storage": {
              "label": "struct ThirdParty.Package[]",
              "numberOfBytes": "32"
            },
            "t_array(t_struct(Property)36_storage)dyn_storage": {
              "label": "struct ThirdParty.Property[]",
              "numberOfBytes": "32"
            },
            "t_array(t_uint256)dyn_storage": {
              "label": "uint256[]",
              "numberOfBytes": "32"
            },
            "t_bool": {
              "label": "bool",
              "numberOfBytes": "1"
            },
            "t_mapping(t_uint256,t_array(t_struct(Package)29_storage)dyn_storage)": {
              "label": "mapping(uint256 => struct ThirdParty.Package[])",
              "numberOfBytes": "32"
            },
            "t_string_storage": {
              "label": "string",
              "numberOfBytes": "32"
            },
            "t_struct(Category)11_storage": {
              "label": "struct ThirdParty.Category",
              "members": [
                {
                  "label": "categoryID",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "0"
                },
                {
                  "label": "cartegoryName",
                  "type": "t_string_storage",
                  "offset": 0,
                  "slot": "1"
                },
                {
                  "label": "properties",
                  "type": "t_array(t_uint256)dyn_storage",
                  "offset": 0,
                  "slot": "2"
                },
                {
                  "label": "visible",
                  "type": "t_bool",
                  "offset": 0,
                  "slot": "3"
                }
              ],
              "numberOfBytes": "128"
            },
            "t_struct(Package)29_storage": {
              "label": "struct ThirdParty.Package",
              "members": [
                {
                  "label": "categoryID",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "0"
                },
                {
                  "label": "packageID",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "1"
                },
                {
                  "label": "packageName",
                  "type": "t_string_storage",
                  "offset": 0,
                  "slot": "2"
                },
                {
                  "label": "price",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "3"
                },
                {
                  "label": "period",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "4"
                },
                {
                  "label": "dataLimit",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "5"
                },
                {
                  "label": "propertyVisible",
                  "type": "t_array(t_bool)dyn_storage",
                  "offset": 0,
                  "slot": "6"
                }
              ],
              "numberOfBytes": "224"
            },
            "t_struct(Property)36_storage": {
              "label": "struct ThirdParty.Property",
              "members": [
                {
                  "label": "propertyID",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "0"
                },
                {
                  "label": "propertyName",
                  "type": "t_string_storage",
                  "offset": 0,
                  "slot": "1"
                }
              ],
              "numberOfBytes": "64"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            }
          },
          "layoutVersion": "1.1",
          "flat": true
        }
      }
    },
    {
      "MainCleanContract": {
        "src": "contracts\\Contract.sol:6",
        "version": {
          "withMetadata": "010468631cbf91e131d43c059b189b55d220c871cd6c9bf91654f94d798103f1",
          "withoutMetadata": "e5b88dc6dff55c5639dcf382191cb4bb5323b9b8daccad7765611efdf8c82446",
          "linkedWithoutMetadata": "e5b88dc6dff55c5639dcf382191cb4bb5323b9b8daccad7765611efdf8c82446"
        },
        "inherit": [],
        "libraries": [],
        "methods": [
          "(address)",
          "ccCreation(string,string,address,string,uint256,uint256,uint256,string)",
          "getAllContractsByOwner()",
          "getAllContractsBySigner()",
          "getContractById(uint256)",
          "addContractSigner(uint256,address)",
          "signContract(uint256)",
          "sendNotify(address,string,uint256)",
          "getUploadedCounter()",
          "getAllNotifies()",
          "calcDiv(uint256,uint256)",
          "toString(bytes)",
          "addressToString(address)",
          "uintToString(uint256)",
          "bytesToString(bytes32)",
          "transferContractOwnership(uint256,address,address)"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "MainCleanContract",
            "src": "contracts\\Contract.sol:52"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "ccCounter",
              "offset": 0,
              "slot": "0",
              "type": "t_uint256",
              "contract": "MainCleanContract",
              "src": "contracts\\Contract.sol:8"
            },
            {
              "label": "houseNFTAddress",
              "offset": 0,
              "slot": "1",
              "type": "t_address",
              "contract": "MainCleanContract",
              "src": "contracts\\Contract.sol:11"
            },
            {
              "label": "allCleanContracts",
              "offset": 0,
              "slot": "2",
              "type": "t_mapping(t_uint256,t_struct(CleanContract)39_storage)",
              "contract": "MainCleanContract",
              "src": "contracts\\Contract.sol:44"
            },
            {
              "label": "allContractsByOwner",
              "offset": 0,
              "slot": "3",
              "type": "t_mapping(t_address,t_array(t_uint256)dyn_storage)",
              "contract": "MainCleanContract",
              "src": "contracts\\Contract.sol:46"
            },
            {
              "label": "allContractsBySigner",
              "offset": 0,
              "slot": "4",
              "type": "t_mapping(t_address,t_array(t_uint256)dyn_storage)",
              "contract": "MainCleanContract",
              "src": "contracts\\Contract.sol:48"
            },
            {
              "label": "allNotifies",
              "offset": 0,
              "slot": "5",
              "type": "t_mapping(t_address,t_array(t_struct(Notify)52_storage)dyn_storage)",
              "contract": "MainCleanContract",
              "src": "contracts\\Contract.sol:50"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            },
            "t_array(t_struct(Notify)52_storage)dyn_storage": {
              "label": "struct MainCleanContract.Notify[]",
              "numberOfBytes": "32"
            },
            "t_array(t_uint256)dyn_storage": {
              "label": "uint256[]",
              "numberOfBytes": "32"
            },
            "t_bool": {
              "label": "bool",
              "numberOfBytes": "1"
            },
            "t_mapping(t_address,t_array(t_struct(Notify)52_storage)dyn_storage)": {
              "label": "mapping(address => struct MainCleanContract.Notify[])",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_array(t_uint256)dyn_storage)": {
              "label": "mapping(address => uint256[])",
              "numberOfBytes": "32"
            },
            "t_mapping(t_uint256,t_struct(CleanContract)39_storage)": {
              "label": "mapping(uint256 => struct MainCleanContract.CleanContract)",
              "numberOfBytes": "32"
            },
            "t_string_storage": {
              "label": "string",
              "numberOfBytes": "32"
            },
            "t_struct(CleanContract)39_storage": {
              "label": "struct MainCleanContract.CleanContract",
              "members": [
                {
                  "label": "contractId",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "0"
                },
                {
                  "label": "companyName",
                  "type": "t_string_storage",
                  "offset": 0,
                  "slot": "1"
                },
                {
                  "label": "contractType",
                  "type": "t_string_storage",
                  "offset": 0,
                  "slot": "2"
                },
                {
                  "label": "contractURI",
                  "type": "t_string_storage",
                  "offset": 0,
                  "slot": "3"
                },
                {
                  "label": "dateFrom",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "4"
                },
                {
                  "label": "dateTo",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "5"
                },
                {
                  "label": "agreedPrice",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "6"
                },
                {
                  "label": "currency",
                  "type": "t_string_storage",
                  "offset": 0,
                  "slot": "7"
                },
                {
                  "label": "creator",
                  "type": "t_address",
                  "offset": 0,
                  "slot": "8"
                },
                {
                  "label": "owner",
                  "type": "t_address",
                  "offset": 0,
                  "slot": "9"
                },
                {
                  "label": "creatorApproval",
                  "type": "t_bool",
                  "offset": 20,
                  "slot": "9"
                },
                {
                  "label": "creatorSignDate",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "10"
                },
                {
                  "label": "contractSigner",
                  "type": "t_address",
                  "offset": 0,
                  "slot": "11"
                },
                {
                  "label": "signerApproval",
                  "type": "t_bool",
                  "offset": 20,
                  "slot": "11"
                },
                {
                  "label": "signerSignDate",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "12"
                },
                {
                  "label": "status",
                  "type": "t_string_storage",
                  "offset": 0,
                  "slot": "13"
                }
              ],
              "numberOfBytes": "448"
            },
            "t_struct(Notify)52_storage": {
              "label": "struct MainCleanContract.Notify",
              "members": [
                {
                  "label": "nSender",
                  "type": "t_address",
                  "offset": 0,
                  "slot": "0"
                },
                {
                  "label": "nReceiver",
                  "type": "t_address",
                  "offset": 0,
                  "slot": "1"
                },
                {
                  "label": "ccID",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "2"
                },
                {
                  "label": "notifySentTime",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "3"
                },
                {
                  "label": "notifyContent",
                  "type": "t_string_storage",
                  "offset": 0,
                  "slot": "4"
                },
                {
                  "label": "status",
                  "type": "t_bool",
                  "offset": 0,
                  "slot": "5"
                }
              ],
              "numberOfBytes": "192"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            }
          },
          "layoutVersion": "1.1",
          "flat": true
        }
      }
    },
    {
      "Context": {
        "src": "contracts\\TokenContract.sol:30",
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "HouseBusinessToken": {
        "src": "contracts\\TokenContract.sol:41",
        "version": {
          "withMetadata": "4f990ca86e03541351e9529165a17d7cb67b9b8bd35a9c3adb0efa9a825a1bb9",
          "withoutMetadata": "b737d4aaacef72af795cc4b42f15838a2ae9bc1e52c8c3e49d32ef8fdcd6230d",
          "linkedWithoutMetadata": "b737d4aaacef72af795cc4b42f15838a2ae9bc1e52c8c3e49d32ef8fdcd6230d"
        },
        "inherit": [
          "IERC20Metadata",
          "IERC20",
          "Context"
        ],
        "libraries": [],
        "methods": [
          "()",
          "name()",
          "symbol()",
          "decimals()",
          "totalSupply()",
          "balanceOf(address)",
          "transfer(address,uint256)",
          "allowance(address,address)",
          "approve(address,uint256)",
          "transferFrom(address,address,uint256)",
          "increaseAllowance(address,uint256)",
          "decreaseAllowance(address,uint256)",
          "_mint(address,uint256)"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "HouseBusinessToken",
            "src": "contracts\\TokenContract.sol:50"
          },
          {
            "kind": "state-variable-assignment",
            "name": "_name",
            "src": "contracts\\TokenContract.sol:45"
          },
          {
            "kind": "state-variable-assignment",
            "name": "_symbol",
            "src": "contracts\\TokenContract.sol:46"
          },
          {
            "kind": "state-variable-assignment",
            "name": "_decimals",
            "src": "contracts\\TokenContract.sol:47"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "_balances",
              "offset": 0,
              "slot": "0",
              "type": "t_mapping(t_address,t_uint256)",
              "contract": "HouseBusinessToken",
              "src": "contracts\\TokenContract.sol:42"
            },
            {
              "label": "_allowances",
              "offset": 0,
              "slot": "1",
              "type": "t_mapping(t_address,t_mapping(t_address,t_uint256))",
              "contract": "HouseBusinessToken",
              "src": "contracts\\TokenContract.sol:43"
            },
            {
              "label": "_totalSupply",
              "offset": 0,
              "slot": "2",
              "type": "t_uint256",
              "contract": "HouseBusinessToken",
              "src": "contracts\\TokenContract.sol:44"
            },
            {
              "label": "_name",
              "offset": 0,
              "slot": "3",
              "type": "t_string_storage",
              "contract": "HouseBusinessToken",
              "src": "contracts\\TokenContract.sol:45"
            },
            {
              "label": "_symbol",
              "offset": 0,
              "slot": "4",
              "type": "t_string_storage",
              "contract": "HouseBusinessToken",
              "src": "contracts\\TokenContract.sol:46"
            },
            {
              "label": "_decimals",
              "offset": 0,
              "slot": "5",
              "type": "t_uint8",
              "contract": "HouseBusinessToken",
              "src": "contracts\\TokenContract.sol:47"
            },
            {
              "label": "_owner",
              "offset": 1,
              "slot": "5",
              "type": "t_address",
              "contract": "HouseBusinessToken",
              "src": "contracts\\TokenContract.sol:48"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            },
            "t_mapping(t_address,t_mapping(t_address,t_uint256))": {
              "label": "mapping(address => mapping(address => uint256))",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_uint256)": {
              "label": "mapping(address => uint256)",
              "numberOfBytes": "32"
            },
            "t_string_storage": {
              "label": "string",
              "numberOfBytes": "32"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            },
            "t_uint8": {
              "label": "uint8",
              "numberOfBytes": "1"
            }
          },
          "layoutVersion": "1.1",
          "flat": true
        }
      },
      "IERC20": {
        "src": "contracts\\TokenContract.sol:5",
        "inherit": [],
        "libraries": [],
        "methods": [
          "totalSupply()",
          "balanceOf(address)",
          "transfer(address,uint256)",
          "allowance(address,address)",
          "approve(address,uint256)",
          "transferFrom(address,address,uint256)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "IERC20Metadata": {
        "src": "contracts\\TokenContract.sol:22",
        "inherit": [
          "IERC20"
        ],
        "libraries": [],
        "methods": [
          "name()",
          "symbol()",
          "decimals()"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      }
    },
    {
      "IPRC20": {
        "src": "contracts\\interfaces\\IPRC20.sol:4",
        "inherit": [],
        "libraries": [],
        "methods": [
          "totalSupply()",
          "balanceOf(address)",
          "transfer(address,uint256)",
          "allowance(address,address)",
          "approve(address,uint256)",
          "transferFrom(address,address,uint256)",
          "decimals()"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      }
    },
    {
      "ThirdParty": {
        "src": "contracts\\ThirdParty.sol:5",
        "version": {
          "withMetadata": "d53521b340872e1cb19a829da8b6f983b51ec0caaaaed0ba0db377ea1dcf6c41",
          "withoutMetadata": "3acbde7a57100e491145d86dc06d6a1d005f910761389ab6ab79b372a76c9ad9",
          "linkedWithoutMetadata": "3acbde7a57100e491145d86dc06d6a1d005f910761389ab6ab79b372a76c9ad9"
        },
        "inherit": [],
        "libraries": [],
        "methods": [
          "getAllCategories()",
          "addCategory(string,uint256[])",
          "editCategory(uint256,string,uint256[])",
          "deleteCategory(uint256)",
          "getAllProperties()",
          "addProperty(string)",
          "editProperty(uint256,string)",
          "deleteProperty(uint256)",
          "getPackagesByCategory(uint256)",
          "addPackage(uint256,string,uint256,uint256,uint256,bool[])",
          "editPackage(uint256,uint256,string,uint256,uint256,uint256,bool[])",
          "deletePackage(uint256,uint256)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [
            {
              "label": "categoryCounter",
              "offset": 0,
              "slot": "0",
              "type": "t_uint256",
              "contract": "ThirdParty",
              "src": "contracts\\ThirdParty.sol:12"
            },
            {
              "label": "packageCounter",
              "offset": 0,
              "slot": "1",
              "type": "t_uint256",
              "contract": "ThirdParty",
              "src": "contracts\\ThirdParty.sol:23"
            },
            {
              "label": "propertyCounter",
              "offset": 0,
              "slot": "2",
              "type": "t_uint256",
              "contract": "ThirdParty",
              "src": "contracts\\ThirdParty.sol:29"
            },
            {
              "label": "allCategories",
              "offset": 0,
              "slot": "3",
              "type": "t_array(t_struct(Category)11_storage)dyn_storage",
              "contract": "ThirdParty",
              "src": "contracts\\ThirdParty.sol:31"
            },
            {
              "label": "allPackages",
              "offset": 0,
              "slot": "4",
              "type": "t_mapping(t_uint256,t_array(t_struct(Package)29_storage)dyn_storage)",
              "contract": "ThirdParty",
              "src": "contracts\\ThirdParty.sol:34"
            },
            {
              "label": "allProperties",
              "offset": 0,
              "slot": "5",
              "type": "t_array(t_struct(Property)36_storage)dyn_storage",
              "contract": "ThirdParty",
              "src": "contracts\\ThirdParty.sol:37"
            }
          ],
          "types": {
            "t_array(t_bool)dyn_storage": {
              "label": "bool[]",
              "numberOfBytes": "32"
            },
            "t_array(t_struct(Category)11_storage)dyn_storage": {
              "label": "struct ThirdParty.Category[]",
              "numberOfBytes": "32"
            },
            "t_array(t_struct(Package)29_storage)dyn_storage": {
              "label": "struct ThirdParty.Package[]",
              "numberOfBytes": "32"
            },
            "t_array(t_struct(Property)36_storage)dyn_storage": {
              "label": "struct ThirdParty.Property[]",
              "numberOfBytes": "32"
            },
            "t_array(t_uint256)dyn_storage": {
              "label": "uint256[]",
              "numberOfBytes": "32"
            },
            "t_bool": {
              "label": "bool",
              "numberOfBytes": "1"
            },
            "t_mapping(t_uint256,t_array(t_struct(Package)29_storage)dyn_storage)": {
              "label": "mapping(uint256 => struct ThirdParty.Package[])",
              "numberOfBytes": "32"
            },
            "t_string_storage": {
              "label": "string",
              "numberOfBytes": "32"
            },
            "t_struct(Category)11_storage": {
              "label": "struct ThirdParty.Category",
              "members": [
                {
                  "label": "categoryID",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "0"
                },
                {
                  "label": "cartegoryName",
                  "type": "t_string_storage",
                  "offset": 0,
                  "slot": "1"
                },
                {
                  "label": "properties",
                  "type": "t_array(t_uint256)dyn_storage",
                  "offset": 0,
                  "slot": "2"
                },
                {
                  "label": "visible",
                  "type": "t_bool",
                  "offset": 0,
                  "slot": "3"
                }
              ],
              "numberOfBytes": "128"
            },
            "t_struct(Package)29_storage": {
              "label": "struct ThirdParty.Package",
              "members": [
                {
                  "label": "categoryID",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "0"
                },
                {
                  "label": "packageID",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "1"
                },
                {
                  "label": "packageName",
                  "type": "t_string_storage",
                  "offset": 0,
                  "slot": "2"
                },
                {
                  "label": "price",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "3"
                },
                {
                  "label": "period",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "4"
                },
                {
                  "label": "dataLimit",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "5"
                },
                {
                  "label": "propertyVisible",
                  "type": "t_array(t_bool)dyn_storage",
                  "offset": 0,
                  "slot": "6"
                }
              ],
              "numberOfBytes": "224"
            },
            "t_struct(Property)36_storage": {
              "label": "struct ThirdParty.Property",
              "members": [
                {
                  "label": "propertyID",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "0"
                },
                {
                  "label": "propertyName",
                  "type": "t_string_storage",
                  "offset": 0,
                  "slot": "1"
                }
              ],
              "numberOfBytes": "64"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            }
          },
          "layoutVersion": "1.1",
          "flat": true
        }
      }
    },
    {
      "MainCleanContract": {
        "src": "contracts\\Contract.sol:6",
        "version": {
          "withMetadata": "010468631cbf91e131d43c059b189b55d220c871cd6c9bf91654f94d798103f1",
          "withoutMetadata": "e5b88dc6dff55c5639dcf382191cb4bb5323b9b8daccad7765611efdf8c82446",
          "linkedWithoutMetadata": "e5b88dc6dff55c5639dcf382191cb4bb5323b9b8daccad7765611efdf8c82446"
        },
        "inherit": [],
        "libraries": [],
        "methods": [
          "(address)",
          "ccCreation(string,string,address,string,uint256,uint256,uint256,string)",
          "getAllContractsByOwner()",
          "getAllContractsBySigner()",
          "getContractById(uint256)",
          "addContractSigner(uint256,address)",
          "signContract(uint256)",
          "sendNotify(address,string,uint256)",
          "getUploadedCounter()",
          "getAllNotifies()",
          "calcDiv(uint256,uint256)",
          "toString(bytes)",
          "addressToString(address)",
          "uintToString(uint256)",
          "bytesToString(bytes32)",
          "transferContractOwnership(uint256,address,address)"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "MainCleanContract",
            "src": "contracts\\Contract.sol:52"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "ccCounter",
              "offset": 0,
              "slot": "0",
              "type": "t_uint256",
              "contract": "MainCleanContract",
              "src": "contracts\\Contract.sol:8"
            },
            {
              "label": "houseNFTAddress",
              "offset": 0,
              "slot": "1",
              "type": "t_address",
              "contract": "MainCleanContract",
              "src": "contracts\\Contract.sol:11"
            },
            {
              "label": "allCleanContracts",
              "offset": 0,
              "slot": "2",
              "type": "t_mapping(t_uint256,t_struct(CleanContract)39_storage)",
              "contract": "MainCleanContract",
              "src": "contracts\\Contract.sol:44"
            },
            {
              "label": "allContractsByOwner",
              "offset": 0,
              "slot": "3",
              "type": "t_mapping(t_address,t_array(t_uint256)dyn_storage)",
              "contract": "MainCleanContract",
              "src": "contracts\\Contract.sol:46"
            },
            {
              "label": "allContractsBySigner",
              "offset": 0,
              "slot": "4",
              "type": "t_mapping(t_address,t_array(t_uint256)dyn_storage)",
              "contract": "MainCleanContract",
              "src": "contracts\\Contract.sol:48"
            },
            {
              "label": "allNotifies",
              "offset": 0,
              "slot": "5",
              "type": "t_mapping(t_address,t_array(t_struct(Notify)52_storage)dyn_storage)",
              "contract": "MainCleanContract",
              "src": "contracts\\Contract.sol:50"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            },
            "t_array(t_struct(Notify)52_storage)dyn_storage": {
              "label": "struct MainCleanContract.Notify[]",
              "numberOfBytes": "32"
            },
            "t_array(t_uint256)dyn_storage": {
              "label": "uint256[]",
              "numberOfBytes": "32"
            },
            "t_bool": {
              "label": "bool",
              "numberOfBytes": "1"
            },
            "t_mapping(t_address,t_array(t_struct(Notify)52_storage)dyn_storage)": {
              "label": "mapping(address => struct MainCleanContract.Notify[])",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_array(t_uint256)dyn_storage)": {
              "label": "mapping(address => uint256[])",
              "numberOfBytes": "32"
            },
            "t_mapping(t_uint256,t_struct(CleanContract)39_storage)": {
              "label": "mapping(uint256 => struct MainCleanContract.CleanContract)",
              "numberOfBytes": "32"
            },
            "t_string_storage": {
              "label": "string",
              "numberOfBytes": "32"
            },
            "t_struct(CleanContract)39_storage": {
              "label": "struct MainCleanContract.CleanContract",
              "members": [
                {
                  "label": "contractId",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "0"
                },
                {
                  "label": "companyName",
                  "type": "t_string_storage",
                  "offset": 0,
                  "slot": "1"
                },
                {
                  "label": "contractType",
                  "type": "t_string_storage",
                  "offset": 0,
                  "slot": "2"
                },
                {
                  "label": "contractURI",
                  "type": "t_string_storage",
                  "offset": 0,
                  "slot": "3"
                },
                {
                  "label": "dateFrom",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "4"
                },
                {
                  "label": "dateTo",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "5"
                },
                {
                  "label": "agreedPrice",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "6"
                },
                {
                  "label": "currency",
                  "type": "t_string_storage",
                  "offset": 0,
                  "slot": "7"
                },
                {
                  "label": "creator",
                  "type": "t_address",
                  "offset": 0,
                  "slot": "8"
                },
                {
                  "label": "owner",
                  "type": "t_address",
                  "offset": 0,
                  "slot": "9"
                },
                {
                  "label": "creatorApproval",
                  "type": "t_bool",
                  "offset": 20,
                  "slot": "9"
                },
                {
                  "label": "creatorSignDate",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "10"
                },
                {
                  "label": "contractSigner",
                  "type": "t_address",
                  "offset": 0,
                  "slot": "11"
                },
                {
                  "label": "signerApproval",
                  "type": "t_bool",
                  "offset": 20,
                  "slot": "11"
                },
                {
                  "label": "signerSignDate",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "12"
                },
                {
                  "label": "status",
                  "type": "t_string_storage",
                  "offset": 0,
                  "slot": "13"
                }
              ],
              "numberOfBytes": "448"
            },
            "t_struct(Notify)52_storage": {
              "label": "struct MainCleanContract.Notify",
              "members": [
                {
                  "label": "nSender",
                  "type": "t_address",
                  "offset": 0,
                  "slot": "0"
                },
                {
                  "label": "nReceiver",
                  "type": "t_address",
                  "offset": 0,
                  "slot": "1"
                },
                {
                  "label": "ccID",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "2"
                },
                {
                  "label": "notifySentTime",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "3"
                },
                {
                  "label": "notifyContent",
                  "type": "t_string_storage",
                  "offset": 0,
                  "slot": "4"
                },
                {
                  "label": "status",
                  "type": "t_bool",
                  "offset": 0,
                  "slot": "5"
                }
              ],
              "numberOfBytes": "192"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            }
          },
          "layoutVersion": "1.1",
          "flat": true
        }
      }
    },
    {
      "Context": {
        "src": "contracts\\TokenContract.sol:30",
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "HouseBusinessToken": {
        "src": "contracts\\TokenContract.sol:41",
        "version": {
          "withMetadata": "4f990ca86e03541351e9529165a17d7cb67b9b8bd35a9c3adb0efa9a825a1bb9",
          "withoutMetadata": "b737d4aaacef72af795cc4b42f15838a2ae9bc1e52c8c3e49d32ef8fdcd6230d",
          "linkedWithoutMetadata": "b737d4aaacef72af795cc4b42f15838a2ae9bc1e52c8c3e49d32ef8fdcd6230d"
        },
        "inherit": [
          "IERC20Metadata",
          "IERC20",
          "Context"
        ],
        "libraries": [],
        "methods": [
          "()",
          "name()",
          "symbol()",
          "decimals()",
          "totalSupply()",
          "balanceOf(address)",
          "transfer(address,uint256)",
          "allowance(address,address)",
          "approve(address,uint256)",
          "transferFrom(address,address,uint256)",
          "increaseAllowance(address,uint256)",
          "decreaseAllowance(address,uint256)",
          "_mint(address,uint256)"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "HouseBusinessToken",
            "src": "contracts\\TokenContract.sol:50"
          },
          {
            "kind": "state-variable-assignment",
            "name": "_name",
            "src": "contracts\\TokenContract.sol:45"
          },
          {
            "kind": "state-variable-assignment",
            "name": "_symbol",
            "src": "contracts\\TokenContract.sol:46"
          },
          {
            "kind": "state-variable-assignment",
            "name": "_decimals",
            "src": "contracts\\TokenContract.sol:47"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "_balances",
              "offset": 0,
              "slot": "0",
              "type": "t_mapping(t_address,t_uint256)",
              "contract": "HouseBusinessToken",
              "src": "contracts\\TokenContract.sol:42"
            },
            {
              "label": "_allowances",
              "offset": 0,
              "slot": "1",
              "type": "t_mapping(t_address,t_mapping(t_address,t_uint256))",
              "contract": "HouseBusinessToken",
              "src": "contracts\\TokenContract.sol:43"
            },
            {
              "label": "_totalSupply",
              "offset": 0,
              "slot": "2",
              "type": "t_uint256",
              "contract": "HouseBusinessToken",
              "src": "contracts\\TokenContract.sol:44"
            },
            {
              "label": "_name",
              "offset": 0,
              "slot": "3",
              "type": "t_string_storage",
              "contract": "HouseBusinessToken",
              "src": "contracts\\TokenContract.sol:45"
            },
            {
              "label": "_symbol",
              "offset": 0,
              "slot": "4",
              "type": "t_string_storage",
              "contract": "HouseBusinessToken",
              "src": "contracts\\TokenContract.sol:46"
            },
            {
              "label": "_decimals",
              "offset": 0,
              "slot": "5",
              "type": "t_uint8",
              "contract": "HouseBusinessToken",
              "src": "contracts\\TokenContract.sol:47"
            },
            {
              "label": "_owner",
              "offset": 1,
              "slot": "5",
              "type": "t_address",
              "contract": "HouseBusinessToken",
              "src": "contracts\\TokenContract.sol:48"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            },
            "t_mapping(t_address,t_mapping(t_address,t_uint256))": {
              "label": "mapping(address => mapping(address => uint256))",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_uint256)": {
              "label": "mapping(address => uint256)",
              "numberOfBytes": "32"
            },
            "t_string_storage": {
              "label": "string",
              "numberOfBytes": "32"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            },
            "t_uint8": {
              "label": "uint8",
              "numberOfBytes": "1"
            }
          },
          "layoutVersion": "1.1",
          "flat": true
        }
      },
      "IERC20": {
        "src": "contracts\\TokenContract.sol:5",
        "inherit": [],
        "libraries": [],
        "methods": [
          "totalSupply()",
          "balanceOf(address)",
          "transfer(address,uint256)",
          "allowance(address,address)",
          "approve(address,uint256)",
          "transferFrom(address,address,uint256)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "IERC20Metadata": {
        "src": "contracts\\TokenContract.sol:22",
        "inherit": [
          "IERC20"
        ],
        "libraries": [],
        "methods": [
          "name()",
          "symbol()",
          "decimals()"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      }
    },
    {
      "IPRC20": {
        "src": "contracts\\interfaces\\IPRC20.sol:4",
        "inherit": [],
        "libraries": [],
        "methods": [
          "totalSupply()",
          "balanceOf(address)",
          "transfer(address,uint256)",
          "allowance(address,address)",
          "approve(address,uint256)",
          "transferFrom(address,address,uint256)",
          "decimals()"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      }
    },
    {
      "IERC20": {
        "src": "@openzeppelin\\contracts\\token\\ERC20\\IERC20.sol:9",
        "inherit": [],
        "libraries": [],
        "methods": [
          "totalSupply()",
          "balanceOf(address)",
          "transfer(address,uint256)",
          "allowance(address,address)",
          "approve(address,uint256)",
          "transferFrom(address,address,uint256)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "IERC721": {
        "src": "@openzeppelin\\contracts\\token\\ERC721\\IERC721.sol:11",
        "inherit": [
          "IERC165"
        ],
        "libraries": [],
        "methods": [
          "balanceOf(address)",
          "ownerOf(uint256)",
          "safeTransferFrom(address,address,uint256,bytes)",
          "safeTransferFrom(address,address,uint256)",
          "transferFrom(address,address,uint256)",
          "approve(address,uint256)",
          "setApprovalForAll(address,bool)",
          "getApproved(uint256)",
          "isApprovedForAll(address,address)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "IERC165": {
        "src": "@openzeppelin\\contracts\\utils\\introspection\\IERC165.sol:15",
        "inherit": [],
        "libraries": [],
        "methods": [
          "supportsInterface(bytes4)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "HouseStaking": {
        "src": "contracts\\Staking.sol:6",
        "version": {
          "withMetadata": "1631da731d0e2b52c81a316e137d89d443991d8823c4d4d4d9c3929bc729a164",
          "withoutMetadata": "92078b7ed6da756ae03297e8c845495c2d09ac69b7981d78a9050acf26a3d7f4",
          "linkedWithoutMetadata": "92078b7ed6da756ae03297e8c845495c2d09ac69b7981d78a9050acf26a3d7f4"
        },
        "inherit": [],
        "libraries": [],
        "methods": [
          "(address,address)",
          "calcDiv(uint256,uint256)",
          "setAPYConfig(uint256,uint256)",
          "getAllAPYTypes()",
          "stake(uint256,uint256)",
          "unstake(uint256)",
          "stakingFinished(uint256)",
          "totalRewards(address)",
          "claimRewards(address)",
          "getAllMyStakedNFTs()",
          "getAllAPYs()",
          "getPenalty()",
          "setPenalty(uint256)",
          "updateAPYConfig(uint256,uint256)"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "HouseStaking",
            "src": "contracts\\Staking.sol:33"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "stakedCounter",
              "offset": 0,
              "slot": "0",
              "type": "t_uint256",
              "contract": "HouseStaking",
              "src": "contracts\\Staking.sol:8"
            },
            {
              "label": "penalty",
              "offset": 0,
              "slot": "1",
              "type": "t_uint256",
              "contract": "HouseStaking",
              "src": "contracts\\Staking.sol:10"
            },
            {
              "label": "APYtypes",
              "offset": 0,
              "slot": "2",
              "type": "t_array(t_uint256)dyn_storage",
              "contract": "HouseStaking",
              "src": "contracts\\Staking.sol:12"
            },
            {
              "label": "APYConfig",
              "offset": 0,
              "slot": "3",
              "type": "t_mapping(t_uint256,t_uint256)",
              "contract": "HouseStaking",
              "src": "contracts\\Staking.sol:15"
            },
            {
              "label": "stakedNfts",
              "offset": 0,
              "slot": "4",
              "type": "t_mapping(t_address,t_array(t_struct(StakedNft)248_storage)dyn_storage)",
              "contract": "HouseStaking",
              "src": "contracts\\Staking.sol:16"
            },
            {
              "label": "tokenAddress",
              "offset": 0,
              "slot": "5",
              "type": "t_address",
              "contract": "HouseStaking",
              "src": "contracts\\Staking.sol:18"
            },
            {
              "label": "houseNFTAddress",
              "offset": 0,
              "slot": "6",
              "type": "t_address",
              "contract": "HouseStaking",
              "src": "contracts\\Staking.sol:19"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            },
            "t_array(t_struct(StakedNft)248_storage)dyn_storage": {
              "label": "struct HouseStaking.StakedNft[]",
              "numberOfBytes": "32"
            },
            "t_array(t_uint256)dyn_storage": {
              "label": "uint256[]",
              "numberOfBytes": "32"
            },
            "t_bool": {
              "label": "bool",
              "numberOfBytes": "1"
            },
            "t_mapping(t_address,t_array(t_struct(StakedNft)248_storage)dyn_storage)": {
              "label": "mapping(address => struct HouseStaking.StakedNft[])",
              "numberOfBytes": "32"
            },
            "t_mapping(t_uint256,t_uint256)": {
              "label": "mapping(uint256 => uint256)",
              "numberOfBytes": "32"
            },
            "t_struct(StakedNft)248_storage": {
              "label": "struct HouseStaking.StakedNft",
              "members": [
                {
                  "label": "owner",
                  "type": "t_address",
                  "offset": 0,
                  "slot": "0"
                },
                {
                  "label": "tokenId",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "1"
                },
                {
                  "label": "startedDate",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "2"
                },
                {
                  "label": "endDate",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "3"
                },
                {
                  "label": "claimDate",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "4"
                },
                {
                  "label": "stakingType",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "5"
                },
                {
                  "label": "perSecRewards",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "6"
                },
                {
                  "label": "stakingStatus",
                  "type": "t_bool",
                  "offset": 0,
                  "slot": "7"
                }
              ],
              "numberOfBytes": "256"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            }
          },
          "layoutVersion": "1.1",
          "flat": true
        }
      },
      "IHouseBusiness": {
        "src": "contracts\\interfaces\\IHouseBusiness.sol:5",
        "inherit": [],
        "libraries": [],
        "methods": [
          "collectionName()",
          "collectionNameSymbol()",
          "houseCounter()",
          "stakedCounter()",
          "soldedCounter()",
          "hTypeCounter()",
          "minPrice()",
          "maxPrice()",
          "penalty()",
          "royalty()",
          "historyTypes(uint256)",
          "houseHistories(uint256)",
          "allMembers(address)",
          "allHouses(uint256)",
          "stakedNfts(address)",
          "setMinMaxHousePrice(uint256,uint256)",
          "setConfigToken(address)",
          "isMember()",
          "addMember(address)",
          "removeMember(address)",
          "tokenURI(uint256)",
          "setPayable(uint256,address,bool)",
          "mintHouse(string,string,string,string,uint256)",
          "addAllowList(uint256,address)",
          "removeAllowList(uint256,address)",
          "checkAllowedList(uint256,address)",
          "addHistory(uint256,uint256,string,string,string,string,string,uint256)",
          "getHistory(uint256)",
          "editHistory(uint256,uint256,string,string,string,string,string,uint256)",
          "getHistoryType()",
          "addOrEditHType(uint256,string,bool,bool,bool,bool,bool,bool,bool)",
          "removeHistoryType(uint256)",
          "getMinMaxNFT()",
          "getTokenOwner(uint256)",
          "buyHouseNft(uint256)",
          "sendToken(address,uint256)",
          "changeTokenPrice(uint256,uint256)",
          "getAllHouses()",
          "getAllPayableHouses()",
          "getAllMyHouses()",
          "withdrawToken(uint256)",
          "withdrawETH(uint256)",
          "setAPYConfig(uint256,uint256)",
          "getAllAPYTypes()",
          "stake(uint256,uint256)",
          "unstake(uint256)",
          "stakingFinished(uint256)",
          "totalRewards(address)",
          "claimRewards(address)",
          "getAllMyStakedNFTs()",
          "getTotalInfo()",
          "getAllAPYs()",
          "getPenalty()",
          "setPenalty(uint256)",
          "getRoyalty()",
          "setRoyalty(uint256)",
          "ownerOf(uint256)",
          "getTokenPrice(uint256)",
          "setHouseStakedStatus(uint256,bool)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      }
    },
    {
      "MainCleanContract": {
        "src": "contracts\\Contract.sol:6",
        "version": {
          "withMetadata": "6421e940ca2c08cec604e64c4e3802894c030e3491305b8df865d9e1c9e89aac",
          "withoutMetadata": "4b8cbb4879901533fe49280ca430f3230d2cf4cb717e76bb4a9404845cd178f8",
          "linkedWithoutMetadata": "4b8cbb4879901533fe49280ca430f3230d2cf4cb717e76bb4a9404845cd178f8"
        },
        "inherit": [],
        "libraries": [],
        "methods": [
          "(address)",
          "ccCreation(string,string,address,string,uint256,uint256,uint256,string)",
          "getAllContractsByOwner()",
          "getAllContractsBySigner()",
          "getContractById(uint256)",
          "addContractSigner(uint256,address)",
          "signContract(uint256)",
          "sendNotify(address,string,uint256)",
          "getUploadedCounter()",
          "getAllNotifies()",
          "calcDiv(uint256,uint256)",
          "toString(bytes)",
          "addressToString(address)",
          "uintToString(uint256)",
          "bytesToString(bytes32)",
          "transferContractOwnership(uint256,address,address)"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "MainCleanContract",
            "src": "contracts\\Contract.sol:52"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "ccCounter",
              "offset": 0,
              "slot": "0",
              "type": "t_uint256",
              "contract": "MainCleanContract",
              "src": "contracts\\Contract.sol:8"
            },
            {
              "label": "houseNFTAddress",
              "offset": 0,
              "slot": "1",
              "type": "t_address",
              "contract": "MainCleanContract",
              "src": "contracts\\Contract.sol:11"
            },
            {
              "label": "allCleanContracts",
              "offset": 0,
              "slot": "2",
              "type": "t_mapping(t_uint256,t_struct(CleanContract)39_storage)",
              "contract": "MainCleanContract",
              "src": "contracts\\Contract.sol:44"
            },
            {
              "label": "allContractsByOwner",
              "offset": 0,
              "slot": "3",
              "type": "t_mapping(t_address,t_array(t_uint256)dyn_storage)",
              "contract": "MainCleanContract",
              "src": "contracts\\Contract.sol:46"
            },
            {
              "label": "allContractsBySigner",
              "offset": 0,
              "slot": "4",
              "type": "t_mapping(t_address,t_array(t_uint256)dyn_storage)",
              "contract": "MainCleanContract",
              "src": "contracts\\Contract.sol:48"
            },
            {
              "label": "allNotifies",
              "offset": 0,
              "slot": "5",
              "type": "t_mapping(t_address,t_array(t_struct(Notify)52_storage)dyn_storage)",
              "contract": "MainCleanContract",
              "src": "contracts\\Contract.sol:50"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            },
            "t_array(t_struct(Notify)52_storage)dyn_storage": {
              "label": "struct MainCleanContract.Notify[]",
              "numberOfBytes": "32"
            },
            "t_array(t_uint256)dyn_storage": {
              "label": "uint256[]",
              "numberOfBytes": "32"
            },
            "t_bool": {
              "label": "bool",
              "numberOfBytes": "1"
            },
            "t_mapping(t_address,t_array(t_struct(Notify)52_storage)dyn_storage)": {
              "label": "mapping(address => struct MainCleanContract.Notify[])",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_array(t_uint256)dyn_storage)": {
              "label": "mapping(address => uint256[])",
              "numberOfBytes": "32"
            },
            "t_mapping(t_uint256,t_struct(CleanContract)39_storage)": {
              "label": "mapping(uint256 => struct MainCleanContract.CleanContract)",
              "numberOfBytes": "32"
            },
            "t_string_storage": {
              "label": "string",
              "numberOfBytes": "32"
            },
            "t_struct(CleanContract)39_storage": {
              "label": "struct MainCleanContract.CleanContract",
              "members": [
                {
                  "label": "contractId",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "0"
                },
                {
                  "label": "companyName",
                  "type": "t_string_storage",
                  "offset": 0,
                  "slot": "1"
                },
                {
                  "label": "contractType",
                  "type": "t_string_storage",
                  "offset": 0,
                  "slot": "2"
                },
                {
                  "label": "contractURI",
                  "type": "t_string_storage",
                  "offset": 0,
                  "slot": "3"
                },
                {
                  "label": "dateFrom",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "4"
                },
                {
                  "label": "dateTo",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "5"
                },
                {
                  "label": "agreedPrice",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "6"
                },
                {
                  "label": "currency",
                  "type": "t_string_storage",
                  "offset": 0,
                  "slot": "7"
                },
                {
                  "label": "creator",
                  "type": "t_address",
                  "offset": 0,
                  "slot": "8"
                },
                {
                  "label": "owner",
                  "type": "t_address",
                  "offset": 0,
                  "slot": "9"
                },
                {
                  "label": "creatorApproval",
                  "type": "t_bool",
                  "offset": 20,
                  "slot": "9"
                },
                {
                  "label": "creatorSignDate",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "10"
                },
                {
                  "label": "contractSigner",
                  "type": "t_address",
                  "offset": 0,
                  "slot": "11"
                },
                {
                  "label": "signerApproval",
                  "type": "t_bool",
                  "offset": 20,
                  "slot": "11"
                },
                {
                  "label": "signerSignDate",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "12"
                },
                {
                  "label": "status",
                  "type": "t_string_storage",
                  "offset": 0,
                  "slot": "13"
                }
              ],
              "numberOfBytes": "448"
            },
            "t_struct(Notify)52_storage": {
              "label": "struct MainCleanContract.Notify",
              "members": [
                {
                  "label": "nSender",
                  "type": "t_address",
                  "offset": 0,
                  "slot": "0"
                },
                {
                  "label": "nReceiver",
                  "type": "t_address",
                  "offset": 0,
                  "slot": "1"
                },
                {
                  "label": "ccID",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "2"
                },
                {
                  "label": "notifySentTime",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "3"
                },
                {
                  "label": "notifyContent",
                  "type": "t_string_storage",
                  "offset": 0,
                  "slot": "4"
                },
                {
                  "label": "status",
                  "type": "t_bool",
                  "offset": 0,
                  "slot": "5"
                }
              ],
              "numberOfBytes": "192"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            }
          },
          "layoutVersion": "1.1",
          "flat": true
        }
      }
    },
    {
      "IERC20": {
        "src": "@openzeppelin\\contracts\\token\\ERC20\\IERC20.sol:9",
        "inherit": [],
        "libraries": [],
        "methods": [
          "totalSupply()",
          "balanceOf(address)",
          "transfer(address,uint256)",
          "allowance(address,address)",
          "approve(address,uint256)",
          "transferFrom(address,address,uint256)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "ERC721": {
        "src": "@openzeppelin\\contracts\\token\\ERC721\\ERC721.sol:19",
        "version": {
          "withMetadata": "311027b738fb50ea92c84baf68eacb931adf05de03da13635a661dc9c5b03f73",
          "withoutMetadata": "9ec7f439077c3b762bc3aa6a17c55aba7a78d240190c9c7814df896455a0f780",
          "linkedWithoutMetadata": "9ec7f439077c3b762bc3aa6a17c55aba7a78d240190c9c7814df896455a0f780"
        },
        "inherit": [
          "IERC721Metadata",
          "IERC721",
          "ERC165",
          "IERC165",
          "Context"
        ],
        "libraries": [
          "Address",
          "Strings"
        ],
        "methods": [
          "(string,string)",
          "supportsInterface(bytes4)",
          "balanceOf(address)",
          "ownerOf(uint256)",
          "name()",
          "symbol()",
          "tokenURI(uint256)",
          "approve(address,uint256)",
          "getApproved(uint256)",
          "setApprovalForAll(address,bool)",
          "isApprovedForAll(address,address)",
          "transferFrom(address,address,uint256)",
          "safeTransferFrom(address,address,uint256)",
          "safeTransferFrom(address,address,uint256,bytes)"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "ERC721",
            "src": "@openzeppelin\\contracts\\token\\ERC721\\ERC721.sol:44"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "_name",
              "offset": 0,
              "slot": "0",
              "type": "t_string_storage",
              "contract": "ERC721",
              "src": "@openzeppelin\\contracts\\token\\ERC721\\ERC721.sol:24"
            },
            {
              "label": "_symbol",
              "offset": 0,
              "slot": "1",
              "type": "t_string_storage",
              "contract": "ERC721",
              "src": "@openzeppelin\\contracts\\token\\ERC721\\ERC721.sol:27"
            },
            {
              "label": "_owners",
              "offset": 0,
              "slot": "2",
              "type": "t_mapping(t_uint256,t_address)",
              "contract": "ERC721",
              "src": "@openzeppelin\\contracts\\token\\ERC721\\ERC721.sol:30"
            },
            {
              "label": "_balances",
              "offset": 0,
              "slot": "3",
              "type": "t_mapping(t_address,t_uint256)",
              "contract": "ERC721",
              "src": "@openzeppelin\\contracts\\token\\ERC721\\ERC721.sol:33"
            },
            {
              "label": "_tokenApprovals",
              "offset": 0,
              "slot": "4",
              "type": "t_mapping(t_uint256,t_address)",
              "contract": "ERC721",
              "src": "@openzeppelin\\contracts\\token\\ERC721\\ERC721.sol:36"
            },
            {
              "label": "_operatorApprovals",
              "offset": 0,
              "slot": "5",
              "type": "t_mapping(t_address,t_mapping(t_address,t_bool))",
              "contract": "ERC721",
              "src": "@openzeppelin\\contracts\\token\\ERC721\\ERC721.sol:39"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            },
            "t_bool": {
              "label": "bool",
              "numberOfBytes": "1"
            },
            "t_mapping(t_address,t_bool)": {
              "label": "mapping(address => bool)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_mapping(t_address,t_bool))": {
              "label": "mapping(address => mapping(address => bool))",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_uint256)": {
              "label": "mapping(address => uint256)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_uint256,t_address)": {
              "label": "mapping(uint256 => address)",
              "numberOfBytes": "32"
            },
            "t_string_storage": {
              "label": "string",
              "numberOfBytes": "32"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            }
          },
          "layoutVersion": "1.1",
          "flat": true
        }
      },
      "IERC721": {
        "src": "@openzeppelin\\contracts\\token\\ERC721\\IERC721.sol:11",
        "inherit": [
          "IERC165"
        ],
        "libraries": [],
        "methods": [
          "balanceOf(address)",
          "ownerOf(uint256)",
          "safeTransferFrom(address,address,uint256,bytes)",
          "safeTransferFrom(address,address,uint256)",
          "transferFrom(address,address,uint256)",
          "approve(address,uint256)",
          "setApprovalForAll(address,bool)",
          "getApproved(uint256)",
          "isApprovedForAll(address,address)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "IERC721Receiver": {
        "src": "@openzeppelin\\contracts\\token\\ERC721\\IERC721Receiver.sol:11",
        "inherit": [],
        "libraries": [],
        "methods": [
          "onERC721Received(address,address,uint256,bytes)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "ERC721URIStorage": {
        "src": "@openzeppelin\\contracts\\token\\ERC721\\extensions\\ERC721URIStorage.sol:11",
        "inherit": [
          "ERC721",
          "IERC721Metadata",
          "IERC721",
          "ERC165",
          "IERC165",
          "Context"
        ],
        "libraries": [
          "Strings"
        ],
        "methods": [
          "tokenURI(uint256)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [
            {
              "label": "_name",
              "offset": 0,
              "slot": "0",
              "type": "t_string_storage",
              "contract": "ERC721",
              "src": "@openzeppelin\\contracts\\token\\ERC721\\ERC721.sol:24"
            },
            {
              "label": "_symbol",
              "offset": 0,
              "slot": "1",
              "type": "t_string_storage",
              "contract": "ERC721",
              "src": "@openzeppelin\\contracts\\token\\ERC721\\ERC721.sol:27"
            },
            {
              "label": "_owners",
              "offset": 0,
              "slot": "2",
              "type": "t_mapping(t_uint256,t_address)",
              "contract": "ERC721",
              "src": "@openzeppelin\\contracts\\token\\ERC721\\ERC721.sol:30"
            },
            {
              "label": "_balances",
              "offset": 0,
              "slot": "3",
              "type": "t_mapping(t_address,t_uint256)",
              "contract": "ERC721",
              "src": "@openzeppelin\\contracts\\token\\ERC721\\ERC721.sol:33"
            },
            {
              "label": "_tokenApprovals",
              "offset": 0,
              "slot": "4",
              "type": "t_mapping(t_uint256,t_address)",
              "contract": "ERC721",
              "src": "@openzeppelin\\contracts\\token\\ERC721\\ERC721.sol:36"
            },
            {
              "label": "_operatorApprovals",
              "offset": 0,
              "slot": "5",
              "type": "t_mapping(t_address,t_mapping(t_address,t_bool))",
              "contract": "ERC721",
              "src": "@openzeppelin\\contracts\\token\\ERC721\\ERC721.sol:39"
            },
            {
              "label": "_tokenURIs",
              "offset": 0,
              "slot": "6",
              "type": "t_mapping(t_uint256,t_string_storage)",
              "contract": "ERC721URIStorage",
              "src": "@openzeppelin\\contracts\\token\\ERC721\\extensions\\ERC721URIStorage.sol:15"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            },
            "t_bool": {
              "label": "bool",
              "numberOfBytes": "1"
            },
            "t_mapping(t_address,t_bool)": {
              "label": "mapping(address => bool)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_mapping(t_address,t_bool))": {
              "label": "mapping(address => mapping(address => bool))",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_uint256)": {
              "label": "mapping(address => uint256)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_uint256,t_address)": {
              "label": "mapping(uint256 => address)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_uint256,t_string_storage)": {
              "label": "mapping(uint256 => string)",
              "numberOfBytes": "32"
            },
            "t_string_storage": {
              "label": "string",
              "numberOfBytes": "32"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            }
          },
          "layoutVersion": "1.1",
          "flat": true
        }
      },
      "IERC721Metadata": {
        "src": "@openzeppelin\\contracts\\token\\ERC721\\extensions\\IERC721Metadata.sol:12",
        "inherit": [
          "IERC721",
          "IERC165"
        ],
        "libraries": [],
        "methods": [
          "name()",
          "symbol()",
          "tokenURI(uint256)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "Address": {
        "src": "@openzeppelin\\contracts\\utils\\Address.sol:9",
        "version": {
          "withMetadata": "a0500f265408d7c0dbf75da3f9e44a5c2ee85e18bb1b58fe491ffcfa4ea7fd9b",
          "withoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db",
          "linkedWithoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db"
        },
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [
          {
            "kind": "delegatecall",
            "src": "@openzeppelin\\contracts\\utils\\Address.sol:185"
          }
        ],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "Context": {
        "src": "@openzeppelin\\contracts\\utils\\Context.sol:16",
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "Strings": {
        "src": "@openzeppelin\\contracts\\utils\\Strings.sol:11",
        "version": {
          "withMetadata": "c385b5200dd723f945d28b88358d79ca1b5c0f71c28cbbab9acf6d6f3fd15593",
          "withoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db",
          "linkedWithoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db"
        },
        "inherit": [],
        "libraries": [
          "Math"
        ],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "ERC165": {
        "src": "@openzeppelin\\contracts\\utils\\introspection\\ERC165.sol:22",
        "inherit": [
          "IERC165"
        ],
        "libraries": [],
        "methods": [
          "supportsInterface(bytes4)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "IERC165": {
        "src": "@openzeppelin\\contracts\\utils\\introspection\\IERC165.sol:15",
        "inherit": [],
        "libraries": [],
        "methods": [
          "supportsInterface(bytes4)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "Math": {
        "src": "@openzeppelin\\contracts\\utils\\math\\Math.sol:9",
        "version": {
          "withMetadata": "fcaf39e5e702f2902d6ef00c1def75c9800e8d2a0a78a87cf542096cafc7a4b0",
          "withoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db",
          "linkedWithoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db"
        },
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "HouseBusiness": {
        "src": "contracts\\HouseBusiness.sol:12",
        "version": {
          "withMetadata": "827e722dc1958249c447b7edd9a714d07314eae8430fd1c1d33e9a0def413eb5",
          "withoutMetadata": "1862e5ae97320da791d7db782a15324479fb2493575b5653bfcfe666d5a56178",
          "linkedWithoutMetadata": "1862e5ae97320da791d7db782a15324479fb2493575b5653bfcfe666d5a56178"
        },
        "inherit": [
          "ERC721URIStorage",
          "ERC721",
          "IERC721Metadata",
          "IERC721",
          "ERC165",
          "IERC165",
          "Context"
        ],
        "libraries": [],
        "methods": [
          "(address)",
          "setMinMaxHousePrice(uint256,uint256)",
          "setConfigToken(address)",
          "isMember()",
          "addMember(address)",
          "removeMember(address)",
          "tokenURI(uint256)",
          "setCContractAddress(address)",
          "setStakingContractAddress(address)",
          "setPayable(uint256,address,bool)",
          "mintHouse(string,string,string,string,uint256)",
          "addAllowList(uint256,address)",
          "removeAllowList(uint256,address)",
          "checkAllowedList(uint256,address)",
          "addHistory(uint256,uint256,uint256,string,string,string,string,string,uint256)",
          "getHistory(uint256)",
          "editHistory(uint256,uint256,string,string,string,string,string,uint256)",
          "getHistoryType()",
          "addOrEditHType(uint256,string,bool,bool,bool,bool,bool,bool,bool)",
          "removeHistoryType(uint256)",
          "getMinMaxNFT()",
          "getTokenOwner(uint256)",
          "disconnectContract(uint256,uint256,uint256)",
          "buyHouseNft(uint256)",
          "sendToken(address,uint256)",
          "changeTokenPrice(uint256,uint256)",
          "getAllHouses()",
          "getAllPayableHouses()",
          "getAllMyHouses()",
          "withdrawToken(uint256)",
          "withdrawETH(uint256)",
          "getTotalInfo()",
          "getTokenPrice(uint256)",
          "setHouseStakedStatus(uint256,bool)",
          "getRoyaltyCreator()",
          "setRoyaltyCreator(uint256)",
          "getRoyaltyMarket()",
          "setRoyaltyMarket(uint256)"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "HouseBusiness",
            "src": "contracts\\HouseBusiness.sol:94"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "_name",
              "offset": 0,
              "slot": "0",
              "type": "t_string_storage",
              "contract": "ERC721",
              "src": "@openzeppelin\\contracts\\token\\ERC721\\ERC721.sol:24"
            },
            {
              "label": "_symbol",
              "offset": 0,
              "slot": "1",
              "type": "t_string_storage",
              "contract": "ERC721",
              "src": "@openzeppelin\\contracts\\token\\ERC721\\ERC721.sol:27"
            },
            {
              "label": "_owners",
              "offset": 0,
              "slot": "2",
              "type": "t_mapping(t_uint256,t_address)",
              "contract": "ERC721",
              "src": "@openzeppelin\\contracts\\token\\ERC721\\ERC721.sol:30"
            },
            {
              "label": "_balances",
              "offset": 0,
              "slot": "3",
              "type": "t_mapping(t_address,t_uint256)",
              "contract": "ERC721",
              "src": "@openzeppelin\\contracts\\token\\ERC721\\ERC721.sol:33"
            },
            {
              "label": "_tokenApprovals",
              "offset": 0,
              "slot": "4",
              "type": "t_mapping(t_uint256,t_address)",
              "contract": "ERC721",
              "src": "@openzeppelin\\contracts\\token\\ERC721\\ERC721.sol:36"
            },
            {
              "label": "_operatorApprovals",
              "offset": 0,
              "slot": "5",
              "type": "t_mapping(t_address,t_mapping(t_address,t_bool))",
              "contract": "ERC721",
              "src": "@openzeppelin\\contracts\\token\\ERC721\\ERC721.sol:39"
            },
            {
              "label": "_tokenURIs",
              "offset": 0,
              "slot": "6",
              "type": "t_mapping(t_uint256,t_string_storage)",
              "contract": "ERC721URIStorage",
              "src": "@openzeppelin\\contracts\\token\\ERC721\\extensions\\ERC721URIStorage.sol:15"
            },
            {
              "label": "collectionName",
              "offset": 0,
              "slot": "7",
              "type": "t_string_storage",
              "contract": "HouseBusiness",
              "src": "contracts\\HouseBusiness.sol:14"
            },
            {
              "label": "collectionNameSymbol",
              "offset": 0,
              "slot": "8",
              "type": "t_string_storage",
              "contract": "HouseBusiness",
              "src": "contracts\\HouseBusiness.sol:16"
            },
            {
              "label": "houseCounter",
              "offset": 0,
              "slot": "9",
              "type": "t_uint256",
              "contract": "HouseBusiness",
              "src": "contracts\\HouseBusiness.sol:18"
            },
            {
              "label": "soldedCounter",
              "offset": 0,
              "slot": "10",
              "type": "t_uint256",
              "contract": "HouseBusiness",
              "src": "contracts\\HouseBusiness.sol:21"
            },
            {
              "label": "hTypeCounter",
              "offset": 0,
              "slot": "11",
              "type": "t_uint256",
              "contract": "HouseBusiness",
              "src": "contracts\\HouseBusiness.sol:23"
            },
            {
              "label": "_token",
              "offset": 0,
              "slot": "12",
              "type": "t_contract(IERC20)77",
              "contract": "HouseBusiness",
              "src": "contracts\\HouseBusiness.sol:25"
            },
            {
              "label": "minPrice",
              "offset": 0,
              "slot": "13",
              "type": "t_uint256",
              "contract": "HouseBusiness",
              "src": "contracts\\HouseBusiness.sol:27"
            },
            {
              "label": "maxPrice",
              "offset": 0,
              "slot": "14",
              "type": "t_uint256",
              "contract": "HouseBusiness",
              "src": "contracts\\HouseBusiness.sol:29"
            },
            {
              "label": "royaltyCreator",
              "offset": 0,
              "slot": "15",
              "type": "t_uint256",
              "contract": "HouseBusiness",
              "src": "contracts\\HouseBusiness.sol:31"
            },
            {
              "label": "royaltyMarket",
              "offset": 0,
              "slot": "16",
              "type": "t_uint256",
              "contract": "HouseBusiness",
              "src": "contracts\\HouseBusiness.sol:32"
            },
            {
              "label": "cContract",
              "offset": 0,
              "slot": "17",
              "type": "t_contract(IMainCleanContract)5621",
              "contract": "HouseBusiness",
              "src": "contracts\\HouseBusiness.sol:34"
            },
            {
              "label": "historyTypes",
              "offset": 0,
              "slot": "18",
              "type": "t_array(t_struct(HistoryType)2835_storage)dyn_storage",
              "contract": "HouseBusiness",
              "src": "contracts\\HouseBusiness.sol:75"
            },
            {
              "label": "houseHistories",
              "offset": 0,
              "slot": "19",
              "type": "t_mapping(t_uint256,t_array(t_struct(History)2816_storage)dyn_storage)",
              "contract": "HouseBusiness",
              "src": "contracts\\HouseBusiness.sol:77"
            },
            {
              "label": "allMembers",
              "offset": 0,
              "slot": "20",
              "type": "t_mapping(t_address,t_bool)",
              "contract": "HouseBusiness",
              "src": "contracts\\HouseBusiness.sol:79"
            },
            {
              "label": "allHouses",
              "offset": 0,
              "slot": "21",
              "type": "t_mapping(t_uint256,t_struct(House)2799_storage)",
              "contract": "HouseBusiness",
              "src": "contracts\\HouseBusiness.sol:81"
            },
            {
              "label": "allowedList",
              "offset": 0,
              "slot": "22",
              "type": "t_mapping(t_uint256,t_mapping(t_address,t_bool))",
              "contract": "HouseBusiness",
              "src": "contracts\\HouseBusiness.sol:83"
            },
            {
              "label": "stakingContractAddress",
              "offset": 0,
              "slot": "23",
              "type": "t_address",
              "contract": "HouseBusiness",
              "src": "contracts\\HouseBusiness.sol:86"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            },
            "t_array(t_struct(History)2816_storage)dyn_storage": {
              "label": "struct HouseBusiness.History[]",
              "numberOfBytes": "32"
            },
            "t_array(t_struct(HistoryType)2835_storage)dyn_storage": {
              "label": "struct HouseBusiness.HistoryType[]",
              "numberOfBytes": "32"
            },
            "t_bool": {
              "label": "bool",
              "numberOfBytes": "1"
            },
            "t_contract(IERC20)77": {
              "label": "contract IERC20",
              "numberOfBytes": "20"
            },
            "t_contract(IMainCleanContract)5621": {
              "label": "contract IMainCleanContract",
              "numberOfBytes": "20"
            },
            "t_mapping(t_address,t_bool)": {
              "label": "mapping(address => bool)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_mapping(t_address,t_bool))": {
              "label": "mapping(address => mapping(address => bool))",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_uint256)": {
              "label": "mapping(address => uint256)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_uint256,t_address)": {
              "label": "mapping(uint256 => address)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_uint256,t_array(t_struct(History)2816_storage)dyn_storage)": {
              "label": "mapping(uint256 => struct HouseBusiness.History[])",
              "numberOfBytes": "32"
            },
            "t_mapping(t_uint256,t_mapping(t_address,t_bool))": {
              "label": "mapping(uint256 => mapping(address => bool))",
              "numberOfBytes": "32"
            },
            "t_mapping(t_uint256,t_string_storage)": {
              "label": "mapping(uint256 => string)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_uint256,t_struct(House)2799_storage)": {
              "label": "mapping(uint256 => struct HouseBusiness.House)",
              "numberOfBytes": "32"
            },
            "t_string_storage": {
              "label": "string",
              "numberOfBytes": "32"
            },
            "t_struct(History)2816_storage": {
              "label": "struct HouseBusiness.History",
              "members": [
                {
                  "label": "hID",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "0"
                },
                {
                  "label": "contractId",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "1"
                },
                {
                  "label": "houseImg",
                  "type": "t_string_storage",
                  "offset": 0,
                  "slot": "2"
                },
                {
                  "label": "houseBrand",
                  "type": "t_string_storage",
                  "offset": 0,
                  "slot": "3"
                },
                {
                  "label": "desc",
                  "type": "t_string_storage",
                  "offset": 0,
                  "slot": "4"
                },
                {
                  "label": "history",
                  "type": "t_string_storage",
                  "offset": 0,
                  "slot": "5"
                },
                {
                  "label": "brandType",
                  "type": "t_string_storage",
                  "offset": 0,
                  "slot": "6"
                },
                {
                  "label": "yearField",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "7"
                }
              ],
              "numberOfBytes": "256"
            },
            "t_struct(HistoryType)2835_storage": {
              "label": "struct HouseBusiness.HistoryType",
              "members": [
                {
                  "label": "hID",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "0"
                },
                {
                  "label": "hLabel",
                  "type": "t_string_storage",
                  "offset": 0,
                  "slot": "1"
                },
                {
                  "label": "connectContract",
                  "type": "t_bool",
                  "offset": 0,
                  "slot": "2"
                },
                {
                  "label": "imgNeed",
                  "type": "t_bool",
                  "offset": 1,
                  "slot": "2"
                },
                {
                  "label": "brandNeed",
                  "type": "t_bool",
                  "offset": 2,
                  "slot": "2"
                },
                {
                  "label": "descNeed",
                  "type": "t_bool",
                  "offset": 3,
                  "slot": "2"
                },
                {
                  "label": "brandTypeNeed",
                  "type": "t_bool",
                  "offset": 4,
                  "slot": "2"
                },
                {
                  "label": "yearNeed",
                  "type": "t_bool",
                  "offset": 5,
                  "slot": "2"
                },
                {
                  "label": "checkMark",
                  "type": "t_bool",
                  "offset": 6,
                  "slot": "2"
                }
              ],
              "numberOfBytes": "96"
            },
            "t_struct(House)2799_storage": {
              "label": "struct HouseBusiness.House",
              "members": [
                {
                  "label": "tokenId",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "0"
                },
                {
                  "label": "tokenName",
                  "type": "t_string_storage",
                  "offset": 0,
                  "slot": "1"
                },
                {
                  "label": "tokenURI",
                  "type": "t_string_storage",
                  "offset": 0,
                  "slot": "2"
                },
                {
                  "label": "tokenType",
                  "type": "t_string_storage",
                  "offset": 0,
                  "slot": "3"
                },
                {
                  "label": "currentOwner",
                  "type": "t_address",
                  "offset": 0,
                  "slot": "4"
                },
                {
                  "label": "previousOwner",
                  "type": "t_address",
                  "offset": 0,
                  "slot": "5"
                },
                {
                  "label": "buyer",
                  "type": "t_address",
                  "offset": 0,
                  "slot": "6"
                },
                {
                  "label": "creator",
                  "type": "t_address",
                  "offset": 0,
                  "slot": "7"
                },
                {
                  "label": "price",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "8"
                },
                {
                  "label": "numberOfTransfers",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "9"
                },
                {
                  "label": "nftPayable",
                  "type": "t_bool",
                  "offset": 0,
                  "slot": "10"
                },
                {
                  "label": "staked",
                  "type": "t_bool",
                  "offset": 1,
                  "slot": "10"
                },
                {
                  "label": "soldstatus",
                  "type": "t_bool",
                  "offset": 2,
                  "slot": "10"
                }
              ],
              "numberOfBytes": "352"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            }
          },
          "layoutVersion": "1.1",
          "flat": true
        }
      },
      "HouseStaking": {
        "src": "contracts\\Staking.sol:6",
        "version": {
          "withMetadata": "1631da731d0e2b52c81a316e137d89d443991d8823c4d4d4d9c3929bc729a164",
          "withoutMetadata": "92078b7ed6da756ae03297e8c845495c2d09ac69b7981d78a9050acf26a3d7f4",
          "linkedWithoutMetadata": "92078b7ed6da756ae03297e8c845495c2d09ac69b7981d78a9050acf26a3d7f4"
        },
        "inherit": [],
        "libraries": [],
        "methods": [
          "(address,address)",
          "calcDiv(uint256,uint256)",
          "setAPYConfig(uint256,uint256)",
          "getAllAPYTypes()",
          "stake(uint256,uint256)",
          "unstake(uint256)",
          "stakingFinished(uint256)",
          "totalRewards(address)",
          "claimRewards(address)",
          "getAllMyStakedNFTs()",
          "getAllAPYs()",
          "getPenalty()",
          "setPenalty(uint256)",
          "updateAPYConfig(uint256,uint256)"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "HouseStaking",
            "src": "contracts\\Staking.sol:33"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "stakedCounter",
              "offset": 0,
              "slot": "0",
              "type": "t_uint256",
              "contract": "HouseStaking",
              "src": "contracts\\Staking.sol:8"
            },
            {
              "label": "penalty",
              "offset": 0,
              "slot": "1",
              "type": "t_uint256",
              "contract": "HouseStaking",
              "src": "contracts\\Staking.sol:10"
            },
            {
              "label": "APYtypes",
              "offset": 0,
              "slot": "2",
              "type": "t_array(t_uint256)dyn_storage",
              "contract": "HouseStaking",
              "src": "contracts\\Staking.sol:12"
            },
            {
              "label": "APYConfig",
              "offset": 0,
              "slot": "3",
              "type": "t_mapping(t_uint256,t_uint256)",
              "contract": "HouseStaking",
              "src": "contracts\\Staking.sol:15"
            },
            {
              "label": "stakedNfts",
              "offset": 0,
              "slot": "4",
              "type": "t_mapping(t_address,t_array(t_struct(StakedNft)4634_storage)dyn_storage)",
              "contract": "HouseStaking",
              "src": "contracts\\Staking.sol:16"
            },
            {
              "label": "tokenAddress",
              "offset": 0,
              "slot": "5",
              "type": "t_address",
              "contract": "HouseStaking",
              "src": "contracts\\Staking.sol:18"
            },
            {
              "label": "houseNFTAddress",
              "offset": 0,
              "slot": "6",
              "type": "t_address",
              "contract": "HouseStaking",
              "src": "contracts\\Staking.sol:19"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            },
            "t_array(t_struct(StakedNft)4634_storage)dyn_storage": {
              "label": "struct HouseStaking.StakedNft[]",
              "numberOfBytes": "32"
            },
            "t_array(t_uint256)dyn_storage": {
              "label": "uint256[]",
              "numberOfBytes": "32"
            },
            "t_bool": {
              "label": "bool",
              "numberOfBytes": "1"
            },
            "t_mapping(t_address,t_array(t_struct(StakedNft)4634_storage)dyn_storage)": {
              "label": "mapping(address => struct HouseStaking.StakedNft[])",
              "numberOfBytes": "32"
            },
            "t_mapping(t_uint256,t_uint256)": {
              "label": "mapping(uint256 => uint256)",
              "numberOfBytes": "32"
            },
            "t_struct(StakedNft)4634_storage": {
              "label": "struct HouseStaking.StakedNft",
              "members": [
                {
                  "label": "owner",
                  "type": "t_address",
                  "offset": 0,
                  "slot": "0"
                },
                {
                  "label": "tokenId",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "1"
                },
                {
                  "label": "startedDate",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "2"
                },
                {
                  "label": "endDate",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "3"
                },
                {
                  "label": "claimDate",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "4"
                },
                {
                  "label": "stakingType",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "5"
                },
                {
                  "label": "perSecRewards",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "6"
                },
                {
                  "label": "stakingStatus",
                  "type": "t_bool",
                  "offset": 0,
                  "slot": "7"
                }
              ],
              "numberOfBytes": "256"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            }
          },
          "layoutVersion": "1.1",
          "flat": true
        }
      },
      "IMainCleanContract": {
        "src": "contracts\\interfaces\\IContract.sol:6",
        "inherit": [],
        "libraries": [],
        "methods": [
          "getContractById(uint256)",
          "transferContractOwnership(uint256,address,address)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "IHouseBusiness": {
        "src": "contracts\\interfaces\\IHouseBusiness.sol:5",
        "inherit": [],
        "libraries": [],
        "methods": [
          "collectionName()",
          "collectionNameSymbol()",
          "houseCounter()",
          "stakedCounter()",
          "soldedCounter()",
          "hTypeCounter()",
          "minPrice()",
          "maxPrice()",
          "penalty()",
          "royalty()",
          "historyTypes(uint256)",
          "houseHistories(uint256)",
          "allMembers(address)",
          "allHouses(uint256)",
          "stakedNfts(address)",
          "setMinMaxHousePrice(uint256,uint256)",
          "setConfigToken(address)",
          "isMember()",
          "addMember(address)",
          "removeMember(address)",
          "tokenURI(uint256)",
          "setPayable(uint256,address,bool)",
          "mintHouse(string,string,string,string,uint256)",
          "addAllowList(uint256,address)",
          "removeAllowList(uint256,address)",
          "checkAllowedList(uint256,address)",
          "addHistory(uint256,uint256,string,string,string,string,string,uint256)",
          "getHistory(uint256)",
          "editHistory(uint256,uint256,string,string,string,string,string,uint256)",
          "getHistoryType()",
          "addOrEditHType(uint256,string,bool,bool,bool,bool,bool,bool,bool)",
          "removeHistoryType(uint256)",
          "getMinMaxNFT()",
          "getTokenOwner(uint256)",
          "buyHouseNft(uint256)",
          "sendToken(address,uint256)",
          "changeTokenPrice(uint256,uint256)",
          "getAllHouses()",
          "getAllPayableHouses()",
          "getAllMyHouses()",
          "withdrawToken(uint256)",
          "withdrawETH(uint256)",
          "setAPYConfig(uint256,uint256)",
          "getAllAPYTypes()",
          "stake(uint256,uint256)",
          "unstake(uint256)",
          "stakingFinished(uint256)",
          "totalRewards(address)",
          "claimRewards(address)",
          "getAllMyStakedNFTs()",
          "getTotalInfo()",
          "getAllAPYs()",
          "getPenalty()",
          "setPenalty(uint256)",
          "getRoyalty()",
          "setRoyalty(uint256)",
          "ownerOf(uint256)",
          "getTokenPrice(uint256)",
          "setHouseStakedStatus(uint256,bool)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "IStaking": {
        "src": "contracts\\interfaces\\IStaking.sol:5",
        "inherit": [],
        "libraries": [],
        "methods": [
          "stakedCounter()"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      }
    },
    {
      "MainCleanContract": {
        "src": "contracts\\Contract.sol:6",
        "version": {
          "withMetadata": "6421e940ca2c08cec604e64c4e3802894c030e3491305b8df865d9e1c9e89aac",
          "withoutMetadata": "4b8cbb4879901533fe49280ca430f3230d2cf4cb717e76bb4a9404845cd178f8",
          "linkedWithoutMetadata": "4b8cbb4879901533fe49280ca430f3230d2cf4cb717e76bb4a9404845cd178f8"
        },
        "inherit": [],
        "libraries": [],
        "methods": [
          "(address)",
          "ccCreation(string,string,address,string,uint256,uint256,uint256,string)",
          "getAllContractsByOwner()",
          "getAllContractsBySigner()",
          "getContractById(uint256)",
          "addContractSigner(uint256,address)",
          "signContract(uint256)",
          "sendNotify(address,string,uint256)",
          "getUploadedCounter()",
          "getAllNotifies()",
          "calcDiv(uint256,uint256)",
          "toString(bytes)",
          "addressToString(address)",
          "uintToString(uint256)",
          "bytesToString(bytes32)",
          "transferContractOwnership(uint256,address,address)"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "MainCleanContract",
            "src": "contracts\\Contract.sol:52"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "ccCounter",
              "offset": 0,
              "slot": "0",
              "type": "t_uint256",
              "contract": "MainCleanContract",
              "src": "contracts\\Contract.sol:8"
            },
            {
              "label": "houseNFTAddress",
              "offset": 0,
              "slot": "1",
              "type": "t_address",
              "contract": "MainCleanContract",
              "src": "contracts\\Contract.sol:11"
            },
            {
              "label": "allCleanContracts",
              "offset": 0,
              "slot": "2",
              "type": "t_mapping(t_uint256,t_struct(CleanContract)39_storage)",
              "contract": "MainCleanContract",
              "src": "contracts\\Contract.sol:44"
            },
            {
              "label": "allContractsByOwner",
              "offset": 0,
              "slot": "3",
              "type": "t_mapping(t_address,t_array(t_uint256)dyn_storage)",
              "contract": "MainCleanContract",
              "src": "contracts\\Contract.sol:46"
            },
            {
              "label": "allContractsBySigner",
              "offset": 0,
              "slot": "4",
              "type": "t_mapping(t_address,t_array(t_uint256)dyn_storage)",
              "contract": "MainCleanContract",
              "src": "contracts\\Contract.sol:48"
            },
            {
              "label": "allNotifies",
              "offset": 0,
              "slot": "5",
              "type": "t_mapping(t_address,t_array(t_struct(Notify)52_storage)dyn_storage)",
              "contract": "MainCleanContract",
              "src": "contracts\\Contract.sol:50"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            },
            "t_array(t_struct(Notify)52_storage)dyn_storage": {
              "label": "struct MainCleanContract.Notify[]",
              "numberOfBytes": "32"
            },
            "t_array(t_uint256)dyn_storage": {
              "label": "uint256[]",
              "numberOfBytes": "32"
            },
            "t_bool": {
              "label": "bool",
              "numberOfBytes": "1"
            },
            "t_mapping(t_address,t_array(t_struct(Notify)52_storage)dyn_storage)": {
              "label": "mapping(address => struct MainCleanContract.Notify[])",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_array(t_uint256)dyn_storage)": {
              "label": "mapping(address => uint256[])",
              "numberOfBytes": "32"
            },
            "t_mapping(t_uint256,t_struct(CleanContract)39_storage)": {
              "label": "mapping(uint256 => struct MainCleanContract.CleanContract)",
              "numberOfBytes": "32"
            },
            "t_string_storage": {
              "label": "string",
              "numberOfBytes": "32"
            },
            "t_struct(CleanContract)39_storage": {
              "label": "struct MainCleanContract.CleanContract",
              "members": [
                {
                  "label": "contractId",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "0"
                },
                {
                  "label": "companyName",
                  "type": "t_string_storage",
                  "offset": 0,
                  "slot": "1"
                },
                {
                  "label": "contractType",
                  "type": "t_string_storage",
                  "offset": 0,
                  "slot": "2"
                },
                {
                  "label": "contractURI",
                  "type": "t_string_storage",
                  "offset": 0,
                  "slot": "3"
                },
                {
                  "label": "dateFrom",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "4"
                },
                {
                  "label": "dateTo",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "5"
                },
                {
                  "label": "agreedPrice",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "6"
                },
                {
                  "label": "currency",
                  "type": "t_string_storage",
                  "offset": 0,
                  "slot": "7"
                },
                {
                  "label": "creator",
                  "type": "t_address",
                  "offset": 0,
                  "slot": "8"
                },
                {
                  "label": "owner",
                  "type": "t_address",
                  "offset": 0,
                  "slot": "9"
                },
                {
                  "label": "creatorApproval",
                  "type": "t_bool",
                  "offset": 20,
                  "slot": "9"
                },
                {
                  "label": "creatorSignDate",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "10"
                },
                {
                  "label": "contractSigner",
                  "type": "t_address",
                  "offset": 0,
                  "slot": "11"
                },
                {
                  "label": "signerApproval",
                  "type": "t_bool",
                  "offset": 20,
                  "slot": "11"
                },
                {
                  "label": "signerSignDate",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "12"
                },
                {
                  "label": "status",
                  "type": "t_string_storage",
                  "offset": 0,
                  "slot": "13"
                }
              ],
              "numberOfBytes": "448"
            },
            "t_struct(Notify)52_storage": {
              "label": "struct MainCleanContract.Notify",
              "members": [
                {
                  "label": "nSender",
                  "type": "t_address",
                  "offset": 0,
                  "slot": "0"
                },
                {
                  "label": "nReceiver",
                  "type": "t_address",
                  "offset": 0,
                  "slot": "1"
                },
                {
                  "label": "ccID",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "2"
                },
                {
                  "label": "notifySentTime",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "3"
                },
                {
                  "label": "notifyContent",
                  "type": "t_string_storage",
                  "offset": 0,
                  "slot": "4"
                },
                {
                  "label": "status",
                  "type": "t_bool",
                  "offset": 0,
                  "slot": "5"
                }
              ],
              "numberOfBytes": "192"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            }
          },
          "layoutVersion": "1.1",
          "flat": true
        }
      }
    },
    {
      "ThirdParty": {
        "src": "contracts\\ThirdParty.sol:5",
        "version": {
          "withMetadata": "cbf5b2fae6668ee45b86827e485cbed39526db15e39a77a193d607720ff0015c",
          "withoutMetadata": "c7f6b899dcbca6a360ab204550ba9b4fec9f4cae1bcd2f5879cfa3965e9d550f",
          "linkedWithoutMetadata": "c7f6b899dcbca6a360ab204550ba9b4fec9f4cae1bcd2f5879cfa3965e9d550f"
        },
        "inherit": [],
        "libraries": [],
        "methods": [
          "getAllCategories()",
          "addCategory(string,uint256[])",
          "editCategory(uint256,string,uint256[])",
          "deleteCategory(uint256)",
          "getAllProperties()",
          "addProperty(string)",
          "editProperty(uint256,string)",
          "deleteProperty(uint256)",
          "getPackagesByCategory(uint256)",
          "addPackage(uint256,string,uint256,uint256,uint256,bool[])",
          "editPackage(uint256,uint256,string,uint256,uint256,uint256,bool[])",
          "deletePackage(uint256,uint256)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [
            {
              "label": "categoryCounter",
              "offset": 0,
              "slot": "0",
              "type": "t_uint256",
              "contract": "ThirdParty",
              "src": "contracts\\ThirdParty.sol:12"
            },
            {
              "label": "packageCounter",
              "offset": 0,
              "slot": "1",
              "type": "t_uint256",
              "contract": "ThirdParty",
              "src": "contracts\\ThirdParty.sol:23"
            },
            {
              "label": "propertyCounter",
              "offset": 0,
              "slot": "2",
              "type": "t_uint256",
              "contract": "ThirdParty",
              "src": "contracts\\ThirdParty.sol:29"
            },
            {
              "label": "allCategories",
              "offset": 0,
              "slot": "3",
              "type": "t_array(t_struct(Category)11_storage)dyn_storage",
              "contract": "ThirdParty",
              "src": "contracts\\ThirdParty.sol:31"
            },
            {
              "label": "allPackages",
              "offset": 0,
              "slot": "4",
              "type": "t_mapping(t_uint256,t_array(t_struct(Package)29_storage)dyn_storage)",
              "contract": "ThirdParty",
              "src": "contracts\\ThirdParty.sol:34"
            },
            {
              "label": "allProperties",
              "offset": 0,
              "slot": "5",
              "type": "t_array(t_struct(Property)36_storage)dyn_storage",
              "contract": "ThirdParty",
              "src": "contracts\\ThirdParty.sol:37"
            }
          ],
          "types": {
            "t_array(t_bool)dyn_storage": {
              "label": "bool[]",
              "numberOfBytes": "32"
            },
            "t_array(t_struct(Category)11_storage)dyn_storage": {
              "label": "struct ThirdParty.Category[]",
              "numberOfBytes": "32"
            },
            "t_array(t_struct(Package)29_storage)dyn_storage": {
              "label": "struct ThirdParty.Package[]",
              "numberOfBytes": "32"
            },
            "t_array(t_struct(Property)36_storage)dyn_storage": {
              "label": "struct ThirdParty.Property[]",
              "numberOfBytes": "32"
            },
            "t_array(t_uint256)dyn_storage": {
              "label": "uint256[]",
              "numberOfBytes": "32"
            },
            "t_bool": {
              "label": "bool",
              "numberOfBytes": "1"
            },
            "t_mapping(t_uint256,t_array(t_struct(Package)29_storage)dyn_storage)": {
              "label": "mapping(uint256 => struct ThirdParty.Package[])",
              "numberOfBytes": "32"
            },
            "t_string_storage": {
              "label": "string",
              "numberOfBytes": "32"
            },
            "t_struct(Category)11_storage": {
              "label": "struct ThirdParty.Category",
              "members": [
                {
                  "label": "categoryID",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "0"
                },
                {
                  "label": "cartegoryName",
                  "type": "t_string_storage",
                  "offset": 0,
                  "slot": "1"
                },
                {
                  "label": "properties",
                  "type": "t_array(t_uint256)dyn_storage",
                  "offset": 0,
                  "slot": "2"
                },
                {
                  "label": "visible",
                  "type": "t_bool",
                  "offset": 0,
                  "slot": "3"
                }
              ],
              "numberOfBytes": "128"
            },
            "t_struct(Package)29_storage": {
              "label": "struct ThirdParty.Package",
              "members": [
                {
                  "label": "categoryID",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "0"
                },
                {
                  "label": "packageID",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "1"
                },
                {
                  "label": "packageName",
                  "type": "t_string_storage",
                  "offset": 0,
                  "slot": "2"
                },
                {
                  "label": "price",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "3"
                },
                {
                  "label": "period",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "4"
                },
                {
                  "label": "dataLimit",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "5"
                },
                {
                  "label": "propertyVisible",
                  "type": "t_array(t_bool)dyn_storage",
                  "offset": 0,
                  "slot": "6"
                }
              ],
              "numberOfBytes": "224"
            },
            "t_struct(Property)36_storage": {
              "label": "struct ThirdParty.Property",
              "members": [
                {
                  "label": "propertyID",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "0"
                },
                {
                  "label": "propertyName",
                  "type": "t_string_storage",
                  "offset": 0,
                  "slot": "1"
                }
              ],
              "numberOfBytes": "64"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            }
          },
          "layoutVersion": "1.1",
          "flat": true
        }
      }
    },
    {
      "Context": {
        "src": "contracts\\TokenContract.sol:22",
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "HouseBusinessToken": {
        "src": "contracts\\TokenContract.sol:33",
        "version": {
          "withMetadata": "e53f4b9234e67266e4442dec09d084a17cbe6b1b4fb90d62776f0d6f370f0570",
          "withoutMetadata": "f5d2b294cac19c78c593798b4a1bae04c45c82839cbcffe3cc910bb441f21259",
          "linkedWithoutMetadata": "f5d2b294cac19c78c593798b4a1bae04c45c82839cbcffe3cc910bb441f21259"
        },
        "inherit": [
          "IERC20Metadata",
          "IERC20",
          "Context"
        ],
        "libraries": [],
        "methods": [
          "()",
          "name()",
          "symbol()",
          "decimals()",
          "totalSupply()",
          "balanceOf(address)",
          "transfer(address,uint256)",
          "allowance(address,address)",
          "approve(address,uint256)",
          "transferFrom(address,address,uint256)",
          "increaseAllowance(address,uint256)",
          "decreaseAllowance(address,uint256)",
          "_mint(address,uint256)"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "HouseBusinessToken",
            "src": "contracts\\TokenContract.sol:42"
          },
          {
            "kind": "state-variable-assignment",
            "name": "_name",
            "src": "contracts\\TokenContract.sol:37"
          },
          {
            "kind": "state-variable-assignment",
            "name": "_symbol",
            "src": "contracts\\TokenContract.sol:38"
          },
          {
            "kind": "state-variable-assignment",
            "name": "_decimals",
            "src": "contracts\\TokenContract.sol:39"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "_balances",
              "offset": 0,
              "slot": "0",
              "type": "t_mapping(t_address,t_uint256)",
              "contract": "HouseBusinessToken",
              "src": "contracts\\TokenContract.sol:34"
            },
            {
              "label": "_allowances",
              "offset": 0,
              "slot": "1",
              "type": "t_mapping(t_address,t_mapping(t_address,t_uint256))",
              "contract": "HouseBusinessToken",
              "src": "contracts\\TokenContract.sol:35"
            },
            {
              "label": "_totalSupply",
              "offset": 0,
              "slot": "2",
              "type": "t_uint256",
              "contract": "HouseBusinessToken",
              "src": "contracts\\TokenContract.sol:36"
            },
            {
              "label": "_name",
              "offset": 0,
              "slot": "3",
              "type": "t_string_storage",
              "contract": "HouseBusinessToken",
              "src": "contracts\\TokenContract.sol:37"
            },
            {
              "label": "_symbol",
              "offset": 0,
              "slot": "4",
              "type": "t_string_storage",
              "contract": "HouseBusinessToken",
              "src": "contracts\\TokenContract.sol:38"
            },
            {
              "label": "_decimals",
              "offset": 0,
              "slot": "5",
              "type": "t_uint8",
              "contract": "HouseBusinessToken",
              "src": "contracts\\TokenContract.sol:39"
            },
            {
              "label": "_owner",
              "offset": 1,
              "slot": "5",
              "type": "t_address",
              "contract": "HouseBusinessToken",
              "src": "contracts\\TokenContract.sol:40"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            },
            "t_mapping(t_address,t_mapping(t_address,t_uint256))": {
              "label": "mapping(address => mapping(address => uint256))",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_uint256)": {
              "label": "mapping(address => uint256)",
              "numberOfBytes": "32"
            },
            "t_string_storage": {
              "label": "string",
              "numberOfBytes": "32"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            },
            "t_uint8": {
              "label": "uint8",
              "numberOfBytes": "1"
            }
          },
          "layoutVersion": "1.1",
          "flat": true
        }
      },
      "IERC20": {
        "src": "contracts\\TokenContract.sol:5",
        "inherit": [],
        "libraries": [],
        "methods": [
          "totalSupply()",
          "balanceOf(address)",
          "transfer(address,uint256)",
          "allowance(address,address)",
          "approve(address,uint256)",
          "transferFrom(address,address,uint256)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "IERC20Metadata": {
        "src": "contracts\\TokenContract.sol:16",
        "inherit": [
          "IERC20"
        ],
        "libraries": [],
        "methods": [
          "name()",
          "symbol()",
          "decimals()"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      }
    },
    {
      "IPRC20": {
        "src": "contracts\\interfaces\\IPRC20.sol:4",
        "inherit": [],
        "libraries": [],
        "methods": [
          "totalSupply()",
          "balanceOf(address)",
          "transfer(address,uint256)",
          "allowance(address,address)",
          "approve(address,uint256)",
          "transferFrom(address,address,uint256)",
          "decimals()"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      }
    },
    {
      "IERC20": {
        "src": "@openzeppelin\\contracts\\token\\ERC20\\IERC20.sol:9",
        "inherit": [],
        "libraries": [],
        "methods": [
          "totalSupply()",
          "balanceOf(address)",
          "transfer(address,uint256)",
          "allowance(address,address)",
          "approve(address,uint256)",
          "transferFrom(address,address,uint256)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "ERC721": {
        "src": "@openzeppelin\\contracts\\token\\ERC721\\ERC721.sol:19",
        "version": {
          "withMetadata": "311027b738fb50ea92c84baf68eacb931adf05de03da13635a661dc9c5b03f73",
          "withoutMetadata": "9ec7f439077c3b762bc3aa6a17c55aba7a78d240190c9c7814df896455a0f780",
          "linkedWithoutMetadata": "9ec7f439077c3b762bc3aa6a17c55aba7a78d240190c9c7814df896455a0f780"
        },
        "inherit": [
          "IERC721Metadata",
          "IERC721",
          "ERC165",
          "IERC165",
          "Context"
        ],
        "libraries": [
          "Address",
          "Strings"
        ],
        "methods": [
          "(string,string)",
          "supportsInterface(bytes4)",
          "balanceOf(address)",
          "ownerOf(uint256)",
          "name()",
          "symbol()",
          "tokenURI(uint256)",
          "approve(address,uint256)",
          "getApproved(uint256)",
          "setApprovalForAll(address,bool)",
          "isApprovedForAll(address,address)",
          "transferFrom(address,address,uint256)",
          "safeTransferFrom(address,address,uint256)",
          "safeTransferFrom(address,address,uint256,bytes)"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "ERC721",
            "src": "@openzeppelin\\contracts\\token\\ERC721\\ERC721.sol:44"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "_name",
              "offset": 0,
              "slot": "0",
              "type": "t_string_storage",
              "contract": "ERC721",
              "src": "@openzeppelin\\contracts\\token\\ERC721\\ERC721.sol:24"
            },
            {
              "label": "_symbol",
              "offset": 0,
              "slot": "1",
              "type": "t_string_storage",
              "contract": "ERC721",
              "src": "@openzeppelin\\contracts\\token\\ERC721\\ERC721.sol:27"
            },
            {
              "label": "_owners",
              "offset": 0,
              "slot": "2",
              "type": "t_mapping(t_uint256,t_address)",
              "contract": "ERC721",
              "src": "@openzeppelin\\contracts\\token\\ERC721\\ERC721.sol:30"
            },
            {
              "label": "_balances",
              "offset": 0,
              "slot": "3",
              "type": "t_mapping(t_address,t_uint256)",
              "contract": "ERC721",
              "src": "@openzeppelin\\contracts\\token\\ERC721\\ERC721.sol:33"
            },
            {
              "label": "_tokenApprovals",
              "offset": 0,
              "slot": "4",
              "type": "t_mapping(t_uint256,t_address)",
              "contract": "ERC721",
              "src": "@openzeppelin\\contracts\\token\\ERC721\\ERC721.sol:36"
            },
            {
              "label": "_operatorApprovals",
              "offset": 0,
              "slot": "5",
              "type": "t_mapping(t_address,t_mapping(t_address,t_bool))",
              "contract": "ERC721",
              "src": "@openzeppelin\\contracts\\token\\ERC721\\ERC721.sol:39"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            },
            "t_bool": {
              "label": "bool",
              "numberOfBytes": "1"
            },
            "t_mapping(t_address,t_bool)": {
              "label": "mapping(address => bool)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_mapping(t_address,t_bool))": {
              "label": "mapping(address => mapping(address => bool))",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_uint256)": {
              "label": "mapping(address => uint256)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_uint256,t_address)": {
              "label": "mapping(uint256 => address)",
              "numberOfBytes": "32"
            },
            "t_string_storage": {
              "label": "string",
              "numberOfBytes": "32"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            }
          },
          "layoutVersion": "1.1",
          "flat": true
        }
      },
      "IERC721": {
        "src": "@openzeppelin\\contracts\\token\\ERC721\\IERC721.sol:11",
        "inherit": [
          "IERC165"
        ],
        "libraries": [],
        "methods": [
          "balanceOf(address)",
          "ownerOf(uint256)",
          "safeTransferFrom(address,address,uint256,bytes)",
          "safeTransferFrom(address,address,uint256)",
          "transferFrom(address,address,uint256)",
          "approve(address,uint256)",
          "setApprovalForAll(address,bool)",
          "getApproved(uint256)",
          "isApprovedForAll(address,address)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "IERC721Receiver": {
        "src": "@openzeppelin\\contracts\\token\\ERC721\\IERC721Receiver.sol:11",
        "inherit": [],
        "libraries": [],
        "methods": [
          "onERC721Received(address,address,uint256,bytes)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "ERC721URIStorage": {
        "src": "@openzeppelin\\contracts\\token\\ERC721\\extensions\\ERC721URIStorage.sol:11",
        "inherit": [
          "ERC721",
          "IERC721Metadata",
          "IERC721",
          "ERC165",
          "IERC165",
          "Context"
        ],
        "libraries": [
          "Strings"
        ],
        "methods": [
          "tokenURI(uint256)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [
            {
              "label": "_name",
              "offset": 0,
              "slot": "0",
              "type": "t_string_storage",
              "contract": "ERC721",
              "src": "@openzeppelin\\contracts\\token\\ERC721\\ERC721.sol:24"
            },
            {
              "label": "_symbol",
              "offset": 0,
              "slot": "1",
              "type": "t_string_storage",
              "contract": "ERC721",
              "src": "@openzeppelin\\contracts\\token\\ERC721\\ERC721.sol:27"
            },
            {
              "label": "_owners",
              "offset": 0,
              "slot": "2",
              "type": "t_mapping(t_uint256,t_address)",
              "contract": "ERC721",
              "src": "@openzeppelin\\contracts\\token\\ERC721\\ERC721.sol:30"
            },
            {
              "label": "_balances",
              "offset": 0,
              "slot": "3",
              "type": "t_mapping(t_address,t_uint256)",
              "contract": "ERC721",
              "src": "@openzeppelin\\contracts\\token\\ERC721\\ERC721.sol:33"
            },
            {
              "label": "_tokenApprovals",
              "offset": 0,
              "slot": "4",
              "type": "t_mapping(t_uint256,t_address)",
              "contract": "ERC721",
              "src": "@openzeppelin\\contracts\\token\\ERC721\\ERC721.sol:36"
            },
            {
              "label": "_operatorApprovals",
              "offset": 0,
              "slot": "5",
              "type": "t_mapping(t_address,t_mapping(t_address,t_bool))",
              "contract": "ERC721",
              "src": "@openzeppelin\\contracts\\token\\ERC721\\ERC721.sol:39"
            },
            {
              "label": "_tokenURIs",
              "offset": 0,
              "slot": "6",
              "type": "t_mapping(t_uint256,t_string_storage)",
              "contract": "ERC721URIStorage",
              "src": "@openzeppelin\\contracts\\token\\ERC721\\extensions\\ERC721URIStorage.sol:15"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            },
            "t_bool": {
              "label": "bool",
              "numberOfBytes": "1"
            },
            "t_mapping(t_address,t_bool)": {
              "label": "mapping(address => bool)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_mapping(t_address,t_bool))": {
              "label": "mapping(address => mapping(address => bool))",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_uint256)": {
              "label": "mapping(address => uint256)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_uint256,t_address)": {
              "label": "mapping(uint256 => address)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_uint256,t_string_storage)": {
              "label": "mapping(uint256 => string)",
              "numberOfBytes": "32"
            },
            "t_string_storage": {
              "label": "string",
              "numberOfBytes": "32"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            }
          },
          "layoutVersion": "1.1",
          "flat": true
        }
      },
      "IERC721Metadata": {
        "src": "@openzeppelin\\contracts\\token\\ERC721\\extensions\\IERC721Metadata.sol:12",
        "inherit": [
          "IERC721",
          "IERC165"
        ],
        "libraries": [],
        "methods": [
          "name()",
          "symbol()",
          "tokenURI(uint256)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "Address": {
        "src": "@openzeppelin\\contracts\\utils\\Address.sol:9",
        "version": {
          "withMetadata": "a0500f265408d7c0dbf75da3f9e44a5c2ee85e18bb1b58fe491ffcfa4ea7fd9b",
          "withoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db",
          "linkedWithoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db"
        },
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [
          {
            "kind": "delegatecall",
            "src": "@openzeppelin\\contracts\\utils\\Address.sol:185"
          }
        ],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "Context": {
        "src": "@openzeppelin\\contracts\\utils\\Context.sol:16",
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "Strings": {
        "src": "@openzeppelin\\contracts\\utils\\Strings.sol:11",
        "version": {
          "withMetadata": "c385b5200dd723f945d28b88358d79ca1b5c0f71c28cbbab9acf6d6f3fd15593",
          "withoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db",
          "linkedWithoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db"
        },
        "inherit": [],
        "libraries": [
          "Math"
        ],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "ERC165": {
        "src": "@openzeppelin\\contracts\\utils\\introspection\\ERC165.sol:22",
        "inherit": [
          "IERC165"
        ],
        "libraries": [],
        "methods": [
          "supportsInterface(bytes4)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "IERC165": {
        "src": "@openzeppelin\\contracts\\utils\\introspection\\IERC165.sol:15",
        "inherit": [],
        "libraries": [],
        "methods": [
          "supportsInterface(bytes4)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "Math": {
        "src": "@openzeppelin\\contracts\\utils\\math\\Math.sol:9",
        "version": {
          "withMetadata": "fcaf39e5e702f2902d6ef00c1def75c9800e8d2a0a78a87cf542096cafc7a4b0",
          "withoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db",
          "linkedWithoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db"
        },
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "HouseBusiness": {
        "src": "contracts\\HouseBusiness.sol:12",
        "version": {
          "withMetadata": "827e722dc1958249c447b7edd9a714d07314eae8430fd1c1d33e9a0def413eb5",
          "withoutMetadata": "1862e5ae97320da791d7db782a15324479fb2493575b5653bfcfe666d5a56178",
          "linkedWithoutMetadata": "1862e5ae97320da791d7db782a15324479fb2493575b5653bfcfe666d5a56178"
        },
        "inherit": [
          "ERC721URIStorage",
          "ERC721",
          "IERC721Metadata",
          "IERC721",
          "ERC165",
          "IERC165",
          "Context"
        ],
        "libraries": [],
        "methods": [
          "(address)",
          "setMinMaxHousePrice(uint256,uint256)",
          "setConfigToken(address)",
          "isMember()",
          "addMember(address)",
          "removeMember(address)",
          "tokenURI(uint256)",
          "setCContractAddress(address)",
          "setStakingContractAddress(address)",
          "setPayable(uint256,address,bool)",
          "mintHouse(string,string,string,string,uint256)",
          "addAllowList(uint256,address)",
          "removeAllowList(uint256,address)",
          "checkAllowedList(uint256,address)",
          "addHistory(uint256,uint256,uint256,string,string,string,string,string,uint256)",
          "getHistory(uint256)",
          "editHistory(uint256,uint256,string,string,string,string,string,uint256)",
          "getHistoryType()",
          "addOrEditHType(uint256,string,bool,bool,bool,bool,bool,bool,bool)",
          "removeHistoryType(uint256)",
          "getMinMaxNFT()",
          "getTokenOwner(uint256)",
          "disconnectContract(uint256,uint256,uint256)",
          "buyHouseNft(uint256)",
          "sendToken(address,uint256)",
          "changeTokenPrice(uint256,uint256)",
          "getAllHouses()",
          "getAllPayableHouses()",
          "getAllMyHouses()",
          "withdrawToken(uint256)",
          "withdrawETH(uint256)",
          "getTotalInfo()",
          "getTokenPrice(uint256)",
          "setHouseStakedStatus(uint256,bool)",
          "getRoyaltyCreator()",
          "setRoyaltyCreator(uint256)",
          "getRoyaltyMarket()",
          "setRoyaltyMarket(uint256)"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "HouseBusiness",
            "src": "contracts\\HouseBusiness.sol:94"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "_name",
              "offset": 0,
              "slot": "0",
              "type": "t_string_storage",
              "contract": "ERC721",
              "src": "@openzeppelin\\contracts\\token\\ERC721\\ERC721.sol:24"
            },
            {
              "label": "_symbol",
              "offset": 0,
              "slot": "1",
              "type": "t_string_storage",
              "contract": "ERC721",
              "src": "@openzeppelin\\contracts\\token\\ERC721\\ERC721.sol:27"
            },
            {
              "label": "_owners",
              "offset": 0,
              "slot": "2",
              "type": "t_mapping(t_uint256,t_address)",
              "contract": "ERC721",
              "src": "@openzeppelin\\contracts\\token\\ERC721\\ERC721.sol:30"
            },
            {
              "label": "_balances",
              "offset": 0,
              "slot": "3",
              "type": "t_mapping(t_address,t_uint256)",
              "contract": "ERC721",
              "src": "@openzeppelin\\contracts\\token\\ERC721\\ERC721.sol:33"
            },
            {
              "label": "_tokenApprovals",
              "offset": 0,
              "slot": "4",
              "type": "t_mapping(t_uint256,t_address)",
              "contract": "ERC721",
              "src": "@openzeppelin\\contracts\\token\\ERC721\\ERC721.sol:36"
            },
            {
              "label": "_operatorApprovals",
              "offset": 0,
              "slot": "5",
              "type": "t_mapping(t_address,t_mapping(t_address,t_bool))",
              "contract": "ERC721",
              "src": "@openzeppelin\\contracts\\token\\ERC721\\ERC721.sol:39"
            },
            {
              "label": "_tokenURIs",
              "offset": 0,
              "slot": "6",
              "type": "t_mapping(t_uint256,t_string_storage)",
              "contract": "ERC721URIStorage",
              "src": "@openzeppelin\\contracts\\token\\ERC721\\extensions\\ERC721URIStorage.sol:15"
            },
            {
              "label": "collectionName",
              "offset": 0,
              "slot": "7",
              "type": "t_string_storage",
              "contract": "HouseBusiness",
              "src": "contracts\\HouseBusiness.sol:14"
            },
            {
              "label": "collectionNameSymbol",
              "offset": 0,
              "slot": "8",
              "type": "t_string_storage",
              "contract": "HouseBusiness",
              "src": "contracts\\HouseBusiness.sol:16"
            },
            {
              "label": "houseCounter",
              "offset": 0,
              "slot": "9",
              "type": "t_uint256",
              "contract": "HouseBusiness",
              "src": "contracts\\HouseBusiness.sol:18"
            },
            {
              "label": "soldedCounter",
              "offset": 0,
              "slot": "10",
              "type": "t_uint256",
              "contract": "HouseBusiness",
              "src": "contracts\\HouseBusiness.sol:21"
            },
            {
              "label": "hTypeCounter",
              "offset": 0,
              "slot": "11",
              "type": "t_uint256",
              "contract": "HouseBusiness",
              "src": "contracts\\HouseBusiness.sol:23"
            },
            {
              "label": "_token",
              "offset": 0,
              "slot": "12",
              "type": "t_contract(IERC20)77",
              "contract": "HouseBusiness",
              "src": "contracts\\HouseBusiness.sol:25"
            },
            {
              "label": "minPrice",
              "offset": 0,
              "slot": "13",
              "type": "t_uint256",
              "contract": "HouseBusiness",
              "src": "contracts\\HouseBusiness.sol:27"
            },
            {
              "label": "maxPrice",
              "offset": 0,
              "slot": "14",
              "type": "t_uint256",
              "contract": "HouseBusiness",
              "src": "contracts\\HouseBusiness.sol:29"
            },
            {
              "label": "royaltyCreator",
              "offset": 0,
              "slot": "15",
              "type": "t_uint256",
              "contract": "HouseBusiness",
              "src": "contracts\\HouseBusiness.sol:31"
            },
            {
              "label": "royaltyMarket",
              "offset": 0,
              "slot": "16",
              "type": "t_uint256",
              "contract": "HouseBusiness",
              "src": "contracts\\HouseBusiness.sol:32"
            },
            {
              "label": "cContract",
              "offset": 0,
              "slot": "17",
              "type": "t_contract(IMainCleanContract)4645",
              "contract": "HouseBusiness",
              "src": "contracts\\HouseBusiness.sol:34"
            },
            {
              "label": "historyTypes",
              "offset": 0,
              "slot": "18",
              "type": "t_array(t_struct(HistoryType)2835_storage)dyn_storage",
              "contract": "HouseBusiness",
              "src": "contracts\\HouseBusiness.sol:75"
            },
            {
              "label": "houseHistories",
              "offset": 0,
              "slot": "19",
              "type": "t_mapping(t_uint256,t_array(t_struct(History)2816_storage)dyn_storage)",
              "contract": "HouseBusiness",
              "src": "contracts\\HouseBusiness.sol:77"
            },
            {
              "label": "allMembers",
              "offset": 0,
              "slot": "20",
              "type": "t_mapping(t_address,t_bool)",
              "contract": "HouseBusiness",
              "src": "contracts\\HouseBusiness.sol:79"
            },
            {
              "label": "allHouses",
              "offset": 0,
              "slot": "21",
              "type": "t_mapping(t_uint256,t_struct(House)2799_storage)",
              "contract": "HouseBusiness",
              "src": "contracts\\HouseBusiness.sol:81"
            },
            {
              "label": "allowedList",
              "offset": 0,
              "slot": "22",
              "type": "t_mapping(t_uint256,t_mapping(t_address,t_bool))",
              "contract": "HouseBusiness",
              "src": "contracts\\HouseBusiness.sol:83"
            },
            {
              "label": "stakingContractAddress",
              "offset": 0,
              "slot": "23",
              "type": "t_address",
              "contract": "HouseBusiness",
              "src": "contracts\\HouseBusiness.sol:86"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            },
            "t_array(t_struct(History)2816_storage)dyn_storage": {
              "label": "struct HouseBusiness.History[]",
              "numberOfBytes": "32"
            },
            "t_array(t_struct(HistoryType)2835_storage)dyn_storage": {
              "label": "struct HouseBusiness.HistoryType[]",
              "numberOfBytes": "32"
            },
            "t_bool": {
              "label": "bool",
              "numberOfBytes": "1"
            },
            "t_contract(IERC20)77": {
              "label": "contract IERC20",
              "numberOfBytes": "20"
            },
            "t_contract(IMainCleanContract)4645": {
              "label": "contract IMainCleanContract",
              "numberOfBytes": "20"
            },
            "t_mapping(t_address,t_bool)": {
              "label": "mapping(address => bool)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_mapping(t_address,t_bool))": {
              "label": "mapping(address => mapping(address => bool))",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_uint256)": {
              "label": "mapping(address => uint256)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_uint256,t_address)": {
              "label": "mapping(uint256 => address)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_uint256,t_array(t_struct(History)2816_storage)dyn_storage)": {
              "label": "mapping(uint256 => struct HouseBusiness.History[])",
              "numberOfBytes": "32"
            },
            "t_mapping(t_uint256,t_mapping(t_address,t_bool))": {
              "label": "mapping(uint256 => mapping(address => bool))",
              "numberOfBytes": "32"
            },
            "t_mapping(t_uint256,t_string_storage)": {
              "label": "mapping(uint256 => string)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_uint256,t_struct(House)2799_storage)": {
              "label": "mapping(uint256 => struct HouseBusiness.House)",
              "numberOfBytes": "32"
            },
            "t_string_storage": {
              "label": "string",
              "numberOfBytes": "32"
            },
            "t_struct(History)2816_storage": {
              "label": "struct HouseBusiness.History",
              "members": [
                {
                  "label": "hID",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "0"
                },
                {
                  "label": "contractId",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "1"
                },
                {
                  "label": "houseImg",
                  "type": "t_string_storage",
                  "offset": 0,
                  "slot": "2"
                },
                {
                  "label": "houseBrand",
                  "type": "t_string_storage",
                  "offset": 0,
                  "slot": "3"
                },
                {
                  "label": "desc",
                  "type": "t_string_storage",
                  "offset": 0,
                  "slot": "4"
                },
                {
                  "label": "history",
                  "type": "t_string_storage",
                  "offset": 0,
                  "slot": "5"
                },
                {
                  "label": "brandType",
                  "type": "t_string_storage",
                  "offset": 0,
                  "slot": "6"
                },
                {
                  "label": "yearField",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "7"
                }
              ],
              "numberOfBytes": "256"
            },
            "t_struct(HistoryType)2835_storage": {
              "label": "struct HouseBusiness.HistoryType",
              "members": [
                {
                  "label": "hID",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "0"
                },
                {
                  "label": "hLabel",
                  "type": "t_string_storage",
                  "offset": 0,
                  "slot": "1"
                },
                {
                  "label": "connectContract",
                  "type": "t_bool",
                  "offset": 0,
                  "slot": "2"
                },
                {
                  "label": "imgNeed",
                  "type": "t_bool",
                  "offset": 1,
                  "slot": "2"
                },
                {
                  "label": "brandNeed",
                  "type": "t_bool",
                  "offset": 2,
                  "slot": "2"
                },
                {
                  "label": "descNeed",
                  "type": "t_bool",
                  "offset": 3,
                  "slot": "2"
                },
                {
                  "label": "brandTypeNeed",
                  "type": "t_bool",
                  "offset": 4,
                  "slot": "2"
                },
                {
                  "label": "yearNeed",
                  "type": "t_bool",
                  "offset": 5,
                  "slot": "2"
                },
                {
                  "label": "checkMark",
                  "type": "t_bool",
                  "offset": 6,
                  "slot": "2"
                }
              ],
              "numberOfBytes": "96"
            },
            "t_struct(House)2799_storage": {
              "label": "struct HouseBusiness.House",
              "members": [
                {
                  "label": "tokenId",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "0"
                },
                {
                  "label": "tokenName",
                  "type": "t_string_storage",
                  "offset": 0,
                  "slot": "1"
                },
                {
                  "label": "tokenURI",
                  "type": "t_string_storage",
                  "offset": 0,
                  "slot": "2"
                },
                {
                  "label": "tokenType",
                  "type": "t_string_storage",
                  "offset": 0,
                  "slot": "3"
                },
                {
                  "label": "currentOwner",
                  "type": "t_address",
                  "offset": 0,
                  "slot": "4"
                },
                {
                  "label": "previousOwner",
                  "type": "t_address",
                  "offset": 0,
                  "slot": "5"
                },
                {
                  "label": "buyer",
                  "type": "t_address",
                  "offset": 0,
                  "slot": "6"
                },
                {
                  "label": "creator",
                  "type": "t_address",
                  "offset": 0,
                  "slot": "7"
                },
                {
                  "label": "price",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "8"
                },
                {
                  "label": "numberOfTransfers",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "9"
                },
                {
                  "label": "nftPayable",
                  "type": "t_bool",
                  "offset": 0,
                  "slot": "10"
                },
                {
                  "label": "staked",
                  "type": "t_bool",
                  "offset": 1,
                  "slot": "10"
                },
                {
                  "label": "soldstatus",
                  "type": "t_bool",
                  "offset": 2,
                  "slot": "10"
                }
              ],
              "numberOfBytes": "352"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            }
          },
          "layoutVersion": "1.1",
          "flat": true
        }
      },
      "IMainCleanContract": {
        "src": "contracts\\interfaces\\IContract.sol:6",
        "inherit": [],
        "libraries": [],
        "methods": [
          "getContractById(uint256)",
          "transferContractOwnership(uint256,address,address)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "IStaking": {
        "src": "contracts\\interfaces\\IStaking.sol:5",
        "inherit": [],
        "libraries": [],
        "methods": [
          "stakedCounter()"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      }
    },
    {
      "IERC20": {
        "src": "@openzeppelin\\contracts\\token\\ERC20\\IERC20.sol:9",
        "inherit": [],
        "libraries": [],
        "methods": [
          "totalSupply()",
          "balanceOf(address)",
          "transfer(address,uint256)",
          "allowance(address,address)",
          "approve(address,uint256)",
          "transferFrom(address,address,uint256)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "ERC721": {
        "src": "@openzeppelin\\contracts\\token\\ERC721\\ERC721.sol:19",
        "version": {
          "withMetadata": "311027b738fb50ea92c84baf68eacb931adf05de03da13635a661dc9c5b03f73",
          "withoutMetadata": "9ec7f439077c3b762bc3aa6a17c55aba7a78d240190c9c7814df896455a0f780",
          "linkedWithoutMetadata": "9ec7f439077c3b762bc3aa6a17c55aba7a78d240190c9c7814df896455a0f780"
        },
        "inherit": [
          "IERC721Metadata",
          "IERC721",
          "ERC165",
          "IERC165",
          "Context"
        ],
        "libraries": [
          "Address",
          "Strings"
        ],
        "methods": [
          "(string,string)",
          "supportsInterface(bytes4)",
          "balanceOf(address)",
          "ownerOf(uint256)",
          "name()",
          "symbol()",
          "tokenURI(uint256)",
          "approve(address,uint256)",
          "getApproved(uint256)",
          "setApprovalForAll(address,bool)",
          "isApprovedForAll(address,address)",
          "transferFrom(address,address,uint256)",
          "safeTransferFrom(address,address,uint256)",
          "safeTransferFrom(address,address,uint256,bytes)"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "ERC721",
            "src": "@openzeppelin\\contracts\\token\\ERC721\\ERC721.sol:44"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "_name",
              "offset": 0,
              "slot": "0",
              "type": "t_string_storage",
              "contract": "ERC721",
              "src": "@openzeppelin\\contracts\\token\\ERC721\\ERC721.sol:24"
            },
            {
              "label": "_symbol",
              "offset": 0,
              "slot": "1",
              "type": "t_string_storage",
              "contract": "ERC721",
              "src": "@openzeppelin\\contracts\\token\\ERC721\\ERC721.sol:27"
            },
            {
              "label": "_owners",
              "offset": 0,
              "slot": "2",
              "type": "t_mapping(t_uint256,t_address)",
              "contract": "ERC721",
              "src": "@openzeppelin\\contracts\\token\\ERC721\\ERC721.sol:30"
            },
            {
              "label": "_balances",
              "offset": 0,
              "slot": "3",
              "type": "t_mapping(t_address,t_uint256)",
              "contract": "ERC721",
              "src": "@openzeppelin\\contracts\\token\\ERC721\\ERC721.sol:33"
            },
            {
              "label": "_tokenApprovals",
              "offset": 0,
              "slot": "4",
              "type": "t_mapping(t_uint256,t_address)",
              "contract": "ERC721",
              "src": "@openzeppelin\\contracts\\token\\ERC721\\ERC721.sol:36"
            },
            {
              "label": "_operatorApprovals",
              "offset": 0,
              "slot": "5",
              "type": "t_mapping(t_address,t_mapping(t_address,t_bool))",
              "contract": "ERC721",
              "src": "@openzeppelin\\contracts\\token\\ERC721\\ERC721.sol:39"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            },
            "t_bool": {
              "label": "bool",
              "numberOfBytes": "1"
            },
            "t_mapping(t_address,t_bool)": {
              "label": "mapping(address => bool)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_mapping(t_address,t_bool))": {
              "label": "mapping(address => mapping(address => bool))",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_uint256)": {
              "label": "mapping(address => uint256)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_uint256,t_address)": {
              "label": "mapping(uint256 => address)",
              "numberOfBytes": "32"
            },
            "t_string_storage": {
              "label": "string",
              "numberOfBytes": "32"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            }
          },
          "layoutVersion": "1.1",
          "flat": true
        }
      },
      "IERC721": {
        "src": "@openzeppelin\\contracts\\token\\ERC721\\IERC721.sol:11",
        "inherit": [
          "IERC165"
        ],
        "libraries": [],
        "methods": [
          "balanceOf(address)",
          "ownerOf(uint256)",
          "safeTransferFrom(address,address,uint256,bytes)",
          "safeTransferFrom(address,address,uint256)",
          "transferFrom(address,address,uint256)",
          "approve(address,uint256)",
          "setApprovalForAll(address,bool)",
          "getApproved(uint256)",
          "isApprovedForAll(address,address)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "IERC721Receiver": {
        "src": "@openzeppelin\\contracts\\token\\ERC721\\IERC721Receiver.sol:11",
        "inherit": [],
        "libraries": [],
        "methods": [
          "onERC721Received(address,address,uint256,bytes)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "ERC721URIStorage": {
        "src": "@openzeppelin\\contracts\\token\\ERC721\\extensions\\ERC721URIStorage.sol:11",
        "inherit": [
          "ERC721",
          "IERC721Metadata",
          "IERC721",
          "ERC165",
          "IERC165",
          "Context"
        ],
        "libraries": [
          "Strings"
        ],
        "methods": [
          "tokenURI(uint256)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [
            {
              "label": "_name",
              "offset": 0,
              "slot": "0",
              "type": "t_string_storage",
              "contract": "ERC721",
              "src": "@openzeppelin\\contracts\\token\\ERC721\\ERC721.sol:24"
            },
            {
              "label": "_symbol",
              "offset": 0,
              "slot": "1",
              "type": "t_string_storage",
              "contract": "ERC721",
              "src": "@openzeppelin\\contracts\\token\\ERC721\\ERC721.sol:27"
            },
            {
              "label": "_owners",
              "offset": 0,
              "slot": "2",
              "type": "t_mapping(t_uint256,t_address)",
              "contract": "ERC721",
              "src": "@openzeppelin\\contracts\\token\\ERC721\\ERC721.sol:30"
            },
            {
              "label": "_balances",
              "offset": 0,
              "slot": "3",
              "type": "t_mapping(t_address,t_uint256)",
              "contract": "ERC721",
              "src": "@openzeppelin\\contracts\\token\\ERC721\\ERC721.sol:33"
            },
            {
              "label": "_tokenApprovals",
              "offset": 0,
              "slot": "4",
              "type": "t_mapping(t_uint256,t_address)",
              "contract": "ERC721",
              "src": "@openzeppelin\\contracts\\token\\ERC721\\ERC721.sol:36"
            },
            {
              "label": "_operatorApprovals",
              "offset": 0,
              "slot": "5",
              "type": "t_mapping(t_address,t_mapping(t_address,t_bool))",
              "contract": "ERC721",
              "src": "@openzeppelin\\contracts\\token\\ERC721\\ERC721.sol:39"
            },
            {
              "label": "_tokenURIs",
              "offset": 0,
              "slot": "6",
              "type": "t_mapping(t_uint256,t_string_storage)",
              "contract": "ERC721URIStorage",
              "src": "@openzeppelin\\contracts\\token\\ERC721\\extensions\\ERC721URIStorage.sol:15"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            },
            "t_bool": {
              "label": "bool",
              "numberOfBytes": "1"
            },
            "t_mapping(t_address,t_bool)": {
              "label": "mapping(address => bool)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_mapping(t_address,t_bool))": {
              "label": "mapping(address => mapping(address => bool))",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_uint256)": {
              "label": "mapping(address => uint256)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_uint256,t_address)": {
              "label": "mapping(uint256 => address)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_uint256,t_string_storage)": {
              "label": "mapping(uint256 => string)",
              "numberOfBytes": "32"
            },
            "t_string_storage": {
              "label": "string",
              "numberOfBytes": "32"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            }
          },
          "layoutVersion": "1.1",
          "flat": true
        }
      },
      "IERC721Metadata": {
        "src": "@openzeppelin\\contracts\\token\\ERC721\\extensions\\IERC721Metadata.sol:12",
        "inherit": [
          "IERC721",
          "IERC165"
        ],
        "libraries": [],
        "methods": [
          "name()",
          "symbol()",
          "tokenURI(uint256)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "Address": {
        "src": "@openzeppelin\\contracts\\utils\\Address.sol:9",
        "version": {
          "withMetadata": "a0500f265408d7c0dbf75da3f9e44a5c2ee85e18bb1b58fe491ffcfa4ea7fd9b",
          "withoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db",
          "linkedWithoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db"
        },
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [
          {
            "kind": "delegatecall",
            "src": "@openzeppelin\\contracts\\utils\\Address.sol:185"
          }
        ],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "Context": {
        "src": "@openzeppelin\\contracts\\utils\\Context.sol:16",
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "Strings": {
        "src": "@openzeppelin\\contracts\\utils\\Strings.sol:11",
        "version": {
          "withMetadata": "c385b5200dd723f945d28b88358d79ca1b5c0f71c28cbbab9acf6d6f3fd15593",
          "withoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db",
          "linkedWithoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db"
        },
        "inherit": [],
        "libraries": [
          "Math"
        ],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "ERC165": {
        "src": "@openzeppelin\\contracts\\utils\\introspection\\ERC165.sol:22",
        "inherit": [
          "IERC165"
        ],
        "libraries": [],
        "methods": [
          "supportsInterface(bytes4)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "IERC165": {
        "src": "@openzeppelin\\contracts\\utils\\introspection\\IERC165.sol:15",
        "inherit": [],
        "libraries": [],
        "methods": [
          "supportsInterface(bytes4)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "Math": {
        "src": "@openzeppelin\\contracts\\utils\\math\\Math.sol:9",
        "version": {
          "withMetadata": "fcaf39e5e702f2902d6ef00c1def75c9800e8d2a0a78a87cf542096cafc7a4b0",
          "withoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db",
          "linkedWithoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db"
        },
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "HouseBusiness": {
        "src": "contracts\\HouseBusiness.sol:12",
        "version": {
          "withMetadata": "827e722dc1958249c447b7edd9a714d07314eae8430fd1c1d33e9a0def413eb5",
          "withoutMetadata": "1862e5ae97320da791d7db782a15324479fb2493575b5653bfcfe666d5a56178",
          "linkedWithoutMetadata": "1862e5ae97320da791d7db782a15324479fb2493575b5653bfcfe666d5a56178"
        },
        "inherit": [
          "ERC721URIStorage",
          "ERC721",
          "IERC721Metadata",
          "IERC721",
          "ERC165",
          "IERC165",
          "Context"
        ],
        "libraries": [],
        "methods": [
          "(address)",
          "setMinMaxHousePrice(uint256,uint256)",
          "setConfigToken(address)",
          "isMember()",
          "addMember(address)",
          "removeMember(address)",
          "tokenURI(uint256)",
          "setCContractAddress(address)",
          "setStakingContractAddress(address)",
          "setPayable(uint256,address,bool)",
          "mintHouse(string,string,string,string,uint256)",
          "addAllowList(uint256,address)",
          "removeAllowList(uint256,address)",
          "checkAllowedList(uint256,address)",
          "addHistory(uint256,uint256,uint256,string,string,string,string,string,uint256)",
          "getHistory(uint256)",
          "editHistory(uint256,uint256,string,string,string,string,string,uint256)",
          "getHistoryType()",
          "addOrEditHType(uint256,string,bool,bool,bool,bool,bool,bool,bool)",
          "removeHistoryType(uint256)",
          "getMinMaxNFT()",
          "getTokenOwner(uint256)",
          "disconnectContract(uint256,uint256,uint256)",
          "buyHouseNft(uint256)",
          "sendToken(address,uint256)",
          "changeTokenPrice(uint256,uint256)",
          "getAllHouses()",
          "getAllPayableHouses()",
          "getAllMyHouses()",
          "withdrawToken(uint256)",
          "withdrawETH(uint256)",
          "getTotalInfo()",
          "getTokenPrice(uint256)",
          "setHouseStakedStatus(uint256,bool)",
          "getRoyaltyCreator()",
          "setRoyaltyCreator(uint256)",
          "getRoyaltyMarket()",
          "setRoyaltyMarket(uint256)"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "HouseBusiness",
            "src": "contracts\\HouseBusiness.sol:94"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "_name",
              "offset": 0,
              "slot": "0",
              "type": "t_string_storage",
              "contract": "ERC721",
              "src": "@openzeppelin\\contracts\\token\\ERC721\\ERC721.sol:24"
            },
            {
              "label": "_symbol",
              "offset": 0,
              "slot": "1",
              "type": "t_string_storage",
              "contract": "ERC721",
              "src": "@openzeppelin\\contracts\\token\\ERC721\\ERC721.sol:27"
            },
            {
              "label": "_owners",
              "offset": 0,
              "slot": "2",
              "type": "t_mapping(t_uint256,t_address)",
              "contract": "ERC721",
              "src": "@openzeppelin\\contracts\\token\\ERC721\\ERC721.sol:30"
            },
            {
              "label": "_balances",
              "offset": 0,
              "slot": "3",
              "type": "t_mapping(t_address,t_uint256)",
              "contract": "ERC721",
              "src": "@openzeppelin\\contracts\\token\\ERC721\\ERC721.sol:33"
            },
            {
              "label": "_tokenApprovals",
              "offset": 0,
              "slot": "4",
              "type": "t_mapping(t_uint256,t_address)",
              "contract": "ERC721",
              "src": "@openzeppelin\\contracts\\token\\ERC721\\ERC721.sol:36"
            },
            {
              "label": "_operatorApprovals",
              "offset": 0,
              "slot": "5",
              "type": "t_mapping(t_address,t_mapping(t_address,t_bool))",
              "contract": "ERC721",
              "src": "@openzeppelin\\contracts\\token\\ERC721\\ERC721.sol:39"
            },
            {
              "label": "_tokenURIs",
              "offset": 0,
              "slot": "6",
              "type": "t_mapping(t_uint256,t_string_storage)",
              "contract": "ERC721URIStorage",
              "src": "@openzeppelin\\contracts\\token\\ERC721\\extensions\\ERC721URIStorage.sol:15"
            },
            {
              "label": "collectionName",
              "offset": 0,
              "slot": "7",
              "type": "t_string_storage",
              "contract": "HouseBusiness",
              "src": "contracts\\HouseBusiness.sol:14"
            },
            {
              "label": "collectionNameSymbol",
              "offset": 0,
              "slot": "8",
              "type": "t_string_storage",
              "contract": "HouseBusiness",
              "src": "contracts\\HouseBusiness.sol:16"
            },
            {
              "label": "houseCounter",
              "offset": 0,
              "slot": "9",
              "type": "t_uint256",
              "contract": "HouseBusiness",
              "src": "contracts\\HouseBusiness.sol:18"
            },
            {
              "label": "soldedCounter",
              "offset": 0,
              "slot": "10",
              "type": "t_uint256",
              "contract": "HouseBusiness",
              "src": "contracts\\HouseBusiness.sol:21"
            },
            {
              "label": "hTypeCounter",
              "offset": 0,
              "slot": "11",
              "type": "t_uint256",
              "contract": "HouseBusiness",
              "src": "contracts\\HouseBusiness.sol:23"
            },
            {
              "label": "_token",
              "offset": 0,
              "slot": "12",
              "type": "t_contract(IERC20)77",
              "contract": "HouseBusiness",
              "src": "contracts\\HouseBusiness.sol:25"
            },
            {
              "label": "minPrice",
              "offset": 0,
              "slot": "13",
              "type": "t_uint256",
              "contract": "HouseBusiness",
              "src": "contracts\\HouseBusiness.sol:27"
            },
            {
              "label": "maxPrice",
              "offset": 0,
              "slot": "14",
              "type": "t_uint256",
              "contract": "HouseBusiness",
              "src": "contracts\\HouseBusiness.sol:29"
            },
            {
              "label": "royaltyCreator",
              "offset": 0,
              "slot": "15",
              "type": "t_uint256",
              "contract": "HouseBusiness",
              "src": "contracts\\HouseBusiness.sol:31"
            },
            {
              "label": "royaltyMarket",
              "offset": 0,
              "slot": "16",
              "type": "t_uint256",
              "contract": "HouseBusiness",
              "src": "contracts\\HouseBusiness.sol:32"
            },
            {
              "label": "cContract",
              "offset": 0,
              "slot": "17",
              "type": "t_contract(IMainCleanContract)5621",
              "contract": "HouseBusiness",
              "src": "contracts\\HouseBusiness.sol:34"
            },
            {
              "label": "historyTypes",
              "offset": 0,
              "slot": "18",
              "type": "t_array(t_struct(HistoryType)2835_storage)dyn_storage",
              "contract": "HouseBusiness",
              "src": "contracts\\HouseBusiness.sol:75"
            },
            {
              "label": "houseHistories",
              "offset": 0,
              "slot": "19",
              "type": "t_mapping(t_uint256,t_array(t_struct(History)2816_storage)dyn_storage)",
              "contract": "HouseBusiness",
              "src": "contracts\\HouseBusiness.sol:77"
            },
            {
              "label": "allMembers",
              "offset": 0,
              "slot": "20",
              "type": "t_mapping(t_address,t_bool)",
              "contract": "HouseBusiness",
              "src": "contracts\\HouseBusiness.sol:79"
            },
            {
              "label": "allHouses",
              "offset": 0,
              "slot": "21",
              "type": "t_mapping(t_uint256,t_struct(House)2799_storage)",
              "contract": "HouseBusiness",
              "src": "contracts\\HouseBusiness.sol:81"
            },
            {
              "label": "allowedList",
              "offset": 0,
              "slot": "22",
              "type": "t_mapping(t_uint256,t_mapping(t_address,t_bool))",
              "contract": "HouseBusiness",
              "src": "contracts\\HouseBusiness.sol:83"
            },
            {
              "label": "stakingContractAddress",
              "offset": 0,
              "slot": "23",
              "type": "t_address",
              "contract": "HouseBusiness",
              "src": "contracts\\HouseBusiness.sol:86"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            },
            "t_array(t_struct(History)2816_storage)dyn_storage": {
              "label": "struct HouseBusiness.History[]",
              "numberOfBytes": "32"
            },
            "t_array(t_struct(HistoryType)2835_storage)dyn_storage": {
              "label": "struct HouseBusiness.HistoryType[]",
              "numberOfBytes": "32"
            },
            "t_bool": {
              "label": "bool",
              "numberOfBytes": "1"
            },
            "t_contract(IERC20)77": {
              "label": "contract IERC20",
              "numberOfBytes": "20"
            },
            "t_contract(IMainCleanContract)5621": {
              "label": "contract IMainCleanContract",
              "numberOfBytes": "20"
            },
            "t_mapping(t_address,t_bool)": {
              "label": "mapping(address => bool)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_mapping(t_address,t_bool))": {
              "label": "mapping(address => mapping(address => bool))",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_uint256)": {
              "label": "mapping(address => uint256)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_uint256,t_address)": {
              "label": "mapping(uint256 => address)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_uint256,t_array(t_struct(History)2816_storage)dyn_storage)": {
              "label": "mapping(uint256 => struct HouseBusiness.History[])",
              "numberOfBytes": "32"
            },
            "t_mapping(t_uint256,t_mapping(t_address,t_bool))": {
              "label": "mapping(uint256 => mapping(address => bool))",
              "numberOfBytes": "32"
            },
            "t_mapping(t_uint256,t_string_storage)": {
              "label": "mapping(uint256 => string)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_uint256,t_struct(House)2799_storage)": {
              "label": "mapping(uint256 => struct HouseBusiness.House)",
              "numberOfBytes": "32"
            },
            "t_string_storage": {
              "label": "string",
              "numberOfBytes": "32"
            },
            "t_struct(History)2816_storage": {
              "label": "struct HouseBusiness.History",
              "members": [
                {
                  "label": "hID",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "0"
                },
                {
                  "label": "contractId",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "1"
                },
                {
                  "label": "houseImg",
                  "type": "t_string_storage",
                  "offset": 0,
                  "slot": "2"
                },
                {
                  "label": "houseBrand",
                  "type": "t_string_storage",
                  "offset": 0,
                  "slot": "3"
                },
                {
                  "label": "desc",
                  "type": "t_string_storage",
                  "offset": 0,
                  "slot": "4"
                },
                {
                  "label": "history",
                  "type": "t_string_storage",
                  "offset": 0,
                  "slot": "5"
                },
                {
                  "label": "brandType",
                  "type": "t_string_storage",
                  "offset": 0,
                  "slot": "6"
                },
                {
                  "label": "yearField",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "7"
                }
              ],
              "numberOfBytes": "256"
            },
            "t_struct(HistoryType)2835_storage": {
              "label": "struct HouseBusiness.HistoryType",
              "members": [
                {
                  "label": "hID",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "0"
                },
                {
                  "label": "hLabel",
                  "type": "t_string_storage",
                  "offset": 0,
                  "slot": "1"
                },
                {
                  "label": "connectContract",
                  "type": "t_bool",
                  "offset": 0,
                  "slot": "2"
                },
                {
                  "label": "imgNeed",
                  "type": "t_bool",
                  "offset": 1,
                  "slot": "2"
                },
                {
                  "label": "brandNeed",
                  "type": "t_bool",
                  "offset": 2,
                  "slot": "2"
                },
                {
                  "label": "descNeed",
                  "type": "t_bool",
                  "offset": 3,
                  "slot": "2"
                },
                {
                  "label": "brandTypeNeed",
                  "type": "t_bool",
                  "offset": 4,
                  "slot": "2"
                },
                {
                  "label": "yearNeed",
                  "type": "t_bool",
                  "offset": 5,
                  "slot": "2"
                },
                {
                  "label": "checkMark",
                  "type": "t_bool",
                  "offset": 6,
                  "slot": "2"
                }
              ],
              "numberOfBytes": "96"
            },
            "t_struct(House)2799_storage": {
              "label": "struct HouseBusiness.House",
              "members": [
                {
                  "label": "tokenId",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "0"
                },
                {
                  "label": "tokenName",
                  "type": "t_string_storage",
                  "offset": 0,
                  "slot": "1"
                },
                {
                  "label": "tokenURI",
                  "type": "t_string_storage",
                  "offset": 0,
                  "slot": "2"
                },
                {
                  "label": "tokenType",
                  "type": "t_string_storage",
                  "offset": 0,
                  "slot": "3"
                },
                {
                  "label": "currentOwner",
                  "type": "t_address",
                  "offset": 0,
                  "slot": "4"
                },
                {
                  "label": "previousOwner",
                  "type": "t_address",
                  "offset": 0,
                  "slot": "5"
                },
                {
                  "label": "buyer",
                  "type": "t_address",
                  "offset": 0,
                  "slot": "6"
                },
                {
                  "label": "creator",
                  "type": "t_address",
                  "offset": 0,
                  "slot": "7"
                },
                {
                  "label": "price",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "8"
                },
                {
                  "label": "numberOfTransfers",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "9"
                },
                {
                  "label": "nftPayable",
                  "type": "t_bool",
                  "offset": 0,
                  "slot": "10"
                },
                {
                  "label": "staked",
                  "type": "t_bool",
                  "offset": 1,
                  "slot": "10"
                },
                {
                  "label": "soldstatus",
                  "type": "t_bool",
                  "offset": 2,
                  "slot": "10"
                }
              ],
              "numberOfBytes": "352"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            }
          },
          "layoutVersion": "1.1",
          "flat": true
        }
      },
      "HouseStaking": {
        "src": "contracts\\Staking.sol:6",
        "version": {
          "withMetadata": "1631da731d0e2b52c81a316e137d89d443991d8823c4d4d4d9c3929bc729a164",
          "withoutMetadata": "92078b7ed6da756ae03297e8c845495c2d09ac69b7981d78a9050acf26a3d7f4",
          "linkedWithoutMetadata": "92078b7ed6da756ae03297e8c845495c2d09ac69b7981d78a9050acf26a3d7f4"
        },
        "inherit": [],
        "libraries": [],
        "methods": [
          "(address,address)",
          "calcDiv(uint256,uint256)",
          "setAPYConfig(uint256,uint256)",
          "getAllAPYTypes()",
          "stake(uint256,uint256)",
          "unstake(uint256)",
          "stakingFinished(uint256)",
          "totalRewards(address)",
          "claimRewards(address)",
          "getAllMyStakedNFTs()",
          "getAllAPYs()",
          "getPenalty()",
          "setPenalty(uint256)",
          "updateAPYConfig(uint256,uint256)"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "HouseStaking",
            "src": "contracts\\Staking.sol:33"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "stakedCounter",
              "offset": 0,
              "slot": "0",
              "type": "t_uint256",
              "contract": "HouseStaking",
              "src": "contracts\\Staking.sol:8"
            },
            {
              "label": "penalty",
              "offset": 0,
              "slot": "1",
              "type": "t_uint256",
              "contract": "HouseStaking",
              "src": "contracts\\Staking.sol:10"
            },
            {
              "label": "APYtypes",
              "offset": 0,
              "slot": "2",
              "type": "t_array(t_uint256)dyn_storage",
              "contract": "HouseStaking",
              "src": "contracts\\Staking.sol:12"
            },
            {
              "label": "APYConfig",
              "offset": 0,
              "slot": "3",
              "type": "t_mapping(t_uint256,t_uint256)",
              "contract": "HouseStaking",
              "src": "contracts\\Staking.sol:15"
            },
            {
              "label": "stakedNfts",
              "offset": 0,
              "slot": "4",
              "type": "t_mapping(t_address,t_array(t_struct(StakedNft)4634_storage)dyn_storage)",
              "contract": "HouseStaking",
              "src": "contracts\\Staking.sol:16"
            },
            {
              "label": "tokenAddress",
              "offset": 0,
              "slot": "5",
              "type": "t_address",
              "contract": "HouseStaking",
              "src": "contracts\\Staking.sol:18"
            },
            {
              "label": "houseNFTAddress",
              "offset": 0,
              "slot": "6",
              "type": "t_address",
              "contract": "HouseStaking",
              "src": "contracts\\Staking.sol:19"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            },
            "t_array(t_struct(StakedNft)4634_storage)dyn_storage": {
              "label": "struct HouseStaking.StakedNft[]",
              "numberOfBytes": "32"
            },
            "t_array(t_uint256)dyn_storage": {
              "label": "uint256[]",
              "numberOfBytes": "32"
            },
            "t_bool": {
              "label": "bool",
              "numberOfBytes": "1"
            },
            "t_mapping(t_address,t_array(t_struct(StakedNft)4634_storage)dyn_storage)": {
              "label": "mapping(address => struct HouseStaking.StakedNft[])",
              "numberOfBytes": "32"
            },
            "t_mapping(t_uint256,t_uint256)": {
              "label": "mapping(uint256 => uint256)",
              "numberOfBytes": "32"
            },
            "t_struct(StakedNft)4634_storage": {
              "label": "struct HouseStaking.StakedNft",
              "members": [
                {
                  "label": "owner",
                  "type": "t_address",
                  "offset": 0,
                  "slot": "0"
                },
                {
                  "label": "tokenId",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "1"
                },
                {
                  "label": "startedDate",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "2"
                },
                {
                  "label": "endDate",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "3"
                },
                {
                  "label": "claimDate",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "4"
                },
                {
                  "label": "stakingType",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "5"
                },
                {
                  "label": "perSecRewards",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "6"
                },
                {
                  "label": "stakingStatus",
                  "type": "t_bool",
                  "offset": 0,
                  "slot": "7"
                }
              ],
              "numberOfBytes": "256"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            }
          },
          "layoutVersion": "1.1",
          "flat": true
        }
      },
      "IMainCleanContract": {
        "src": "contracts\\interfaces\\IContract.sol:6",
        "inherit": [],
        "libraries": [],
        "methods": [
          "getContractById(uint256)",
          "transferContractOwnership(uint256,address,address)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "IHouseBusiness": {
        "src": "contracts\\interfaces\\IHouseBusiness.sol:5",
        "inherit": [],
        "libraries": [],
        "methods": [
          "collectionName()",
          "collectionNameSymbol()",
          "houseCounter()",
          "stakedCounter()",
          "soldedCounter()",
          "hTypeCounter()",
          "minPrice()",
          "maxPrice()",
          "penalty()",
          "royalty()",
          "historyTypes(uint256)",
          "houseHistories(uint256)",
          "allMembers(address)",
          "allHouses(uint256)",
          "stakedNfts(address)",
          "setMinMaxHousePrice(uint256,uint256)",
          "setConfigToken(address)",
          "isMember()",
          "addMember(address)",
          "removeMember(address)",
          "tokenURI(uint256)",
          "setPayable(uint256,address,bool)",
          "mintHouse(string,string,string,string,uint256)",
          "addAllowList(uint256,address)",
          "removeAllowList(uint256,address)",
          "checkAllowedList(uint256,address)",
          "addHistory(uint256,uint256,string,string,string,string,string,uint256)",
          "getHistory(uint256)",
          "editHistory(uint256,uint256,string,string,string,string,string,uint256)",
          "getHistoryType()",
          "addOrEditHType(uint256,string,bool,bool,bool,bool,bool,bool,bool)",
          "removeHistoryType(uint256)",
          "getMinMaxNFT()",
          "getTokenOwner(uint256)",
          "buyHouseNft(uint256)",
          "sendToken(address,uint256)",
          "changeTokenPrice(uint256,uint256)",
          "getAllHouses()",
          "getAllPayableHouses()",
          "getAllMyHouses()",
          "withdrawToken(uint256)",
          "withdrawETH(uint256)",
          "setAPYConfig(uint256,uint256)",
          "getAllAPYTypes()",
          "stake(uint256,uint256)",
          "unstake(uint256)",
          "stakingFinished(uint256)",
          "totalRewards(address)",
          "claimRewards(address)",
          "getAllMyStakedNFTs()",
          "getTotalInfo()",
          "getAllAPYs()",
          "getPenalty()",
          "setPenalty(uint256)",
          "getRoyalty()",
          "setRoyalty(uint256)",
          "ownerOf(uint256)",
          "getTokenPrice(uint256)",
          "setHouseStakedStatus(uint256,bool)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "IStaking": {
        "src": "contracts\\interfaces\\IStaking.sol:5",
        "inherit": [],
        "libraries": [],
        "methods": [
          "stakedCounter()"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      }
    },
    {
      "MainCleanContract": {
        "src": "contracts\\Contract.sol:6",
        "version": {
          "withMetadata": "6421e940ca2c08cec604e64c4e3802894c030e3491305b8df865d9e1c9e89aac",
          "withoutMetadata": "4b8cbb4879901533fe49280ca430f3230d2cf4cb717e76bb4a9404845cd178f8",
          "linkedWithoutMetadata": "4b8cbb4879901533fe49280ca430f3230d2cf4cb717e76bb4a9404845cd178f8"
        },
        "inherit": [],
        "libraries": [],
        "methods": [
          "(address)",
          "ccCreation(string,string,address,string,uint256,uint256,uint256,string)",
          "getAllContractsByOwner()",
          "getAllContractsBySigner()",
          "getContractById(uint256)",
          "addContractSigner(uint256,address)",
          "signContract(uint256)",
          "sendNotify(address,string,uint256)",
          "getUploadedCounter()",
          "getAllNotifies()",
          "calcDiv(uint256,uint256)",
          "toString(bytes)",
          "addressToString(address)",
          "uintToString(uint256)",
          "bytesToString(bytes32)",
          "transferContractOwnership(uint256,address,address)"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "MainCleanContract",
            "src": "contracts\\Contract.sol:52"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "ccCounter",
              "offset": 0,
              "slot": "0",
              "type": "t_uint256",
              "contract": "MainCleanContract",
              "src": "contracts\\Contract.sol:8"
            },
            {
              "label": "houseNFTAddress",
              "offset": 0,
              "slot": "1",
              "type": "t_address",
              "contract": "MainCleanContract",
              "src": "contracts\\Contract.sol:11"
            },
            {
              "label": "allCleanContracts",
              "offset": 0,
              "slot": "2",
              "type": "t_mapping(t_uint256,t_struct(CleanContract)39_storage)",
              "contract": "MainCleanContract",
              "src": "contracts\\Contract.sol:44"
            },
            {
              "label": "allContractsByOwner",
              "offset": 0,
              "slot": "3",
              "type": "t_mapping(t_address,t_array(t_uint256)dyn_storage)",
              "contract": "MainCleanContract",
              "src": "contracts\\Contract.sol:46"
            },
            {
              "label": "allContractsBySigner",
              "offset": 0,
              "slot": "4",
              "type": "t_mapping(t_address,t_array(t_uint256)dyn_storage)",
              "contract": "MainCleanContract",
              "src": "contracts\\Contract.sol:48"
            },
            {
              "label": "allNotifies",
              "offset": 0,
              "slot": "5",
              "type": "t_mapping(t_address,t_array(t_struct(Notify)52_storage)dyn_storage)",
              "contract": "MainCleanContract",
              "src": "contracts\\Contract.sol:50"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            },
            "t_array(t_struct(Notify)52_storage)dyn_storage": {
              "label": "struct MainCleanContract.Notify[]",
              "numberOfBytes": "32"
            },
            "t_array(t_uint256)dyn_storage": {
              "label": "uint256[]",
              "numberOfBytes": "32"
            },
            "t_bool": {
              "label": "bool",
              "numberOfBytes": "1"
            },
            "t_mapping(t_address,t_array(t_struct(Notify)52_storage)dyn_storage)": {
              "label": "mapping(address => struct MainCleanContract.Notify[])",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_array(t_uint256)dyn_storage)": {
              "label": "mapping(address => uint256[])",
              "numberOfBytes": "32"
            },
            "t_mapping(t_uint256,t_struct(CleanContract)39_storage)": {
              "label": "mapping(uint256 => struct MainCleanContract.CleanContract)",
              "numberOfBytes": "32"
            },
            "t_string_storage": {
              "label": "string",
              "numberOfBytes": "32"
            },
            "t_struct(CleanContract)39_storage": {
              "label": "struct MainCleanContract.CleanContract",
              "members": [
                {
                  "label": "contractId",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "0"
                },
                {
                  "label": "companyName",
                  "type": "t_string_storage",
                  "offset": 0,
                  "slot": "1"
                },
                {
                  "label": "contractType",
                  "type": "t_string_storage",
                  "offset": 0,
                  "slot": "2"
                },
                {
                  "label": "contractURI",
                  "type": "t_string_storage",
                  "offset": 0,
                  "slot": "3"
                },
                {
                  "label": "dateFrom",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "4"
                },
                {
                  "label": "dateTo",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "5"
                },
                {
                  "label": "agreedPrice",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "6"
                },
                {
                  "label": "currency",
                  "type": "t_string_storage",
                  "offset": 0,
                  "slot": "7"
                },
                {
                  "label": "creator",
                  "type": "t_address",
                  "offset": 0,
                  "slot": "8"
                },
                {
                  "label": "owner",
                  "type": "t_address",
                  "offset": 0,
                  "slot": "9"
                },
                {
                  "label": "creatorApproval",
                  "type": "t_bool",
                  "offset": 20,
                  "slot": "9"
                },
                {
                  "label": "creatorSignDate",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "10"
                },
                {
                  "label": "contractSigner",
                  "type": "t_address",
                  "offset": 0,
                  "slot": "11"
                },
                {
                  "label": "signerApproval",
                  "type": "t_bool",
                  "offset": 20,
                  "slot": "11"
                },
                {
                  "label": "signerSignDate",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "12"
                },
                {
                  "label": "status",
                  "type": "t_string_storage",
                  "offset": 0,
                  "slot": "13"
                }
              ],
              "numberOfBytes": "448"
            },
            "t_struct(Notify)52_storage": {
              "label": "struct MainCleanContract.Notify",
              "members": [
                {
                  "label": "nSender",
                  "type": "t_address",
                  "offset": 0,
                  "slot": "0"
                },
                {
                  "label": "nReceiver",
                  "type": "t_address",
                  "offset": 0,
                  "slot": "1"
                },
                {
                  "label": "ccID",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "2"
                },
                {
                  "label": "notifySentTime",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "3"
                },
                {
                  "label": "notifyContent",
                  "type": "t_string_storage",
                  "offset": 0,
                  "slot": "4"
                },
                {
                  "label": "status",
                  "type": "t_bool",
                  "offset": 0,
                  "slot": "5"
                }
              ],
              "numberOfBytes": "192"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            }
          },
          "layoutVersion": "1.1",
          "flat": true
        }
      }
    },
    {
      "ThirdParty": {
        "src": "contracts\\ThirdParty.sol:5",
        "version": {
          "withMetadata": "cbf5b2fae6668ee45b86827e485cbed39526db15e39a77a193d607720ff0015c",
          "withoutMetadata": "c7f6b899dcbca6a360ab204550ba9b4fec9f4cae1bcd2f5879cfa3965e9d550f",
          "linkedWithoutMetadata": "c7f6b899dcbca6a360ab204550ba9b4fec9f4cae1bcd2f5879cfa3965e9d550f"
        },
        "inherit": [],
        "libraries": [],
        "methods": [
          "getAllCategories()",
          "addCategory(string,uint256[])",
          "editCategory(uint256,string,uint256[])",
          "deleteCategory(uint256)",
          "getAllProperties()",
          "addProperty(string)",
          "editProperty(uint256,string)",
          "deleteProperty(uint256)",
          "getPackagesByCategory(uint256)",
          "addPackage(uint256,string,uint256,uint256,uint256,bool[])",
          "editPackage(uint256,uint256,string,uint256,uint256,uint256,bool[])",
          "deletePackage(uint256,uint256)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [
            {
              "label": "categoryCounter",
              "offset": 0,
              "slot": "0",
              "type": "t_uint256",
              "contract": "ThirdParty",
              "src": "contracts\\ThirdParty.sol:12"
            },
            {
              "label": "packageCounter",
              "offset": 0,
              "slot": "1",
              "type": "t_uint256",
              "contract": "ThirdParty",
              "src": "contracts\\ThirdParty.sol:23"
            },
            {
              "label": "propertyCounter",
              "offset": 0,
              "slot": "2",
              "type": "t_uint256",
              "contract": "ThirdParty",
              "src": "contracts\\ThirdParty.sol:29"
            },
            {
              "label": "allCategories",
              "offset": 0,
              "slot": "3",
              "type": "t_array(t_struct(Category)11_storage)dyn_storage",
              "contract": "ThirdParty",
              "src": "contracts\\ThirdParty.sol:31"
            },
            {
              "label": "allPackages",
              "offset": 0,
              "slot": "4",
              "type": "t_mapping(t_uint256,t_array(t_struct(Package)29_storage)dyn_storage)",
              "contract": "ThirdParty",
              "src": "contracts\\ThirdParty.sol:34"
            },
            {
              "label": "allProperties",
              "offset": 0,
              "slot": "5",
              "type": "t_array(t_struct(Property)36_storage)dyn_storage",
              "contract": "ThirdParty",
              "src": "contracts\\ThirdParty.sol:37"
            }
          ],
          "types": {
            "t_array(t_bool)dyn_storage": {
              "label": "bool[]",
              "numberOfBytes": "32"
            },
            "t_array(t_struct(Category)11_storage)dyn_storage": {
              "label": "struct ThirdParty.Category[]",
              "numberOfBytes": "32"
            },
            "t_array(t_struct(Package)29_storage)dyn_storage": {
              "label": "struct ThirdParty.Package[]",
              "numberOfBytes": "32"
            },
            "t_array(t_struct(Property)36_storage)dyn_storage": {
              "label": "struct ThirdParty.Property[]",
              "numberOfBytes": "32"
            },
            "t_array(t_uint256)dyn_storage": {
              "label": "uint256[]",
              "numberOfBytes": "32"
            },
            "t_bool": {
              "label": "bool",
              "numberOfBytes": "1"
            },
            "t_mapping(t_uint256,t_array(t_struct(Package)29_storage)dyn_storage)": {
              "label": "mapping(uint256 => struct ThirdParty.Package[])",
              "numberOfBytes": "32"
            },
            "t_string_storage": {
              "label": "string",
              "numberOfBytes": "32"
            },
            "t_struct(Category)11_storage": {
              "label": "struct ThirdParty.Category",
              "members": [
                {
                  "label": "categoryID",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "0"
                },
                {
                  "label": "cartegoryName",
                  "type": "t_string_storage",
                  "offset": 0,
                  "slot": "1"
                },
                {
                  "label": "properties",
                  "type": "t_array(t_uint256)dyn_storage",
                  "offset": 0,
                  "slot": "2"
                },
                {
                  "label": "visible",
                  "type": "t_bool",
                  "offset": 0,
                  "slot": "3"
                }
              ],
              "numberOfBytes": "128"
            },
            "t_struct(Package)29_storage": {
              "label": "struct ThirdParty.Package",
              "members": [
                {
                  "label": "categoryID",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "0"
                },
                {
                  "label": "packageID",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "1"
                },
                {
                  "label": "packageName",
                  "type": "t_string_storage",
                  "offset": 0,
                  "slot": "2"
                },
                {
                  "label": "price",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "3"
                },
                {
                  "label": "period",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "4"
                },
                {
                  "label": "dataLimit",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "5"
                },
                {
                  "label": "propertyVisible",
                  "type": "t_array(t_bool)dyn_storage",
                  "offset": 0,
                  "slot": "6"
                }
              ],
              "numberOfBytes": "224"
            },
            "t_struct(Property)36_storage": {
              "label": "struct ThirdParty.Property",
              "members": [
                {
                  "label": "propertyID",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "0"
                },
                {
                  "label": "propertyName",
                  "type": "t_string_storage",
                  "offset": 0,
                  "slot": "1"
                }
              ],
              "numberOfBytes": "64"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            }
          },
          "layoutVersion": "1.1",
          "flat": true
        }
      }
    },
    {
      "Context": {
        "src": "contracts\\TokenContract.sol:22",
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "HouseBusinessToken": {
        "src": "contracts\\TokenContract.sol:33",
        "version": {
          "withMetadata": "e53f4b9234e67266e4442dec09d084a17cbe6b1b4fb90d62776f0d6f370f0570",
          "withoutMetadata": "f5d2b294cac19c78c593798b4a1bae04c45c82839cbcffe3cc910bb441f21259",
          "linkedWithoutMetadata": "f5d2b294cac19c78c593798b4a1bae04c45c82839cbcffe3cc910bb441f21259"
        },
        "inherit": [
          "IERC20Metadata",
          "IERC20",
          "Context"
        ],
        "libraries": [],
        "methods": [
          "()",
          "name()",
          "symbol()",
          "decimals()",
          "totalSupply()",
          "balanceOf(address)",
          "transfer(address,uint256)",
          "allowance(address,address)",
          "approve(address,uint256)",
          "transferFrom(address,address,uint256)",
          "increaseAllowance(address,uint256)",
          "decreaseAllowance(address,uint256)",
          "_mint(address,uint256)"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "HouseBusinessToken",
            "src": "contracts\\TokenContract.sol:42"
          },
          {
            "kind": "state-variable-assignment",
            "name": "_name",
            "src": "contracts\\TokenContract.sol:37"
          },
          {
            "kind": "state-variable-assignment",
            "name": "_symbol",
            "src": "contracts\\TokenContract.sol:38"
          },
          {
            "kind": "state-variable-assignment",
            "name": "_decimals",
            "src": "contracts\\TokenContract.sol:39"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "_balances",
              "offset": 0,
              "slot": "0",
              "type": "t_mapping(t_address,t_uint256)",
              "contract": "HouseBusinessToken",
              "src": "contracts\\TokenContract.sol:34"
            },
            {
              "label": "_allowances",
              "offset": 0,
              "slot": "1",
              "type": "t_mapping(t_address,t_mapping(t_address,t_uint256))",
              "contract": "HouseBusinessToken",
              "src": "contracts\\TokenContract.sol:35"
            },
            {
              "label": "_totalSupply",
              "offset": 0,
              "slot": "2",
              "type": "t_uint256",
              "contract": "HouseBusinessToken",
              "src": "contracts\\TokenContract.sol:36"
            },
            {
              "label": "_name",
              "offset": 0,
              "slot": "3",
              "type": "t_string_storage",
              "contract": "HouseBusinessToken",
              "src": "contracts\\TokenContract.sol:37"
            },
            {
              "label": "_symbol",
              "offset": 0,
              "slot": "4",
              "type": "t_string_storage",
              "contract": "HouseBusinessToken",
              "src": "contracts\\TokenContract.sol:38"
            },
            {
              "label": "_decimals",
              "offset": 0,
              "slot": "5",
              "type": "t_uint8",
              "contract": "HouseBusinessToken",
              "src": "contracts\\TokenContract.sol:39"
            },
            {
              "label": "_owner",
              "offset": 1,
              "slot": "5",
              "type": "t_address",
              "contract": "HouseBusinessToken",
              "src": "contracts\\TokenContract.sol:40"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            },
            "t_mapping(t_address,t_mapping(t_address,t_uint256))": {
              "label": "mapping(address => mapping(address => uint256))",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_uint256)": {
              "label": "mapping(address => uint256)",
              "numberOfBytes": "32"
            },
            "t_string_storage": {
              "label": "string",
              "numberOfBytes": "32"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            },
            "t_uint8": {
              "label": "uint8",
              "numberOfBytes": "1"
            }
          },
          "layoutVersion": "1.1",
          "flat": true
        }
      },
      "IERC20": {
        "src": "contracts\\TokenContract.sol:5",
        "inherit": [],
        "libraries": [],
        "methods": [
          "totalSupply()",
          "balanceOf(address)",
          "transfer(address,uint256)",
          "allowance(address,address)",
          "approve(address,uint256)",
          "transferFrom(address,address,uint256)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "IERC20Metadata": {
        "src": "contracts\\TokenContract.sol:16",
        "inherit": [
          "IERC20"
        ],
        "libraries": [],
        "methods": [
          "name()",
          "symbol()",
          "decimals()"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      }
    },
    {
      "IPRC20": {
        "src": "contracts\\interfaces\\IPRC20.sol:4",
        "inherit": [],
        "libraries": [],
        "methods": [
          "totalSupply()",
          "balanceOf(address)",
          "transfer(address,uint256)",
          "allowance(address,address)",
          "approve(address,uint256)",
          "transferFrom(address,address,uint256)",
          "decimals()"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      }
    },
    {
      "IERC20": {
        "src": "@openzeppelin\\contracts\\token\\ERC20\\IERC20.sol:9",
        "inherit": [],
        "libraries": [],
        "methods": [
          "totalSupply()",
          "balanceOf(address)",
          "transfer(address,uint256)",
          "allowance(address,address)",
          "approve(address,uint256)",
          "transferFrom(address,address,uint256)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "IERC721": {
        "src": "@openzeppelin\\contracts\\token\\ERC721\\IERC721.sol:11",
        "inherit": [
          "IERC165"
        ],
        "libraries": [],
        "methods": [
          "balanceOf(address)",
          "ownerOf(uint256)",
          "safeTransferFrom(address,address,uint256,bytes)",
          "safeTransferFrom(address,address,uint256)",
          "transferFrom(address,address,uint256)",
          "approve(address,uint256)",
          "setApprovalForAll(address,bool)",
          "getApproved(uint256)",
          "isApprovedForAll(address,address)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "IERC165": {
        "src": "@openzeppelin\\contracts\\utils\\introspection\\IERC165.sol:15",
        "inherit": [],
        "libraries": [],
        "methods": [
          "supportsInterface(bytes4)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "HouseStaking": {
        "src": "contracts\\Staking.sol:6",
        "version": {
          "withMetadata": "1631da731d0e2b52c81a316e137d89d443991d8823c4d4d4d9c3929bc729a164",
          "withoutMetadata": "92078b7ed6da756ae03297e8c845495c2d09ac69b7981d78a9050acf26a3d7f4",
          "linkedWithoutMetadata": "92078b7ed6da756ae03297e8c845495c2d09ac69b7981d78a9050acf26a3d7f4"
        },
        "inherit": [],
        "libraries": [],
        "methods": [
          "(address,address)",
          "calcDiv(uint256,uint256)",
          "setAPYConfig(uint256,uint256)",
          "getAllAPYTypes()",
          "stake(uint256,uint256)",
          "unstake(uint256)",
          "stakingFinished(uint256)",
          "totalRewards(address)",
          "claimRewards(address)",
          "getAllMyStakedNFTs()",
          "getAllAPYs()",
          "getPenalty()",
          "setPenalty(uint256)",
          "updateAPYConfig(uint256,uint256)"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "HouseStaking",
            "src": "contracts\\Staking.sol:33"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "stakedCounter",
              "offset": 0,
              "slot": "0",
              "type": "t_uint256",
              "contract": "HouseStaking",
              "src": "contracts\\Staking.sol:8"
            },
            {
              "label": "penalty",
              "offset": 0,
              "slot": "1",
              "type": "t_uint256",
              "contract": "HouseStaking",
              "src": "contracts\\Staking.sol:10"
            },
            {
              "label": "APYtypes",
              "offset": 0,
              "slot": "2",
              "type": "t_array(t_uint256)dyn_storage",
              "contract": "HouseStaking",
              "src": "contracts\\Staking.sol:12"
            },
            {
              "label": "APYConfig",
              "offset": 0,
              "slot": "3",
              "type": "t_mapping(t_uint256,t_uint256)",
              "contract": "HouseStaking",
              "src": "contracts\\Staking.sol:15"
            },
            {
              "label": "stakedNfts",
              "offset": 0,
              "slot": "4",
              "type": "t_mapping(t_address,t_array(t_struct(StakedNft)248_storage)dyn_storage)",
              "contract": "HouseStaking",
              "src": "contracts\\Staking.sol:16"
            },
            {
              "label": "tokenAddress",
              "offset": 0,
              "slot": "5",
              "type": "t_address",
              "contract": "HouseStaking",
              "src": "contracts\\Staking.sol:18"
            },
            {
              "label": "houseNFTAddress",
              "offset": 0,
              "slot": "6",
              "type": "t_address",
              "contract": "HouseStaking",
              "src": "contracts\\Staking.sol:19"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            },
            "t_array(t_struct(StakedNft)248_storage)dyn_storage": {
              "label": "struct HouseStaking.StakedNft[]",
              "numberOfBytes": "32"
            },
            "t_array(t_uint256)dyn_storage": {
              "label": "uint256[]",
              "numberOfBytes": "32"
            },
            "t_bool": {
              "label": "bool",
              "numberOfBytes": "1"
            },
            "t_mapping(t_address,t_array(t_struct(StakedNft)248_storage)dyn_storage)": {
              "label": "mapping(address => struct HouseStaking.StakedNft[])",
              "numberOfBytes": "32"
            },
            "t_mapping(t_uint256,t_uint256)": {
              "label": "mapping(uint256 => uint256)",
              "numberOfBytes": "32"
            },
            "t_struct(StakedNft)248_storage": {
              "label": "struct HouseStaking.StakedNft",
              "members": [
                {
                  "label": "owner",
                  "type": "t_address",
                  "offset": 0,
                  "slot": "0"
                },
                {
                  "label": "tokenId",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "1"
                },
                {
                  "label": "startedDate",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "2"
                },
                {
                  "label": "endDate",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "3"
                },
                {
                  "label": "claimDate",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "4"
                },
                {
                  "label": "stakingType",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "5"
                },
                {
                  "label": "perSecRewards",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "6"
                },
                {
                  "label": "stakingStatus",
                  "type": "t_bool",
                  "offset": 0,
                  "slot": "7"
                }
              ],
              "numberOfBytes": "256"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            }
          },
          "layoutVersion": "1.1",
          "flat": true
        }
      },
      "IHouseBusiness": {
        "src": "contracts\\interfaces\\IHouseBusiness.sol:5",
        "inherit": [],
        "libraries": [],
        "methods": [
          "collectionName()",
          "collectionNameSymbol()",
          "houseCounter()",
          "stakedCounter()",
          "soldedCounter()",
          "hTypeCounter()",
          "minPrice()",
          "maxPrice()",
          "penalty()",
          "royalty()",
          "historyTypes(uint256)",
          "houseHistories(uint256)",
          "allMembers(address)",
          "allHouses(uint256)",
          "stakedNfts(address)",
          "setMinMaxHousePrice(uint256,uint256)",
          "setConfigToken(address)",
          "isMember()",
          "addMember(address)",
          "removeMember(address)",
          "tokenURI(uint256)",
          "setPayable(uint256,address,bool)",
          "mintHouse(string,string,string,string,uint256)",
          "addAllowList(uint256,address)",
          "removeAllowList(uint256,address)",
          "checkAllowedList(uint256,address)",
          "addHistory(uint256,uint256,string,string,string,string,string,uint256)",
          "getHistory(uint256)",
          "editHistory(uint256,uint256,string,string,string,string,string,uint256)",
          "getHistoryType()",
          "addOrEditHType(uint256,string,bool,bool,bool,bool,bool,bool,bool)",
          "removeHistoryType(uint256)",
          "getMinMaxNFT()",
          "getTokenOwner(uint256)",
          "buyHouseNft(uint256)",
          "sendToken(address,uint256)",
          "changeTokenPrice(uint256,uint256)",
          "getAllHouses()",
          "getAllPayableHouses()",
          "getAllMyHouses()",
          "withdrawToken(uint256)",
          "withdrawETH(uint256)",
          "setAPYConfig(uint256,uint256)",
          "getAllAPYTypes()",
          "stake(uint256,uint256)",
          "unstake(uint256)",
          "stakingFinished(uint256)",
          "totalRewards(address)",
          "claimRewards(address)",
          "getAllMyStakedNFTs()",
          "getTotalInfo()",
          "getAllAPYs()",
          "getPenalty()",
          "setPenalty(uint256)",
          "getRoyalty()",
          "setRoyalty(uint256)",
          "ownerOf(uint256)",
          "getTokenPrice(uint256)",
          "setHouseStakedStatus(uint256,bool)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      }
    },
    {
      "MainCleanContract": {
        "src": "contracts\\Contract.sol:6",
        "version": {
          "withMetadata": "6421e940ca2c08cec604e64c4e3802894c030e3491305b8df865d9e1c9e89aac",
          "withoutMetadata": "4b8cbb4879901533fe49280ca430f3230d2cf4cb717e76bb4a9404845cd178f8",
          "linkedWithoutMetadata": "4b8cbb4879901533fe49280ca430f3230d2cf4cb717e76bb4a9404845cd178f8"
        },
        "inherit": [],
        "libraries": [],
        "methods": [
          "(address)",
          "ccCreation(string,string,address,string,uint256,uint256,uint256,string)",
          "getAllContractsByOwner()",
          "getAllContractsBySigner()",
          "getContractById(uint256)",
          "addContractSigner(uint256,address)",
          "signContract(uint256)",
          "sendNotify(address,string,uint256)",
          "getUploadedCounter()",
          "getAllNotifies()",
          "calcDiv(uint256,uint256)",
          "toString(bytes)",
          "addressToString(address)",
          "uintToString(uint256)",
          "bytesToString(bytes32)",
          "transferContractOwnership(uint256,address,address)"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "MainCleanContract",
            "src": "contracts\\Contract.sol:52"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "ccCounter",
              "offset": 0,
              "slot": "0",
              "type": "t_uint256",
              "contract": "MainCleanContract",
              "src": "contracts\\Contract.sol:8"
            },
            {
              "label": "houseNFTAddress",
              "offset": 0,
              "slot": "1",
              "type": "t_address",
              "contract": "MainCleanContract",
              "src": "contracts\\Contract.sol:11"
            },
            {
              "label": "allCleanContracts",
              "offset": 0,
              "slot": "2",
              "type": "t_mapping(t_uint256,t_struct(CleanContract)39_storage)",
              "contract": "MainCleanContract",
              "src": "contracts\\Contract.sol:44"
            },
            {
              "label": "allContractsByOwner",
              "offset": 0,
              "slot": "3",
              "type": "t_mapping(t_address,t_array(t_uint256)dyn_storage)",
              "contract": "MainCleanContract",
              "src": "contracts\\Contract.sol:46"
            },
            {
              "label": "allContractsBySigner",
              "offset": 0,
              "slot": "4",
              "type": "t_mapping(t_address,t_array(t_uint256)dyn_storage)",
              "contract": "MainCleanContract",
              "src": "contracts\\Contract.sol:48"
            },
            {
              "label": "allNotifies",
              "offset": 0,
              "slot": "5",
              "type": "t_mapping(t_address,t_array(t_struct(Notify)52_storage)dyn_storage)",
              "contract": "MainCleanContract",
              "src": "contracts\\Contract.sol:50"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            },
            "t_array(t_struct(Notify)52_storage)dyn_storage": {
              "label": "struct MainCleanContract.Notify[]",
              "numberOfBytes": "32"
            },
            "t_array(t_uint256)dyn_storage": {
              "label": "uint256[]",
              "numberOfBytes": "32"
            },
            "t_bool": {
              "label": "bool",
              "numberOfBytes": "1"
            },
            "t_mapping(t_address,t_array(t_struct(Notify)52_storage)dyn_storage)": {
              "label": "mapping(address => struct MainCleanContract.Notify[])",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_array(t_uint256)dyn_storage)": {
              "label": "mapping(address => uint256[])",
              "numberOfBytes": "32"
            },
            "t_mapping(t_uint256,t_struct(CleanContract)39_storage)": {
              "label": "mapping(uint256 => struct MainCleanContract.CleanContract)",
              "numberOfBytes": "32"
            },
            "t_string_storage": {
              "label": "string",
              "numberOfBytes": "32"
            },
            "t_struct(CleanContract)39_storage": {
              "label": "struct MainCleanContract.CleanContract",
              "members": [
                {
                  "label": "contractId",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "0"
                },
                {
                  "label": "companyName",
                  "type": "t_string_storage",
                  "offset": 0,
                  "slot": "1"
                },
                {
                  "label": "contractType",
                  "type": "t_string_storage",
                  "offset": 0,
                  "slot": "2"
                },
                {
                  "label": "contractURI",
                  "type": "t_string_storage",
                  "offset": 0,
                  "slot": "3"
                },
                {
                  "label": "dateFrom",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "4"
                },
                {
                  "label": "dateTo",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "5"
                },
                {
                  "label": "agreedPrice",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "6"
                },
                {
                  "label": "currency",
                  "type": "t_string_storage",
                  "offset": 0,
                  "slot": "7"
                },
                {
                  "label": "creator",
                  "type": "t_address",
                  "offset": 0,
                  "slot": "8"
                },
                {
                  "label": "owner",
                  "type": "t_address",
                  "offset": 0,
                  "slot": "9"
                },
                {
                  "label": "creatorApproval",
                  "type": "t_bool",
                  "offset": 20,
                  "slot": "9"
                },
                {
                  "label": "creatorSignDate",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "10"
                },
                {
                  "label": "contractSigner",
                  "type": "t_address",
                  "offset": 0,
                  "slot": "11"
                },
                {
                  "label": "signerApproval",
                  "type": "t_bool",
                  "offset": 20,
                  "slot": "11"
                },
                {
                  "label": "signerSignDate",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "12"
                },
                {
                  "label": "status",
                  "type": "t_string_storage",
                  "offset": 0,
                  "slot": "13"
                }
              ],
              "numberOfBytes": "448"
            },
            "t_struct(Notify)52_storage": {
              "label": "struct MainCleanContract.Notify",
              "members": [
                {
                  "label": "nSender",
                  "type": "t_address",
                  "offset": 0,
                  "slot": "0"
                },
                {
                  "label": "nReceiver",
                  "type": "t_address",
                  "offset": 0,
                  "slot": "1"
                },
                {
                  "label": "ccID",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "2"
                },
                {
                  "label": "notifySentTime",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "3"
                },
                {
                  "label": "notifyContent",
                  "type": "t_string_storage",
                  "offset": 0,
                  "slot": "4"
                },
                {
                  "label": "status",
                  "type": "t_bool",
                  "offset": 0,
                  "slot": "5"
                }
              ],
              "numberOfBytes": "192"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            }
          },
          "layoutVersion": "1.1",
          "flat": true
        }
      }
    },
    {
      "IERC20": {
        "src": "@openzeppelin\\contracts\\token\\ERC20\\IERC20.sol:9",
        "inherit": [],
        "libraries": [],
        "methods": [
          "totalSupply()",
          "balanceOf(address)",
          "transfer(address,uint256)",
          "allowance(address,address)",
          "approve(address,uint256)",
          "transferFrom(address,address,uint256)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "ERC721": {
        "src": "@openzeppelin\\contracts\\token\\ERC721\\ERC721.sol:19",
        "version": {
          "withMetadata": "311027b738fb50ea92c84baf68eacb931adf05de03da13635a661dc9c5b03f73",
          "withoutMetadata": "9ec7f439077c3b762bc3aa6a17c55aba7a78d240190c9c7814df896455a0f780",
          "linkedWithoutMetadata": "9ec7f439077c3b762bc3aa6a17c55aba7a78d240190c9c7814df896455a0f780"
        },
        "inherit": [
          "IERC721Metadata",
          "IERC721",
          "ERC165",
          "IERC165",
          "Context"
        ],
        "libraries": [
          "Address",
          "Strings"
        ],
        "methods": [
          "(string,string)",
          "supportsInterface(bytes4)",
          "balanceOf(address)",
          "ownerOf(uint256)",
          "name()",
          "symbol()",
          "tokenURI(uint256)",
          "approve(address,uint256)",
          "getApproved(uint256)",
          "setApprovalForAll(address,bool)",
          "isApprovedForAll(address,address)",
          "transferFrom(address,address,uint256)",
          "safeTransferFrom(address,address,uint256)",
          "safeTransferFrom(address,address,uint256,bytes)"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "ERC721",
            "src": "@openzeppelin\\contracts\\token\\ERC721\\ERC721.sol:44"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "_name",
              "offset": 0,
              "slot": "0",
              "type": "t_string_storage",
              "contract": "ERC721",
              "src": "@openzeppelin\\contracts\\token\\ERC721\\ERC721.sol:24"
            },
            {
              "label": "_symbol",
              "offset": 0,
              "slot": "1",
              "type": "t_string_storage",
              "contract": "ERC721",
              "src": "@openzeppelin\\contracts\\token\\ERC721\\ERC721.sol:27"
            },
            {
              "label": "_owners",
              "offset": 0,
              "slot": "2",
              "type": "t_mapping(t_uint256,t_address)",
              "contract": "ERC721",
              "src": "@openzeppelin\\contracts\\token\\ERC721\\ERC721.sol:30"
            },
            {
              "label": "_balances",
              "offset": 0,
              "slot": "3",
              "type": "t_mapping(t_address,t_uint256)",
              "contract": "ERC721",
              "src": "@openzeppelin\\contracts\\token\\ERC721\\ERC721.sol:33"
            },
            {
              "label": "_tokenApprovals",
              "offset": 0,
              "slot": "4",
              "type": "t_mapping(t_uint256,t_address)",
              "contract": "ERC721",
              "src": "@openzeppelin\\contracts\\token\\ERC721\\ERC721.sol:36"
            },
            {
              "label": "_operatorApprovals",
              "offset": 0,
              "slot": "5",
              "type": "t_mapping(t_address,t_mapping(t_address,t_bool))",
              "contract": "ERC721",
              "src": "@openzeppelin\\contracts\\token\\ERC721\\ERC721.sol:39"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            },
            "t_bool": {
              "label": "bool",
              "numberOfBytes": "1"
            },
            "t_mapping(t_address,t_bool)": {
              "label": "mapping(address => bool)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_mapping(t_address,t_bool))": {
              "label": "mapping(address => mapping(address => bool))",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_uint256)": {
              "label": "mapping(address => uint256)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_uint256,t_address)": {
              "label": "mapping(uint256 => address)",
              "numberOfBytes": "32"
            },
            "t_string_storage": {
              "label": "string",
              "numberOfBytes": "32"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            }
          },
          "layoutVersion": "1.1",
          "flat": true
        }
      },
      "IERC721": {
        "src": "@openzeppelin\\contracts\\token\\ERC721\\IERC721.sol:11",
        "inherit": [
          "IERC165"
        ],
        "libraries": [],
        "methods": [
          "balanceOf(address)",
          "ownerOf(uint256)",
          "safeTransferFrom(address,address,uint256,bytes)",
          "safeTransferFrom(address,address,uint256)",
          "transferFrom(address,address,uint256)",
          "approve(address,uint256)",
          "setApprovalForAll(address,bool)",
          "getApproved(uint256)",
          "isApprovedForAll(address,address)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "IERC721Receiver": {
        "src": "@openzeppelin\\contracts\\token\\ERC721\\IERC721Receiver.sol:11",
        "inherit": [],
        "libraries": [],
        "methods": [
          "onERC721Received(address,address,uint256,bytes)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "ERC721URIStorage": {
        "src": "@openzeppelin\\contracts\\token\\ERC721\\extensions\\ERC721URIStorage.sol:11",
        "inherit": [
          "ERC721",
          "IERC721Metadata",
          "IERC721",
          "ERC165",
          "IERC165",
          "Context"
        ],
        "libraries": [
          "Strings"
        ],
        "methods": [
          "tokenURI(uint256)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [
            {
              "label": "_name",
              "offset": 0,
              "slot": "0",
              "type": "t_string_storage",
              "contract": "ERC721",
              "src": "@openzeppelin\\contracts\\token\\ERC721\\ERC721.sol:24"
            },
            {
              "label": "_symbol",
              "offset": 0,
              "slot": "1",
              "type": "t_string_storage",
              "contract": "ERC721",
              "src": "@openzeppelin\\contracts\\token\\ERC721\\ERC721.sol:27"
            },
            {
              "label": "_owners",
              "offset": 0,
              "slot": "2",
              "type": "t_mapping(t_uint256,t_address)",
              "contract": "ERC721",
              "src": "@openzeppelin\\contracts\\token\\ERC721\\ERC721.sol:30"
            },
            {
              "label": "_balances",
              "offset": 0,
              "slot": "3",
              "type": "t_mapping(t_address,t_uint256)",
              "contract": "ERC721",
              "src": "@openzeppelin\\contracts\\token\\ERC721\\ERC721.sol:33"
            },
            {
              "label": "_tokenApprovals",
              "offset": 0,
              "slot": "4",
              "type": "t_mapping(t_uint256,t_address)",
              "contract": "ERC721",
              "src": "@openzeppelin\\contracts\\token\\ERC721\\ERC721.sol:36"
            },
            {
              "label": "_operatorApprovals",
              "offset": 0,
              "slot": "5",
              "type": "t_mapping(t_address,t_mapping(t_address,t_bool))",
              "contract": "ERC721",
              "src": "@openzeppelin\\contracts\\token\\ERC721\\ERC721.sol:39"
            },
            {
              "label": "_tokenURIs",
              "offset": 0,
              "slot": "6",
              "type": "t_mapping(t_uint256,t_string_storage)",
              "contract": "ERC721URIStorage",
              "src": "@openzeppelin\\contracts\\token\\ERC721\\extensions\\ERC721URIStorage.sol:15"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            },
            "t_bool": {
              "label": "bool",
              "numberOfBytes": "1"
            },
            "t_mapping(t_address,t_bool)": {
              "label": "mapping(address => bool)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_mapping(t_address,t_bool))": {
              "label": "mapping(address => mapping(address => bool))",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_uint256)": {
              "label": "mapping(address => uint256)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_uint256,t_address)": {
              "label": "mapping(uint256 => address)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_uint256,t_string_storage)": {
              "label": "mapping(uint256 => string)",
              "numberOfBytes": "32"
            },
            "t_string_storage": {
              "label": "string",
              "numberOfBytes": "32"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            }
          },
          "layoutVersion": "1.1",
          "flat": true
        }
      },
      "IERC721Metadata": {
        "src": "@openzeppelin\\contracts\\token\\ERC721\\extensions\\IERC721Metadata.sol:12",
        "inherit": [
          "IERC721",
          "IERC165"
        ],
        "libraries": [],
        "methods": [
          "name()",
          "symbol()",
          "tokenURI(uint256)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "Address": {
        "src": "@openzeppelin\\contracts\\utils\\Address.sol:9",
        "version": {
          "withMetadata": "a0500f265408d7c0dbf75da3f9e44a5c2ee85e18bb1b58fe491ffcfa4ea7fd9b",
          "withoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db",
          "linkedWithoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db"
        },
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [
          {
            "kind": "delegatecall",
            "src": "@openzeppelin\\contracts\\utils\\Address.sol:185"
          }
        ],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "Context": {
        "src": "@openzeppelin\\contracts\\utils\\Context.sol:16",
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "Strings": {
        "src": "@openzeppelin\\contracts\\utils\\Strings.sol:11",
        "version": {
          "withMetadata": "c385b5200dd723f945d28b88358d79ca1b5c0f71c28cbbab9acf6d6f3fd15593",
          "withoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db",
          "linkedWithoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db"
        },
        "inherit": [],
        "libraries": [
          "Math"
        ],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "ERC165": {
        "src": "@openzeppelin\\contracts\\utils\\introspection\\ERC165.sol:22",
        "inherit": [
          "IERC165"
        ],
        "libraries": [],
        "methods": [
          "supportsInterface(bytes4)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "IERC165": {
        "src": "@openzeppelin\\contracts\\utils\\introspection\\IERC165.sol:15",
        "inherit": [],
        "libraries": [],
        "methods": [
          "supportsInterface(bytes4)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "Math": {
        "src": "@openzeppelin\\contracts\\utils\\math\\Math.sol:9",
        "version": {
          "withMetadata": "fcaf39e5e702f2902d6ef00c1def75c9800e8d2a0a78a87cf542096cafc7a4b0",
          "withoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db",
          "linkedWithoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db"
        },
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "HouseBusiness": {
        "src": "contracts\\HouseBusiness.sol:12",
        "version": {
          "withMetadata": "1c4a4cd0db121c2f65fd2aced2492f631ef2282d81eb7fbc021c67cbc9cdf4c7",
          "withoutMetadata": "576b466e4f42c6b5886370f8a93a08f7e99cffe9e2629be996a20372756ae7bb",
          "linkedWithoutMetadata": "576b466e4f42c6b5886370f8a93a08f7e99cffe9e2629be996a20372756ae7bb"
        },
        "inherit": [
          "ERC721URIStorage",
          "ERC721",
          "IERC721Metadata",
          "IERC721",
          "ERC165",
          "IERC165",
          "Context"
        ],
        "libraries": [],
        "methods": [
          "(address)",
          "setMinMaxHousePrice(uint256,uint256)",
          "setConfigToken(address)",
          "isMember()",
          "addMember(address)",
          "removeMember(address)",
          "tokenURI(uint256)",
          "setCContractAddress(address)",
          "setStakingContractAddress(address)",
          "setPayable(uint256,address,bool)",
          "mintHouse(string,string,string,string,uint256)",
          "addAllowList(uint256,address)",
          "removeAllowList(uint256,address)",
          "checkAllowedList(uint256,address)",
          "addHistory(uint256,uint256,uint256,string,string,string,string,string,uint256)",
          "getHistory(uint256)",
          "editHistory(uint256,uint256,string,string,string,string,string,uint256)",
          "getHistoryType()",
          "addOrEditHType(uint256,string,bool,bool,bool,bool,bool,bool,bool)",
          "removeHistoryType(uint256)",
          "getMinMaxNFT()",
          "getTokenOwner(uint256)",
          "disconnectContract(uint256,uint256,uint256)",
          "buyHouseNft(uint256)",
          "sendToken(address,uint256)",
          "changeTokenPrice(uint256,uint256)",
          "getAllHouses()",
          "getAllPayableHouses()",
          "getAllMyHouses()",
          "withdrawToken(uint256)",
          "withdrawETH(uint256)",
          "getTotalInfo()",
          "getTokenPrice(uint256)",
          "setHouseStakedStatus(uint256,bool)",
          "getRoyalty()",
          "setRoyalty(uint256)"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "HouseBusiness",
            "src": "contracts\\HouseBusiness.sol:92"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "_name",
              "offset": 0,
              "slot": "0",
              "type": "t_string_storage",
              "contract": "ERC721",
              "src": "@openzeppelin\\contracts\\token\\ERC721\\ERC721.sol:24"
            },
            {
              "label": "_symbol",
              "offset": 0,
              "slot": "1",
              "type": "t_string_storage",
              "contract": "ERC721",
              "src": "@openzeppelin\\contracts\\token\\ERC721\\ERC721.sol:27"
            },
            {
              "label": "_owners",
              "offset": 0,
              "slot": "2",
              "type": "t_mapping(t_uint256,t_address)",
              "contract": "ERC721",
              "src": "@openzeppelin\\contracts\\token\\ERC721\\ERC721.sol:30"
            },
            {
              "label": "_balances",
              "offset": 0,
              "slot": "3",
              "type": "t_mapping(t_address,t_uint256)",
              "contract": "ERC721",
              "src": "@openzeppelin\\contracts\\token\\ERC721\\ERC721.sol:33"
            },
            {
              "label": "_tokenApprovals",
              "offset": 0,
              "slot": "4",
              "type": "t_mapping(t_uint256,t_address)",
              "contract": "ERC721",
              "src": "@openzeppelin\\contracts\\token\\ERC721\\ERC721.sol:36"
            },
            {
              "label": "_operatorApprovals",
              "offset": 0,
              "slot": "5",
              "type": "t_mapping(t_address,t_mapping(t_address,t_bool))",
              "contract": "ERC721",
              "src": "@openzeppelin\\contracts\\token\\ERC721\\ERC721.sol:39"
            },
            {
              "label": "_tokenURIs",
              "offset": 0,
              "slot": "6",
              "type": "t_mapping(t_uint256,t_string_storage)",
              "contract": "ERC721URIStorage",
              "src": "@openzeppelin\\contracts\\token\\ERC721\\extensions\\ERC721URIStorage.sol:15"
            },
            {
              "label": "collectionName",
              "offset": 0,
              "slot": "7",
              "type": "t_string_storage",
              "contract": "HouseBusiness",
              "src": "contracts\\HouseBusiness.sol:14"
            },
            {
              "label": "collectionNameSymbol",
              "offset": 0,
              "slot": "8",
              "type": "t_string_storage",
              "contract": "HouseBusiness",
              "src": "contracts\\HouseBusiness.sol:16"
            },
            {
              "label": "houseCounter",
              "offset": 0,
              "slot": "9",
              "type": "t_uint256",
              "contract": "HouseBusiness",
              "src": "contracts\\HouseBusiness.sol:18"
            },
            {
              "label": "soldedCounter",
              "offset": 0,
              "slot": "10",
              "type": "t_uint256",
              "contract": "HouseBusiness",
              "src": "contracts\\HouseBusiness.sol:21"
            },
            {
              "label": "hTypeCounter",
              "offset": 0,
              "slot": "11",
              "type": "t_uint256",
              "contract": "HouseBusiness",
              "src": "contracts\\HouseBusiness.sol:23"
            },
            {
              "label": "_token",
              "offset": 0,
              "slot": "12",
              "type": "t_contract(IERC20)77",
              "contract": "HouseBusiness",
              "src": "contracts\\HouseBusiness.sol:25"
            },
            {
              "label": "minPrice",
              "offset": 0,
              "slot": "13",
              "type": "t_uint256",
              "contract": "HouseBusiness",
              "src": "contracts\\HouseBusiness.sol:27"
            },
            {
              "label": "maxPrice",
              "offset": 0,
              "slot": "14",
              "type": "t_uint256",
              "contract": "HouseBusiness",
              "src": "contracts\\HouseBusiness.sol:29"
            },
            {
              "label": "royalty",
              "offset": 0,
              "slot": "15",
              "type": "t_uint256",
              "contract": "HouseBusiness",
              "src": "contracts\\HouseBusiness.sol:31"
            },
            {
              "label": "cContract",
              "offset": 0,
              "slot": "16",
              "type": "t_contract(IMainCleanContract)5551",
              "contract": "HouseBusiness",
              "src": "contracts\\HouseBusiness.sol:33"
            },
            {
              "label": "historyTypes",
              "offset": 0,
              "slot": "17",
              "type": "t_array(t_struct(HistoryType)2831_storage)dyn_storage",
              "contract": "HouseBusiness",
              "src": "contracts\\HouseBusiness.sol:73"
            },
            {
              "label": "houseHistories",
              "offset": 0,
              "slot": "18",
              "type": "t_mapping(t_uint256,t_array(t_struct(History)2812_storage)dyn_storage)",
              "contract": "HouseBusiness",
              "src": "contracts\\HouseBusiness.sol:75"
            },
            {
              "label": "allMembers",
              "offset": 0,
              "slot": "19",
              "type": "t_mapping(t_address,t_bool)",
              "contract": "HouseBusiness",
              "src": "contracts\\HouseBusiness.sol:77"
            },
            {
              "label": "allHouses",
              "offset": 0,
              "slot": "20",
              "type": "t_mapping(t_uint256,t_struct(House)2795_storage)",
              "contract": "HouseBusiness",
              "src": "contracts\\HouseBusiness.sol:79"
            },
            {
              "label": "allowedList",
              "offset": 0,
              "slot": "21",
              "type": "t_mapping(t_uint256,t_mapping(t_address,t_bool))",
              "contract": "HouseBusiness",
              "src": "contracts\\HouseBusiness.sol:81"
            },
            {
              "label": "stakingContractAddress",
              "offset": 0,
              "slot": "22",
              "type": "t_address",
              "contract": "HouseBusiness",
              "src": "contracts\\HouseBusiness.sol:84"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            },
            "t_array(t_struct(History)2812_storage)dyn_storage": {
              "label": "struct HouseBusiness.History[]",
              "numberOfBytes": "32"
            },
            "t_array(t_struct(HistoryType)2831_storage)dyn_storage": {
              "label": "struct HouseBusiness.HistoryType[]",
              "numberOfBytes": "32"
            },
            "t_bool": {
              "label": "bool",
              "numberOfBytes": "1"
            },
            "t_contract(IERC20)77": {
              "label": "contract IERC20",
              "numberOfBytes": "20"
            },
            "t_contract(IMainCleanContract)5551": {
              "label": "contract IMainCleanContract",
              "numberOfBytes": "20"
            },
            "t_mapping(t_address,t_bool)": {
              "label": "mapping(address => bool)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_mapping(t_address,t_bool))": {
              "label": "mapping(address => mapping(address => bool))",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_uint256)": {
              "label": "mapping(address => uint256)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_uint256,t_address)": {
              "label": "mapping(uint256 => address)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_uint256,t_array(t_struct(History)2812_storage)dyn_storage)": {
              "label": "mapping(uint256 => struct HouseBusiness.History[])",
              "numberOfBytes": "32"
            },
            "t_mapping(t_uint256,t_mapping(t_address,t_bool))": {
              "label": "mapping(uint256 => mapping(address => bool))",
              "numberOfBytes": "32"
            },
            "t_mapping(t_uint256,t_string_storage)": {
              "label": "mapping(uint256 => string)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_uint256,t_struct(House)2795_storage)": {
              "label": "mapping(uint256 => struct HouseBusiness.House)",
              "numberOfBytes": "32"
            },
            "t_string_storage": {
              "label": "string",
              "numberOfBytes": "32"
            },
            "t_struct(History)2812_storage": {
              "label": "struct HouseBusiness.History",
              "members": [
                {
                  "label": "hID",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "0"
                },
                {
                  "label": "contractId",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "1"
                },
                {
                  "label": "houseImg",
                  "type": "t_string_storage",
                  "offset": 0,
                  "slot": "2"
                },
                {
                  "label": "houseBrand",
                  "type": "t_string_storage",
                  "offset": 0,
                  "slot": "3"
                },
                {
                  "label": "desc",
                  "type": "t_string_storage",
                  "offset": 0,
                  "slot": "4"
                },
                {
                  "label": "history",
                  "type": "t_string_storage",
                  "offset": 0,
                  "slot": "5"
                },
                {
                  "label": "brandType",
                  "type": "t_string_storage",
                  "offset": 0,
                  "slot": "6"
                },
                {
                  "label": "yearField",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "7"
                }
              ],
              "numberOfBytes": "256"
            },
            "t_struct(HistoryType)2831_storage": {
              "label": "struct HouseBusiness.HistoryType",
              "members": [
                {
                  "label": "hID",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "0"
                },
                {
                  "label": "hLabel",
                  "type": "t_string_storage",
                  "offset": 0,
                  "slot": "1"
                },
                {
                  "label": "connectContract",
                  "type": "t_bool",
                  "offset": 0,
                  "slot": "2"
                },
                {
                  "label": "imgNeed",
                  "type": "t_bool",
                  "offset": 1,
                  "slot": "2"
                },
                {
                  "label": "brandNeed",
                  "type": "t_bool",
                  "offset": 2,
                  "slot": "2"
                },
                {
                  "label": "descNeed",
                  "type": "t_bool",
                  "offset": 3,
                  "slot": "2"
                },
                {
                  "label": "brandTypeNeed",
                  "type": "t_bool",
                  "offset": 4,
                  "slot": "2"
                },
                {
                  "label": "yearNeed",
                  "type": "t_bool",
                  "offset": 5,
                  "slot": "2"
                },
                {
                  "label": "checkMark",
                  "type": "t_bool",
                  "offset": 6,
                  "slot": "2"
                }
              ],
              "numberOfBytes": "96"
            },
            "t_struct(House)2795_storage": {
              "label": "struct HouseBusiness.House",
              "members": [
                {
                  "label": "tokenId",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "0"
                },
                {
                  "label": "tokenName",
                  "type": "t_string_storage",
                  "offset": 0,
                  "slot": "1"
                },
                {
                  "label": "tokenURI",
                  "type": "t_string_storage",
                  "offset": 0,
                  "slot": "2"
                },
                {
                  "label": "tokenType",
                  "type": "t_string_storage",
                  "offset": 0,
                  "slot": "3"
                },
                {
                  "label": "currentOwner",
                  "type": "t_address",
                  "offset": 0,
                  "slot": "4"
                },
                {
                  "label": "previousOwner",
                  "type": "t_address",
                  "offset": 0,
                  "slot": "5"
                },
                {
                  "label": "buyer",
                  "type": "t_address",
                  "offset": 0,
                  "slot": "6"
                },
                {
                  "label": "price",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "7"
                },
                {
                  "label": "numberOfTransfers",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "8"
                },
                {
                  "label": "nftPayable",
                  "type": "t_bool",
                  "offset": 0,
                  "slot": "9"
                },
                {
                  "label": "staked",
                  "type": "t_bool",
                  "offset": 1,
                  "slot": "9"
                },
                {
                  "label": "soldstatus",
                  "type": "t_bool",
                  "offset": 2,
                  "slot": "9"
                }
              ],
              "numberOfBytes": "320"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            }
          },
          "layoutVersion": "1.1",
          "flat": true
        }
      },
      "HouseStaking": {
        "src": "contracts\\Staking.sol:6",
        "version": {
          "withMetadata": "1631da731d0e2b52c81a316e137d89d443991d8823c4d4d4d9c3929bc729a164",
          "withoutMetadata": "92078b7ed6da756ae03297e8c845495c2d09ac69b7981d78a9050acf26a3d7f4",
          "linkedWithoutMetadata": "92078b7ed6da756ae03297e8c845495c2d09ac69b7981d78a9050acf26a3d7f4"
        },
        "inherit": [],
        "libraries": [],
        "methods": [
          "(address,address)",
          "calcDiv(uint256,uint256)",
          "setAPYConfig(uint256,uint256)",
          "getAllAPYTypes()",
          "stake(uint256,uint256)",
          "unstake(uint256)",
          "stakingFinished(uint256)",
          "totalRewards(address)",
          "claimRewards(address)",
          "getAllMyStakedNFTs()",
          "getAllAPYs()",
          "getPenalty()",
          "setPenalty(uint256)",
          "updateAPYConfig(uint256,uint256)"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "HouseStaking",
            "src": "contracts\\Staking.sol:33"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "stakedCounter",
              "offset": 0,
              "slot": "0",
              "type": "t_uint256",
              "contract": "HouseStaking",
              "src": "contracts\\Staking.sol:8"
            },
            {
              "label": "penalty",
              "offset": 0,
              "slot": "1",
              "type": "t_uint256",
              "contract": "HouseStaking",
              "src": "contracts\\Staking.sol:10"
            },
            {
              "label": "APYtypes",
              "offset": 0,
              "slot": "2",
              "type": "t_array(t_uint256)dyn_storage",
              "contract": "HouseStaking",
              "src": "contracts\\Staking.sol:12"
            },
            {
              "label": "APYConfig",
              "offset": 0,
              "slot": "3",
              "type": "t_mapping(t_uint256,t_uint256)",
              "contract": "HouseStaking",
              "src": "contracts\\Staking.sol:15"
            },
            {
              "label": "stakedNfts",
              "offset": 0,
              "slot": "4",
              "type": "t_mapping(t_address,t_array(t_struct(StakedNft)4564_storage)dyn_storage)",
              "contract": "HouseStaking",
              "src": "contracts\\Staking.sol:16"
            },
            {
              "label": "tokenAddress",
              "offset": 0,
              "slot": "5",
              "type": "t_address",
              "contract": "HouseStaking",
              "src": "contracts\\Staking.sol:18"
            },
            {
              "label": "houseNFTAddress",
              "offset": 0,
              "slot": "6",
              "type": "t_address",
              "contract": "HouseStaking",
              "src": "contracts\\Staking.sol:19"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            },
            "t_array(t_struct(StakedNft)4564_storage)dyn_storage": {
              "label": "struct HouseStaking.StakedNft[]",
              "numberOfBytes": "32"
            },
            "t_array(t_uint256)dyn_storage": {
              "label": "uint256[]",
              "numberOfBytes": "32"
            },
            "t_bool": {
              "label": "bool",
              "numberOfBytes": "1"
            },
            "t_mapping(t_address,t_array(t_struct(StakedNft)4564_storage)dyn_storage)": {
              "label": "mapping(address => struct HouseStaking.StakedNft[])",
              "numberOfBytes": "32"
            },
            "t_mapping(t_uint256,t_uint256)": {
              "label": "mapping(uint256 => uint256)",
              "numberOfBytes": "32"
            },
            "t_struct(StakedNft)4564_storage": {
              "label": "struct HouseStaking.StakedNft",
              "members": [
                {
                  "label": "owner",
                  "type": "t_address",
                  "offset": 0,
                  "slot": "0"
                },
                {
                  "label": "tokenId",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "1"
                },
                {
                  "label": "startedDate",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "2"
                },
                {
                  "label": "endDate",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "3"
                },
                {
                  "label": "claimDate",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "4"
                },
                {
                  "label": "stakingType",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "5"
                },
                {
                  "label": "perSecRewards",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "6"
                },
                {
                  "label": "stakingStatus",
                  "type": "t_bool",
                  "offset": 0,
                  "slot": "7"
                }
              ],
              "numberOfBytes": "256"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            }
          },
          "layoutVersion": "1.1",
          "flat": true
        }
      },
      "IMainCleanContract": {
        "src": "contracts\\interfaces\\IContract.sol:6",
        "inherit": [],
        "libraries": [],
        "methods": [
          "getContractById(uint256)",
          "transferContractOwnership(uint256,address,address)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "IHouseBusiness": {
        "src": "contracts\\interfaces\\IHouseBusiness.sol:5",
        "inherit": [],
        "libraries": [],
        "methods": [
          "collectionName()",
          "collectionNameSymbol()",
          "houseCounter()",
          "stakedCounter()",
          "soldedCounter()",
          "hTypeCounter()",
          "minPrice()",
          "maxPrice()",
          "penalty()",
          "royalty()",
          "historyTypes(uint256)",
          "houseHistories(uint256)",
          "allMembers(address)",
          "allHouses(uint256)",
          "stakedNfts(address)",
          "setMinMaxHousePrice(uint256,uint256)",
          "setConfigToken(address)",
          "isMember()",
          "addMember(address)",
          "removeMember(address)",
          "tokenURI(uint256)",
          "setPayable(uint256,address,bool)",
          "mintHouse(string,string,string,string,uint256)",
          "addAllowList(uint256,address)",
          "removeAllowList(uint256,address)",
          "checkAllowedList(uint256,address)",
          "addHistory(uint256,uint256,string,string,string,string,string,uint256)",
          "getHistory(uint256)",
          "editHistory(uint256,uint256,string,string,string,string,string,uint256)",
          "getHistoryType()",
          "addOrEditHType(uint256,string,bool,bool,bool,bool,bool,bool,bool)",
          "removeHistoryType(uint256)",
          "getMinMaxNFT()",
          "getTokenOwner(uint256)",
          "buyHouseNft(uint256)",
          "sendToken(address,uint256)",
          "changeTokenPrice(uint256,uint256)",
          "getAllHouses()",
          "getAllPayableHouses()",
          "getAllMyHouses()",
          "withdrawToken(uint256)",
          "withdrawETH(uint256)",
          "setAPYConfig(uint256,uint256)",
          "getAllAPYTypes()",
          "stake(uint256,uint256)",
          "unstake(uint256)",
          "stakingFinished(uint256)",
          "totalRewards(address)",
          "claimRewards(address)",
          "getAllMyStakedNFTs()",
          "getTotalInfo()",
          "getAllAPYs()",
          "getPenalty()",
          "setPenalty(uint256)",
          "getRoyalty()",
          "setRoyalty(uint256)",
          "ownerOf(uint256)",
          "getTokenPrice(uint256)",
          "setHouseStakedStatus(uint256,bool)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "IStaking": {
        "src": "contracts\\interfaces\\IStaking.sol:5",
        "inherit": [],
        "libraries": [],
        "methods": [
          "stakedCounter()"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      }
    },
    {
      "MainCleanContract": {
        "src": "contracts\\Contract.sol:6",
        "version": {
          "withMetadata": "6421e940ca2c08cec604e64c4e3802894c030e3491305b8df865d9e1c9e89aac",
          "withoutMetadata": "4b8cbb4879901533fe49280ca430f3230d2cf4cb717e76bb4a9404845cd178f8",
          "linkedWithoutMetadata": "4b8cbb4879901533fe49280ca430f3230d2cf4cb717e76bb4a9404845cd178f8"
        },
        "inherit": [],
        "libraries": [],
        "methods": [
          "(address)",
          "ccCreation(string,string,address,string,uint256,uint256,uint256,string)",
          "getAllContractsByOwner()",
          "getAllContractsBySigner()",
          "getContractById(uint256)",
          "addContractSigner(uint256,address)",
          "signContract(uint256)",
          "sendNotify(address,string,uint256)",
          "getUploadedCounter()",
          "getAllNotifies()",
          "calcDiv(uint256,uint256)",
          "toString(bytes)",
          "addressToString(address)",
          "uintToString(uint256)",
          "bytesToString(bytes32)",
          "transferContractOwnership(uint256,address,address)"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "MainCleanContract",
            "src": "contracts\\Contract.sol:52"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "ccCounter",
              "offset": 0,
              "slot": "0",
              "type": "t_uint256",
              "contract": "MainCleanContract",
              "src": "contracts\\Contract.sol:8"
            },
            {
              "label": "houseNFTAddress",
              "offset": 0,
              "slot": "1",
              "type": "t_address",
              "contract": "MainCleanContract",
              "src": "contracts\\Contract.sol:11"
            },
            {
              "label": "allCleanContracts",
              "offset": 0,
              "slot": "2",
              "type": "t_mapping(t_uint256,t_struct(CleanContract)39_storage)",
              "contract": "MainCleanContract",
              "src": "contracts\\Contract.sol:44"
            },
            {
              "label": "allContractsByOwner",
              "offset": 0,
              "slot": "3",
              "type": "t_mapping(t_address,t_array(t_uint256)dyn_storage)",
              "contract": "MainCleanContract",
              "src": "contracts\\Contract.sol:46"
            },
            {
              "label": "allContractsBySigner",
              "offset": 0,
              "slot": "4",
              "type": "t_mapping(t_address,t_array(t_uint256)dyn_storage)",
              "contract": "MainCleanContract",
              "src": "contracts\\Contract.sol:48"
            },
            {
              "label": "allNotifies",
              "offset": 0,
              "slot": "5",
              "type": "t_mapping(t_address,t_array(t_struct(Notify)52_storage)dyn_storage)",
              "contract": "MainCleanContract",
              "src": "contracts\\Contract.sol:50"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            },
            "t_array(t_struct(Notify)52_storage)dyn_storage": {
              "label": "struct MainCleanContract.Notify[]",
              "numberOfBytes": "32"
            },
            "t_array(t_uint256)dyn_storage": {
              "label": "uint256[]",
              "numberOfBytes": "32"
            },
            "t_bool": {
              "label": "bool",
              "numberOfBytes": "1"
            },
            "t_mapping(t_address,t_array(t_struct(Notify)52_storage)dyn_storage)": {
              "label": "mapping(address => struct MainCleanContract.Notify[])",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_array(t_uint256)dyn_storage)": {
              "label": "mapping(address => uint256[])",
              "numberOfBytes": "32"
            },
            "t_mapping(t_uint256,t_struct(CleanContract)39_storage)": {
              "label": "mapping(uint256 => struct MainCleanContract.CleanContract)",
              "numberOfBytes": "32"
            },
            "t_string_storage": {
              "label": "string",
              "numberOfBytes": "32"
            },
            "t_struct(CleanContract)39_storage": {
              "label": "struct MainCleanContract.CleanContract",
              "members": [
                {
                  "label": "contractId",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "0"
                },
                {
                  "label": "companyName",
                  "type": "t_string_storage",
                  "offset": 0,
                  "slot": "1"
                },
                {
                  "label": "contractType",
                  "type": "t_string_storage",
                  "offset": 0,
                  "slot": "2"
                },
                {
                  "label": "contractURI",
                  "type": "t_string_storage",
                  "offset": 0,
                  "slot": "3"
                },
                {
                  "label": "dateFrom",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "4"
                },
                {
                  "label": "dateTo",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "5"
                },
                {
                  "label": "agreedPrice",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "6"
                },
                {
                  "label": "currency",
                  "type": "t_string_storage",
                  "offset": 0,
                  "slot": "7"
                },
                {
                  "label": "creator",
                  "type": "t_address",
                  "offset": 0,
                  "slot": "8"
                },
                {
                  "label": "owner",
                  "type": "t_address",
                  "offset": 0,
                  "slot": "9"
                },
                {
                  "label": "creatorApproval",
                  "type": "t_bool",
                  "offset": 20,
                  "slot": "9"
                },
                {
                  "label": "creatorSignDate",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "10"
                },
                {
                  "label": "contractSigner",
                  "type": "t_address",
                  "offset": 0,
                  "slot": "11"
                },
                {
                  "label": "signerApproval",
                  "type": "t_bool",
                  "offset": 20,
                  "slot": "11"
                },
                {
                  "label": "signerSignDate",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "12"
                },
                {
                  "label": "status",
                  "type": "t_string_storage",
                  "offset": 0,
                  "slot": "13"
                }
              ],
              "numberOfBytes": "448"
            },
            "t_struct(Notify)52_storage": {
              "label": "struct MainCleanContract.Notify",
              "members": [
                {
                  "label": "nSender",
                  "type": "t_address",
                  "offset": 0,
                  "slot": "0"
                },
                {
                  "label": "nReceiver",
                  "type": "t_address",
                  "offset": 0,
                  "slot": "1"
                },
                {
                  "label": "ccID",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "2"
                },
                {
                  "label": "notifySentTime",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "3"
                },
                {
                  "label": "notifyContent",
                  "type": "t_string_storage",
                  "offset": 0,
                  "slot": "4"
                },
                {
                  "label": "status",
                  "type": "t_bool",
                  "offset": 0,
                  "slot": "5"
                }
              ],
              "numberOfBytes": "192"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            }
          },
          "layoutVersion": "1.1",
          "flat": true
        }
      }
    },
    {
      "ThirdParty": {
        "src": "contracts\\ThirdParty.sol:5",
        "version": {
          "withMetadata": "cbf5b2fae6668ee45b86827e485cbed39526db15e39a77a193d607720ff0015c",
          "withoutMetadata": "c7f6b899dcbca6a360ab204550ba9b4fec9f4cae1bcd2f5879cfa3965e9d550f",
          "linkedWithoutMetadata": "c7f6b899dcbca6a360ab204550ba9b4fec9f4cae1bcd2f5879cfa3965e9d550f"
        },
        "inherit": [],
        "libraries": [],
        "methods": [
          "getAllCategories()",
          "addCategory(string,uint256[])",
          "editCategory(uint256,string,uint256[])",
          "deleteCategory(uint256)",
          "getAllProperties()",
          "addProperty(string)",
          "editProperty(uint256,string)",
          "deleteProperty(uint256)",
          "getPackagesByCategory(uint256)",
          "addPackage(uint256,string,uint256,uint256,uint256,bool[])",
          "editPackage(uint256,uint256,string,uint256,uint256,uint256,bool[])",
          "deletePackage(uint256,uint256)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [
            {
              "label": "categoryCounter",
              "offset": 0,
              "slot": "0",
              "type": "t_uint256",
              "contract": "ThirdParty",
              "src": "contracts\\ThirdParty.sol:12"
            },
            {
              "label": "packageCounter",
              "offset": 0,
              "slot": "1",
              "type": "t_uint256",
              "contract": "ThirdParty",
              "src": "contracts\\ThirdParty.sol:23"
            },
            {
              "label": "propertyCounter",
              "offset": 0,
              "slot": "2",
              "type": "t_uint256",
              "contract": "ThirdParty",
              "src": "contracts\\ThirdParty.sol:29"
            },
            {
              "label": "allCategories",
              "offset": 0,
              "slot": "3",
              "type": "t_array(t_struct(Category)11_storage)dyn_storage",
              "contract": "ThirdParty",
              "src": "contracts\\ThirdParty.sol:31"
            },
            {
              "label": "allPackages",
              "offset": 0,
              "slot": "4",
              "type": "t_mapping(t_uint256,t_array(t_struct(Package)29_storage)dyn_storage)",
              "contract": "ThirdParty",
              "src": "contracts\\ThirdParty.sol:34"
            },
            {
              "label": "allProperties",
              "offset": 0,
              "slot": "5",
              "type": "t_array(t_struct(Property)36_storage)dyn_storage",
              "contract": "ThirdParty",
              "src": "contracts\\ThirdParty.sol:37"
            }
          ],
          "types": {
            "t_array(t_bool)dyn_storage": {
              "label": "bool[]",
              "numberOfBytes": "32"
            },
            "t_array(t_struct(Category)11_storage)dyn_storage": {
              "label": "struct ThirdParty.Category[]",
              "numberOfBytes": "32"
            },
            "t_array(t_struct(Package)29_storage)dyn_storage": {
              "label": "struct ThirdParty.Package[]",
              "numberOfBytes": "32"
            },
            "t_array(t_struct(Property)36_storage)dyn_storage": {
              "label": "struct ThirdParty.Property[]",
              "numberOfBytes": "32"
            },
            "t_array(t_uint256)dyn_storage": {
              "label": "uint256[]",
              "numberOfBytes": "32"
            },
            "t_bool": {
              "label": "bool",
              "numberOfBytes": "1"
            },
            "t_mapping(t_uint256,t_array(t_struct(Package)29_storage)dyn_storage)": {
              "label": "mapping(uint256 => struct ThirdParty.Package[])",
              "numberOfBytes": "32"
            },
            "t_string_storage": {
              "label": "string",
              "numberOfBytes": "32"
            },
            "t_struct(Category)11_storage": {
              "label": "struct ThirdParty.Category",
              "members": [
                {
                  "label": "categoryID",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "0"
                },
                {
                  "label": "cartegoryName",
                  "type": "t_string_storage",
                  "offset": 0,
                  "slot": "1"
                },
                {
                  "label": "properties",
                  "type": "t_array(t_uint256)dyn_storage",
                  "offset": 0,
                  "slot": "2"
                },
                {
                  "label": "visible",
                  "type": "t_bool",
                  "offset": 0,
                  "slot": "3"
                }
              ],
              "numberOfBytes": "128"
            },
            "t_struct(Package)29_storage": {
              "label": "struct ThirdParty.Package",
              "members": [
                {
                  "label": "categoryID",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "0"
                },
                {
                  "label": "packageID",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "1"
                },
                {
                  "label": "packageName",
                  "type": "t_string_storage",
                  "offset": 0,
                  "slot": "2"
                },
                {
                  "label": "price",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "3"
                },
                {
                  "label": "period",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "4"
                },
                {
                  "label": "dataLimit",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "5"
                },
                {
                  "label": "propertyVisible",
                  "type": "t_array(t_bool)dyn_storage",
                  "offset": 0,
                  "slot": "6"
                }
              ],
              "numberOfBytes": "224"
            },
            "t_struct(Property)36_storage": {
              "label": "struct ThirdParty.Property",
              "members": [
                {
                  "label": "propertyID",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "0"
                },
                {
                  "label": "propertyName",
                  "type": "t_string_storage",
                  "offset": 0,
                  "slot": "1"
                }
              ],
              "numberOfBytes": "64"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            }
          },
          "layoutVersion": "1.1",
          "flat": true
        }
      }
    },
    {
      "Context": {
        "src": "contracts\\TokenContract.sol:22",
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "HouseBusinessToken": {
        "src": "contracts\\TokenContract.sol:33",
        "version": {
          "withMetadata": "e53f4b9234e67266e4442dec09d084a17cbe6b1b4fb90d62776f0d6f370f0570",
          "withoutMetadata": "f5d2b294cac19c78c593798b4a1bae04c45c82839cbcffe3cc910bb441f21259",
          "linkedWithoutMetadata": "f5d2b294cac19c78c593798b4a1bae04c45c82839cbcffe3cc910bb441f21259"
        },
        "inherit": [
          "IERC20Metadata",
          "IERC20",
          "Context"
        ],
        "libraries": [],
        "methods": [
          "()",
          "name()",
          "symbol()",
          "decimals()",
          "totalSupply()",
          "balanceOf(address)",
          "transfer(address,uint256)",
          "allowance(address,address)",
          "approve(address,uint256)",
          "transferFrom(address,address,uint256)",
          "increaseAllowance(address,uint256)",
          "decreaseAllowance(address,uint256)",
          "_mint(address,uint256)"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "HouseBusinessToken",
            "src": "contracts\\TokenContract.sol:42"
          },
          {
            "kind": "state-variable-assignment",
            "name": "_name",
            "src": "contracts\\TokenContract.sol:37"
          },
          {
            "kind": "state-variable-assignment",
            "name": "_symbol",
            "src": "contracts\\TokenContract.sol:38"
          },
          {
            "kind": "state-variable-assignment",
            "name": "_decimals",
            "src": "contracts\\TokenContract.sol:39"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "_balances",
              "offset": 0,
              "slot": "0",
              "type": "t_mapping(t_address,t_uint256)",
              "contract": "HouseBusinessToken",
              "src": "contracts\\TokenContract.sol:34"
            },
            {
              "label": "_allowances",
              "offset": 0,
              "slot": "1",
              "type": "t_mapping(t_address,t_mapping(t_address,t_uint256))",
              "contract": "HouseBusinessToken",
              "src": "contracts\\TokenContract.sol:35"
            },
            {
              "label": "_totalSupply",
              "offset": 0,
              "slot": "2",
              "type": "t_uint256",
              "contract": "HouseBusinessToken",
              "src": "contracts\\TokenContract.sol:36"
            },
            {
              "label": "_name",
              "offset": 0,
              "slot": "3",
              "type": "t_string_storage",
              "contract": "HouseBusinessToken",
              "src": "contracts\\TokenContract.sol:37"
            },
            {
              "label": "_symbol",
              "offset": 0,
              "slot": "4",
              "type": "t_string_storage",
              "contract": "HouseBusinessToken",
              "src": "contracts\\TokenContract.sol:38"
            },
            {
              "label": "_decimals",
              "offset": 0,
              "slot": "5",
              "type": "t_uint8",
              "contract": "HouseBusinessToken",
              "src": "contracts\\TokenContract.sol:39"
            },
            {
              "label": "_owner",
              "offset": 1,
              "slot": "5",
              "type": "t_address",
              "contract": "HouseBusinessToken",
              "src": "contracts\\TokenContract.sol:40"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            },
            "t_mapping(t_address,t_mapping(t_address,t_uint256))": {
              "label": "mapping(address => mapping(address => uint256))",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_uint256)": {
              "label": "mapping(address => uint256)",
              "numberOfBytes": "32"
            },
            "t_string_storage": {
              "label": "string",
              "numberOfBytes": "32"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            },
            "t_uint8": {
              "label": "uint8",
              "numberOfBytes": "1"
            }
          },
          "layoutVersion": "1.1",
          "flat": true
        }
      },
      "IERC20": {
        "src": "contracts\\TokenContract.sol:5",
        "inherit": [],
        "libraries": [],
        "methods": [
          "totalSupply()",
          "balanceOf(address)",
          "transfer(address,uint256)",
          "allowance(address,address)",
          "approve(address,uint256)",
          "transferFrom(address,address,uint256)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "IERC20Metadata": {
        "src": "contracts\\TokenContract.sol:16",
        "inherit": [
          "IERC20"
        ],
        "libraries": [],
        "methods": [
          "name()",
          "symbol()",
          "decimals()"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      }
    },
    {
      "IPRC20": {
        "src": "contracts\\interfaces\\IPRC20.sol:4",
        "inherit": [],
        "libraries": [],
        "methods": [
          "totalSupply()",
          "balanceOf(address)",
          "transfer(address,uint256)",
          "allowance(address,address)",
          "approve(address,uint256)",
          "transferFrom(address,address,uint256)",
          "decimals()"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      }
    },
    {
      "IERC20": {
        "src": "@openzeppelin\\contracts\\token\\ERC20\\IERC20.sol:9",
        "inherit": [],
        "libraries": [],
        "methods": [
          "totalSupply()",
          "balanceOf(address)",
          "transfer(address,uint256)",
          "allowance(address,address)",
          "approve(address,uint256)",
          "transferFrom(address,address,uint256)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "ERC721": {
        "src": "@openzeppelin\\contracts\\token\\ERC721\\ERC721.sol:19",
        "version": {
          "withMetadata": "311027b738fb50ea92c84baf68eacb931adf05de03da13635a661dc9c5b03f73",
          "withoutMetadata": "9ec7f439077c3b762bc3aa6a17c55aba7a78d240190c9c7814df896455a0f780",
          "linkedWithoutMetadata": "9ec7f439077c3b762bc3aa6a17c55aba7a78d240190c9c7814df896455a0f780"
        },
        "inherit": [
          "IERC721Metadata",
          "IERC721",
          "ERC165",
          "IERC165",
          "Context"
        ],
        "libraries": [
          "Address",
          "Strings"
        ],
        "methods": [
          "(string,string)",
          "supportsInterface(bytes4)",
          "balanceOf(address)",
          "ownerOf(uint256)",
          "name()",
          "symbol()",
          "tokenURI(uint256)",
          "approve(address,uint256)",
          "getApproved(uint256)",
          "setApprovalForAll(address,bool)",
          "isApprovedForAll(address,address)",
          "transferFrom(address,address,uint256)",
          "safeTransferFrom(address,address,uint256)",
          "safeTransferFrom(address,address,uint256,bytes)"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "ERC721",
            "src": "@openzeppelin\\contracts\\token\\ERC721\\ERC721.sol:44"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "_name",
              "offset": 0,
              "slot": "0",
              "type": "t_string_storage",
              "contract": "ERC721",
              "src": "@openzeppelin\\contracts\\token\\ERC721\\ERC721.sol:24"
            },
            {
              "label": "_symbol",
              "offset": 0,
              "slot": "1",
              "type": "t_string_storage",
              "contract": "ERC721",
              "src": "@openzeppelin\\contracts\\token\\ERC721\\ERC721.sol:27"
            },
            {
              "label": "_owners",
              "offset": 0,
              "slot": "2",
              "type": "t_mapping(t_uint256,t_address)",
              "contract": "ERC721",
              "src": "@openzeppelin\\contracts\\token\\ERC721\\ERC721.sol:30"
            },
            {
              "label": "_balances",
              "offset": 0,
              "slot": "3",
              "type": "t_mapping(t_address,t_uint256)",
              "contract": "ERC721",
              "src": "@openzeppelin\\contracts\\token\\ERC721\\ERC721.sol:33"
            },
            {
              "label": "_tokenApprovals",
              "offset": 0,
              "slot": "4",
              "type": "t_mapping(t_uint256,t_address)",
              "contract": "ERC721",
              "src": "@openzeppelin\\contracts\\token\\ERC721\\ERC721.sol:36"
            },
            {
              "label": "_operatorApprovals",
              "offset": 0,
              "slot": "5",
              "type": "t_mapping(t_address,t_mapping(t_address,t_bool))",
              "contract": "ERC721",
              "src": "@openzeppelin\\contracts\\token\\ERC721\\ERC721.sol:39"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            },
            "t_bool": {
              "label": "bool",
              "numberOfBytes": "1"
            },
            "t_mapping(t_address,t_bool)": {
              "label": "mapping(address => bool)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_mapping(t_address,t_bool))": {
              "label": "mapping(address => mapping(address => bool))",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_uint256)": {
              "label": "mapping(address => uint256)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_uint256,t_address)": {
              "label": "mapping(uint256 => address)",
              "numberOfBytes": "32"
            },
            "t_string_storage": {
              "label": "string",
              "numberOfBytes": "32"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            }
          },
          "layoutVersion": "1.1",
          "flat": true
        }
      },
      "IERC721": {
        "src": "@openzeppelin\\contracts\\token\\ERC721\\IERC721.sol:11",
        "inherit": [
          "IERC165"
        ],
        "libraries": [],
        "methods": [
          "balanceOf(address)",
          "ownerOf(uint256)",
          "safeTransferFrom(address,address,uint256,bytes)",
          "safeTransferFrom(address,address,uint256)",
          "transferFrom(address,address,uint256)",
          "approve(address,uint256)",
          "setApprovalForAll(address,bool)",
          "getApproved(uint256)",
          "isApprovedForAll(address,address)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "IERC721Receiver": {
        "src": "@openzeppelin\\contracts\\token\\ERC721\\IERC721Receiver.sol:11",
        "inherit": [],
        "libraries": [],
        "methods": [
          "onERC721Received(address,address,uint256,bytes)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "ERC721URIStorage": {
        "src": "@openzeppelin\\contracts\\token\\ERC721\\extensions\\ERC721URIStorage.sol:11",
        "inherit": [
          "ERC721",
          "IERC721Metadata",
          "IERC721",
          "ERC165",
          "IERC165",
          "Context"
        ],
        "libraries": [
          "Strings"
        ],
        "methods": [
          "tokenURI(uint256)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [
            {
              "label": "_name",
              "offset": 0,
              "slot": "0",
              "type": "t_string_storage",
              "contract": "ERC721",
              "src": "@openzeppelin\\contracts\\token\\ERC721\\ERC721.sol:24"
            },
            {
              "label": "_symbol",
              "offset": 0,
              "slot": "1",
              "type": "t_string_storage",
              "contract": "ERC721",
              "src": "@openzeppelin\\contracts\\token\\ERC721\\ERC721.sol:27"
            },
            {
              "label": "_owners",
              "offset": 0,
              "slot": "2",
              "type": "t_mapping(t_uint256,t_address)",
              "contract": "ERC721",
              "src": "@openzeppelin\\contracts\\token\\ERC721\\ERC721.sol:30"
            },
            {
              "label": "_balances",
              "offset": 0,
              "slot": "3",
              "type": "t_mapping(t_address,t_uint256)",
              "contract": "ERC721",
              "src": "@openzeppelin\\contracts\\token\\ERC721\\ERC721.sol:33"
            },
            {
              "label": "_tokenApprovals",
              "offset": 0,
              "slot": "4",
              "type": "t_mapping(t_uint256,t_address)",
              "contract": "ERC721",
              "src": "@openzeppelin\\contracts\\token\\ERC721\\ERC721.sol:36"
            },
            {
              "label": "_operatorApprovals",
              "offset": 0,
              "slot": "5",
              "type": "t_mapping(t_address,t_mapping(t_address,t_bool))",
              "contract": "ERC721",
              "src": "@openzeppelin\\contracts\\token\\ERC721\\ERC721.sol:39"
            },
            {
              "label": "_tokenURIs",
              "offset": 0,
              "slot": "6",
              "type": "t_mapping(t_uint256,t_string_storage)",
              "contract": "ERC721URIStorage",
              "src": "@openzeppelin\\contracts\\token\\ERC721\\extensions\\ERC721URIStorage.sol:15"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            },
            "t_bool": {
              "label": "bool",
              "numberOfBytes": "1"
            },
            "t_mapping(t_address,t_bool)": {
              "label": "mapping(address => bool)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_mapping(t_address,t_bool))": {
              "label": "mapping(address => mapping(address => bool))",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_uint256)": {
              "label": "mapping(address => uint256)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_uint256,t_address)": {
              "label": "mapping(uint256 => address)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_uint256,t_string_storage)": {
              "label": "mapping(uint256 => string)",
              "numberOfBytes": "32"
            },
            "t_string_storage": {
              "label": "string",
              "numberOfBytes": "32"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            }
          },
          "layoutVersion": "1.1",
          "flat": true
        }
      },
      "IERC721Metadata": {
        "src": "@openzeppelin\\contracts\\token\\ERC721\\extensions\\IERC721Metadata.sol:12",
        "inherit": [
          "IERC721",
          "IERC165"
        ],
        "libraries": [],
        "methods": [
          "name()",
          "symbol()",
          "tokenURI(uint256)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "Address": {
        "src": "@openzeppelin\\contracts\\utils\\Address.sol:9",
        "version": {
          "withMetadata": "a0500f265408d7c0dbf75da3f9e44a5c2ee85e18bb1b58fe491ffcfa4ea7fd9b",
          "withoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db",
          "linkedWithoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db"
        },
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [
          {
            "kind": "delegatecall",
            "src": "@openzeppelin\\contracts\\utils\\Address.sol:185"
          }
        ],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "Context": {
        "src": "@openzeppelin\\contracts\\utils\\Context.sol:16",
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "Strings": {
        "src": "@openzeppelin\\contracts\\utils\\Strings.sol:11",
        "version": {
          "withMetadata": "c385b5200dd723f945d28b88358d79ca1b5c0f71c28cbbab9acf6d6f3fd15593",
          "withoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db",
          "linkedWithoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db"
        },
        "inherit": [],
        "libraries": [
          "Math"
        ],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "ERC165": {
        "src": "@openzeppelin\\contracts\\utils\\introspection\\ERC165.sol:22",
        "inherit": [
          "IERC165"
        ],
        "libraries": [],
        "methods": [
          "supportsInterface(bytes4)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "IERC165": {
        "src": "@openzeppelin\\contracts\\utils\\introspection\\IERC165.sol:15",
        "inherit": [],
        "libraries": [],
        "methods": [
          "supportsInterface(bytes4)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "Math": {
        "src": "@openzeppelin\\contracts\\utils\\math\\Math.sol:9",
        "version": {
          "withMetadata": "fcaf39e5e702f2902d6ef00c1def75c9800e8d2a0a78a87cf542096cafc7a4b0",
          "withoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db",
          "linkedWithoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db"
        },
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "HouseBusiness": {
        "src": "contracts\\HouseBusiness.sol:12",
        "version": {
          "withMetadata": "1c4a4cd0db121c2f65fd2aced2492f631ef2282d81eb7fbc021c67cbc9cdf4c7",
          "withoutMetadata": "576b466e4f42c6b5886370f8a93a08f7e99cffe9e2629be996a20372756ae7bb",
          "linkedWithoutMetadata": "576b466e4f42c6b5886370f8a93a08f7e99cffe9e2629be996a20372756ae7bb"
        },
        "inherit": [
          "ERC721URIStorage",
          "ERC721",
          "IERC721Metadata",
          "IERC721",
          "ERC165",
          "IERC165",
          "Context"
        ],
        "libraries": [],
        "methods": [
          "(address)",
          "setMinMaxHousePrice(uint256,uint256)",
          "setConfigToken(address)",
          "isMember()",
          "addMember(address)",
          "removeMember(address)",
          "tokenURI(uint256)",
          "setCContractAddress(address)",
          "setStakingContractAddress(address)",
          "setPayable(uint256,address,bool)",
          "mintHouse(string,string,string,string,uint256)",
          "addAllowList(uint256,address)",
          "removeAllowList(uint256,address)",
          "checkAllowedList(uint256,address)",
          "addHistory(uint256,uint256,uint256,string,string,string,string,string,uint256)",
          "getHistory(uint256)",
          "editHistory(uint256,uint256,string,string,string,string,string,uint256)",
          "getHistoryType()",
          "addOrEditHType(uint256,string,bool,bool,bool,bool,bool,bool,bool)",
          "removeHistoryType(uint256)",
          "getMinMaxNFT()",
          "getTokenOwner(uint256)",
          "disconnectContract(uint256,uint256,uint256)",
          "buyHouseNft(uint256)",
          "sendToken(address,uint256)",
          "changeTokenPrice(uint256,uint256)",
          "getAllHouses()",
          "getAllPayableHouses()",
          "getAllMyHouses()",
          "withdrawToken(uint256)",
          "withdrawETH(uint256)",
          "getTotalInfo()",
          "getTokenPrice(uint256)",
          "setHouseStakedStatus(uint256,bool)",
          "getRoyalty()",
          "setRoyalty(uint256)"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "HouseBusiness",
            "src": "contracts\\HouseBusiness.sol:92"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "_name",
              "offset": 0,
              "slot": "0",
              "type": "t_string_storage",
              "contract": "ERC721",
              "src": "@openzeppelin\\contracts\\token\\ERC721\\ERC721.sol:24"
            },
            {
              "label": "_symbol",
              "offset": 0,
              "slot": "1",
              "type": "t_string_storage",
              "contract": "ERC721",
              "src": "@openzeppelin\\contracts\\token\\ERC721\\ERC721.sol:27"
            },
            {
              "label": "_owners",
              "offset": 0,
              "slot": "2",
              "type": "t_mapping(t_uint256,t_address)",
              "contract": "ERC721",
              "src": "@openzeppelin\\contracts\\token\\ERC721\\ERC721.sol:30"
            },
            {
              "label": "_balances",
              "offset": 0,
              "slot": "3",
              "type": "t_mapping(t_address,t_uint256)",
              "contract": "ERC721",
              "src": "@openzeppelin\\contracts\\token\\ERC721\\ERC721.sol:33"
            },
            {
              "label": "_tokenApprovals",
              "offset": 0,
              "slot": "4",
              "type": "t_mapping(t_uint256,t_address)",
              "contract": "ERC721",
              "src": "@openzeppelin\\contracts\\token\\ERC721\\ERC721.sol:36"
            },
            {
              "label": "_operatorApprovals",
              "offset": 0,
              "slot": "5",
              "type": "t_mapping(t_address,t_mapping(t_address,t_bool))",
              "contract": "ERC721",
              "src": "@openzeppelin\\contracts\\token\\ERC721\\ERC721.sol:39"
            },
            {
              "label": "_tokenURIs",
              "offset": 0,
              "slot": "6",
              "type": "t_mapping(t_uint256,t_string_storage)",
              "contract": "ERC721URIStorage",
              "src": "@openzeppelin\\contracts\\token\\ERC721\\extensions\\ERC721URIStorage.sol:15"
            },
            {
              "label": "collectionName",
              "offset": 0,
              "slot": "7",
              "type": "t_string_storage",
              "contract": "HouseBusiness",
              "src": "contracts\\HouseBusiness.sol:14"
            },
            {
              "label": "collectionNameSymbol",
              "offset": 0,
              "slot": "8",
              "type": "t_string_storage",
              "contract": "HouseBusiness",
              "src": "contracts\\HouseBusiness.sol:16"
            },
            {
              "label": "houseCounter",
              "offset": 0,
              "slot": "9",
              "type": "t_uint256",
              "contract": "HouseBusiness",
              "src": "contracts\\HouseBusiness.sol:18"
            },
            {
              "label": "soldedCounter",
              "offset": 0,
              "slot": "10",
              "type": "t_uint256",
              "contract": "HouseBusiness",
              "src": "contracts\\HouseBusiness.sol:21"
            },
            {
              "label": "hTypeCounter",
              "offset": 0,
              "slot": "11",
              "type": "t_uint256",
              "contract": "HouseBusiness",
              "src": "contracts\\HouseBusiness.sol:23"
            },
            {
              "label": "_token",
              "offset": 0,
              "slot": "12",
              "type": "t_contract(IERC20)77",
              "contract": "HouseBusiness",
              "src": "contracts\\HouseBusiness.sol:25"
            },
            {
              "label": "minPrice",
              "offset": 0,
              "slot": "13",
              "type": "t_uint256",
              "contract": "HouseBusiness",
              "src": "contracts\\HouseBusiness.sol:27"
            },
            {
              "label": "maxPrice",
              "offset": 0,
              "slot": "14",
              "type": "t_uint256",
              "contract": "HouseBusiness",
              "src": "contracts\\HouseBusiness.sol:29"
            },
            {
              "label": "royalty",
              "offset": 0,
              "slot": "15",
              "type": "t_uint256",
              "contract": "HouseBusiness",
              "src": "contracts\\HouseBusiness.sol:31"
            },
            {
              "label": "cContract",
              "offset": 0,
              "slot": "16",
              "type": "t_contract(IMainCleanContract)4575",
              "contract": "HouseBusiness",
              "src": "contracts\\HouseBusiness.sol:33"
            },
            {
              "label": "historyTypes",
              "offset": 0,
              "slot": "17",
              "type": "t_array(t_struct(HistoryType)2831_storage)dyn_storage",
              "contract": "HouseBusiness",
              "src": "contracts\\HouseBusiness.sol:73"
            },
            {
              "label": "houseHistories",
              "offset": 0,
              "slot": "18",
              "type": "t_mapping(t_uint256,t_array(t_struct(History)2812_storage)dyn_storage)",
              "contract": "HouseBusiness",
              "src": "contracts\\HouseBusiness.sol:75"
            },
            {
              "label": "allMembers",
              "offset": 0,
              "slot": "19",
              "type": "t_mapping(t_address,t_bool)",
              "contract": "HouseBusiness",
              "src": "contracts\\HouseBusiness.sol:77"
            },
            {
              "label": "allHouses",
              "offset": 0,
              "slot": "20",
              "type": "t_mapping(t_uint256,t_struct(House)2795_storage)",
              "contract": "HouseBusiness",
              "src": "contracts\\HouseBusiness.sol:79"
            },
            {
              "label": "allowedList",
              "offset": 0,
              "slot": "21",
              "type": "t_mapping(t_uint256,t_mapping(t_address,t_bool))",
              "contract": "HouseBusiness",
              "src": "contracts\\HouseBusiness.sol:81"
            },
            {
              "label": "stakingContractAddress",
              "offset": 0,
              "slot": "22",
              "type": "t_address",
              "contract": "HouseBusiness",
              "src": "contracts\\HouseBusiness.sol:84"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            },
            "t_array(t_struct(History)2812_storage)dyn_storage": {
              "label": "struct HouseBusiness.History[]",
              "numberOfBytes": "32"
            },
            "t_array(t_struct(HistoryType)2831_storage)dyn_storage": {
              "label": "struct HouseBusiness.HistoryType[]",
              "numberOfBytes": "32"
            },
            "t_bool": {
              "label": "bool",
              "numberOfBytes": "1"
            },
            "t_contract(IERC20)77": {
              "label": "contract IERC20",
              "numberOfBytes": "20"
            },
            "t_contract(IMainCleanContract)4575": {
              "label": "contract IMainCleanContract",
              "numberOfBytes": "20"
            },
            "t_mapping(t_address,t_bool)": {
              "label": "mapping(address => bool)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_mapping(t_address,t_bool))": {
              "label": "mapping(address => mapping(address => bool))",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_uint256)": {
              "label": "mapping(address => uint256)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_uint256,t_address)": {
              "label": "mapping(uint256 => address)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_uint256,t_array(t_struct(History)2812_storage)dyn_storage)": {
              "label": "mapping(uint256 => struct HouseBusiness.History[])",
              "numberOfBytes": "32"
            },
            "t_mapping(t_uint256,t_mapping(t_address,t_bool))": {
              "label": "mapping(uint256 => mapping(address => bool))",
              "numberOfBytes": "32"
            },
            "t_mapping(t_uint256,t_string_storage)": {
              "label": "mapping(uint256 => string)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_uint256,t_struct(House)2795_storage)": {
              "label": "mapping(uint256 => struct HouseBusiness.House)",
              "numberOfBytes": "32"
            },
            "t_string_storage": {
              "label": "string",
              "numberOfBytes": "32"
            },
            "t_struct(History)2812_storage": {
              "label": "struct HouseBusiness.History",
              "members": [
                {
                  "label": "hID",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "0"
                },
                {
                  "label": "contractId",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "1"
                },
                {
                  "label": "houseImg",
                  "type": "t_string_storage",
                  "offset": 0,
                  "slot": "2"
                },
                {
                  "label": "houseBrand",
                  "type": "t_string_storage",
                  "offset": 0,
                  "slot": "3"
                },
                {
                  "label": "desc",
                  "type": "t_string_storage",
                  "offset": 0,
                  "slot": "4"
                },
                {
                  "label": "history",
                  "type": "t_string_storage",
                  "offset": 0,
                  "slot": "5"
                },
                {
                  "label": "brandType",
                  "type": "t_string_storage",
                  "offset": 0,
                  "slot": "6"
                },
                {
                  "label": "yearField",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "7"
                }
              ],
              "numberOfBytes": "256"
            },
            "t_struct(HistoryType)2831_storage": {
              "label": "struct HouseBusiness.HistoryType",
              "members": [
                {
                  "label": "hID",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "0"
                },
                {
                  "label": "hLabel",
                  "type": "t_string_storage",
                  "offset": 0,
                  "slot": "1"
                },
                {
                  "label": "connectContract",
                  "type": "t_bool",
                  "offset": 0,
                  "slot": "2"
                },
                {
                  "label": "imgNeed",
                  "type": "t_bool",
                  "offset": 1,
                  "slot": "2"
                },
                {
                  "label": "brandNeed",
                  "type": "t_bool",
                  "offset": 2,
                  "slot": "2"
                },
                {
                  "label": "descNeed",
                  "type": "t_bool",
                  "offset": 3,
                  "slot": "2"
                },
                {
                  "label": "brandTypeNeed",
                  "type": "t_bool",
                  "offset": 4,
                  "slot": "2"
                },
                {
                  "label": "yearNeed",
                  "type": "t_bool",
                  "offset": 5,
                  "slot": "2"
                },
                {
                  "label": "checkMark",
                  "type": "t_bool",
                  "offset": 6,
                  "slot": "2"
                }
              ],
              "numberOfBytes": "96"
            },
            "t_struct(House)2795_storage": {
              "label": "struct HouseBusiness.House",
              "members": [
                {
                  "label": "tokenId",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "0"
                },
                {
                  "label": "tokenName",
                  "type": "t_string_storage",
                  "offset": 0,
                  "slot": "1"
                },
                {
                  "label": "tokenURI",
                  "type": "t_string_storage",
                  "offset": 0,
                  "slot": "2"
                },
                {
                  "label": "tokenType",
                  "type": "t_string_storage",
                  "offset": 0,
                  "slot": "3"
                },
                {
                  "label": "currentOwner",
                  "type": "t_address",
                  "offset": 0,
                  "slot": "4"
                },
                {
                  "label": "previousOwner",
                  "type": "t_address",
                  "offset": 0,
                  "slot": "5"
                },
                {
                  "label": "buyer",
                  "type": "t_address",
                  "offset": 0,
                  "slot": "6"
                },
                {
                  "label": "price",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "7"
                },
                {
                  "label": "numberOfTransfers",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "8"
                },
                {
                  "label": "nftPayable",
                  "type": "t_bool",
                  "offset": 0,
                  "slot": "9"
                },
                {
                  "label": "staked",
                  "type": "t_bool",
                  "offset": 1,
                  "slot": "9"
                },
                {
                  "label": "soldstatus",
                  "type": "t_bool",
                  "offset": 2,
                  "slot": "9"
                }
              ],
              "numberOfBytes": "320"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            }
          },
          "layoutVersion": "1.1",
          "flat": true
        }
      },
      "IMainCleanContract": {
        "src": "contracts\\interfaces\\IContract.sol:6",
        "inherit": [],
        "libraries": [],
        "methods": [
          "getContractById(uint256)",
          "transferContractOwnership(uint256,address,address)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "IStaking": {
        "src": "contracts\\interfaces\\IStaking.sol:5",
        "inherit": [],
        "libraries": [],
        "methods": [
          "stakedCounter()"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      }
    },
    {
      "IERC20": {
        "src": "@openzeppelin\\contracts\\token\\ERC20\\IERC20.sol:9",
        "inherit": [],
        "libraries": [],
        "methods": [
          "totalSupply()",
          "balanceOf(address)",
          "transfer(address,uint256)",
          "allowance(address,address)",
          "approve(address,uint256)",
          "transferFrom(address,address,uint256)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "ERC721": {
        "src": "@openzeppelin\\contracts\\token\\ERC721\\ERC721.sol:19",
        "version": {
          "withMetadata": "311027b738fb50ea92c84baf68eacb931adf05de03da13635a661dc9c5b03f73",
          "withoutMetadata": "9ec7f439077c3b762bc3aa6a17c55aba7a78d240190c9c7814df896455a0f780",
          "linkedWithoutMetadata": "9ec7f439077c3b762bc3aa6a17c55aba7a78d240190c9c7814df896455a0f780"
        },
        "inherit": [
          "IERC721Metadata",
          "IERC721",
          "ERC165",
          "IERC165",
          "Context"
        ],
        "libraries": [
          "Address",
          "Strings"
        ],
        "methods": [
          "(string,string)",
          "supportsInterface(bytes4)",
          "balanceOf(address)",
          "ownerOf(uint256)",
          "name()",
          "symbol()",
          "tokenURI(uint256)",
          "approve(address,uint256)",
          "getApproved(uint256)",
          "setApprovalForAll(address,bool)",
          "isApprovedForAll(address,address)",
          "transferFrom(address,address,uint256)",
          "safeTransferFrom(address,address,uint256)",
          "safeTransferFrom(address,address,uint256,bytes)"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "ERC721",
            "src": "@openzeppelin\\contracts\\token\\ERC721\\ERC721.sol:44"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "_name",
              "offset": 0,
              "slot": "0",
              "type": "t_string_storage",
              "contract": "ERC721",
              "src": "@openzeppelin\\contracts\\token\\ERC721\\ERC721.sol:24"
            },
            {
              "label": "_symbol",
              "offset": 0,
              "slot": "1",
              "type": "t_string_storage",
              "contract": "ERC721",
              "src": "@openzeppelin\\contracts\\token\\ERC721\\ERC721.sol:27"
            },
            {
              "label": "_owners",
              "offset": 0,
              "slot": "2",
              "type": "t_mapping(t_uint256,t_address)",
              "contract": "ERC721",
              "src": "@openzeppelin\\contracts\\token\\ERC721\\ERC721.sol:30"
            },
            {
              "label": "_balances",
              "offset": 0,
              "slot": "3",
              "type": "t_mapping(t_address,t_uint256)",
              "contract": "ERC721",
              "src": "@openzeppelin\\contracts\\token\\ERC721\\ERC721.sol:33"
            },
            {
              "label": "_tokenApprovals",
              "offset": 0,
              "slot": "4",
              "type": "t_mapping(t_uint256,t_address)",
              "contract": "ERC721",
              "src": "@openzeppelin\\contracts\\token\\ERC721\\ERC721.sol:36"
            },
            {
              "label": "_operatorApprovals",
              "offset": 0,
              "slot": "5",
              "type": "t_mapping(t_address,t_mapping(t_address,t_bool))",
              "contract": "ERC721",
              "src": "@openzeppelin\\contracts\\token\\ERC721\\ERC721.sol:39"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            },
            "t_bool": {
              "label": "bool",
              "numberOfBytes": "1"
            },
            "t_mapping(t_address,t_bool)": {
              "label": "mapping(address => bool)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_mapping(t_address,t_bool))": {
              "label": "mapping(address => mapping(address => bool))",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_uint256)": {
              "label": "mapping(address => uint256)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_uint256,t_address)": {
              "label": "mapping(uint256 => address)",
              "numberOfBytes": "32"
            },
            "t_string_storage": {
              "label": "string",
              "numberOfBytes": "32"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            }
          },
          "layoutVersion": "1.1",
          "flat": true
        }
      },
      "IERC721": {
        "src": "@openzeppelin\\contracts\\token\\ERC721\\IERC721.sol:11",
        "inherit": [
          "IERC165"
        ],
        "libraries": [],
        "methods": [
          "balanceOf(address)",
          "ownerOf(uint256)",
          "safeTransferFrom(address,address,uint256,bytes)",
          "safeTransferFrom(address,address,uint256)",
          "transferFrom(address,address,uint256)",
          "approve(address,uint256)",
          "setApprovalForAll(address,bool)",
          "getApproved(uint256)",
          "isApprovedForAll(address,address)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "IERC721Receiver": {
        "src": "@openzeppelin\\contracts\\token\\ERC721\\IERC721Receiver.sol:11",
        "inherit": [],
        "libraries": [],
        "methods": [
          "onERC721Received(address,address,uint256,bytes)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "ERC721URIStorage": {
        "src": "@openzeppelin\\contracts\\token\\ERC721\\extensions\\ERC721URIStorage.sol:11",
        "inherit": [
          "ERC721",
          "IERC721Metadata",
          "IERC721",
          "ERC165",
          "IERC165",
          "Context"
        ],
        "libraries": [
          "Strings"
        ],
        "methods": [
          "tokenURI(uint256)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [
            {
              "label": "_name",
              "offset": 0,
              "slot": "0",
              "type": "t_string_storage",
              "contract": "ERC721",
              "src": "@openzeppelin\\contracts\\token\\ERC721\\ERC721.sol:24"
            },
            {
              "label": "_symbol",
              "offset": 0,
              "slot": "1",
              "type": "t_string_storage",
              "contract": "ERC721",
              "src": "@openzeppelin\\contracts\\token\\ERC721\\ERC721.sol:27"
            },
            {
              "label": "_owners",
              "offset": 0,
              "slot": "2",
              "type": "t_mapping(t_uint256,t_address)",
              "contract": "ERC721",
              "src": "@openzeppelin\\contracts\\token\\ERC721\\ERC721.sol:30"
            },
            {
              "label": "_balances",
              "offset": 0,
              "slot": "3",
              "type": "t_mapping(t_address,t_uint256)",
              "contract": "ERC721",
              "src": "@openzeppelin\\contracts\\token\\ERC721\\ERC721.sol:33"
            },
            {
              "label": "_tokenApprovals",
              "offset": 0,
              "slot": "4",
              "type": "t_mapping(t_uint256,t_address)",
              "contract": "ERC721",
              "src": "@openzeppelin\\contracts\\token\\ERC721\\ERC721.sol:36"
            },
            {
              "label": "_operatorApprovals",
              "offset": 0,
              "slot": "5",
              "type": "t_mapping(t_address,t_mapping(t_address,t_bool))",
              "contract": "ERC721",
              "src": "@openzeppelin\\contracts\\token\\ERC721\\ERC721.sol:39"
            },
            {
              "label": "_tokenURIs",
              "offset": 0,
              "slot": "6",
              "type": "t_mapping(t_uint256,t_string_storage)",
              "contract": "ERC721URIStorage",
              "src": "@openzeppelin\\contracts\\token\\ERC721\\extensions\\ERC721URIStorage.sol:15"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            },
            "t_bool": {
              "label": "bool",
              "numberOfBytes": "1"
            },
            "t_mapping(t_address,t_bool)": {
              "label": "mapping(address => bool)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_mapping(t_address,t_bool))": {
              "label": "mapping(address => mapping(address => bool))",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_uint256)": {
              "label": "mapping(address => uint256)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_uint256,t_address)": {
              "label": "mapping(uint256 => address)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_uint256,t_string_storage)": {
              "label": "mapping(uint256 => string)",
              "numberOfBytes": "32"
            },
            "t_string_storage": {
              "label": "string",
              "numberOfBytes": "32"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            }
          },
          "layoutVersion": "1.1",
          "flat": true
        }
      },
      "IERC721Metadata": {
        "src": "@openzeppelin\\contracts\\token\\ERC721\\extensions\\IERC721Metadata.sol:12",
        "inherit": [
          "IERC721",
          "IERC165"
        ],
        "libraries": [],
        "methods": [
          "name()",
          "symbol()",
          "tokenURI(uint256)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "Address": {
        "src": "@openzeppelin\\contracts\\utils\\Address.sol:9",
        "version": {
          "withMetadata": "a0500f265408d7c0dbf75da3f9e44a5c2ee85e18bb1b58fe491ffcfa4ea7fd9b",
          "withoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db",
          "linkedWithoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db"
        },
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [
          {
            "kind": "delegatecall",
            "src": "@openzeppelin\\contracts\\utils\\Address.sol:185"
          }
        ],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "Context": {
        "src": "@openzeppelin\\contracts\\utils\\Context.sol:16",
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "Strings": {
        "src": "@openzeppelin\\contracts\\utils\\Strings.sol:11",
        "version": {
          "withMetadata": "c385b5200dd723f945d28b88358d79ca1b5c0f71c28cbbab9acf6d6f3fd15593",
          "withoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db",
          "linkedWithoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db"
        },
        "inherit": [],
        "libraries": [
          "Math"
        ],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "ERC165": {
        "src": "@openzeppelin\\contracts\\utils\\introspection\\ERC165.sol:22",
        "inherit": [
          "IERC165"
        ],
        "libraries": [],
        "methods": [
          "supportsInterface(bytes4)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "IERC165": {
        "src": "@openzeppelin\\contracts\\utils\\introspection\\IERC165.sol:15",
        "inherit": [],
        "libraries": [],
        "methods": [
          "supportsInterface(bytes4)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "Math": {
        "src": "@openzeppelin\\contracts\\utils\\math\\Math.sol:9",
        "version": {
          "withMetadata": "fcaf39e5e702f2902d6ef00c1def75c9800e8d2a0a78a87cf542096cafc7a4b0",
          "withoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db",
          "linkedWithoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db"
        },
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "HouseBusiness": {
        "src": "contracts\\HouseBusiness.sol:12",
        "version": {
          "withMetadata": "1c4a4cd0db121c2f65fd2aced2492f631ef2282d81eb7fbc021c67cbc9cdf4c7",
          "withoutMetadata": "576b466e4f42c6b5886370f8a93a08f7e99cffe9e2629be996a20372756ae7bb",
          "linkedWithoutMetadata": "576b466e4f42c6b5886370f8a93a08f7e99cffe9e2629be996a20372756ae7bb"
        },
        "inherit": [
          "ERC721URIStorage",
          "ERC721",
          "IERC721Metadata",
          "IERC721",
          "ERC165",
          "IERC165",
          "Context"
        ],
        "libraries": [],
        "methods": [
          "(address)",
          "setMinMaxHousePrice(uint256,uint256)",
          "setConfigToken(address)",
          "isMember()",
          "addMember(address)",
          "removeMember(address)",
          "tokenURI(uint256)",
          "setCContractAddress(address)",
          "setStakingContractAddress(address)",
          "setPayable(uint256,address,bool)",
          "mintHouse(string,string,string,string,uint256)",
          "addAllowList(uint256,address)",
          "removeAllowList(uint256,address)",
          "checkAllowedList(uint256,address)",
          "addHistory(uint256,uint256,uint256,string,string,string,string,string,uint256)",
          "getHistory(uint256)",
          "editHistory(uint256,uint256,string,string,string,string,string,uint256)",
          "getHistoryType()",
          "addOrEditHType(uint256,string,bool,bool,bool,bool,bool,bool,bool)",
          "removeHistoryType(uint256)",
          "getMinMaxNFT()",
          "getTokenOwner(uint256)",
          "disconnectContract(uint256,uint256,uint256)",
          "buyHouseNft(uint256)",
          "sendToken(address,uint256)",
          "changeTokenPrice(uint256,uint256)",
          "getAllHouses()",
          "getAllPayableHouses()",
          "getAllMyHouses()",
          "withdrawToken(uint256)",
          "withdrawETH(uint256)",
          "getTotalInfo()",
          "getTokenPrice(uint256)",
          "setHouseStakedStatus(uint256,bool)",
          "getRoyalty()",
          "setRoyalty(uint256)"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "HouseBusiness",
            "src": "contracts\\HouseBusiness.sol:92"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "_name",
              "offset": 0,
              "slot": "0",
              "type": "t_string_storage",
              "contract": "ERC721",
              "src": "@openzeppelin\\contracts\\token\\ERC721\\ERC721.sol:24"
            },
            {
              "label": "_symbol",
              "offset": 0,
              "slot": "1",
              "type": "t_string_storage",
              "contract": "ERC721",
              "src": "@openzeppelin\\contracts\\token\\ERC721\\ERC721.sol:27"
            },
            {
              "label": "_owners",
              "offset": 0,
              "slot": "2",
              "type": "t_mapping(t_uint256,t_address)",
              "contract": "ERC721",
              "src": "@openzeppelin\\contracts\\token\\ERC721\\ERC721.sol:30"
            },
            {
              "label": "_balances",
              "offset": 0,
              "slot": "3",
              "type": "t_mapping(t_address,t_uint256)",
              "contract": "ERC721",
              "src": "@openzeppelin\\contracts\\token\\ERC721\\ERC721.sol:33"
            },
            {
              "label": "_tokenApprovals",
              "offset": 0,
              "slot": "4",
              "type": "t_mapping(t_uint256,t_address)",
              "contract": "ERC721",
              "src": "@openzeppelin\\contracts\\token\\ERC721\\ERC721.sol:36"
            },
            {
              "label": "_operatorApprovals",
              "offset": 0,
              "slot": "5",
              "type": "t_mapping(t_address,t_mapping(t_address,t_bool))",
              "contract": "ERC721",
              "src": "@openzeppelin\\contracts\\token\\ERC721\\ERC721.sol:39"
            },
            {
              "label": "_tokenURIs",
              "offset": 0,
              "slot": "6",
              "type": "t_mapping(t_uint256,t_string_storage)",
              "contract": "ERC721URIStorage",
              "src": "@openzeppelin\\contracts\\token\\ERC721\\extensions\\ERC721URIStorage.sol:15"
            },
            {
              "label": "collectionName",
              "offset": 0,
              "slot": "7",
              "type": "t_string_storage",
              "contract": "HouseBusiness",
              "src": "contracts\\HouseBusiness.sol:14"
            },
            {
              "label": "collectionNameSymbol",
              "offset": 0,
              "slot": "8",
              "type": "t_string_storage",
              "contract": "HouseBusiness",
              "src": "contracts\\HouseBusiness.sol:16"
            },
            {
              "label": "houseCounter",
              "offset": 0,
              "slot": "9",
              "type": "t_uint256",
              "contract": "HouseBusiness",
              "src": "contracts\\HouseBusiness.sol:18"
            },
            {
              "label": "soldedCounter",
              "offset": 0,
              "slot": "10",
              "type": "t_uint256",
              "contract": "HouseBusiness",
              "src": "contracts\\HouseBusiness.sol:21"
            },
            {
              "label": "hTypeCounter",
              "offset": 0,
              "slot": "11",
              "type": "t_uint256",
              "contract": "HouseBusiness",
              "src": "contracts\\HouseBusiness.sol:23"
            },
            {
              "label": "_token",
              "offset": 0,
              "slot": "12",
              "type": "t_contract(IERC20)77",
              "contract": "HouseBusiness",
              "src": "contracts\\HouseBusiness.sol:25"
            },
            {
              "label": "minPrice",
              "offset": 0,
              "slot": "13",
              "type": "t_uint256",
              "contract": "HouseBusiness",
              "src": "contracts\\HouseBusiness.sol:27"
            },
            {
              "label": "maxPrice",
              "offset": 0,
              "slot": "14",
              "type": "t_uint256",
              "contract": "HouseBusiness",
              "src": "contracts\\HouseBusiness.sol:29"
            },
            {
              "label": "royalty",
              "offset": 0,
              "slot": "15",
              "type": "t_uint256",
              "contract": "HouseBusiness",
              "src": "contracts\\HouseBusiness.sol:31"
            },
            {
              "label": "cContract",
              "offset": 0,
              "slot": "16",
              "type": "t_contract(IMainCleanContract)5551",
              "contract": "HouseBusiness",
              "src": "contracts\\HouseBusiness.sol:33"
            },
            {
              "label": "historyTypes",
              "offset": 0,
              "slot": "17",
              "type": "t_array(t_struct(HistoryType)2831_storage)dyn_storage",
              "contract": "HouseBusiness",
              "src": "contracts\\HouseBusiness.sol:73"
            },
            {
              "label": "houseHistories",
              "offset": 0,
              "slot": "18",
              "type": "t_mapping(t_uint256,t_array(t_struct(History)2812_storage)dyn_storage)",
              "contract": "HouseBusiness",
              "src": "contracts\\HouseBusiness.sol:75"
            },
            {
              "label": "allMembers",
              "offset": 0,
              "slot": "19",
              "type": "t_mapping(t_address,t_bool)",
              "contract": "HouseBusiness",
              "src": "contracts\\HouseBusiness.sol:77"
            },
            {
              "label": "allHouses",
              "offset": 0,
              "slot": "20",
              "type": "t_mapping(t_uint256,t_struct(House)2795_storage)",
              "contract": "HouseBusiness",
              "src": "contracts\\HouseBusiness.sol:79"
            },
            {
              "label": "allowedList",
              "offset": 0,
              "slot": "21",
              "type": "t_mapping(t_uint256,t_mapping(t_address,t_bool))",
              "contract": "HouseBusiness",
              "src": "contracts\\HouseBusiness.sol:81"
            },
            {
              "label": "stakingContractAddress",
              "offset": 0,
              "slot": "22",
              "type": "t_address",
              "contract": "HouseBusiness",
              "src": "contracts\\HouseBusiness.sol:84"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            },
            "t_array(t_struct(History)2812_storage)dyn_storage": {
              "label": "struct HouseBusiness.History[]",
              "numberOfBytes": "32"
            },
            "t_array(t_struct(HistoryType)2831_storage)dyn_storage": {
              "label": "struct HouseBusiness.HistoryType[]",
              "numberOfBytes": "32"
            },
            "t_bool": {
              "label": "bool",
              "numberOfBytes": "1"
            },
            "t_contract(IERC20)77": {
              "label": "contract IERC20",
              "numberOfBytes": "20"
            },
            "t_contract(IMainCleanContract)5551": {
              "label": "contract IMainCleanContract",
              "numberOfBytes": "20"
            },
            "t_mapping(t_address,t_bool)": {
              "label": "mapping(address => bool)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_mapping(t_address,t_bool))": {
              "label": "mapping(address => mapping(address => bool))",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_uint256)": {
              "label": "mapping(address => uint256)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_uint256,t_address)": {
              "label": "mapping(uint256 => address)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_uint256,t_array(t_struct(History)2812_storage)dyn_storage)": {
              "label": "mapping(uint256 => struct HouseBusiness.History[])",
              "numberOfBytes": "32"
            },
            "t_mapping(t_uint256,t_mapping(t_address,t_bool))": {
              "label": "mapping(uint256 => mapping(address => bool))",
              "numberOfBytes": "32"
            },
            "t_mapping(t_uint256,t_string_storage)": {
              "label": "mapping(uint256 => string)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_uint256,t_struct(House)2795_storage)": {
              "label": "mapping(uint256 => struct HouseBusiness.House)",
              "numberOfBytes": "32"
            },
            "t_string_storage": {
              "label": "string",
              "numberOfBytes": "32"
            },
            "t_struct(History)2812_storage": {
              "label": "struct HouseBusiness.History",
              "members": [
                {
                  "label": "hID",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "0"
                },
                {
                  "label": "contractId",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "1"
                },
                {
                  "label": "houseImg",
                  "type": "t_string_storage",
                  "offset": 0,
                  "slot": "2"
                },
                {
                  "label": "houseBrand",
                  "type": "t_string_storage",
                  "offset": 0,
                  "slot": "3"
                },
                {
                  "label": "desc",
                  "type": "t_string_storage",
                  "offset": 0,
                  "slot": "4"
                },
                {
                  "label": "history",
                  "type": "t_string_storage",
                  "offset": 0,
                  "slot": "5"
                },
                {
                  "label": "brandType",
                  "type": "t_string_storage",
                  "offset": 0,
                  "slot": "6"
                },
                {
                  "label": "yearField",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "7"
                }
              ],
              "numberOfBytes": "256"
            },
            "t_struct(HistoryType)2831_storage": {
              "label": "struct HouseBusiness.HistoryType",
              "members": [
                {
                  "label": "hID",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "0"
                },
                {
                  "label": "hLabel",
                  "type": "t_string_storage",
                  "offset": 0,
                  "slot": "1"
                },
                {
                  "label": "connectContract",
                  "type": "t_bool",
                  "offset": 0,
                  "slot": "2"
                },
                {
                  "label": "imgNeed",
                  "type": "t_bool",
                  "offset": 1,
                  "slot": "2"
                },
                {
                  "label": "brandNeed",
                  "type": "t_bool",
                  "offset": 2,
                  "slot": "2"
                },
                {
                  "label": "descNeed",
                  "type": "t_bool",
                  "offset": 3,
                  "slot": "2"
                },
                {
                  "label": "brandTypeNeed",
                  "type": "t_bool",
                  "offset": 4,
                  "slot": "2"
                },
                {
                  "label": "yearNeed",
                  "type": "t_bool",
                  "offset": 5,
                  "slot": "2"
                },
                {
                  "label": "checkMark",
                  "type": "t_bool",
                  "offset": 6,
                  "slot": "2"
                }
              ],
              "numberOfBytes": "96"
            },
            "t_struct(House)2795_storage": {
              "label": "struct HouseBusiness.House",
              "members": [
                {
                  "label": "tokenId",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "0"
                },
                {
                  "label": "tokenName",
                  "type": "t_string_storage",
                  "offset": 0,
                  "slot": "1"
                },
                {
                  "label": "tokenURI",
                  "type": "t_string_storage",
                  "offset": 0,
                  "slot": "2"
                },
                {
                  "label": "tokenType",
                  "type": "t_string_storage",
                  "offset": 0,
                  "slot": "3"
                },
                {
                  "label": "currentOwner",
                  "type": "t_address",
                  "offset": 0,
                  "slot": "4"
                },
                {
                  "label": "previousOwner",
                  "type": "t_address",
                  "offset": 0,
                  "slot": "5"
                },
                {
                  "label": "buyer",
                  "type": "t_address",
                  "offset": 0,
                  "slot": "6"
                },
                {
                  "label": "price",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "7"
                },
                {
                  "label": "numberOfTransfers",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "8"
                },
                {
                  "label": "nftPayable",
                  "type": "t_bool",
                  "offset": 0,
                  "slot": "9"
                },
                {
                  "label": "staked",
                  "type": "t_bool",
                  "offset": 1,
                  "slot": "9"
                },
                {
                  "label": "soldstatus",
                  "type": "t_bool",
                  "offset": 2,
                  "slot": "9"
                }
              ],
              "numberOfBytes": "320"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            }
          },
          "layoutVersion": "1.1",
          "flat": true
        }
      },
      "HouseStaking": {
        "src": "contracts\\Staking.sol:6",
        "version": {
          "withMetadata": "1631da731d0e2b52c81a316e137d89d443991d8823c4d4d4d9c3929bc729a164",
          "withoutMetadata": "92078b7ed6da756ae03297e8c845495c2d09ac69b7981d78a9050acf26a3d7f4",
          "linkedWithoutMetadata": "92078b7ed6da756ae03297e8c845495c2d09ac69b7981d78a9050acf26a3d7f4"
        },
        "inherit": [],
        "libraries": [],
        "methods": [
          "(address,address)",
          "calcDiv(uint256,uint256)",
          "setAPYConfig(uint256,uint256)",
          "getAllAPYTypes()",
          "stake(uint256,uint256)",
          "unstake(uint256)",
          "stakingFinished(uint256)",
          "totalRewards(address)",
          "claimRewards(address)",
          "getAllMyStakedNFTs()",
          "getAllAPYs()",
          "getPenalty()",
          "setPenalty(uint256)",
          "updateAPYConfig(uint256,uint256)"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "HouseStaking",
            "src": "contracts\\Staking.sol:33"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "stakedCounter",
              "offset": 0,
              "slot": "0",
              "type": "t_uint256",
              "contract": "HouseStaking",
              "src": "contracts\\Staking.sol:8"
            },
            {
              "label": "penalty",
              "offset": 0,
              "slot": "1",
              "type": "t_uint256",
              "contract": "HouseStaking",
              "src": "contracts\\Staking.sol:10"
            },
            {
              "label": "APYtypes",
              "offset": 0,
              "slot": "2",
              "type": "t_array(t_uint256)dyn_storage",
              "contract": "HouseStaking",
              "src": "contracts\\Staking.sol:12"
            },
            {
              "label": "APYConfig",
              "offset": 0,
              "slot": "3",
              "type": "t_mapping(t_uint256,t_uint256)",
              "contract": "HouseStaking",
              "src": "contracts\\Staking.sol:15"
            },
            {
              "label": "stakedNfts",
              "offset": 0,
              "slot": "4",
              "type": "t_mapping(t_address,t_array(t_struct(StakedNft)4564_storage)dyn_storage)",
              "contract": "HouseStaking",
              "src": "contracts\\Staking.sol:16"
            },
            {
              "label": "tokenAddress",
              "offset": 0,
              "slot": "5",
              "type": "t_address",
              "contract": "HouseStaking",
              "src": "contracts\\Staking.sol:18"
            },
            {
              "label": "houseNFTAddress",
              "offset": 0,
              "slot": "6",
              "type": "t_address",
              "contract": "HouseStaking",
              "src": "contracts\\Staking.sol:19"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            },
            "t_array(t_struct(StakedNft)4564_storage)dyn_storage": {
              "label": "struct HouseStaking.StakedNft[]",
              "numberOfBytes": "32"
            },
            "t_array(t_uint256)dyn_storage": {
              "label": "uint256[]",
              "numberOfBytes": "32"
            },
            "t_bool": {
              "label": "bool",
              "numberOfBytes": "1"
            },
            "t_mapping(t_address,t_array(t_struct(StakedNft)4564_storage)dyn_storage)": {
              "label": "mapping(address => struct HouseStaking.StakedNft[])",
              "numberOfBytes": "32"
            },
            "t_mapping(t_uint256,t_uint256)": {
              "label": "mapping(uint256 => uint256)",
              "numberOfBytes": "32"
            },
            "t_struct(StakedNft)4564_storage": {
              "label": "struct HouseStaking.StakedNft",
              "members": [
                {
                  "label": "owner",
                  "type": "t_address",
                  "offset": 0,
                  "slot": "0"
                },
                {
                  "label": "tokenId",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "1"
                },
                {
                  "label": "startedDate",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "2"
                },
                {
                  "label": "endDate",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "3"
                },
                {
                  "label": "claimDate",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "4"
                },
                {
                  "label": "stakingType",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "5"
                },
                {
                  "label": "perSecRewards",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "6"
                },
                {
                  "label": "stakingStatus",
                  "type": "t_bool",
                  "offset": 0,
                  "slot": "7"
                }
              ],
              "numberOfBytes": "256"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            }
          },
          "layoutVersion": "1.1",
          "flat": true
        }
      },
      "IMainCleanContract": {
        "src": "contracts\\interfaces\\IContract.sol:6",
        "inherit": [],
        "libraries": [],
        "methods": [
          "getContractById(uint256)",
          "transferContractOwnership(uint256,address,address)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "IHouseBusiness": {
        "src": "contracts\\interfaces\\IHouseBusiness.sol:5",
        "inherit": [],
        "libraries": [],
        "methods": [
          "collectionName()",
          "collectionNameSymbol()",
          "houseCounter()",
          "stakedCounter()",
          "soldedCounter()",
          "hTypeCounter()",
          "minPrice()",
          "maxPrice()",
          "penalty()",
          "royalty()",
          "historyTypes(uint256)",
          "houseHistories(uint256)",
          "allMembers(address)",
          "allHouses(uint256)",
          "stakedNfts(address)",
          "setMinMaxHousePrice(uint256,uint256)",
          "setConfigToken(address)",
          "isMember()",
          "addMember(address)",
          "removeMember(address)",
          "tokenURI(uint256)",
          "setPayable(uint256,address,bool)",
          "mintHouse(string,string,string,string,uint256)",
          "addAllowList(uint256,address)",
          "removeAllowList(uint256,address)",
          "checkAllowedList(uint256,address)",
          "addHistory(uint256,uint256,string,string,string,string,string,uint256)",
          "getHistory(uint256)",
          "editHistory(uint256,uint256,string,string,string,string,string,uint256)",
          "getHistoryType()",
          "addOrEditHType(uint256,string,bool,bool,bool,bool,bool,bool,bool)",
          "removeHistoryType(uint256)",
          "getMinMaxNFT()",
          "getTokenOwner(uint256)",
          "buyHouseNft(uint256)",
          "sendToken(address,uint256)",
          "changeTokenPrice(uint256,uint256)",
          "getAllHouses()",
          "getAllPayableHouses()",
          "getAllMyHouses()",
          "withdrawToken(uint256)",
          "withdrawETH(uint256)",
          "setAPYConfig(uint256,uint256)",
          "getAllAPYTypes()",
          "stake(uint256,uint256)",
          "unstake(uint256)",
          "stakingFinished(uint256)",
          "totalRewards(address)",
          "claimRewards(address)",
          "getAllMyStakedNFTs()",
          "getTotalInfo()",
          "getAllAPYs()",
          "getPenalty()",
          "setPenalty(uint256)",
          "getRoyalty()",
          "setRoyalty(uint256)",
          "ownerOf(uint256)",
          "getTokenPrice(uint256)",
          "setHouseStakedStatus(uint256,bool)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "IStaking": {
        "src": "contracts\\interfaces\\IStaking.sol:5",
        "inherit": [],
        "libraries": [],
        "methods": [
          "stakedCounter()"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      }
    },
    {
      "MainCleanContract": {
        "src": "contracts\\Contract.sol:6",
        "version": {
          "withMetadata": "6421e940ca2c08cec604e64c4e3802894c030e3491305b8df865d9e1c9e89aac",
          "withoutMetadata": "4b8cbb4879901533fe49280ca430f3230d2cf4cb717e76bb4a9404845cd178f8",
          "linkedWithoutMetadata": "4b8cbb4879901533fe49280ca430f3230d2cf4cb717e76bb4a9404845cd178f8"
        },
        "inherit": [],
        "libraries": [],
        "methods": [
          "(address)",
          "ccCreation(string,string,address,string,uint256,uint256,uint256,string)",
          "getAllContractsByOwner()",
          "getAllContractsBySigner()",
          "getContractById(uint256)",
          "addContractSigner(uint256,address)",
          "signContract(uint256)",
          "sendNotify(address,string,uint256)",
          "getUploadedCounter()",
          "getAllNotifies()",
          "calcDiv(uint256,uint256)",
          "toString(bytes)",
          "addressToString(address)",
          "uintToString(uint256)",
          "bytesToString(bytes32)",
          "transferContractOwnership(uint256,address,address)"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "MainCleanContract",
            "src": "contracts\\Contract.sol:52"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "ccCounter",
              "offset": 0,
              "slot": "0",
              "type": "t_uint256",
              "contract": "MainCleanContract",
              "src": "contracts\\Contract.sol:8"
            },
            {
              "label": "houseNFTAddress",
              "offset": 0,
              "slot": "1",
              "type": "t_address",
              "contract": "MainCleanContract",
              "src": "contracts\\Contract.sol:11"
            },
            {
              "label": "allCleanContracts",
              "offset": 0,
              "slot": "2",
              "type": "t_mapping(t_uint256,t_struct(CleanContract)39_storage)",
              "contract": "MainCleanContract",
              "src": "contracts\\Contract.sol:44"
            },
            {
              "label": "allContractsByOwner",
              "offset": 0,
              "slot": "3",
              "type": "t_mapping(t_address,t_array(t_uint256)dyn_storage)",
              "contract": "MainCleanContract",
              "src": "contracts\\Contract.sol:46"
            },
            {
              "label": "allContractsBySigner",
              "offset": 0,
              "slot": "4",
              "type": "t_mapping(t_address,t_array(t_uint256)dyn_storage)",
              "contract": "MainCleanContract",
              "src": "contracts\\Contract.sol:48"
            },
            {
              "label": "allNotifies",
              "offset": 0,
              "slot": "5",
              "type": "t_mapping(t_address,t_array(t_struct(Notify)52_storage)dyn_storage)",
              "contract": "MainCleanContract",
              "src": "contracts\\Contract.sol:50"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            },
            "t_array(t_struct(Notify)52_storage)dyn_storage": {
              "label": "struct MainCleanContract.Notify[]",
              "numberOfBytes": "32"
            },
            "t_array(t_uint256)dyn_storage": {
              "label": "uint256[]",
              "numberOfBytes": "32"
            },
            "t_bool": {
              "label": "bool",
              "numberOfBytes": "1"
            },
            "t_mapping(t_address,t_array(t_struct(Notify)52_storage)dyn_storage)": {
              "label": "mapping(address => struct MainCleanContract.Notify[])",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_array(t_uint256)dyn_storage)": {
              "label": "mapping(address => uint256[])",
              "numberOfBytes": "32"
            },
            "t_mapping(t_uint256,t_struct(CleanContract)39_storage)": {
              "label": "mapping(uint256 => struct MainCleanContract.CleanContract)",
              "numberOfBytes": "32"
            },
            "t_string_storage": {
              "label": "string",
              "numberOfBytes": "32"
            },
            "t_struct(CleanContract)39_storage": {
              "label": "struct MainCleanContract.CleanContract",
              "members": [
                {
                  "label": "contractId",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "0"
                },
                {
                  "label": "companyName",
                  "type": "t_string_storage",
                  "offset": 0,
                  "slot": "1"
                },
                {
                  "label": "contractType",
                  "type": "t_string_storage",
                  "offset": 0,
                  "slot": "2"
                },
                {
                  "label": "contractURI",
                  "type": "t_string_storage",
                  "offset": 0,
                  "slot": "3"
                },
                {
                  "label": "dateFrom",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "4"
                },
                {
                  "label": "dateTo",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "5"
                },
                {
                  "label": "agreedPrice",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "6"
                },
                {
                  "label": "currency",
                  "type": "t_string_storage",
                  "offset": 0,
                  "slot": "7"
                },
                {
                  "label": "creator",
                  "type": "t_address",
                  "offset": 0,
                  "slot": "8"
                },
                {
                  "label": "owner",
                  "type": "t_address",
                  "offset": 0,
                  "slot": "9"
                },
                {
                  "label": "creatorApproval",
                  "type": "t_bool",
                  "offset": 20,
                  "slot": "9"
                },
                {
                  "label": "creatorSignDate",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "10"
                },
                {
                  "label": "contractSigner",
                  "type": "t_address",
                  "offset": 0,
                  "slot": "11"
                },
                {
                  "label": "signerApproval",
                  "type": "t_bool",
                  "offset": 20,
                  "slot": "11"
                },
                {
                  "label": "signerSignDate",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "12"
                },
                {
                  "label": "status",
                  "type": "t_string_storage",
                  "offset": 0,
                  "slot": "13"
                }
              ],
              "numberOfBytes": "448"
            },
            "t_struct(Notify)52_storage": {
              "label": "struct MainCleanContract.Notify",
              "members": [
                {
                  "label": "nSender",
                  "type": "t_address",
                  "offset": 0,
                  "slot": "0"
                },
                {
                  "label": "nReceiver",
                  "type": "t_address",
                  "offset": 0,
                  "slot": "1"
                },
                {
                  "label": "ccID",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "2"
                },
                {
                  "label": "notifySentTime",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "3"
                },
                {
                  "label": "notifyContent",
                  "type": "t_string_storage",
                  "offset": 0,
                  "slot": "4"
                },
                {
                  "label": "status",
                  "type": "t_bool",
                  "offset": 0,
                  "slot": "5"
                }
              ],
              "numberOfBytes": "192"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            }
          },
          "layoutVersion": "1.1",
          "flat": true
        }
      }
    },
    {
      "ThirdParty": {
        "src": "contracts\\ThirdParty.sol:5",
        "version": {
          "withMetadata": "cbf5b2fae6668ee45b86827e485cbed39526db15e39a77a193d607720ff0015c",
          "withoutMetadata": "c7f6b899dcbca6a360ab204550ba9b4fec9f4cae1bcd2f5879cfa3965e9d550f",
          "linkedWithoutMetadata": "c7f6b899dcbca6a360ab204550ba9b4fec9f4cae1bcd2f5879cfa3965e9d550f"
        },
        "inherit": [],
        "libraries": [],
        "methods": [
          "getAllCategories()",
          "addCategory(string,uint256[])",
          "editCategory(uint256,string,uint256[])",
          "deleteCategory(uint256)",
          "getAllProperties()",
          "addProperty(string)",
          "editProperty(uint256,string)",
          "deleteProperty(uint256)",
          "getPackagesByCategory(uint256)",
          "addPackage(uint256,string,uint256,uint256,uint256,bool[])",
          "editPackage(uint256,uint256,string,uint256,uint256,uint256,bool[])",
          "deletePackage(uint256,uint256)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [
            {
              "label": "categoryCounter",
              "offset": 0,
              "slot": "0",
              "type": "t_uint256",
              "contract": "ThirdParty",
              "src": "contracts\\ThirdParty.sol:12"
            },
            {
              "label": "packageCounter",
              "offset": 0,
              "slot": "1",
              "type": "t_uint256",
              "contract": "ThirdParty",
              "src": "contracts\\ThirdParty.sol:23"
            },
            {
              "label": "propertyCounter",
              "offset": 0,
              "slot": "2",
              "type": "t_uint256",
              "contract": "ThirdParty",
              "src": "contracts\\ThirdParty.sol:29"
            },
            {
              "label": "allCategories",
              "offset": 0,
              "slot": "3",
              "type": "t_array(t_struct(Category)11_storage)dyn_storage",
              "contract": "ThirdParty",
              "src": "contracts\\ThirdParty.sol:31"
            },
            {
              "label": "allPackages",
              "offset": 0,
              "slot": "4",
              "type": "t_mapping(t_uint256,t_array(t_struct(Package)29_storage)dyn_storage)",
              "contract": "ThirdParty",
              "src": "contracts\\ThirdParty.sol:34"
            },
            {
              "label": "allProperties",
              "offset": 0,
              "slot": "5",
              "type": "t_array(t_struct(Property)36_storage)dyn_storage",
              "contract": "ThirdParty",
              "src": "contracts\\ThirdParty.sol:37"
            }
          ],
          "types": {
            "t_array(t_bool)dyn_storage": {
              "label": "bool[]",
              "numberOfBytes": "32"
            },
            "t_array(t_struct(Category)11_storage)dyn_storage": {
              "label": "struct ThirdParty.Category[]",
              "numberOfBytes": "32"
            },
            "t_array(t_struct(Package)29_storage)dyn_storage": {
              "label": "struct ThirdParty.Package[]",
              "numberOfBytes": "32"
            },
            "t_array(t_struct(Property)36_storage)dyn_storage": {
              "label": "struct ThirdParty.Property[]",
              "numberOfBytes": "32"
            },
            "t_array(t_uint256)dyn_storage": {
              "label": "uint256[]",
              "numberOfBytes": "32"
            },
            "t_bool": {
              "label": "bool",
              "numberOfBytes": "1"
            },
            "t_mapping(t_uint256,t_array(t_struct(Package)29_storage)dyn_storage)": {
              "label": "mapping(uint256 => struct ThirdParty.Package[])",
              "numberOfBytes": "32"
            },
            "t_string_storage": {
              "label": "string",
              "numberOfBytes": "32"
            },
            "t_struct(Category)11_storage": {
              "label": "struct ThirdParty.Category",
              "members": [
                {
                  "label": "categoryID",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "0"
                },
                {
                  "label": "cartegoryName",
                  "type": "t_string_storage",
                  "offset": 0,
                  "slot": "1"
                },
                {
                  "label": "properties",
                  "type": "t_array(t_uint256)dyn_storage",
                  "offset": 0,
                  "slot": "2"
                },
                {
                  "label": "visible",
                  "type": "t_bool",
                  "offset": 0,
                  "slot": "3"
                }
              ],
              "numberOfBytes": "128"
            },
            "t_struct(Package)29_storage": {
              "label": "struct ThirdParty.Package",
              "members": [
                {
                  "label": "categoryID",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "0"
                },
                {
                  "label": "packageID",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "1"
                },
                {
                  "label": "packageName",
                  "type": "t_string_storage",
                  "offset": 0,
                  "slot": "2"
                },
                {
                  "label": "price",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "3"
                },
                {
                  "label": "period",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "4"
                },
                {
                  "label": "dataLimit",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "5"
                },
                {
                  "label": "propertyVisible",
                  "type": "t_array(t_bool)dyn_storage",
                  "offset": 0,
                  "slot": "6"
                }
              ],
              "numberOfBytes": "224"
            },
            "t_struct(Property)36_storage": {
              "label": "struct ThirdParty.Property",
              "members": [
                {
                  "label": "propertyID",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "0"
                },
                {
                  "label": "propertyName",
                  "type": "t_string_storage",
                  "offset": 0,
                  "slot": "1"
                }
              ],
              "numberOfBytes": "64"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            }
          },
          "layoutVersion": "1.1",
          "flat": true
        }
      }
    },
    {
      "Context": {
        "src": "contracts\\TokenContract.sol:22",
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "HouseBusinessToken": {
        "src": "contracts\\TokenContract.sol:33",
        "version": {
          "withMetadata": "e53f4b9234e67266e4442dec09d084a17cbe6b1b4fb90d62776f0d6f370f0570",
          "withoutMetadata": "f5d2b294cac19c78c593798b4a1bae04c45c82839cbcffe3cc910bb441f21259",
          "linkedWithoutMetadata": "f5d2b294cac19c78c593798b4a1bae04c45c82839cbcffe3cc910bb441f21259"
        },
        "inherit": [
          "IERC20Metadata",
          "IERC20",
          "Context"
        ],
        "libraries": [],
        "methods": [
          "()",
          "name()",
          "symbol()",
          "decimals()",
          "totalSupply()",
          "balanceOf(address)",
          "transfer(address,uint256)",
          "allowance(address,address)",
          "approve(address,uint256)",
          "transferFrom(address,address,uint256)",
          "increaseAllowance(address,uint256)",
          "decreaseAllowance(address,uint256)",
          "_mint(address,uint256)"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "HouseBusinessToken",
            "src": "contracts\\TokenContract.sol:42"
          },
          {
            "kind": "state-variable-assignment",
            "name": "_name",
            "src": "contracts\\TokenContract.sol:37"
          },
          {
            "kind": "state-variable-assignment",
            "name": "_symbol",
            "src": "contracts\\TokenContract.sol:38"
          },
          {
            "kind": "state-variable-assignment",
            "name": "_decimals",
            "src": "contracts\\TokenContract.sol:39"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "_balances",
              "offset": 0,
              "slot": "0",
              "type": "t_mapping(t_address,t_uint256)",
              "contract": "HouseBusinessToken",
              "src": "contracts\\TokenContract.sol:34"
            },
            {
              "label": "_allowances",
              "offset": 0,
              "slot": "1",
              "type": "t_mapping(t_address,t_mapping(t_address,t_uint256))",
              "contract": "HouseBusinessToken",
              "src": "contracts\\TokenContract.sol:35"
            },
            {
              "label": "_totalSupply",
              "offset": 0,
              "slot": "2",
              "type": "t_uint256",
              "contract": "HouseBusinessToken",
              "src": "contracts\\TokenContract.sol:36"
            },
            {
              "label": "_name",
              "offset": 0,
              "slot": "3",
              "type": "t_string_storage",
              "contract": "HouseBusinessToken",
              "src": "contracts\\TokenContract.sol:37"
            },
            {
              "label": "_symbol",
              "offset": 0,
              "slot": "4",
              "type": "t_string_storage",
              "contract": "HouseBusinessToken",
              "src": "contracts\\TokenContract.sol:38"
            },
            {
              "label": "_decimals",
              "offset": 0,
              "slot": "5",
              "type": "t_uint8",
              "contract": "HouseBusinessToken",
              "src": "contracts\\TokenContract.sol:39"
            },
            {
              "label": "_owner",
              "offset": 1,
              "slot": "5",
              "type": "t_address",
              "contract": "HouseBusinessToken",
              "src": "contracts\\TokenContract.sol:40"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            },
            "t_mapping(t_address,t_mapping(t_address,t_uint256))": {
              "label": "mapping(address => mapping(address => uint256))",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_uint256)": {
              "label": "mapping(address => uint256)",
              "numberOfBytes": "32"
            },
            "t_string_storage": {
              "label": "string",
              "numberOfBytes": "32"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            },
            "t_uint8": {
              "label": "uint8",
              "numberOfBytes": "1"
            }
          },
          "layoutVersion": "1.1",
          "flat": true
        }
      },
      "IERC20": {
        "src": "contracts\\TokenContract.sol:5",
        "inherit": [],
        "libraries": [],
        "methods": [
          "totalSupply()",
          "balanceOf(address)",
          "transfer(address,uint256)",
          "allowance(address,address)",
          "approve(address,uint256)",
          "transferFrom(address,address,uint256)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "IERC20Metadata": {
        "src": "contracts\\TokenContract.sol:16",
        "inherit": [
          "IERC20"
        ],
        "libraries": [],
        "methods": [
          "name()",
          "symbol()",
          "decimals()"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      }
    },
    {
      "IPRC20": {
        "src": "contracts\\interfaces\\IPRC20.sol:4",
        "inherit": [],
        "libraries": [],
        "methods": [
          "totalSupply()",
          "balanceOf(address)",
          "transfer(address,uint256)",
          "allowance(address,address)",
          "approve(address,uint256)",
          "transferFrom(address,address,uint256)",
          "decimals()"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      }
    },
    {
      "IERC20": {
        "src": "@openzeppelin\\contracts\\token\\ERC20\\IERC20.sol:9",
        "inherit": [],
        "libraries": [],
        "methods": [
          "totalSupply()",
          "balanceOf(address)",
          "transfer(address,uint256)",
          "allowance(address,address)",
          "approve(address,uint256)",
          "transferFrom(address,address,uint256)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "IERC721": {
        "src": "@openzeppelin\\contracts\\token\\ERC721\\IERC721.sol:11",
        "inherit": [
          "IERC165"
        ],
        "libraries": [],
        "methods": [
          "balanceOf(address)",
          "ownerOf(uint256)",
          "safeTransferFrom(address,address,uint256,bytes)",
          "safeTransferFrom(address,address,uint256)",
          "transferFrom(address,address,uint256)",
          "approve(address,uint256)",
          "setApprovalForAll(address,bool)",
          "getApproved(uint256)",
          "isApprovedForAll(address,address)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "IERC165": {
        "src": "@openzeppelin\\contracts\\utils\\introspection\\IERC165.sol:15",
        "inherit": [],
        "libraries": [],
        "methods": [
          "supportsInterface(bytes4)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "HouseStaking": {
        "src": "contracts\\Staking.sol:6",
        "version": {
          "withMetadata": "1631da731d0e2b52c81a316e137d89d443991d8823c4d4d4d9c3929bc729a164",
          "withoutMetadata": "92078b7ed6da756ae03297e8c845495c2d09ac69b7981d78a9050acf26a3d7f4",
          "linkedWithoutMetadata": "92078b7ed6da756ae03297e8c845495c2d09ac69b7981d78a9050acf26a3d7f4"
        },
        "inherit": [],
        "libraries": [],
        "methods": [
          "(address,address)",
          "calcDiv(uint256,uint256)",
          "setAPYConfig(uint256,uint256)",
          "getAllAPYTypes()",
          "stake(uint256,uint256)",
          "unstake(uint256)",
          "stakingFinished(uint256)",
          "totalRewards(address)",
          "claimRewards(address)",
          "getAllMyStakedNFTs()",
          "getAllAPYs()",
          "getPenalty()",
          "setPenalty(uint256)",
          "updateAPYConfig(uint256,uint256)"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "HouseStaking",
            "src": "contracts\\Staking.sol:33"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "stakedCounter",
              "offset": 0,
              "slot": "0",
              "type": "t_uint256",
              "contract": "HouseStaking",
              "src": "contracts\\Staking.sol:8"
            },
            {
              "label": "penalty",
              "offset": 0,
              "slot": "1",
              "type": "t_uint256",
              "contract": "HouseStaking",
              "src": "contracts\\Staking.sol:10"
            },
            {
              "label": "APYtypes",
              "offset": 0,
              "slot": "2",
              "type": "t_array(t_uint256)dyn_storage",
              "contract": "HouseStaking",
              "src": "contracts\\Staking.sol:12"
            },
            {
              "label": "APYConfig",
              "offset": 0,
              "slot": "3",
              "type": "t_mapping(t_uint256,t_uint256)",
              "contract": "HouseStaking",
              "src": "contracts\\Staking.sol:15"
            },
            {
              "label": "stakedNfts",
              "offset": 0,
              "slot": "4",
              "type": "t_mapping(t_address,t_array(t_struct(StakedNft)248_storage)dyn_storage)",
              "contract": "HouseStaking",
              "src": "contracts\\Staking.sol:16"
            },
            {
              "label": "tokenAddress",
              "offset": 0,
              "slot": "5",
              "type": "t_address",
              "contract": "HouseStaking",
              "src": "contracts\\Staking.sol:18"
            },
            {
              "label": "houseNFTAddress",
              "offset": 0,
              "slot": "6",
              "type": "t_address",
              "contract": "HouseStaking",
              "src": "contracts\\Staking.sol:19"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            },
            "t_array(t_struct(StakedNft)248_storage)dyn_storage": {
              "label": "struct HouseStaking.StakedNft[]",
              "numberOfBytes": "32"
            },
            "t_array(t_uint256)dyn_storage": {
              "label": "uint256[]",
              "numberOfBytes": "32"
            },
            "t_bool": {
              "label": "bool",
              "numberOfBytes": "1"
            },
            "t_mapping(t_address,t_array(t_struct(StakedNft)248_storage)dyn_storage)": {
              "label": "mapping(address => struct HouseStaking.StakedNft[])",
              "numberOfBytes": "32"
            },
            "t_mapping(t_uint256,t_uint256)": {
              "label": "mapping(uint256 => uint256)",
              "numberOfBytes": "32"
            },
            "t_struct(StakedNft)248_storage": {
              "label": "struct HouseStaking.StakedNft",
              "members": [
                {
                  "label": "owner",
                  "type": "t_address",
                  "offset": 0,
                  "slot": "0"
                },
                {
                  "label": "tokenId",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "1"
                },
                {
                  "label": "startedDate",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "2"
                },
                {
                  "label": "endDate",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "3"
                },
                {
                  "label": "claimDate",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "4"
                },
                {
                  "label": "stakingType",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "5"
                },
                {
                  "label": "perSecRewards",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "6"
                },
                {
                  "label": "stakingStatus",
                  "type": "t_bool",
                  "offset": 0,
                  "slot": "7"
                }
              ],
              "numberOfBytes": "256"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            }
          },
          "layoutVersion": "1.1",
          "flat": true
        }
      },
      "IHouseBusiness": {
        "src": "contracts\\interfaces\\IHouseBusiness.sol:5",
        "inherit": [],
        "libraries": [],
        "methods": [
          "collectionName()",
          "collectionNameSymbol()",
          "houseCounter()",
          "stakedCounter()",
          "soldedCounter()",
          "hTypeCounter()",
          "minPrice()",
          "maxPrice()",
          "penalty()",
          "royalty()",
          "historyTypes(uint256)",
          "houseHistories(uint256)",
          "allMembers(address)",
          "allHouses(uint256)",
          "stakedNfts(address)",
          "setMinMaxHousePrice(uint256,uint256)",
          "setConfigToken(address)",
          "isMember()",
          "addMember(address)",
          "removeMember(address)",
          "tokenURI(uint256)",
          "setPayable(uint256,address,bool)",
          "mintHouse(string,string,string,string,uint256)",
          "addAllowList(uint256,address)",
          "removeAllowList(uint256,address)",
          "checkAllowedList(uint256,address)",
          "addHistory(uint256,uint256,string,string,string,string,string,uint256)",
          "getHistory(uint256)",
          "editHistory(uint256,uint256,string,string,string,string,string,uint256)",
          "getHistoryType()",
          "addOrEditHType(uint256,string,bool,bool,bool,bool,bool,bool,bool)",
          "removeHistoryType(uint256)",
          "getMinMaxNFT()",
          "getTokenOwner(uint256)",
          "buyHouseNft(uint256)",
          "sendToken(address,uint256)",
          "changeTokenPrice(uint256,uint256)",
          "getAllHouses()",
          "getAllPayableHouses()",
          "getAllMyHouses()",
          "withdrawToken(uint256)",
          "withdrawETH(uint256)",
          "setAPYConfig(uint256,uint256)",
          "getAllAPYTypes()",
          "stake(uint256,uint256)",
          "unstake(uint256)",
          "stakingFinished(uint256)",
          "totalRewards(address)",
          "claimRewards(address)",
          "getAllMyStakedNFTs()",
          "getTotalInfo()",
          "getAllAPYs()",
          "getPenalty()",
          "setPenalty(uint256)",
          "getRoyalty()",
          "setRoyalty(uint256)",
          "ownerOf(uint256)",
          "getTokenPrice(uint256)",
          "setHouseStakedStatus(uint256,bool)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      }
    },
    {
      "MainCleanContract": {
        "src": "contracts\\Contract.sol:6",
        "version": {
          "withMetadata": "6421e940ca2c08cec604e64c4e3802894c030e3491305b8df865d9e1c9e89aac",
          "withoutMetadata": "4b8cbb4879901533fe49280ca430f3230d2cf4cb717e76bb4a9404845cd178f8",
          "linkedWithoutMetadata": "4b8cbb4879901533fe49280ca430f3230d2cf4cb717e76bb4a9404845cd178f8"
        },
        "inherit": [],
        "libraries": [],
        "methods": [
          "(address)",
          "ccCreation(string,string,address,string,uint256,uint256,uint256,string)",
          "getAllContractsByOwner()",
          "getAllContractsBySigner()",
          "getContractById(uint256)",
          "addContractSigner(uint256,address)",
          "signContract(uint256)",
          "sendNotify(address,string,uint256)",
          "getUploadedCounter()",
          "getAllNotifies()",
          "calcDiv(uint256,uint256)",
          "toString(bytes)",
          "addressToString(address)",
          "uintToString(uint256)",
          "bytesToString(bytes32)",
          "transferContractOwnership(uint256,address,address)"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "MainCleanContract",
            "src": "contracts\\Contract.sol:52"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "ccCounter",
              "offset": 0,
              "slot": "0",
              "type": "t_uint256",
              "contract": "MainCleanContract",
              "src": "contracts\\Contract.sol:8"
            },
            {
              "label": "houseNFTAddress",
              "offset": 0,
              "slot": "1",
              "type": "t_address",
              "contract": "MainCleanContract",
              "src": "contracts\\Contract.sol:11"
            },
            {
              "label": "allCleanContracts",
              "offset": 0,
              "slot": "2",
              "type": "t_mapping(t_uint256,t_struct(CleanContract)39_storage)",
              "contract": "MainCleanContract",
              "src": "contracts\\Contract.sol:44"
            },
            {
              "label": "allContractsByOwner",
              "offset": 0,
              "slot": "3",
              "type": "t_mapping(t_address,t_array(t_uint256)dyn_storage)",
              "contract": "MainCleanContract",
              "src": "contracts\\Contract.sol:46"
            },
            {
              "label": "allContractsBySigner",
              "offset": 0,
              "slot": "4",
              "type": "t_mapping(t_address,t_array(t_uint256)dyn_storage)",
              "contract": "MainCleanContract",
              "src": "contracts\\Contract.sol:48"
            },
            {
              "label": "allNotifies",
              "offset": 0,
              "slot": "5",
              "type": "t_mapping(t_address,t_array(t_struct(Notify)52_storage)dyn_storage)",
              "contract": "MainCleanContract",
              "src": "contracts\\Contract.sol:50"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            },
            "t_array(t_struct(Notify)52_storage)dyn_storage": {
              "label": "struct MainCleanContract.Notify[]",
              "numberOfBytes": "32"
            },
            "t_array(t_uint256)dyn_storage": {
              "label": "uint256[]",
              "numberOfBytes": "32"
            },
            "t_bool": {
              "label": "bool",
              "numberOfBytes": "1"
            },
            "t_mapping(t_address,t_array(t_struct(Notify)52_storage)dyn_storage)": {
              "label": "mapping(address => struct MainCleanContract.Notify[])",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_array(t_uint256)dyn_storage)": {
              "label": "mapping(address => uint256[])",
              "numberOfBytes": "32"
            },
            "t_mapping(t_uint256,t_struct(CleanContract)39_storage)": {
              "label": "mapping(uint256 => struct MainCleanContract.CleanContract)",
              "numberOfBytes": "32"
            },
            "t_string_storage": {
              "label": "string",
              "numberOfBytes": "32"
            },
            "t_struct(CleanContract)39_storage": {
              "label": "struct MainCleanContract.CleanContract",
              "members": [
                {
                  "label": "contractId",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "0"
                },
                {
                  "label": "companyName",
                  "type": "t_string_storage",
                  "offset": 0,
                  "slot": "1"
                },
                {
                  "label": "contractType",
                  "type": "t_string_storage",
                  "offset": 0,
                  "slot": "2"
                },
                {
                  "label": "contractURI",
                  "type": "t_string_storage",
                  "offset": 0,
                  "slot": "3"
                },
                {
                  "label": "dateFrom",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "4"
                },
                {
                  "label": "dateTo",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "5"
                },
                {
                  "label": "agreedPrice",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "6"
                },
                {
                  "label": "currency",
                  "type": "t_string_storage",
                  "offset": 0,
                  "slot": "7"
                },
                {
                  "label": "creator",
                  "type": "t_address",
                  "offset": 0,
                  "slot": "8"
                },
                {
                  "label": "owner",
                  "type": "t_address",
                  "offset": 0,
                  "slot": "9"
                },
                {
                  "label": "creatorApproval",
                  "type": "t_bool",
                  "offset": 20,
                  "slot": "9"
                },
                {
                  "label": "creatorSignDate",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "10"
                },
                {
                  "label": "contractSigner",
                  "type": "t_address",
                  "offset": 0,
                  "slot": "11"
                },
                {
                  "label": "signerApproval",
                  "type": "t_bool",
                  "offset": 20,
                  "slot": "11"
                },
                {
                  "label": "signerSignDate",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "12"
                },
                {
                  "label": "status",
                  "type": "t_string_storage",
                  "offset": 0,
                  "slot": "13"
                }
              ],
              "numberOfBytes": "448"
            },
            "t_struct(Notify)52_storage": {
              "label": "struct MainCleanContract.Notify",
              "members": [
                {
                  "label": "nSender",
                  "type": "t_address",
                  "offset": 0,
                  "slot": "0"
                },
                {
                  "label": "nReceiver",
                  "type": "t_address",
                  "offset": 0,
                  "slot": "1"
                },
                {
                  "label": "ccID",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "2"
                },
                {
                  "label": "notifySentTime",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "3"
                },
                {
                  "label": "notifyContent",
                  "type": "t_string_storage",
                  "offset": 0,
                  "slot": "4"
                },
                {
                  "label": "status",
                  "type": "t_bool",
                  "offset": 0,
                  "slot": "5"
                }
              ],
              "numberOfBytes": "192"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            }
          },
          "layoutVersion": "1.1",
          "flat": true
        }
      }
    },
    {
      "IERC20": {
        "src": "@openzeppelin\\contracts\\token\\ERC20\\IERC20.sol:9",
        "inherit": [],
        "libraries": [],
        "methods": [
          "totalSupply()",
          "balanceOf(address)",
          "transfer(address,uint256)",
          "allowance(address,address)",
          "approve(address,uint256)",
          "transferFrom(address,address,uint256)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "ERC721": {
        "src": "@openzeppelin\\contracts\\token\\ERC721\\ERC721.sol:19",
        "version": {
          "withMetadata": "311027b738fb50ea92c84baf68eacb931adf05de03da13635a661dc9c5b03f73",
          "withoutMetadata": "9ec7f439077c3b762bc3aa6a17c55aba7a78d240190c9c7814df896455a0f780",
          "linkedWithoutMetadata": "9ec7f439077c3b762bc3aa6a17c55aba7a78d240190c9c7814df896455a0f780"
        },
        "inherit": [
          "IERC721Metadata",
          "IERC721",
          "ERC165",
          "IERC165",
          "Context"
        ],
        "libraries": [
          "Address",
          "Strings"
        ],
        "methods": [
          "(string,string)",
          "supportsInterface(bytes4)",
          "balanceOf(address)",
          "ownerOf(uint256)",
          "name()",
          "symbol()",
          "tokenURI(uint256)",
          "approve(address,uint256)",
          "getApproved(uint256)",
          "setApprovalForAll(address,bool)",
          "isApprovedForAll(address,address)",
          "transferFrom(address,address,uint256)",
          "safeTransferFrom(address,address,uint256)",
          "safeTransferFrom(address,address,uint256,bytes)"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "ERC721",
            "src": "@openzeppelin\\contracts\\token\\ERC721\\ERC721.sol:44"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "_name",
              "offset": 0,
              "slot": "0",
              "type": "t_string_storage",
              "contract": "ERC721",
              "src": "@openzeppelin\\contracts\\token\\ERC721\\ERC721.sol:24"
            },
            {
              "label": "_symbol",
              "offset": 0,
              "slot": "1",
              "type": "t_string_storage",
              "contract": "ERC721",
              "src": "@openzeppelin\\contracts\\token\\ERC721\\ERC721.sol:27"
            },
            {
              "label": "_owners",
              "offset": 0,
              "slot": "2",
              "type": "t_mapping(t_uint256,t_address)",
              "contract": "ERC721",
              "src": "@openzeppelin\\contracts\\token\\ERC721\\ERC721.sol:30"
            },
            {
              "label": "_balances",
              "offset": 0,
              "slot": "3",
              "type": "t_mapping(t_address,t_uint256)",
              "contract": "ERC721",
              "src": "@openzeppelin\\contracts\\token\\ERC721\\ERC721.sol:33"
            },
            {
              "label": "_tokenApprovals",
              "offset": 0,
              "slot": "4",
              "type": "t_mapping(t_uint256,t_address)",
              "contract": "ERC721",
              "src": "@openzeppelin\\contracts\\token\\ERC721\\ERC721.sol:36"
            },
            {
              "label": "_operatorApprovals",
              "offset": 0,
              "slot": "5",
              "type": "t_mapping(t_address,t_mapping(t_address,t_bool))",
              "contract": "ERC721",
              "src": "@openzeppelin\\contracts\\token\\ERC721\\ERC721.sol:39"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            },
            "t_bool": {
              "label": "bool",
              "numberOfBytes": "1"
            },
            "t_mapping(t_address,t_bool)": {
              "label": "mapping(address => bool)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_mapping(t_address,t_bool))": {
              "label": "mapping(address => mapping(address => bool))",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_uint256)": {
              "label": "mapping(address => uint256)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_uint256,t_address)": {
              "label": "mapping(uint256 => address)",
              "numberOfBytes": "32"
            },
            "t_string_storage": {
              "label": "string",
              "numberOfBytes": "32"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            }
          },
          "layoutVersion": "1.1",
          "flat": true
        }
      },
      "IERC721": {
        "src": "@openzeppelin\\contracts\\token\\ERC721\\IERC721.sol:11",
        "inherit": [
          "IERC165"
        ],
        "libraries": [],
        "methods": [
          "balanceOf(address)",
          "ownerOf(uint256)",
          "safeTransferFrom(address,address,uint256,bytes)",
          "safeTransferFrom(address,address,uint256)",
          "transferFrom(address,address,uint256)",
          "approve(address,uint256)",
          "setApprovalForAll(address,bool)",
          "getApproved(uint256)",
          "isApprovedForAll(address,address)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "IERC721Receiver": {
        "src": "@openzeppelin\\contracts\\token\\ERC721\\IERC721Receiver.sol:11",
        "inherit": [],
        "libraries": [],
        "methods": [
          "onERC721Received(address,address,uint256,bytes)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "ERC721URIStorage": {
        "src": "@openzeppelin\\contracts\\token\\ERC721\\extensions\\ERC721URIStorage.sol:11",
        "inherit": [
          "ERC721",
          "IERC721Metadata",
          "IERC721",
          "ERC165",
          "IERC165",
          "Context"
        ],
        "libraries": [
          "Strings"
        ],
        "methods": [
          "tokenURI(uint256)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [
            {
              "label": "_name",
              "offset": 0,
              "slot": "0",
              "type": "t_string_storage",
              "contract": "ERC721",
              "src": "@openzeppelin\\contracts\\token\\ERC721\\ERC721.sol:24"
            },
            {
              "label": "_symbol",
              "offset": 0,
              "slot": "1",
              "type": "t_string_storage",
              "contract": "ERC721",
              "src": "@openzeppelin\\contracts\\token\\ERC721\\ERC721.sol:27"
            },
            {
              "label": "_owners",
              "offset": 0,
              "slot": "2",
              "type": "t_mapping(t_uint256,t_address)",
              "contract": "ERC721",
              "src": "@openzeppelin\\contracts\\token\\ERC721\\ERC721.sol:30"
            },
            {
              "label": "_balances",
              "offset": 0,
              "slot": "3",
              "type": "t_mapping(t_address,t_uint256)",
              "contract": "ERC721",
              "src": "@openzeppelin\\contracts\\token\\ERC721\\ERC721.sol:33"
            },
            {
              "label": "_tokenApprovals",
              "offset": 0,
              "slot": "4",
              "type": "t_mapping(t_uint256,t_address)",
              "contract": "ERC721",
              "src": "@openzeppelin\\contracts\\token\\ERC721\\ERC721.sol:36"
            },
            {
              "label": "_operatorApprovals",
              "offset": 0,
              "slot": "5",
              "type": "t_mapping(t_address,t_mapping(t_address,t_bool))",
              "contract": "ERC721",
              "src": "@openzeppelin\\contracts\\token\\ERC721\\ERC721.sol:39"
            },
            {
              "label": "_tokenURIs",
              "offset": 0,
              "slot": "6",
              "type": "t_mapping(t_uint256,t_string_storage)",
              "contract": "ERC721URIStorage",
              "src": "@openzeppelin\\contracts\\token\\ERC721\\extensions\\ERC721URIStorage.sol:15"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            },
            "t_bool": {
              "label": "bool",
              "numberOfBytes": "1"
            },
            "t_mapping(t_address,t_bool)": {
              "label": "mapping(address => bool)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_mapping(t_address,t_bool))": {
              "label": "mapping(address => mapping(address => bool))",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_uint256)": {
              "label": "mapping(address => uint256)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_uint256,t_address)": {
              "label": "mapping(uint256 => address)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_uint256,t_string_storage)": {
              "label": "mapping(uint256 => string)",
              "numberOfBytes": "32"
            },
            "t_string_storage": {
              "label": "string",
              "numberOfBytes": "32"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            }
          },
          "layoutVersion": "1.1",
          "flat": true
        }
      },
      "IERC721Metadata": {
        "src": "@openzeppelin\\contracts\\token\\ERC721\\extensions\\IERC721Metadata.sol:12",
        "inherit": [
          "IERC721",
          "IERC165"
        ],
        "libraries": [],
        "methods": [
          "name()",
          "symbol()",
          "tokenURI(uint256)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "Address": {
        "src": "@openzeppelin\\contracts\\utils\\Address.sol:9",
        "version": {
          "withMetadata": "a0500f265408d7c0dbf75da3f9e44a5c2ee85e18bb1b58fe491ffcfa4ea7fd9b",
          "withoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db",
          "linkedWithoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db"
        },
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [
          {
            "kind": "delegatecall",
            "src": "@openzeppelin\\contracts\\utils\\Address.sol:185"
          }
        ],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "Context": {
        "src": "@openzeppelin\\contracts\\utils\\Context.sol:16",
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "Strings": {
        "src": "@openzeppelin\\contracts\\utils\\Strings.sol:11",
        "version": {
          "withMetadata": "c385b5200dd723f945d28b88358d79ca1b5c0f71c28cbbab9acf6d6f3fd15593",
          "withoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db",
          "linkedWithoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db"
        },
        "inherit": [],
        "libraries": [
          "Math"
        ],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "ERC165": {
        "src": "@openzeppelin\\contracts\\utils\\introspection\\ERC165.sol:22",
        "inherit": [
          "IERC165"
        ],
        "libraries": [],
        "methods": [
          "supportsInterface(bytes4)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "IERC165": {
        "src": "@openzeppelin\\contracts\\utils\\introspection\\IERC165.sol:15",
        "inherit": [],
        "libraries": [],
        "methods": [
          "supportsInterface(bytes4)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "Math": {
        "src": "@openzeppelin\\contracts\\utils\\math\\Math.sol:9",
        "version": {
          "withMetadata": "fcaf39e5e702f2902d6ef00c1def75c9800e8d2a0a78a87cf542096cafc7a4b0",
          "withoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db",
          "linkedWithoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db"
        },
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "HouseBusiness": {
        "src": "contracts\\HouseBusiness.sol:12",
        "version": {
          "withMetadata": "15f412f0f6980e0a190b7e49a25f85a44ba881dc4f93fefd4da7b5fdd56d1c16",
          "withoutMetadata": "740fef5df74a6d1b6963ea69e7d4d3c191ce22464b2dc0fadd0225e20d54ae94",
          "linkedWithoutMetadata": "740fef5df74a6d1b6963ea69e7d4d3c191ce22464b2dc0fadd0225e20d54ae94"
        },
        "inherit": [
          "ERC721URIStorage",
          "ERC721",
          "IERC721Metadata",
          "IERC721",
          "ERC165",
          "IERC165",
          "Context"
        ],
        "libraries": [],
        "methods": [
          "(address)",
          "setMinMaxHousePrice(uint256,uint256)",
          "setConfigToken(address)",
          "isMember()",
          "addMember(address)",
          "removeMember(address)",
          "tokenURI(uint256)",
          "setCContractAddress(address)",
          "setStakingContractAddress(address)",
          "setPayable(uint256,address,bool)",
          "mintHouse(string,string,string,string,uint256)",
          "addAllowList(uint256,address)",
          "removeAllowList(uint256,address)",
          "checkAllowedList(uint256,address)",
          "addHistory(uint256,uint256,uint256,string,string,string,string,string,uint256)",
          "getHistory(uint256)",
          "editHistory(uint256,uint256,string,string,string,string,string,uint256)",
          "getHistoryType()",
          "addOrEditHType(uint256,string,bool,bool,bool,bool,bool,bool,bool)",
          "removeHistoryType(uint256)",
          "getMinMaxNFT()",
          "getTokenOwner(uint256)",
          "disconnectContract(uint256,uint256,uint256)",
          "buyHouseNft(uint256)",
          "sendToken(address,uint256)",
          "changeTokenPrice(uint256,uint256)",
          "getAllHouses()",
          "getAllPayableHouses()",
          "getAllMyHouses()",
          "withdrawToken(uint256)",
          "withdrawETH(uint256)",
          "getTotalInfo()",
          "getTokenPrice(uint256)",
          "setHouseStakedStatus(uint256,bool)",
          "getRoyalty()",
          "setRoyalty(uint256)"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "HouseBusiness",
            "src": "contracts\\HouseBusiness.sol:92"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "_name",
              "offset": 0,
              "slot": "0",
              "type": "t_string_storage",
              "contract": "ERC721",
              "src": "@openzeppelin\\contracts\\token\\ERC721\\ERC721.sol:24"
            },
            {
              "label": "_symbol",
              "offset": 0,
              "slot": "1",
              "type": "t_string_storage",
              "contract": "ERC721",
              "src": "@openzeppelin\\contracts\\token\\ERC721\\ERC721.sol:27"
            },
            {
              "label": "_owners",
              "offset": 0,
              "slot": "2",
              "type": "t_mapping(t_uint256,t_address)",
              "contract": "ERC721",
              "src": "@openzeppelin\\contracts\\token\\ERC721\\ERC721.sol:30"
            },
            {
              "label": "_balances",
              "offset": 0,
              "slot": "3",
              "type": "t_mapping(t_address,t_uint256)",
              "contract": "ERC721",
              "src": "@openzeppelin\\contracts\\token\\ERC721\\ERC721.sol:33"
            },
            {
              "label": "_tokenApprovals",
              "offset": 0,
              "slot": "4",
              "type": "t_mapping(t_uint256,t_address)",
              "contract": "ERC721",
              "src": "@openzeppelin\\contracts\\token\\ERC721\\ERC721.sol:36"
            },
            {
              "label": "_operatorApprovals",
              "offset": 0,
              "slot": "5",
              "type": "t_mapping(t_address,t_mapping(t_address,t_bool))",
              "contract": "ERC721",
              "src": "@openzeppelin\\contracts\\token\\ERC721\\ERC721.sol:39"
            },
            {
              "label": "_tokenURIs",
              "offset": 0,
              "slot": "6",
              "type": "t_mapping(t_uint256,t_string_storage)",
              "contract": "ERC721URIStorage",
              "src": "@openzeppelin\\contracts\\token\\ERC721\\extensions\\ERC721URIStorage.sol:15"
            },
            {
              "label": "collectionName",
              "offset": 0,
              "slot": "7",
              "type": "t_string_storage",
              "contract": "HouseBusiness",
              "src": "contracts\\HouseBusiness.sol:14"
            },
            {
              "label": "collectionNameSymbol",
              "offset": 0,
              "slot": "8",
              "type": "t_string_storage",
              "contract": "HouseBusiness",
              "src": "contracts\\HouseBusiness.sol:16"
            },
            {
              "label": "houseCounter",
              "offset": 0,
              "slot": "9",
              "type": "t_uint256",
              "contract": "HouseBusiness",
              "src": "contracts\\HouseBusiness.sol:18"
            },
            {
              "label": "soldedCounter",
              "offset": 0,
              "slot": "10",
              "type": "t_uint256",
              "contract": "HouseBusiness",
              "src": "contracts\\HouseBusiness.sol:21"
            },
            {
              "label": "hTypeCounter",
              "offset": 0,
              "slot": "11",
              "type": "t_uint256",
              "contract": "HouseBusiness",
              "src": "contracts\\HouseBusiness.sol:23"
            },
            {
              "label": "_token",
              "offset": 0,
              "slot": "12",
              "type": "t_contract(IERC20)77",
              "contract": "HouseBusiness",
              "src": "contracts\\HouseBusiness.sol:25"
            },
            {
              "label": "minPrice",
              "offset": 0,
              "slot": "13",
              "type": "t_uint256",
              "contract": "HouseBusiness",
              "src": "contracts\\HouseBusiness.sol:27"
            },
            {
              "label": "maxPrice",
              "offset": 0,
              "slot": "14",
              "type": "t_uint256",
              "contract": "HouseBusiness",
              "src": "contracts\\HouseBusiness.sol:29"
            },
            {
              "label": "royalty",
              "offset": 0,
              "slot": "15",
              "type": "t_uint256",
              "contract": "HouseBusiness",
              "src": "contracts\\HouseBusiness.sol:31"
            },
            {
              "label": "cContract",
              "offset": 0,
              "slot": "16",
              "type": "t_contract(IMainCleanContract)5551",
              "contract": "HouseBusiness",
              "src": "contracts\\HouseBusiness.sol:33"
            },
            {
              "label": "historyTypes",
              "offset": 0,
              "slot": "17",
              "type": "t_array(t_struct(HistoryType)2831_storage)dyn_storage",
              "contract": "HouseBusiness",
              "src": "contracts\\HouseBusiness.sol:73"
            },
            {
              "label": "houseHistories",
              "offset": 0,
              "slot": "18",
              "type": "t_mapping(t_uint256,t_array(t_struct(History)2812_storage)dyn_storage)",
              "contract": "HouseBusiness",
              "src": "contracts\\HouseBusiness.sol:75"
            },
            {
              "label": "allMembers",
              "offset": 0,
              "slot": "19",
              "type": "t_mapping(t_address,t_bool)",
              "contract": "HouseBusiness",
              "src": "contracts\\HouseBusiness.sol:77"
            },
            {
              "label": "allHouses",
              "offset": 0,
              "slot": "20",
              "type": "t_mapping(t_uint256,t_struct(House)2795_storage)",
              "contract": "HouseBusiness",
              "src": "contracts\\HouseBusiness.sol:79"
            },
            {
              "label": "allowedList",
              "offset": 0,
              "slot": "21",
              "type": "t_mapping(t_uint256,t_mapping(t_address,t_bool))",
              "contract": "HouseBusiness",
              "src": "contracts\\HouseBusiness.sol:81"
            },
            {
              "label": "stakingContractAddress",
              "offset": 0,
              "slot": "22",
              "type": "t_address",
              "contract": "HouseBusiness",
              "src": "contracts\\HouseBusiness.sol:84"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            },
            "t_array(t_struct(History)2812_storage)dyn_storage": {
              "label": "struct HouseBusiness.History[]",
              "numberOfBytes": "32"
            },
            "t_array(t_struct(HistoryType)2831_storage)dyn_storage": {
              "label": "struct HouseBusiness.HistoryType[]",
              "numberOfBytes": "32"
            },
            "t_bool": {
              "label": "bool",
              "numberOfBytes": "1"
            },
            "t_contract(IERC20)77": {
              "label": "contract IERC20",
              "numberOfBytes": "20"
            },
            "t_contract(IMainCleanContract)5551": {
              "label": "contract IMainCleanContract",
              "numberOfBytes": "20"
            },
            "t_mapping(t_address,t_bool)": {
              "label": "mapping(address => bool)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_mapping(t_address,t_bool))": {
              "label": "mapping(address => mapping(address => bool))",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_uint256)": {
              "label": "mapping(address => uint256)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_uint256,t_address)": {
              "label": "mapping(uint256 => address)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_uint256,t_array(t_struct(History)2812_storage)dyn_storage)": {
              "label": "mapping(uint256 => struct HouseBusiness.History[])",
              "numberOfBytes": "32"
            },
            "t_mapping(t_uint256,t_mapping(t_address,t_bool))": {
              "label": "mapping(uint256 => mapping(address => bool))",
              "numberOfBytes": "32"
            },
            "t_mapping(t_uint256,t_string_storage)": {
              "label": "mapping(uint256 => string)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_uint256,t_struct(House)2795_storage)": {
              "label": "mapping(uint256 => struct HouseBusiness.House)",
              "numberOfBytes": "32"
            },
            "t_string_storage": {
              "label": "string",
              "numberOfBytes": "32"
            },
            "t_struct(History)2812_storage": {
              "label": "struct HouseBusiness.History",
              "members": [
                {
                  "label": "hID",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "0"
                },
                {
                  "label": "contractId",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "1"
                },
                {
                  "label": "houseImg",
                  "type": "t_string_storage",
                  "offset": 0,
                  "slot": "2"
                },
                {
                  "label": "houseBrand",
                  "type": "t_string_storage",
                  "offset": 0,
                  "slot": "3"
                },
                {
                  "label": "desc",
                  "type": "t_string_storage",
                  "offset": 0,
                  "slot": "4"
                },
                {
                  "label": "history",
                  "type": "t_string_storage",
                  "offset": 0,
                  "slot": "5"
                },
                {
                  "label": "brandType",
                  "type": "t_string_storage",
                  "offset": 0,
                  "slot": "6"
                },
                {
                  "label": "yearField",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "7"
                }
              ],
              "numberOfBytes": "256"
            },
            "t_struct(HistoryType)2831_storage": {
              "label": "struct HouseBusiness.HistoryType",
              "members": [
                {
                  "label": "hID",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "0"
                },
                {
                  "label": "hLabel",
                  "type": "t_string_storage",
                  "offset": 0,
                  "slot": "1"
                },
                {
                  "label": "connectContract",
                  "type": "t_bool",
                  "offset": 0,
                  "slot": "2"
                },
                {
                  "label": "imgNeed",
                  "type": "t_bool",
                  "offset": 1,
                  "slot": "2"
                },
                {
                  "label": "brandNeed",
                  "type": "t_bool",
                  "offset": 2,
                  "slot": "2"
                },
                {
                  "label": "descNeed",
                  "type": "t_bool",
                  "offset": 3,
                  "slot": "2"
                },
                {
                  "label": "brandTypeNeed",
                  "type": "t_bool",
                  "offset": 4,
                  "slot": "2"
                },
                {
                  "label": "yearNeed",
                  "type": "t_bool",
                  "offset": 5,
                  "slot": "2"
                },
                {
                  "label": "checkMark",
                  "type": "t_bool",
                  "offset": 6,
                  "slot": "2"
                }
              ],
              "numberOfBytes": "96"
            },
            "t_struct(House)2795_storage": {
              "label": "struct HouseBusiness.House",
              "members": [
                {
                  "label": "tokenId",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "0"
                },
                {
                  "label": "tokenName",
                  "type": "t_string_storage",
                  "offset": 0,
                  "slot": "1"
                },
                {
                  "label": "tokenURI",
                  "type": "t_string_storage",
                  "offset": 0,
                  "slot": "2"
                },
                {
                  "label": "tokenType",
                  "type": "t_string_storage",
                  "offset": 0,
                  "slot": "3"
                },
                {
                  "label": "currentOwner",
                  "type": "t_address",
                  "offset": 0,
                  "slot": "4"
                },
                {
                  "label": "previousOwner",
                  "type": "t_address",
                  "offset": 0,
                  "slot": "5"
                },
                {
                  "label": "buyer",
                  "type": "t_address",
                  "offset": 0,
                  "slot": "6"
                },
                {
                  "label": "price",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "7"
                },
                {
                  "label": "numberOfTransfers",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "8"
                },
                {
                  "label": "nftPayable",
                  "type": "t_bool",
                  "offset": 0,
                  "slot": "9"
                },
                {
                  "label": "staked",
                  "type": "t_bool",
                  "offset": 1,
                  "slot": "9"
                },
                {
                  "label": "soldstatus",
                  "type": "t_bool",
                  "offset": 2,
                  "slot": "9"
                }
              ],
              "numberOfBytes": "320"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            }
          },
          "layoutVersion": "1.1",
          "flat": true
        }
      },
      "HouseStaking": {
        "src": "contracts\\Staking.sol:6",
        "version": {
          "withMetadata": "1631da731d0e2b52c81a316e137d89d443991d8823c4d4d4d9c3929bc729a164",
          "withoutMetadata": "92078b7ed6da756ae03297e8c845495c2d09ac69b7981d78a9050acf26a3d7f4",
          "linkedWithoutMetadata": "92078b7ed6da756ae03297e8c845495c2d09ac69b7981d78a9050acf26a3d7f4"
        },
        "inherit": [],
        "libraries": [],
        "methods": [
          "(address,address)",
          "calcDiv(uint256,uint256)",
          "setAPYConfig(uint256,uint256)",
          "getAllAPYTypes()",
          "stake(uint256,uint256)",
          "unstake(uint256)",
          "stakingFinished(uint256)",
          "totalRewards(address)",
          "claimRewards(address)",
          "getAllMyStakedNFTs()",
          "getAllAPYs()",
          "getPenalty()",
          "setPenalty(uint256)",
          "updateAPYConfig(uint256,uint256)"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "HouseStaking",
            "src": "contracts\\Staking.sol:33"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "stakedCounter",
              "offset": 0,
              "slot": "0",
              "type": "t_uint256",
              "contract": "HouseStaking",
              "src": "contracts\\Staking.sol:8"
            },
            {
              "label": "penalty",
              "offset": 0,
              "slot": "1",
              "type": "t_uint256",
              "contract": "HouseStaking",
              "src": "contracts\\Staking.sol:10"
            },
            {
              "label": "APYtypes",
              "offset": 0,
              "slot": "2",
              "type": "t_array(t_uint256)dyn_storage",
              "contract": "HouseStaking",
              "src": "contracts\\Staking.sol:12"
            },
            {
              "label": "APYConfig",
              "offset": 0,
              "slot": "3",
              "type": "t_mapping(t_uint256,t_uint256)",
              "contract": "HouseStaking",
              "src": "contracts\\Staking.sol:15"
            },
            {
              "label": "stakedNfts",
              "offset": 0,
              "slot": "4",
              "type": "t_mapping(t_address,t_array(t_struct(StakedNft)4564_storage)dyn_storage)",
              "contract": "HouseStaking",
              "src": "contracts\\Staking.sol:16"
            },
            {
              "label": "tokenAddress",
              "offset": 0,
              "slot": "5",
              "type": "t_address",
              "contract": "HouseStaking",
              "src": "contracts\\Staking.sol:18"
            },
            {
              "label": "houseNFTAddress",
              "offset": 0,
              "slot": "6",
              "type": "t_address",
              "contract": "HouseStaking",
              "src": "contracts\\Staking.sol:19"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            },
            "t_array(t_struct(StakedNft)4564_storage)dyn_storage": {
              "label": "struct HouseStaking.StakedNft[]",
              "numberOfBytes": "32"
            },
            "t_array(t_uint256)dyn_storage": {
              "label": "uint256[]",
              "numberOfBytes": "32"
            },
            "t_bool": {
              "label": "bool",
              "numberOfBytes": "1"
            },
            "t_mapping(t_address,t_array(t_struct(StakedNft)4564_storage)dyn_storage)": {
              "label": "mapping(address => struct HouseStaking.StakedNft[])",
              "numberOfBytes": "32"
            },
            "t_mapping(t_uint256,t_uint256)": {
              "label": "mapping(uint256 => uint256)",
              "numberOfBytes": "32"
            },
            "t_struct(StakedNft)4564_storage": {
              "label": "struct HouseStaking.StakedNft",
              "members": [
                {
                  "label": "owner",
                  "type": "t_address",
                  "offset": 0,
                  "slot": "0"
                },
                {
                  "label": "tokenId",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "1"
                },
                {
                  "label": "startedDate",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "2"
                },
                {
                  "label": "endDate",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "3"
                },
                {
                  "label": "claimDate",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "4"
                },
                {
                  "label": "stakingType",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "5"
                },
                {
                  "label": "perSecRewards",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "6"
                },
                {
                  "label": "stakingStatus",
                  "type": "t_bool",
                  "offset": 0,
                  "slot": "7"
                }
              ],
              "numberOfBytes": "256"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            }
          },
          "layoutVersion": "1.1",
          "flat": true
        }
      },
      "IMainCleanContract": {
        "src": "contracts\\interfaces\\IContract.sol:6",
        "inherit": [],
        "libraries": [],
        "methods": [
          "getContractById(uint256)",
          "transferContractOwnership(uint256,address,address)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "IHouseBusiness": {
        "src": "contracts\\interfaces\\IHouseBusiness.sol:5",
        "inherit": [],
        "libraries": [],
        "methods": [
          "collectionName()",
          "collectionNameSymbol()",
          "houseCounter()",
          "stakedCounter()",
          "soldedCounter()",
          "hTypeCounter()",
          "minPrice()",
          "maxPrice()",
          "penalty()",
          "royalty()",
          "historyTypes(uint256)",
          "houseHistories(uint256)",
          "allMembers(address)",
          "allHouses(uint256)",
          "stakedNfts(address)",
          "setMinMaxHousePrice(uint256,uint256)",
          "setConfigToken(address)",
          "isMember()",
          "addMember(address)",
          "removeMember(address)",
          "tokenURI(uint256)",
          "setPayable(uint256,address,bool)",
          "mintHouse(string,string,string,string,uint256)",
          "addAllowList(uint256,address)",
          "removeAllowList(uint256,address)",
          "checkAllowedList(uint256,address)",
          "addHistory(uint256,uint256,string,string,string,string,string,uint256)",
          "getHistory(uint256)",
          "editHistory(uint256,uint256,string,string,string,string,string,uint256)",
          "getHistoryType()",
          "addOrEditHType(uint256,string,bool,bool,bool,bool,bool,bool,bool)",
          "removeHistoryType(uint256)",
          "getMinMaxNFT()",
          "getTokenOwner(uint256)",
          "buyHouseNft(uint256)",
          "sendToken(address,uint256)",
          "changeTokenPrice(uint256,uint256)",
          "getAllHouses()",
          "getAllPayableHouses()",
          "getAllMyHouses()",
          "withdrawToken(uint256)",
          "withdrawETH(uint256)",
          "setAPYConfig(uint256,uint256)",
          "getAllAPYTypes()",
          "stake(uint256,uint256)",
          "unstake(uint256)",
          "stakingFinished(uint256)",
          "totalRewards(address)",
          "claimRewards(address)",
          "getAllMyStakedNFTs()",
          "getTotalInfo()",
          "getAllAPYs()",
          "getPenalty()",
          "setPenalty(uint256)",
          "getRoyalty()",
          "setRoyalty(uint256)",
          "ownerOf(uint256)",
          "getTokenPrice(uint256)",
          "setHouseStakedStatus(uint256,bool)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "IStaking": {
        "src": "contracts\\interfaces\\IStaking.sol:5",
        "inherit": [],
        "libraries": [],
        "methods": [
          "stakeCounter()"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      }
    },
    {
      "MainCleanContract": {
        "src": "contracts\\Contract.sol:6",
        "version": {
          "withMetadata": "6421e940ca2c08cec604e64c4e3802894c030e3491305b8df865d9e1c9e89aac",
          "withoutMetadata": "4b8cbb4879901533fe49280ca430f3230d2cf4cb717e76bb4a9404845cd178f8",
          "linkedWithoutMetadata": "4b8cbb4879901533fe49280ca430f3230d2cf4cb717e76bb4a9404845cd178f8"
        },
        "inherit": [],
        "libraries": [],
        "methods": [
          "(address)",
          "ccCreation(string,string,address,string,uint256,uint256,uint256,string)",
          "getAllContractsByOwner()",
          "getAllContractsBySigner()",
          "getContractById(uint256)",
          "addContractSigner(uint256,address)",
          "signContract(uint256)",
          "sendNotify(address,string,uint256)",
          "getUploadedCounter()",
          "getAllNotifies()",
          "calcDiv(uint256,uint256)",
          "toString(bytes)",
          "addressToString(address)",
          "uintToString(uint256)",
          "bytesToString(bytes32)",
          "transferContractOwnership(uint256,address,address)"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "MainCleanContract",
            "src": "contracts\\Contract.sol:52"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "ccCounter",
              "offset": 0,
              "slot": "0",
              "type": "t_uint256",
              "contract": "MainCleanContract",
              "src": "contracts\\Contract.sol:8"
            },
            {
              "label": "houseNFTAddress",
              "offset": 0,
              "slot": "1",
              "type": "t_address",
              "contract": "MainCleanContract",
              "src": "contracts\\Contract.sol:11"
            },
            {
              "label": "allCleanContracts",
              "offset": 0,
              "slot": "2",
              "type": "t_mapping(t_uint256,t_struct(CleanContract)39_storage)",
              "contract": "MainCleanContract",
              "src": "contracts\\Contract.sol:44"
            },
            {
              "label": "allContractsByOwner",
              "offset": 0,
              "slot": "3",
              "type": "t_mapping(t_address,t_array(t_uint256)dyn_storage)",
              "contract": "MainCleanContract",
              "src": "contracts\\Contract.sol:46"
            },
            {
              "label": "allContractsBySigner",
              "offset": 0,
              "slot": "4",
              "type": "t_mapping(t_address,t_array(t_uint256)dyn_storage)",
              "contract": "MainCleanContract",
              "src": "contracts\\Contract.sol:48"
            },
            {
              "label": "allNotifies",
              "offset": 0,
              "slot": "5",
              "type": "t_mapping(t_address,t_array(t_struct(Notify)52_storage)dyn_storage)",
              "contract": "MainCleanContract",
              "src": "contracts\\Contract.sol:50"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            },
            "t_array(t_struct(Notify)52_storage)dyn_storage": {
              "label": "struct MainCleanContract.Notify[]",
              "numberOfBytes": "32"
            },
            "t_array(t_uint256)dyn_storage": {
              "label": "uint256[]",
              "numberOfBytes": "32"
            },
            "t_bool": {
              "label": "bool",
              "numberOfBytes": "1"
            },
            "t_mapping(t_address,t_array(t_struct(Notify)52_storage)dyn_storage)": {
              "label": "mapping(address => struct MainCleanContract.Notify[])",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_array(t_uint256)dyn_storage)": {
              "label": "mapping(address => uint256[])",
              "numberOfBytes": "32"
            },
            "t_mapping(t_uint256,t_struct(CleanContract)39_storage)": {
              "label": "mapping(uint256 => struct MainCleanContract.CleanContract)",
              "numberOfBytes": "32"
            },
            "t_string_storage": {
              "label": "string",
              "numberOfBytes": "32"
            },
            "t_struct(CleanContract)39_storage": {
              "label": "struct MainCleanContract.CleanContract",
              "members": [
                {
                  "label": "contractId",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "0"
                },
                {
                  "label": "companyName",
                  "type": "t_string_storage",
                  "offset": 0,
                  "slot": "1"
                },
                {
                  "label": "contractType",
                  "type": "t_string_storage",
                  "offset": 0,
                  "slot": "2"
                },
                {
                  "label": "contractURI",
                  "type": "t_string_storage",
                  "offset": 0,
                  "slot": "3"
                },
                {
                  "label": "dateFrom",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "4"
                },
                {
                  "label": "dateTo",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "5"
                },
                {
                  "label": "agreedPrice",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "6"
                },
                {
                  "label": "currency",
                  "type": "t_string_storage",
                  "offset": 0,
                  "slot": "7"
                },
                {
                  "label": "creator",
                  "type": "t_address",
                  "offset": 0,
                  "slot": "8"
                },
                {
                  "label": "owner",
                  "type": "t_address",
                  "offset": 0,
                  "slot": "9"
                },
                {
                  "label": "creatorApproval",
                  "type": "t_bool",
                  "offset": 20,
                  "slot": "9"
                },
                {
                  "label": "creatorSignDate",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "10"
                },
                {
                  "label": "contractSigner",
                  "type": "t_address",
                  "offset": 0,
                  "slot": "11"
                },
                {
                  "label": "signerApproval",
                  "type": "t_bool",
                  "offset": 20,
                  "slot": "11"
                },
                {
                  "label": "signerSignDate",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "12"
                },
                {
                  "label": "status",
                  "type": "t_string_storage",
                  "offset": 0,
                  "slot": "13"
                }
              ],
              "numberOfBytes": "448"
            },
            "t_struct(Notify)52_storage": {
              "label": "struct MainCleanContract.Notify",
              "members": [
                {
                  "label": "nSender",
                  "type": "t_address",
                  "offset": 0,
                  "slot": "0"
                },
                {
                  "label": "nReceiver",
                  "type": "t_address",
                  "offset": 0,
                  "slot": "1"
                },
                {
                  "label": "ccID",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "2"
                },
                {
                  "label": "notifySentTime",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "3"
                },
                {
                  "label": "notifyContent",
                  "type": "t_string_storage",
                  "offset": 0,
                  "slot": "4"
                },
                {
                  "label": "status",
                  "type": "t_bool",
                  "offset": 0,
                  "slot": "5"
                }
              ],
              "numberOfBytes": "192"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            }
          },
          "layoutVersion": "1.1",
          "flat": true
        }
      }
    },
    {
      "ThirdParty": {
        "src": "contracts\\ThirdParty.sol:5",
        "version": {
          "withMetadata": "cbf5b2fae6668ee45b86827e485cbed39526db15e39a77a193d607720ff0015c",
          "withoutMetadata": "c7f6b899dcbca6a360ab204550ba9b4fec9f4cae1bcd2f5879cfa3965e9d550f",
          "linkedWithoutMetadata": "c7f6b899dcbca6a360ab204550ba9b4fec9f4cae1bcd2f5879cfa3965e9d550f"
        },
        "inherit": [],
        "libraries": [],
        "methods": [
          "getAllCategories()",
          "addCategory(string,uint256[])",
          "editCategory(uint256,string,uint256[])",
          "deleteCategory(uint256)",
          "getAllProperties()",
          "addProperty(string)",
          "editProperty(uint256,string)",
          "deleteProperty(uint256)",
          "getPackagesByCategory(uint256)",
          "addPackage(uint256,string,uint256,uint256,uint256,bool[])",
          "editPackage(uint256,uint256,string,uint256,uint256,uint256,bool[])",
          "deletePackage(uint256,uint256)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [
            {
              "label": "categoryCounter",
              "offset": 0,
              "slot": "0",
              "type": "t_uint256",
              "contract": "ThirdParty",
              "src": "contracts\\ThirdParty.sol:12"
            },
            {
              "label": "packageCounter",
              "offset": 0,
              "slot": "1",
              "type": "t_uint256",
              "contract": "ThirdParty",
              "src": "contracts\\ThirdParty.sol:23"
            },
            {
              "label": "propertyCounter",
              "offset": 0,
              "slot": "2",
              "type": "t_uint256",
              "contract": "ThirdParty",
              "src": "contracts\\ThirdParty.sol:29"
            },
            {
              "label": "allCategories",
              "offset": 0,
              "slot": "3",
              "type": "t_array(t_struct(Category)11_storage)dyn_storage",
              "contract": "ThirdParty",
              "src": "contracts\\ThirdParty.sol:31"
            },
            {
              "label": "allPackages",
              "offset": 0,
              "slot": "4",
              "type": "t_mapping(t_uint256,t_array(t_struct(Package)29_storage)dyn_storage)",
              "contract": "ThirdParty",
              "src": "contracts\\ThirdParty.sol:34"
            },
            {
              "label": "allProperties",
              "offset": 0,
              "slot": "5",
              "type": "t_array(t_struct(Property)36_storage)dyn_storage",
              "contract": "ThirdParty",
              "src": "contracts\\ThirdParty.sol:37"
            }
          ],
          "types": {
            "t_array(t_bool)dyn_storage": {
              "label": "bool[]",
              "numberOfBytes": "32"
            },
            "t_array(t_struct(Category)11_storage)dyn_storage": {
              "label": "struct ThirdParty.Category[]",
              "numberOfBytes": "32"
            },
            "t_array(t_struct(Package)29_storage)dyn_storage": {
              "label": "struct ThirdParty.Package[]",
              "numberOfBytes": "32"
            },
            "t_array(t_struct(Property)36_storage)dyn_storage": {
              "label": "struct ThirdParty.Property[]",
              "numberOfBytes": "32"
            },
            "t_array(t_uint256)dyn_storage": {
              "label": "uint256[]",
              "numberOfBytes": "32"
            },
            "t_bool": {
              "label": "bool",
              "numberOfBytes": "1"
            },
            "t_mapping(t_uint256,t_array(t_struct(Package)29_storage)dyn_storage)": {
              "label": "mapping(uint256 => struct ThirdParty.Package[])",
              "numberOfBytes": "32"
            },
            "t_string_storage": {
              "label": "string",
              "numberOfBytes": "32"
            },
            "t_struct(Category)11_storage": {
              "label": "struct ThirdParty.Category",
              "members": [
                {
                  "label": "categoryID",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "0"
                },
                {
                  "label": "cartegoryName",
                  "type": "t_string_storage",
                  "offset": 0,
                  "slot": "1"
                },
                {
                  "label": "properties",
                  "type": "t_array(t_uint256)dyn_storage",
                  "offset": 0,
                  "slot": "2"
                },
                {
                  "label": "visible",
                  "type": "t_bool",
                  "offset": 0,
                  "slot": "3"
                }
              ],
              "numberOfBytes": "128"
            },
            "t_struct(Package)29_storage": {
              "label": "struct ThirdParty.Package",
              "members": [
                {
                  "label": "categoryID",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "0"
                },
                {
                  "label": "packageID",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "1"
                },
                {
                  "label": "packageName",
                  "type": "t_string_storage",
                  "offset": 0,
                  "slot": "2"
                },
                {
                  "label": "price",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "3"
                },
                {
                  "label": "period",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "4"
                },
                {
                  "label": "dataLimit",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "5"
                },
                {
                  "label": "propertyVisible",
                  "type": "t_array(t_bool)dyn_storage",
                  "offset": 0,
                  "slot": "6"
                }
              ],
              "numberOfBytes": "224"
            },
            "t_struct(Property)36_storage": {
              "label": "struct ThirdParty.Property",
              "members": [
                {
                  "label": "propertyID",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "0"
                },
                {
                  "label": "propertyName",
                  "type": "t_string_storage",
                  "offset": 0,
                  "slot": "1"
                }
              ],
              "numberOfBytes": "64"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            }
          },
          "layoutVersion": "1.1",
          "flat": true
        }
      }
    },
    {
      "Context": {
        "src": "contracts\\TokenContract.sol:22",
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "HouseBusinessToken": {
        "src": "contracts\\TokenContract.sol:33",
        "version": {
          "withMetadata": "e53f4b9234e67266e4442dec09d084a17cbe6b1b4fb90d62776f0d6f370f0570",
          "withoutMetadata": "f5d2b294cac19c78c593798b4a1bae04c45c82839cbcffe3cc910bb441f21259",
          "linkedWithoutMetadata": "f5d2b294cac19c78c593798b4a1bae04c45c82839cbcffe3cc910bb441f21259"
        },
        "inherit": [
          "IERC20Metadata",
          "IERC20",
          "Context"
        ],
        "libraries": [],
        "methods": [
          "()",
          "name()",
          "symbol()",
          "decimals()",
          "totalSupply()",
          "balanceOf(address)",
          "transfer(address,uint256)",
          "allowance(address,address)",
          "approve(address,uint256)",
          "transferFrom(address,address,uint256)",
          "increaseAllowance(address,uint256)",
          "decreaseAllowance(address,uint256)",
          "_mint(address,uint256)"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "HouseBusinessToken",
            "src": "contracts\\TokenContract.sol:42"
          },
          {
            "kind": "state-variable-assignment",
            "name": "_name",
            "src": "contracts\\TokenContract.sol:37"
          },
          {
            "kind": "state-variable-assignment",
            "name": "_symbol",
            "src": "contracts\\TokenContract.sol:38"
          },
          {
            "kind": "state-variable-assignment",
            "name": "_decimals",
            "src": "contracts\\TokenContract.sol:39"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "_balances",
              "offset": 0,
              "slot": "0",
              "type": "t_mapping(t_address,t_uint256)",
              "contract": "HouseBusinessToken",
              "src": "contracts\\TokenContract.sol:34"
            },
            {
              "label": "_allowances",
              "offset": 0,
              "slot": "1",
              "type": "t_mapping(t_address,t_mapping(t_address,t_uint256))",
              "contract": "HouseBusinessToken",
              "src": "contracts\\TokenContract.sol:35"
            },
            {
              "label": "_totalSupply",
              "offset": 0,
              "slot": "2",
              "type": "t_uint256",
              "contract": "HouseBusinessToken",
              "src": "contracts\\TokenContract.sol:36"
            },
            {
              "label": "_name",
              "offset": 0,
              "slot": "3",
              "type": "t_string_storage",
              "contract": "HouseBusinessToken",
              "src": "contracts\\TokenContract.sol:37"
            },
            {
              "label": "_symbol",
              "offset": 0,
              "slot": "4",
              "type": "t_string_storage",
              "contract": "HouseBusinessToken",
              "src": "contracts\\TokenContract.sol:38"
            },
            {
              "label": "_decimals",
              "offset": 0,
              "slot": "5",
              "type": "t_uint8",
              "contract": "HouseBusinessToken",
              "src": "contracts\\TokenContract.sol:39"
            },
            {
              "label": "_owner",
              "offset": 1,
              "slot": "5",
              "type": "t_address",
              "contract": "HouseBusinessToken",
              "src": "contracts\\TokenContract.sol:40"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            },
            "t_mapping(t_address,t_mapping(t_address,t_uint256))": {
              "label": "mapping(address => mapping(address => uint256))",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_uint256)": {
              "label": "mapping(address => uint256)",
              "numberOfBytes": "32"
            },
            "t_string_storage": {
              "label": "string",
              "numberOfBytes": "32"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            },
            "t_uint8": {
              "label": "uint8",
              "numberOfBytes": "1"
            }
          },
          "layoutVersion": "1.1",
          "flat": true
        }
      },
      "IERC20": {
        "src": "contracts\\TokenContract.sol:5",
        "inherit": [],
        "libraries": [],
        "methods": [
          "totalSupply()",
          "balanceOf(address)",
          "transfer(address,uint256)",
          "allowance(address,address)",
          "approve(address,uint256)",
          "transferFrom(address,address,uint256)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "IERC20Metadata": {
        "src": "contracts\\TokenContract.sol:16",
        "inherit": [
          "IERC20"
        ],
        "libraries": [],
        "methods": [
          "name()",
          "symbol()",
          "decimals()"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      }
    },
    {
      "IPRC20": {
        "src": "contracts\\interfaces\\IPRC20.sol:4",
        "inherit": [],
        "libraries": [],
        "methods": [
          "totalSupply()",
          "balanceOf(address)",
          "transfer(address,uint256)",
          "allowance(address,address)",
          "approve(address,uint256)",
          "transferFrom(address,address,uint256)",
          "decimals()"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      }
    },
    {
      "IERC20": {
        "src": "@openzeppelin\\contracts\\token\\ERC20\\IERC20.sol:9",
        "inherit": [],
        "libraries": [],
        "methods": [
          "totalSupply()",
          "balanceOf(address)",
          "transfer(address,uint256)",
          "allowance(address,address)",
          "approve(address,uint256)",
          "transferFrom(address,address,uint256)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "ERC721": {
        "src": "@openzeppelin\\contracts\\token\\ERC721\\ERC721.sol:19",
        "version": {
          "withMetadata": "311027b738fb50ea92c84baf68eacb931adf05de03da13635a661dc9c5b03f73",
          "withoutMetadata": "9ec7f439077c3b762bc3aa6a17c55aba7a78d240190c9c7814df896455a0f780",
          "linkedWithoutMetadata": "9ec7f439077c3b762bc3aa6a17c55aba7a78d240190c9c7814df896455a0f780"
        },
        "inherit": [
          "IERC721Metadata",
          "IERC721",
          "ERC165",
          "IERC165",
          "Context"
        ],
        "libraries": [
          "Address",
          "Strings"
        ],
        "methods": [
          "(string,string)",
          "supportsInterface(bytes4)",
          "balanceOf(address)",
          "ownerOf(uint256)",
          "name()",
          "symbol()",
          "tokenURI(uint256)",
          "approve(address,uint256)",
          "getApproved(uint256)",
          "setApprovalForAll(address,bool)",
          "isApprovedForAll(address,address)",
          "transferFrom(address,address,uint256)",
          "safeTransferFrom(address,address,uint256)",
          "safeTransferFrom(address,address,uint256,bytes)"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "ERC721",
            "src": "@openzeppelin\\contracts\\token\\ERC721\\ERC721.sol:44"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "_name",
              "offset": 0,
              "slot": "0",
              "type": "t_string_storage",
              "contract": "ERC721",
              "src": "@openzeppelin\\contracts\\token\\ERC721\\ERC721.sol:24"
            },
            {
              "label": "_symbol",
              "offset": 0,
              "slot": "1",
              "type": "t_string_storage",
              "contract": "ERC721",
              "src": "@openzeppelin\\contracts\\token\\ERC721\\ERC721.sol:27"
            },
            {
              "label": "_owners",
              "offset": 0,
              "slot": "2",
              "type": "t_mapping(t_uint256,t_address)",
              "contract": "ERC721",
              "src": "@openzeppelin\\contracts\\token\\ERC721\\ERC721.sol:30"
            },
            {
              "label": "_balances",
              "offset": 0,
              "slot": "3",
              "type": "t_mapping(t_address,t_uint256)",
              "contract": "ERC721",
              "src": "@openzeppelin\\contracts\\token\\ERC721\\ERC721.sol:33"
            },
            {
              "label": "_tokenApprovals",
              "offset": 0,
              "slot": "4",
              "type": "t_mapping(t_uint256,t_address)",
              "contract": "ERC721",
              "src": "@openzeppelin\\contracts\\token\\ERC721\\ERC721.sol:36"
            },
            {
              "label": "_operatorApprovals",
              "offset": 0,
              "slot": "5",
              "type": "t_mapping(t_address,t_mapping(t_address,t_bool))",
              "contract": "ERC721",
              "src": "@openzeppelin\\contracts\\token\\ERC721\\ERC721.sol:39"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            },
            "t_bool": {
              "label": "bool",
              "numberOfBytes": "1"
            },
            "t_mapping(t_address,t_bool)": {
              "label": "mapping(address => bool)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_mapping(t_address,t_bool))": {
              "label": "mapping(address => mapping(address => bool))",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_uint256)": {
              "label": "mapping(address => uint256)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_uint256,t_address)": {
              "label": "mapping(uint256 => address)",
              "numberOfBytes": "32"
            },
            "t_string_storage": {
              "label": "string",
              "numberOfBytes": "32"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            }
          },
          "layoutVersion": "1.1",
          "flat": true
        }
      },
      "IERC721": {
        "src": "@openzeppelin\\contracts\\token\\ERC721\\IERC721.sol:11",
        "inherit": [
          "IERC165"
        ],
        "libraries": [],
        "methods": [
          "balanceOf(address)",
          "ownerOf(uint256)",
          "safeTransferFrom(address,address,uint256,bytes)",
          "safeTransferFrom(address,address,uint256)",
          "transferFrom(address,address,uint256)",
          "approve(address,uint256)",
          "setApprovalForAll(address,bool)",
          "getApproved(uint256)",
          "isApprovedForAll(address,address)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "IERC721Receiver": {
        "src": "@openzeppelin\\contracts\\token\\ERC721\\IERC721Receiver.sol:11",
        "inherit": [],
        "libraries": [],
        "methods": [
          "onERC721Received(address,address,uint256,bytes)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "ERC721URIStorage": {
        "src": "@openzeppelin\\contracts\\token\\ERC721\\extensions\\ERC721URIStorage.sol:11",
        "inherit": [
          "ERC721",
          "IERC721Metadata",
          "IERC721",
          "ERC165",
          "IERC165",
          "Context"
        ],
        "libraries": [
          "Strings"
        ],
        "methods": [
          "tokenURI(uint256)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [
            {
              "label": "_name",
              "offset": 0,
              "slot": "0",
              "type": "t_string_storage",
              "contract": "ERC721",
              "src": "@openzeppelin\\contracts\\token\\ERC721\\ERC721.sol:24"
            },
            {
              "label": "_symbol",
              "offset": 0,
              "slot": "1",
              "type": "t_string_storage",
              "contract": "ERC721",
              "src": "@openzeppelin\\contracts\\token\\ERC721\\ERC721.sol:27"
            },
            {
              "label": "_owners",
              "offset": 0,
              "slot": "2",
              "type": "t_mapping(t_uint256,t_address)",
              "contract": "ERC721",
              "src": "@openzeppelin\\contracts\\token\\ERC721\\ERC721.sol:30"
            },
            {
              "label": "_balances",
              "offset": 0,
              "slot": "3",
              "type": "t_mapping(t_address,t_uint256)",
              "contract": "ERC721",
              "src": "@openzeppelin\\contracts\\token\\ERC721\\ERC721.sol:33"
            },
            {
              "label": "_tokenApprovals",
              "offset": 0,
              "slot": "4",
              "type": "t_mapping(t_uint256,t_address)",
              "contract": "ERC721",
              "src": "@openzeppelin\\contracts\\token\\ERC721\\ERC721.sol:36"
            },
            {
              "label": "_operatorApprovals",
              "offset": 0,
              "slot": "5",
              "type": "t_mapping(t_address,t_mapping(t_address,t_bool))",
              "contract": "ERC721",
              "src": "@openzeppelin\\contracts\\token\\ERC721\\ERC721.sol:39"
            },
            {
              "label": "_tokenURIs",
              "offset": 0,
              "slot": "6",
              "type": "t_mapping(t_uint256,t_string_storage)",
              "contract": "ERC721URIStorage",
              "src": "@openzeppelin\\contracts\\token\\ERC721\\extensions\\ERC721URIStorage.sol:15"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            },
            "t_bool": {
              "label": "bool",
              "numberOfBytes": "1"
            },
            "t_mapping(t_address,t_bool)": {
              "label": "mapping(address => bool)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_mapping(t_address,t_bool))": {
              "label": "mapping(address => mapping(address => bool))",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_uint256)": {
              "label": "mapping(address => uint256)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_uint256,t_address)": {
              "label": "mapping(uint256 => address)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_uint256,t_string_storage)": {
              "label": "mapping(uint256 => string)",
              "numberOfBytes": "32"
            },
            "t_string_storage": {
              "label": "string",
              "numberOfBytes": "32"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            }
          },
          "layoutVersion": "1.1",
          "flat": true
        }
      },
      "IERC721Metadata": {
        "src": "@openzeppelin\\contracts\\token\\ERC721\\extensions\\IERC721Metadata.sol:12",
        "inherit": [
          "IERC721",
          "IERC165"
        ],
        "libraries": [],
        "methods": [
          "name()",
          "symbol()",
          "tokenURI(uint256)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "Address": {
        "src": "@openzeppelin\\contracts\\utils\\Address.sol:9",
        "version": {
          "withMetadata": "a0500f265408d7c0dbf75da3f9e44a5c2ee85e18bb1b58fe491ffcfa4ea7fd9b",
          "withoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db",
          "linkedWithoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db"
        },
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [
          {
            "kind": "delegatecall",
            "src": "@openzeppelin\\contracts\\utils\\Address.sol:185"
          }
        ],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "Context": {
        "src": "@openzeppelin\\contracts\\utils\\Context.sol:16",
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "Strings": {
        "src": "@openzeppelin\\contracts\\utils\\Strings.sol:11",
        "version": {
          "withMetadata": "c385b5200dd723f945d28b88358d79ca1b5c0f71c28cbbab9acf6d6f3fd15593",
          "withoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db",
          "linkedWithoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db"
        },
        "inherit": [],
        "libraries": [
          "Math"
        ],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "ERC165": {
        "src": "@openzeppelin\\contracts\\utils\\introspection\\ERC165.sol:22",
        "inherit": [
          "IERC165"
        ],
        "libraries": [],
        "methods": [
          "supportsInterface(bytes4)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "IERC165": {
        "src": "@openzeppelin\\contracts\\utils\\introspection\\IERC165.sol:15",
        "inherit": [],
        "libraries": [],
        "methods": [
          "supportsInterface(bytes4)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "Math": {
        "src": "@openzeppelin\\contracts\\utils\\math\\Math.sol:9",
        "version": {
          "withMetadata": "fcaf39e5e702f2902d6ef00c1def75c9800e8d2a0a78a87cf542096cafc7a4b0",
          "withoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db",
          "linkedWithoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db"
        },
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "HouseBusiness": {
        "src": "contracts\\HouseBusiness.sol:12",
        "version": {
          "withMetadata": "15f412f0f6980e0a190b7e49a25f85a44ba881dc4f93fefd4da7b5fdd56d1c16",
          "withoutMetadata": "740fef5df74a6d1b6963ea69e7d4d3c191ce22464b2dc0fadd0225e20d54ae94",
          "linkedWithoutMetadata": "740fef5df74a6d1b6963ea69e7d4d3c191ce22464b2dc0fadd0225e20d54ae94"
        },
        "inherit": [
          "ERC721URIStorage",
          "ERC721",
          "IERC721Metadata",
          "IERC721",
          "ERC165",
          "IERC165",
          "Context"
        ],
        "libraries": [],
        "methods": [
          "(address)",
          "setMinMaxHousePrice(uint256,uint256)",
          "setConfigToken(address)",
          "isMember()",
          "addMember(address)",
          "removeMember(address)",
          "tokenURI(uint256)",
          "setCContractAddress(address)",
          "setStakingContractAddress(address)",
          "setPayable(uint256,address,bool)",
          "mintHouse(string,string,string,string,uint256)",
          "addAllowList(uint256,address)",
          "removeAllowList(uint256,address)",
          "checkAllowedList(uint256,address)",
          "addHistory(uint256,uint256,uint256,string,string,string,string,string,uint256)",
          "getHistory(uint256)",
          "editHistory(uint256,uint256,string,string,string,string,string,uint256)",
          "getHistoryType()",
          "addOrEditHType(uint256,string,bool,bool,bool,bool,bool,bool,bool)",
          "removeHistoryType(uint256)",
          "getMinMaxNFT()",
          "getTokenOwner(uint256)",
          "disconnectContract(uint256,uint256,uint256)",
          "buyHouseNft(uint256)",
          "sendToken(address,uint256)",
          "changeTokenPrice(uint256,uint256)",
          "getAllHouses()",
          "getAllPayableHouses()",
          "getAllMyHouses()",
          "withdrawToken(uint256)",
          "withdrawETH(uint256)",
          "getTotalInfo()",
          "getTokenPrice(uint256)",
          "setHouseStakedStatus(uint256,bool)",
          "getRoyalty()",
          "setRoyalty(uint256)"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "HouseBusiness",
            "src": "contracts\\HouseBusiness.sol:92"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "_name",
              "offset": 0,
              "slot": "0",
              "type": "t_string_storage",
              "contract": "ERC721",
              "src": "@openzeppelin\\contracts\\token\\ERC721\\ERC721.sol:24"
            },
            {
              "label": "_symbol",
              "offset": 0,
              "slot": "1",
              "type": "t_string_storage",
              "contract": "ERC721",
              "src": "@openzeppelin\\contracts\\token\\ERC721\\ERC721.sol:27"
            },
            {
              "label": "_owners",
              "offset": 0,
              "slot": "2",
              "type": "t_mapping(t_uint256,t_address)",
              "contract": "ERC721",
              "src": "@openzeppelin\\contracts\\token\\ERC721\\ERC721.sol:30"
            },
            {
              "label": "_balances",
              "offset": 0,
              "slot": "3",
              "type": "t_mapping(t_address,t_uint256)",
              "contract": "ERC721",
              "src": "@openzeppelin\\contracts\\token\\ERC721\\ERC721.sol:33"
            },
            {
              "label": "_tokenApprovals",
              "offset": 0,
              "slot": "4",
              "type": "t_mapping(t_uint256,t_address)",
              "contract": "ERC721",
              "src": "@openzeppelin\\contracts\\token\\ERC721\\ERC721.sol:36"
            },
            {
              "label": "_operatorApprovals",
              "offset": 0,
              "slot": "5",
              "type": "t_mapping(t_address,t_mapping(t_address,t_bool))",
              "contract": "ERC721",
              "src": "@openzeppelin\\contracts\\token\\ERC721\\ERC721.sol:39"
            },
            {
              "label": "_tokenURIs",
              "offset": 0,
              "slot": "6",
              "type": "t_mapping(t_uint256,t_string_storage)",
              "contract": "ERC721URIStorage",
              "src": "@openzeppelin\\contracts\\token\\ERC721\\extensions\\ERC721URIStorage.sol:15"
            },
            {
              "label": "collectionName",
              "offset": 0,
              "slot": "7",
              "type": "t_string_storage",
              "contract": "HouseBusiness",
              "src": "contracts\\HouseBusiness.sol:14"
            },
            {
              "label": "collectionNameSymbol",
              "offset": 0,
              "slot": "8",
              "type": "t_string_storage",
              "contract": "HouseBusiness",
              "src": "contracts\\HouseBusiness.sol:16"
            },
            {
              "label": "houseCounter",
              "offset": 0,
              "slot": "9",
              "type": "t_uint256",
              "contract": "HouseBusiness",
              "src": "contracts\\HouseBusiness.sol:18"
            },
            {
              "label": "soldedCounter",
              "offset": 0,
              "slot": "10",
              "type": "t_uint256",
              "contract": "HouseBusiness",
              "src": "contracts\\HouseBusiness.sol:21"
            },
            {
              "label": "hTypeCounter",
              "offset": 0,
              "slot": "11",
              "type": "t_uint256",
              "contract": "HouseBusiness",
              "src": "contracts\\HouseBusiness.sol:23"
            },
            {
              "label": "_token",
              "offset": 0,
              "slot": "12",
              "type": "t_contract(IERC20)77",
              "contract": "HouseBusiness",
              "src": "contracts\\HouseBusiness.sol:25"
            },
            {
              "label": "minPrice",
              "offset": 0,
              "slot": "13",
              "type": "t_uint256",
              "contract": "HouseBusiness",
              "src": "contracts\\HouseBusiness.sol:27"
            },
            {
              "label": "maxPrice",
              "offset": 0,
              "slot": "14",
              "type": "t_uint256",
              "contract": "HouseBusiness",
              "src": "contracts\\HouseBusiness.sol:29"
            },
            {
              "label": "royalty",
              "offset": 0,
              "slot": "15",
              "type": "t_uint256",
              "contract": "HouseBusiness",
              "src": "contracts\\HouseBusiness.sol:31"
            },
            {
              "label": "cContract",
              "offset": 0,
              "slot": "16",
              "type": "t_contract(IMainCleanContract)4575",
              "contract": "HouseBusiness",
              "src": "contracts\\HouseBusiness.sol:33"
            },
            {
              "label": "historyTypes",
              "offset": 0,
              "slot": "17",
              "type": "t_array(t_struct(HistoryType)2831_storage)dyn_storage",
              "contract": "HouseBusiness",
              "src": "contracts\\HouseBusiness.sol:73"
            },
            {
              "label": "houseHistories",
              "offset": 0,
              "slot": "18",
              "type": "t_mapping(t_uint256,t_array(t_struct(History)2812_storage)dyn_storage)",
              "contract": "HouseBusiness",
              "src": "contracts\\HouseBusiness.sol:75"
            },
            {
              "label": "allMembers",
              "offset": 0,
              "slot": "19",
              "type": "t_mapping(t_address,t_bool)",
              "contract": "HouseBusiness",
              "src": "contracts\\HouseBusiness.sol:77"
            },
            {
              "label": "allHouses",
              "offset": 0,
              "slot": "20",
              "type": "t_mapping(t_uint256,t_struct(House)2795_storage)",
              "contract": "HouseBusiness",
              "src": "contracts\\HouseBusiness.sol:79"
            },
            {
              "label": "allowedList",
              "offset": 0,
              "slot": "21",
              "type": "t_mapping(t_uint256,t_mapping(t_address,t_bool))",
              "contract": "HouseBusiness",
              "src": "contracts\\HouseBusiness.sol:81"
            },
            {
              "label": "stakingContractAddress",
              "offset": 0,
              "slot": "22",
              "type": "t_address",
              "contract": "HouseBusiness",
              "src": "contracts\\HouseBusiness.sol:84"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            },
            "t_array(t_struct(History)2812_storage)dyn_storage": {
              "label": "struct HouseBusiness.History[]",
              "numberOfBytes": "32"
            },
            "t_array(t_struct(HistoryType)2831_storage)dyn_storage": {
              "label": "struct HouseBusiness.HistoryType[]",
              "numberOfBytes": "32"
            },
            "t_bool": {
              "label": "bool",
              "numberOfBytes": "1"
            },
            "t_contract(IERC20)77": {
              "label": "contract IERC20",
              "numberOfBytes": "20"
            },
            "t_contract(IMainCleanContract)4575": {
              "label": "contract IMainCleanContract",
              "numberOfBytes": "20"
            },
            "t_mapping(t_address,t_bool)": {
              "label": "mapping(address => bool)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_mapping(t_address,t_bool))": {
              "label": "mapping(address => mapping(address => bool))",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_uint256)": {
              "label": "mapping(address => uint256)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_uint256,t_address)": {
              "label": "mapping(uint256 => address)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_uint256,t_array(t_struct(History)2812_storage)dyn_storage)": {
              "label": "mapping(uint256 => struct HouseBusiness.History[])",
              "numberOfBytes": "32"
            },
            "t_mapping(t_uint256,t_mapping(t_address,t_bool))": {
              "label": "mapping(uint256 => mapping(address => bool))",
              "numberOfBytes": "32"
            },
            "t_mapping(t_uint256,t_string_storage)": {
              "label": "mapping(uint256 => string)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_uint256,t_struct(House)2795_storage)": {
              "label": "mapping(uint256 => struct HouseBusiness.House)",
              "numberOfBytes": "32"
            },
            "t_string_storage": {
              "label": "string",
              "numberOfBytes": "32"
            },
            "t_struct(History)2812_storage": {
              "label": "struct HouseBusiness.History",
              "members": [
                {
                  "label": "hID",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "0"
                },
                {
                  "label": "contractId",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "1"
                },
                {
                  "label": "houseImg",
                  "type": "t_string_storage",
                  "offset": 0,
                  "slot": "2"
                },
                {
                  "label": "houseBrand",
                  "type": "t_string_storage",
                  "offset": 0,
                  "slot": "3"
                },
                {
                  "label": "desc",
                  "type": "t_string_storage",
                  "offset": 0,
                  "slot": "4"
                },
                {
                  "label": "history",
                  "type": "t_string_storage",
                  "offset": 0,
                  "slot": "5"
                },
                {
                  "label": "brandType",
                  "type": "t_string_storage",
                  "offset": 0,
                  "slot": "6"
                },
                {
                  "label": "yearField",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "7"
                }
              ],
              "numberOfBytes": "256"
            },
            "t_struct(HistoryType)2831_storage": {
              "label": "struct HouseBusiness.HistoryType",
              "members": [
                {
                  "label": "hID",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "0"
                },
                {
                  "label": "hLabel",
                  "type": "t_string_storage",
                  "offset": 0,
                  "slot": "1"
                },
                {
                  "label": "connectContract",
                  "type": "t_bool",
                  "offset": 0,
                  "slot": "2"
                },
                {
                  "label": "imgNeed",
                  "type": "t_bool",
                  "offset": 1,
                  "slot": "2"
                },
                {
                  "label": "brandNeed",
                  "type": "t_bool",
                  "offset": 2,
                  "slot": "2"
                },
                {
                  "label": "descNeed",
                  "type": "t_bool",
                  "offset": 3,
                  "slot": "2"
                },
                {
                  "label": "brandTypeNeed",
                  "type": "t_bool",
                  "offset": 4,
                  "slot": "2"
                },
                {
                  "label": "yearNeed",
                  "type": "t_bool",
                  "offset": 5,
                  "slot": "2"
                },
                {
                  "label": "checkMark",
                  "type": "t_bool",
                  "offset": 6,
                  "slot": "2"
                }
              ],
              "numberOfBytes": "96"
            },
            "t_struct(House)2795_storage": {
              "label": "struct HouseBusiness.House",
              "members": [
                {
                  "label": "tokenId",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "0"
                },
                {
                  "label": "tokenName",
                  "type": "t_string_storage",
                  "offset": 0,
                  "slot": "1"
                },
                {
                  "label": "tokenURI",
                  "type": "t_string_storage",
                  "offset": 0,
                  "slot": "2"
                },
                {
                  "label": "tokenType",
                  "type": "t_string_storage",
                  "offset": 0,
                  "slot": "3"
                },
                {
                  "label": "currentOwner",
                  "type": "t_address",
                  "offset": 0,
                  "slot": "4"
                },
                {
                  "label": "previousOwner",
                  "type": "t_address",
                  "offset": 0,
                  "slot": "5"
                },
                {
                  "label": "buyer",
                  "type": "t_address",
                  "offset": 0,
                  "slot": "6"
                },
                {
                  "label": "price",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "7"
                },
                {
                  "label": "numberOfTransfers",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "8"
                },
                {
                  "label": "nftPayable",
                  "type": "t_bool",
                  "offset": 0,
                  "slot": "9"
                },
                {
                  "label": "staked",
                  "type": "t_bool",
                  "offset": 1,
                  "slot": "9"
                },
                {
                  "label": "soldstatus",
                  "type": "t_bool",
                  "offset": 2,
                  "slot": "9"
                }
              ],
              "numberOfBytes": "320"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            }
          },
          "layoutVersion": "1.1",
          "flat": true
        }
      },
      "IMainCleanContract": {
        "src": "contracts\\interfaces\\IContract.sol:6",
        "inherit": [],
        "libraries": [],
        "methods": [
          "getContractById(uint256)",
          "transferContractOwnership(uint256,address,address)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "IStaking": {
        "src": "contracts\\interfaces\\IStaking.sol:5",
        "inherit": [],
        "libraries": [],
        "methods": [
          "stakeCounter()"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      }
    },
    {
      "IERC20": {
        "src": "@openzeppelin\\contracts\\token\\ERC20\\IERC20.sol:9",
        "inherit": [],
        "libraries": [],
        "methods": [
          "totalSupply()",
          "balanceOf(address)",
          "transfer(address,uint256)",
          "allowance(address,address)",
          "approve(address,uint256)",
          "transferFrom(address,address,uint256)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "ERC721": {
        "src": "@openzeppelin\\contracts\\token\\ERC721\\ERC721.sol:19",
        "version": {
          "withMetadata": "311027b738fb50ea92c84baf68eacb931adf05de03da13635a661dc9c5b03f73",
          "withoutMetadata": "9ec7f439077c3b762bc3aa6a17c55aba7a78d240190c9c7814df896455a0f780",
          "linkedWithoutMetadata": "9ec7f439077c3b762bc3aa6a17c55aba7a78d240190c9c7814df896455a0f780"
        },
        "inherit": [
          "IERC721Metadata",
          "IERC721",
          "ERC165",
          "IERC165",
          "Context"
        ],
        "libraries": [
          "Address",
          "Strings"
        ],
        "methods": [
          "(string,string)",
          "supportsInterface(bytes4)",
          "balanceOf(address)",
          "ownerOf(uint256)",
          "name()",
          "symbol()",
          "tokenURI(uint256)",
          "approve(address,uint256)",
          "getApproved(uint256)",
          "setApprovalForAll(address,bool)",
          "isApprovedForAll(address,address)",
          "transferFrom(address,address,uint256)",
          "safeTransferFrom(address,address,uint256)",
          "safeTransferFrom(address,address,uint256,bytes)"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "ERC721",
            "src": "@openzeppelin\\contracts\\token\\ERC721\\ERC721.sol:44"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "_name",
              "offset": 0,
              "slot": "0",
              "type": "t_string_storage",
              "contract": "ERC721",
              "src": "@openzeppelin\\contracts\\token\\ERC721\\ERC721.sol:24"
            },
            {
              "label": "_symbol",
              "offset": 0,
              "slot": "1",
              "type": "t_string_storage",
              "contract": "ERC721",
              "src": "@openzeppelin\\contracts\\token\\ERC721\\ERC721.sol:27"
            },
            {
              "label": "_owners",
              "offset": 0,
              "slot": "2",
              "type": "t_mapping(t_uint256,t_address)",
              "contract": "ERC721",
              "src": "@openzeppelin\\contracts\\token\\ERC721\\ERC721.sol:30"
            },
            {
              "label": "_balances",
              "offset": 0,
              "slot": "3",
              "type": "t_mapping(t_address,t_uint256)",
              "contract": "ERC721",
              "src": "@openzeppelin\\contracts\\token\\ERC721\\ERC721.sol:33"
            },
            {
              "label": "_tokenApprovals",
              "offset": 0,
              "slot": "4",
              "type": "t_mapping(t_uint256,t_address)",
              "contract": "ERC721",
              "src": "@openzeppelin\\contracts\\token\\ERC721\\ERC721.sol:36"
            },
            {
              "label": "_operatorApprovals",
              "offset": 0,
              "slot": "5",
              "type": "t_mapping(t_address,t_mapping(t_address,t_bool))",
              "contract": "ERC721",
              "src": "@openzeppelin\\contracts\\token\\ERC721\\ERC721.sol:39"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            },
            "t_bool": {
              "label": "bool",
              "numberOfBytes": "1"
            },
            "t_mapping(t_address,t_bool)": {
              "label": "mapping(address => bool)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_mapping(t_address,t_bool))": {
              "label": "mapping(address => mapping(address => bool))",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_uint256)": {
              "label": "mapping(address => uint256)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_uint256,t_address)": {
              "label": "mapping(uint256 => address)",
              "numberOfBytes": "32"
            },
            "t_string_storage": {
              "label": "string",
              "numberOfBytes": "32"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            }
          },
          "layoutVersion": "1.1",
          "flat": true
        }
      },
      "IERC721": {
        "src": "@openzeppelin\\contracts\\token\\ERC721\\IERC721.sol:11",
        "inherit": [
          "IERC165"
        ],
        "libraries": [],
        "methods": [
          "balanceOf(address)",
          "ownerOf(uint256)",
          "safeTransferFrom(address,address,uint256,bytes)",
          "safeTransferFrom(address,address,uint256)",
          "transferFrom(address,address,uint256)",
          "approve(address,uint256)",
          "setApprovalForAll(address,bool)",
          "getApproved(uint256)",
          "isApprovedForAll(address,address)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "IERC721Receiver": {
        "src": "@openzeppelin\\contracts\\token\\ERC721\\IERC721Receiver.sol:11",
        "inherit": [],
        "libraries": [],
        "methods": [
          "onERC721Received(address,address,uint256,bytes)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "ERC721URIStorage": {
        "src": "@openzeppelin\\contracts\\token\\ERC721\\extensions\\ERC721URIStorage.sol:11",
        "inherit": [
          "ERC721",
          "IERC721Metadata",
          "IERC721",
          "ERC165",
          "IERC165",
          "Context"
        ],
        "libraries": [
          "Strings"
        ],
        "methods": [
          "tokenURI(uint256)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [
            {
              "label": "_name",
              "offset": 0,
              "slot": "0",
              "type": "t_string_storage",
              "contract": "ERC721",
              "src": "@openzeppelin\\contracts\\token\\ERC721\\ERC721.sol:24"
            },
            {
              "label": "_symbol",
              "offset": 0,
              "slot": "1",
              "type": "t_string_storage",
              "contract": "ERC721",
              "src": "@openzeppelin\\contracts\\token\\ERC721\\ERC721.sol:27"
            },
            {
              "label": "_owners",
              "offset": 0,
              "slot": "2",
              "type": "t_mapping(t_uint256,t_address)",
              "contract": "ERC721",
              "src": "@openzeppelin\\contracts\\token\\ERC721\\ERC721.sol:30"
            },
            {
              "label": "_balances",
              "offset": 0,
              "slot": "3",
              "type": "t_mapping(t_address,t_uint256)",
              "contract": "ERC721",
              "src": "@openzeppelin\\contracts\\token\\ERC721\\ERC721.sol:33"
            },
            {
              "label": "_tokenApprovals",
              "offset": 0,
              "slot": "4",
              "type": "t_mapping(t_uint256,t_address)",
              "contract": "ERC721",
              "src": "@openzeppelin\\contracts\\token\\ERC721\\ERC721.sol:36"
            },
            {
              "label": "_operatorApprovals",
              "offset": 0,
              "slot": "5",
              "type": "t_mapping(t_address,t_mapping(t_address,t_bool))",
              "contract": "ERC721",
              "src": "@openzeppelin\\contracts\\token\\ERC721\\ERC721.sol:39"
            },
            {
              "label": "_tokenURIs",
              "offset": 0,
              "slot": "6",
              "type": "t_mapping(t_uint256,t_string_storage)",
              "contract": "ERC721URIStorage",
              "src": "@openzeppelin\\contracts\\token\\ERC721\\extensions\\ERC721URIStorage.sol:15"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            },
            "t_bool": {
              "label": "bool",
              "numberOfBytes": "1"
            },
            "t_mapping(t_address,t_bool)": {
              "label": "mapping(address => bool)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_mapping(t_address,t_bool))": {
              "label": "mapping(address => mapping(address => bool))",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_uint256)": {
              "label": "mapping(address => uint256)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_uint256,t_address)": {
              "label": "mapping(uint256 => address)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_uint256,t_string_storage)": {
              "label": "mapping(uint256 => string)",
              "numberOfBytes": "32"
            },
            "t_string_storage": {
              "label": "string",
              "numberOfBytes": "32"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            }
          },
          "layoutVersion": "1.1",
          "flat": true
        }
      },
      "IERC721Metadata": {
        "src": "@openzeppelin\\contracts\\token\\ERC721\\extensions\\IERC721Metadata.sol:12",
        "inherit": [
          "IERC721",
          "IERC165"
        ],
        "libraries": [],
        "methods": [
          "name()",
          "symbol()",
          "tokenURI(uint256)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "Address": {
        "src": "@openzeppelin\\contracts\\utils\\Address.sol:9",
        "version": {
          "withMetadata": "a0500f265408d7c0dbf75da3f9e44a5c2ee85e18bb1b58fe491ffcfa4ea7fd9b",
          "withoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db",
          "linkedWithoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db"
        },
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [
          {
            "kind": "delegatecall",
            "src": "@openzeppelin\\contracts\\utils\\Address.sol:185"
          }
        ],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "Context": {
        "src": "@openzeppelin\\contracts\\utils\\Context.sol:16",
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "Strings": {
        "src": "@openzeppelin\\contracts\\utils\\Strings.sol:11",
        "version": {
          "withMetadata": "c385b5200dd723f945d28b88358d79ca1b5c0f71c28cbbab9acf6d6f3fd15593",
          "withoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db",
          "linkedWithoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db"
        },
        "inherit": [],
        "libraries": [
          "Math"
        ],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "ERC165": {
        "src": "@openzeppelin\\contracts\\utils\\introspection\\ERC165.sol:22",
        "inherit": [
          "IERC165"
        ],
        "libraries": [],
        "methods": [
          "supportsInterface(bytes4)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "IERC165": {
        "src": "@openzeppelin\\contracts\\utils\\introspection\\IERC165.sol:15",
        "inherit": [],
        "libraries": [],
        "methods": [
          "supportsInterface(bytes4)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "Math": {
        "src": "@openzeppelin\\contracts\\utils\\math\\Math.sol:9",
        "version": {
          "withMetadata": "fcaf39e5e702f2902d6ef00c1def75c9800e8d2a0a78a87cf542096cafc7a4b0",
          "withoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db",
          "linkedWithoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db"
        },
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "HouseBusiness": {
        "src": "contracts\\HouseBusiness.sol:12",
        "version": {
          "withMetadata": "15f412f0f6980e0a190b7e49a25f85a44ba881dc4f93fefd4da7b5fdd56d1c16",
          "withoutMetadata": "740fef5df74a6d1b6963ea69e7d4d3c191ce22464b2dc0fadd0225e20d54ae94",
          "linkedWithoutMetadata": "740fef5df74a6d1b6963ea69e7d4d3c191ce22464b2dc0fadd0225e20d54ae94"
        },
        "inherit": [
          "ERC721URIStorage",
          "ERC721",
          "IERC721Metadata",
          "IERC721",
          "ERC165",
          "IERC165",
          "Context"
        ],
        "libraries": [],
        "methods": [
          "(address)",
          "setMinMaxHousePrice(uint256,uint256)",
          "setConfigToken(address)",
          "isMember()",
          "addMember(address)",
          "removeMember(address)",
          "tokenURI(uint256)",
          "setCContractAddress(address)",
          "setStakingContractAddress(address)",
          "setPayable(uint256,address,bool)",
          "mintHouse(string,string,string,string,uint256)",
          "addAllowList(uint256,address)",
          "removeAllowList(uint256,address)",
          "checkAllowedList(uint256,address)",
          "addHistory(uint256,uint256,uint256,string,string,string,string,string,uint256)",
          "getHistory(uint256)",
          "editHistory(uint256,uint256,string,string,string,string,string,uint256)",
          "getHistoryType()",
          "addOrEditHType(uint256,string,bool,bool,bool,bool,bool,bool,bool)",
          "removeHistoryType(uint256)",
          "getMinMaxNFT()",
          "getTokenOwner(uint256)",
          "disconnectContract(uint256,uint256,uint256)",
          "buyHouseNft(uint256)",
          "sendToken(address,uint256)",
          "changeTokenPrice(uint256,uint256)",
          "getAllHouses()",
          "getAllPayableHouses()",
          "getAllMyHouses()",
          "withdrawToken(uint256)",
          "withdrawETH(uint256)",
          "getTotalInfo()",
          "getTokenPrice(uint256)",
          "setHouseStakedStatus(uint256,bool)",
          "getRoyalty()",
          "setRoyalty(uint256)"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "HouseBusiness",
            "src": "contracts\\HouseBusiness.sol:92"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "_name",
              "offset": 0,
              "slot": "0",
              "type": "t_string_storage",
              "contract": "ERC721",
              "src": "@openzeppelin\\contracts\\token\\ERC721\\ERC721.sol:24"
            },
            {
              "label": "_symbol",
              "offset": 0,
              "slot": "1",
              "type": "t_string_storage",
              "contract": "ERC721",
              "src": "@openzeppelin\\contracts\\token\\ERC721\\ERC721.sol:27"
            },
            {
              "label": "_owners",
              "offset": 0,
              "slot": "2",
              "type": "t_mapping(t_uint256,t_address)",
              "contract": "ERC721",
              "src": "@openzeppelin\\contracts\\token\\ERC721\\ERC721.sol:30"
            },
            {
              "label": "_balances",
              "offset": 0,
              "slot": "3",
              "type": "t_mapping(t_address,t_uint256)",
              "contract": "ERC721",
              "src": "@openzeppelin\\contracts\\token\\ERC721\\ERC721.sol:33"
            },
            {
              "label": "_tokenApprovals",
              "offset": 0,
              "slot": "4",
              "type": "t_mapping(t_uint256,t_address)",
              "contract": "ERC721",
              "src": "@openzeppelin\\contracts\\token\\ERC721\\ERC721.sol:36"
            },
            {
              "label": "_operatorApprovals",
              "offset": 0,
              "slot": "5",
              "type": "t_mapping(t_address,t_mapping(t_address,t_bool))",
              "contract": "ERC721",
              "src": "@openzeppelin\\contracts\\token\\ERC721\\ERC721.sol:39"
            },
            {
              "label": "_tokenURIs",
              "offset": 0,
              "slot": "6",
              "type": "t_mapping(t_uint256,t_string_storage)",
              "contract": "ERC721URIStorage",
              "src": "@openzeppelin\\contracts\\token\\ERC721\\extensions\\ERC721URIStorage.sol:15"
            },
            {
              "label": "collectionName",
              "offset": 0,
              "slot": "7",
              "type": "t_string_storage",
              "contract": "HouseBusiness",
              "src": "contracts\\HouseBusiness.sol:14"
            },
            {
              "label": "collectionNameSymbol",
              "offset": 0,
              "slot": "8",
              "type": "t_string_storage",
              "contract": "HouseBusiness",
              "src": "contracts\\HouseBusiness.sol:16"
            },
            {
              "label": "houseCounter",
              "offset": 0,
              "slot": "9",
              "type": "t_uint256",
              "contract": "HouseBusiness",
              "src": "contracts\\HouseBusiness.sol:18"
            },
            {
              "label": "soldedCounter",
              "offset": 0,
              "slot": "10",
              "type": "t_uint256",
              "contract": "HouseBusiness",
              "src": "contracts\\HouseBusiness.sol:21"
            },
            {
              "label": "hTypeCounter",
              "offset": 0,
              "slot": "11",
              "type": "t_uint256",
              "contract": "HouseBusiness",
              "src": "contracts\\HouseBusiness.sol:23"
            },
            {
              "label": "_token",
              "offset": 0,
              "slot": "12",
              "type": "t_contract(IERC20)77",
              "contract": "HouseBusiness",
              "src": "contracts\\HouseBusiness.sol:25"
            },
            {
              "label": "minPrice",
              "offset": 0,
              "slot": "13",
              "type": "t_uint256",
              "contract": "HouseBusiness",
              "src": "contracts\\HouseBusiness.sol:27"
            },
            {
              "label": "maxPrice",
              "offset": 0,
              "slot": "14",
              "type": "t_uint256",
              "contract": "HouseBusiness",
              "src": "contracts\\HouseBusiness.sol:29"
            },
            {
              "label": "royalty",
              "offset": 0,
              "slot": "15",
              "type": "t_uint256",
              "contract": "HouseBusiness",
              "src": "contracts\\HouseBusiness.sol:31"
            },
            {
              "label": "cContract",
              "offset": 0,
              "slot": "16",
              "type": "t_contract(IMainCleanContract)5551",
              "contract": "HouseBusiness",
              "src": "contracts\\HouseBusiness.sol:33"
            },
            {
              "label": "historyTypes",
              "offset": 0,
              "slot": "17",
              "type": "t_array(t_struct(HistoryType)2831_storage)dyn_storage",
              "contract": "HouseBusiness",
              "src": "contracts\\HouseBusiness.sol:73"
            },
            {
              "label": "houseHistories",
              "offset": 0,
              "slot": "18",
              "type": "t_mapping(t_uint256,t_array(t_struct(History)2812_storage)dyn_storage)",
              "contract": "HouseBusiness",
              "src": "contracts\\HouseBusiness.sol:75"
            },
            {
              "label": "allMembers",
              "offset": 0,
              "slot": "19",
              "type": "t_mapping(t_address,t_bool)",
              "contract": "HouseBusiness",
              "src": "contracts\\HouseBusiness.sol:77"
            },
            {
              "label": "allHouses",
              "offset": 0,
              "slot": "20",
              "type": "t_mapping(t_uint256,t_struct(House)2795_storage)",
              "contract": "HouseBusiness",
              "src": "contracts\\HouseBusiness.sol:79"
            },
            {
              "label": "allowedList",
              "offset": 0,
              "slot": "21",
              "type": "t_mapping(t_uint256,t_mapping(t_address,t_bool))",
              "contract": "HouseBusiness",
              "src": "contracts\\HouseBusiness.sol:81"
            },
            {
              "label": "stakingContractAddress",
              "offset": 0,
              "slot": "22",
              "type": "t_address",
              "contract": "HouseBusiness",
              "src": "contracts\\HouseBusiness.sol:84"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            },
            "t_array(t_struct(History)2812_storage)dyn_storage": {
              "label": "struct HouseBusiness.History[]",
              "numberOfBytes": "32"
            },
            "t_array(t_struct(HistoryType)2831_storage)dyn_storage": {
              "label": "struct HouseBusiness.HistoryType[]",
              "numberOfBytes": "32"
            },
            "t_bool": {
              "label": "bool",
              "numberOfBytes": "1"
            },
            "t_contract(IERC20)77": {
              "label": "contract IERC20",
              "numberOfBytes": "20"
            },
            "t_contract(IMainCleanContract)5551": {
              "label": "contract IMainCleanContract",
              "numberOfBytes": "20"
            },
            "t_mapping(t_address,t_bool)": {
              "label": "mapping(address => bool)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_mapping(t_address,t_bool))": {
              "label": "mapping(address => mapping(address => bool))",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_uint256)": {
              "label": "mapping(address => uint256)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_uint256,t_address)": {
              "label": "mapping(uint256 => address)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_uint256,t_array(t_struct(History)2812_storage)dyn_storage)": {
              "label": "mapping(uint256 => struct HouseBusiness.History[])",
              "numberOfBytes": "32"
            },
            "t_mapping(t_uint256,t_mapping(t_address,t_bool))": {
              "label": "mapping(uint256 => mapping(address => bool))",
              "numberOfBytes": "32"
            },
            "t_mapping(t_uint256,t_string_storage)": {
              "label": "mapping(uint256 => string)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_uint256,t_struct(House)2795_storage)": {
              "label": "mapping(uint256 => struct HouseBusiness.House)",
              "numberOfBytes": "32"
            },
            "t_string_storage": {
              "label": "string",
              "numberOfBytes": "32"
            },
            "t_struct(History)2812_storage": {
              "label": "struct HouseBusiness.History",
              "members": [
                {
                  "label": "hID",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "0"
                },
                {
                  "label": "contractId",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "1"
                },
                {
                  "label": "houseImg",
                  "type": "t_string_storage",
                  "offset": 0,
                  "slot": "2"
                },
                {
                  "label": "houseBrand",
                  "type": "t_string_storage",
                  "offset": 0,
                  "slot": "3"
                },
                {
                  "label": "desc",
                  "type": "t_string_storage",
                  "offset": 0,
                  "slot": "4"
                },
                {
                  "label": "history",
                  "type": "t_string_storage",
                  "offset": 0,
                  "slot": "5"
                },
                {
                  "label": "brandType",
                  "type": "t_string_storage",
                  "offset": 0,
                  "slot": "6"
                },
                {
                  "label": "yearField",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "7"
                }
              ],
              "numberOfBytes": "256"
            },
            "t_struct(HistoryType)2831_storage": {
              "label": "struct HouseBusiness.HistoryType",
              "members": [
                {
                  "label": "hID",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "0"
                },
                {
                  "label": "hLabel",
                  "type": "t_string_storage",
                  "offset": 0,
                  "slot": "1"
                },
                {
                  "label": "connectContract",
                  "type": "t_bool",
                  "offset": 0,
                  "slot": "2"
                },
                {
                  "label": "imgNeed",
                  "type": "t_bool",
                  "offset": 1,
                  "slot": "2"
                },
                {
                  "label": "brandNeed",
                  "type": "t_bool",
                  "offset": 2,
                  "slot": "2"
                },
                {
                  "label": "descNeed",
                  "type": "t_bool",
                  "offset": 3,
                  "slot": "2"
                },
                {
                  "label": "brandTypeNeed",
                  "type": "t_bool",
                  "offset": 4,
                  "slot": "2"
                },
                {
                  "label": "yearNeed",
                  "type": "t_bool",
                  "offset": 5,
                  "slot": "2"
                },
                {
                  "label": "checkMark",
                  "type": "t_bool",
                  "offset": 6,
                  "slot": "2"
                }
              ],
              "numberOfBytes": "96"
            },
            "t_struct(House)2795_storage": {
              "label": "struct HouseBusiness.House",
              "members": [
                {
                  "label": "tokenId",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "0"
                },
                {
                  "label": "tokenName",
                  "type": "t_string_storage",
                  "offset": 0,
                  "slot": "1"
                },
                {
                  "label": "tokenURI",
                  "type": "t_string_storage",
                  "offset": 0,
                  "slot": "2"
                },
                {
                  "label": "tokenType",
                  "type": "t_string_storage",
                  "offset": 0,
                  "slot": "3"
                },
                {
                  "label": "currentOwner",
                  "type": "t_address",
                  "offset": 0,
                  "slot": "4"
                },
                {
                  "label": "previousOwner",
                  "type": "t_address",
                  "offset": 0,
                  "slot": "5"
                },
                {
                  "label": "buyer",
                  "type": "t_address",
                  "offset": 0,
                  "slot": "6"
                },
                {
                  "label": "price",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "7"
                },
                {
                  "label": "numberOfTransfers",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "8"
                },
                {
                  "label": "nftPayable",
                  "type": "t_bool",
                  "offset": 0,
                  "slot": "9"
                },
                {
                  "label": "staked",
                  "type": "t_bool",
                  "offset": 1,
                  "slot": "9"
                },
                {
                  "label": "soldstatus",
                  "type": "t_bool",
                  "offset": 2,
                  "slot": "9"
                }
              ],
              "numberOfBytes": "320"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            }
          },
          "layoutVersion": "1.1",
          "flat": true
        }
      },
      "HouseStaking": {
        "src": "contracts\\Staking.sol:6",
        "version": {
          "withMetadata": "1631da731d0e2b52c81a316e137d89d443991d8823c4d4d4d9c3929bc729a164",
          "withoutMetadata": "92078b7ed6da756ae03297e8c845495c2d09ac69b7981d78a9050acf26a3d7f4",
          "linkedWithoutMetadata": "92078b7ed6da756ae03297e8c845495c2d09ac69b7981d78a9050acf26a3d7f4"
        },
        "inherit": [],
        "libraries": [],
        "methods": [
          "(address,address)",
          "calcDiv(uint256,uint256)",
          "setAPYConfig(uint256,uint256)",
          "getAllAPYTypes()",
          "stake(uint256,uint256)",
          "unstake(uint256)",
          "stakingFinished(uint256)",
          "totalRewards(address)",
          "claimRewards(address)",
          "getAllMyStakedNFTs()",
          "getAllAPYs()",
          "getPenalty()",
          "setPenalty(uint256)",
          "updateAPYConfig(uint256,uint256)"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "HouseStaking",
            "src": "contracts\\Staking.sol:33"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "stakedCounter",
              "offset": 0,
              "slot": "0",
              "type": "t_uint256",
              "contract": "HouseStaking",
              "src": "contracts\\Staking.sol:8"
            },
            {
              "label": "penalty",
              "offset": 0,
              "slot": "1",
              "type": "t_uint256",
              "contract": "HouseStaking",
              "src": "contracts\\Staking.sol:10"
            },
            {
              "label": "APYtypes",
              "offset": 0,
              "slot": "2",
              "type": "t_array(t_uint256)dyn_storage",
              "contract": "HouseStaking",
              "src": "contracts\\Staking.sol:12"
            },
            {
              "label": "APYConfig",
              "offset": 0,
              "slot": "3",
              "type": "t_mapping(t_uint256,t_uint256)",
              "contract": "HouseStaking",
              "src": "contracts\\Staking.sol:15"
            },
            {
              "label": "stakedNfts",
              "offset": 0,
              "slot": "4",
              "type": "t_mapping(t_address,t_array(t_struct(StakedNft)4564_storage)dyn_storage)",
              "contract": "HouseStaking",
              "src": "contracts\\Staking.sol:16"
            },
            {
              "label": "tokenAddress",
              "offset": 0,
              "slot": "5",
              "type": "t_address",
              "contract": "HouseStaking",
              "src": "contracts\\Staking.sol:18"
            },
            {
              "label": "houseNFTAddress",
              "offset": 0,
              "slot": "6",
              "type": "t_address",
              "contract": "HouseStaking",
              "src": "contracts\\Staking.sol:19"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            },
            "t_array(t_struct(StakedNft)4564_storage)dyn_storage": {
              "label": "struct HouseStaking.StakedNft[]",
              "numberOfBytes": "32"
            },
            "t_array(t_uint256)dyn_storage": {
              "label": "uint256[]",
              "numberOfBytes": "32"
            },
            "t_bool": {
              "label": "bool",
              "numberOfBytes": "1"
            },
            "t_mapping(t_address,t_array(t_struct(StakedNft)4564_storage)dyn_storage)": {
              "label": "mapping(address => struct HouseStaking.StakedNft[])",
              "numberOfBytes": "32"
            },
            "t_mapping(t_uint256,t_uint256)": {
              "label": "mapping(uint256 => uint256)",
              "numberOfBytes": "32"
            },
            "t_struct(StakedNft)4564_storage": {
              "label": "struct HouseStaking.StakedNft",
              "members": [
                {
                  "label": "owner",
                  "type": "t_address",
                  "offset": 0,
                  "slot": "0"
                },
                {
                  "label": "tokenId",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "1"
                },
                {
                  "label": "startedDate",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "2"
                },
                {
                  "label": "endDate",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "3"
                },
                {
                  "label": "claimDate",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "4"
                },
                {
                  "label": "stakingType",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "5"
                },
                {
                  "label": "perSecRewards",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "6"
                },
                {
                  "label": "stakingStatus",
                  "type": "t_bool",
                  "offset": 0,
                  "slot": "7"
                }
              ],
              "numberOfBytes": "256"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            }
          },
          "layoutVersion": "1.1",
          "flat": true
        }
      },
      "IMainCleanContract": {
        "src": "contracts\\interfaces\\IContract.sol:6",
        "inherit": [],
        "libraries": [],
        "methods": [
          "getContractById(uint256)",
          "transferContractOwnership(uint256,address,address)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "IHouseBusiness": {
        "src": "contracts\\interfaces\\IHouseBusiness.sol:5",
        "inherit": [],
        "libraries": [],
        "methods": [
          "collectionName()",
          "collectionNameSymbol()",
          "houseCounter()",
          "stakedCounter()",
          "soldedCounter()",
          "hTypeCounter()",
          "minPrice()",
          "maxPrice()",
          "penalty()",
          "royalty()",
          "historyTypes(uint256)",
          "houseHistories(uint256)",
          "allMembers(address)",
          "allHouses(uint256)",
          "stakedNfts(address)",
          "setMinMaxHousePrice(uint256,uint256)",
          "setConfigToken(address)",
          "isMember()",
          "addMember(address)",
          "removeMember(address)",
          "tokenURI(uint256)",
          "setPayable(uint256,address,bool)",
          "mintHouse(string,string,string,string,uint256)",
          "addAllowList(uint256,address)",
          "removeAllowList(uint256,address)",
          "checkAllowedList(uint256,address)",
          "addHistory(uint256,uint256,string,string,string,string,string,uint256)",
          "getHistory(uint256)",
          "editHistory(uint256,uint256,string,string,string,string,string,uint256)",
          "getHistoryType()",
          "addOrEditHType(uint256,string,bool,bool,bool,bool,bool,bool,bool)",
          "removeHistoryType(uint256)",
          "getMinMaxNFT()",
          "getTokenOwner(uint256)",
          "buyHouseNft(uint256)",
          "sendToken(address,uint256)",
          "changeTokenPrice(uint256,uint256)",
          "getAllHouses()",
          "getAllPayableHouses()",
          "getAllMyHouses()",
          "withdrawToken(uint256)",
          "withdrawETH(uint256)",
          "setAPYConfig(uint256,uint256)",
          "getAllAPYTypes()",
          "stake(uint256,uint256)",
          "unstake(uint256)",
          "stakingFinished(uint256)",
          "totalRewards(address)",
          "claimRewards(address)",
          "getAllMyStakedNFTs()",
          "getTotalInfo()",
          "getAllAPYs()",
          "getPenalty()",
          "setPenalty(uint256)",
          "getRoyalty()",
          "setRoyalty(uint256)",
          "ownerOf(uint256)",
          "getTokenPrice(uint256)",
          "setHouseStakedStatus(uint256,bool)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "IStaking": {
        "src": "contracts\\interfaces\\IStaking.sol:5",
        "inherit": [],
        "libraries": [],
        "methods": [
          "stakeCounter()"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      }
    },
    {
      "MainCleanContract": {
        "src": "contracts\\Contract.sol:6",
        "version": {
          "withMetadata": "6421e940ca2c08cec604e64c4e3802894c030e3491305b8df865d9e1c9e89aac",
          "withoutMetadata": "4b8cbb4879901533fe49280ca430f3230d2cf4cb717e76bb4a9404845cd178f8",
          "linkedWithoutMetadata": "4b8cbb4879901533fe49280ca430f3230d2cf4cb717e76bb4a9404845cd178f8"
        },
        "inherit": [],
        "libraries": [],
        "methods": [
          "(address)",
          "ccCreation(string,string,address,string,uint256,uint256,uint256,string)",
          "getAllContractsByOwner()",
          "getAllContractsBySigner()",
          "getContractById(uint256)",
          "addContractSigner(uint256,address)",
          "signContract(uint256)",
          "sendNotify(address,string,uint256)",
          "getUploadedCounter()",
          "getAllNotifies()",
          "calcDiv(uint256,uint256)",
          "toString(bytes)",
          "addressToString(address)",
          "uintToString(uint256)",
          "bytesToString(bytes32)",
          "transferContractOwnership(uint256,address,address)"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "MainCleanContract",
            "src": "contracts\\Contract.sol:52"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "ccCounter",
              "offset": 0,
              "slot": "0",
              "type": "t_uint256",
              "contract": "MainCleanContract",
              "src": "contracts\\Contract.sol:8"
            },
            {
              "label": "houseNFTAddress",
              "offset": 0,
              "slot": "1",
              "type": "t_address",
              "contract": "MainCleanContract",
              "src": "contracts\\Contract.sol:11"
            },
            {
              "label": "allCleanContracts",
              "offset": 0,
              "slot": "2",
              "type": "t_mapping(t_uint256,t_struct(CleanContract)39_storage)",
              "contract": "MainCleanContract",
              "src": "contracts\\Contract.sol:44"
            },
            {
              "label": "allContractsByOwner",
              "offset": 0,
              "slot": "3",
              "type": "t_mapping(t_address,t_array(t_uint256)dyn_storage)",
              "contract": "MainCleanContract",
              "src": "contracts\\Contract.sol:46"
            },
            {
              "label": "allContractsBySigner",
              "offset": 0,
              "slot": "4",
              "type": "t_mapping(t_address,t_array(t_uint256)dyn_storage)",
              "contract": "MainCleanContract",
              "src": "contracts\\Contract.sol:48"
            },
            {
              "label": "allNotifies",
              "offset": 0,
              "slot": "5",
              "type": "t_mapping(t_address,t_array(t_struct(Notify)52_storage)dyn_storage)",
              "contract": "MainCleanContract",
              "src": "contracts\\Contract.sol:50"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            },
            "t_array(t_struct(Notify)52_storage)dyn_storage": {
              "label": "struct MainCleanContract.Notify[]",
              "numberOfBytes": "32"
            },
            "t_array(t_uint256)dyn_storage": {
              "label": "uint256[]",
              "numberOfBytes": "32"
            },
            "t_bool": {
              "label": "bool",
              "numberOfBytes": "1"
            },
            "t_mapping(t_address,t_array(t_struct(Notify)52_storage)dyn_storage)": {
              "label": "mapping(address => struct MainCleanContract.Notify[])",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_array(t_uint256)dyn_storage)": {
              "label": "mapping(address => uint256[])",
              "numberOfBytes": "32"
            },
            "t_mapping(t_uint256,t_struct(CleanContract)39_storage)": {
              "label": "mapping(uint256 => struct MainCleanContract.CleanContract)",
              "numberOfBytes": "32"
            },
            "t_string_storage": {
              "label": "string",
              "numberOfBytes": "32"
            },
            "t_struct(CleanContract)39_storage": {
              "label": "struct MainCleanContract.CleanContract",
              "members": [
                {
                  "label": "contractId",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "0"
                },
                {
                  "label": "companyName",
                  "type": "t_string_storage",
                  "offset": 0,
                  "slot": "1"
                },
                {
                  "label": "contractType",
                  "type": "t_string_storage",
                  "offset": 0,
                  "slot": "2"
                },
                {
                  "label": "contractURI",
                  "type": "t_string_storage",
                  "offset": 0,
                  "slot": "3"
                },
                {
                  "label": "dateFrom",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "4"
                },
                {
                  "label": "dateTo",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "5"
                },
                {
                  "label": "agreedPrice",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "6"
                },
                {
                  "label": "currency",
                  "type": "t_string_storage",
                  "offset": 0,
                  "slot": "7"
                },
                {
                  "label": "creator",
                  "type": "t_address",
                  "offset": 0,
                  "slot": "8"
                },
                {
                  "label": "owner",
                  "type": "t_address",
                  "offset": 0,
                  "slot": "9"
                },
                {
                  "label": "creatorApproval",
                  "type": "t_bool",
                  "offset": 20,
                  "slot": "9"
                },
                {
                  "label": "creatorSignDate",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "10"
                },
                {
                  "label": "contractSigner",
                  "type": "t_address",
                  "offset": 0,
                  "slot": "11"
                },
                {
                  "label": "signerApproval",
                  "type": "t_bool",
                  "offset": 20,
                  "slot": "11"
                },
                {
                  "label": "signerSignDate",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "12"
                },
                {
                  "label": "status",
                  "type": "t_string_storage",
                  "offset": 0,
                  "slot": "13"
                }
              ],
              "numberOfBytes": "448"
            },
            "t_struct(Notify)52_storage": {
              "label": "struct MainCleanContract.Notify",
              "members": [
                {
                  "label": "nSender",
                  "type": "t_address",
                  "offset": 0,
                  "slot": "0"
                },
                {
                  "label": "nReceiver",
                  "type": "t_address",
                  "offset": 0,
                  "slot": "1"
                },
                {
                  "label": "ccID",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "2"
                },
                {
                  "label": "notifySentTime",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "3"
                },
                {
                  "label": "notifyContent",
                  "type": "t_string_storage",
                  "offset": 0,
                  "slot": "4"
                },
                {
                  "label": "status",
                  "type": "t_bool",
                  "offset": 0,
                  "slot": "5"
                }
              ],
              "numberOfBytes": "192"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            }
          },
          "layoutVersion": "1.1",
          "flat": true
        }
      }
    },
    {
      "ThirdParty": {
        "src": "contracts\\ThirdParty.sol:5",
        "version": {
          "withMetadata": "cbf5b2fae6668ee45b86827e485cbed39526db15e39a77a193d607720ff0015c",
          "withoutMetadata": "c7f6b899dcbca6a360ab204550ba9b4fec9f4cae1bcd2f5879cfa3965e9d550f",
          "linkedWithoutMetadata": "c7f6b899dcbca6a360ab204550ba9b4fec9f4cae1bcd2f5879cfa3965e9d550f"
        },
        "inherit": [],
        "libraries": [],
        "methods": [
          "getAllCategories()",
          "addCategory(string,uint256[])",
          "editCategory(uint256,string,uint256[])",
          "deleteCategory(uint256)",
          "getAllProperties()",
          "addProperty(string)",
          "editProperty(uint256,string)",
          "deleteProperty(uint256)",
          "getPackagesByCategory(uint256)",
          "addPackage(uint256,string,uint256,uint256,uint256,bool[])",
          "editPackage(uint256,uint256,string,uint256,uint256,uint256,bool[])",
          "deletePackage(uint256,uint256)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [
            {
              "label": "categoryCounter",
              "offset": 0,
              "slot": "0",
              "type": "t_uint256",
              "contract": "ThirdParty",
              "src": "contracts\\ThirdParty.sol:12"
            },
            {
              "label": "packageCounter",
              "offset": 0,
              "slot": "1",
              "type": "t_uint256",
              "contract": "ThirdParty",
              "src": "contracts\\ThirdParty.sol:23"
            },
            {
              "label": "propertyCounter",
              "offset": 0,
              "slot": "2",
              "type": "t_uint256",
              "contract": "ThirdParty",
              "src": "contracts\\ThirdParty.sol:29"
            },
            {
              "label": "allCategories",
              "offset": 0,
              "slot": "3",
              "type": "t_array(t_struct(Category)11_storage)dyn_storage",
              "contract": "ThirdParty",
              "src": "contracts\\ThirdParty.sol:31"
            },
            {
              "label": "allPackages",
              "offset": 0,
              "slot": "4",
              "type": "t_mapping(t_uint256,t_array(t_struct(Package)29_storage)dyn_storage)",
              "contract": "ThirdParty",
              "src": "contracts\\ThirdParty.sol:34"
            },
            {
              "label": "allProperties",
              "offset": 0,
              "slot": "5",
              "type": "t_array(t_struct(Property)36_storage)dyn_storage",
              "contract": "ThirdParty",
              "src": "contracts\\ThirdParty.sol:37"
            }
          ],
          "types": {
            "t_array(t_bool)dyn_storage": {
              "label": "bool[]",
              "numberOfBytes": "32"
            },
            "t_array(t_struct(Category)11_storage)dyn_storage": {
              "label": "struct ThirdParty.Category[]",
              "numberOfBytes": "32"
            },
            "t_array(t_struct(Package)29_storage)dyn_storage": {
              "label": "struct ThirdParty.Package[]",
              "numberOfBytes": "32"
            },
            "t_array(t_struct(Property)36_storage)dyn_storage": {
              "label": "struct ThirdParty.Property[]",
              "numberOfBytes": "32"
            },
            "t_array(t_uint256)dyn_storage": {
              "label": "uint256[]",
              "numberOfBytes": "32"
            },
            "t_bool": {
              "label": "bool",
              "numberOfBytes": "1"
            },
            "t_mapping(t_uint256,t_array(t_struct(Package)29_storage)dyn_storage)": {
              "label": "mapping(uint256 => struct ThirdParty.Package[])",
              "numberOfBytes": "32"
            },
            "t_string_storage": {
              "label": "string",
              "numberOfBytes": "32"
            },
            "t_struct(Category)11_storage": {
              "label": "struct ThirdParty.Category",
              "members": [
                {
                  "label": "categoryID",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "0"
                },
                {
                  "label": "cartegoryName",
                  "type": "t_string_storage",
                  "offset": 0,
                  "slot": "1"
                },
                {
                  "label": "properties",
                  "type": "t_array(t_uint256)dyn_storage",
                  "offset": 0,
                  "slot": "2"
                },
                {
                  "label": "visible",
                  "type": "t_bool",
                  "offset": 0,
                  "slot": "3"
                }
              ],
              "numberOfBytes": "128"
            },
            "t_struct(Package)29_storage": {
              "label": "struct ThirdParty.Package",
              "members": [
                {
                  "label": "categoryID",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "0"
                },
                {
                  "label": "packageID",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "1"
                },
                {
                  "label": "packageName",
                  "type": "t_string_storage",
                  "offset": 0,
                  "slot": "2"
                },
                {
                  "label": "price",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "3"
                },
                {
                  "label": "period",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "4"
                },
                {
                  "label": "dataLimit",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "5"
                },
                {
                  "label": "propertyVisible",
                  "type": "t_array(t_bool)dyn_storage",
                  "offset": 0,
                  "slot": "6"
                }
              ],
              "numberOfBytes": "224"
            },
            "t_struct(Property)36_storage": {
              "label": "struct ThirdParty.Property",
              "members": [
                {
                  "label": "propertyID",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "0"
                },
                {
                  "label": "propertyName",
                  "type": "t_string_storage",
                  "offset": 0,
                  "slot": "1"
                }
              ],
              "numberOfBytes": "64"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            }
          },
          "layoutVersion": "1.1",
          "flat": true
        }
      }
    },
    {
      "Context": {
        "src": "contracts\\TokenContract.sol:22",
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "HouseBusinessToken": {
        "src": "contracts\\TokenContract.sol:33",
        "version": {
          "withMetadata": "e53f4b9234e67266e4442dec09d084a17cbe6b1b4fb90d62776f0d6f370f0570",
          "withoutMetadata": "f5d2b294cac19c78c593798b4a1bae04c45c82839cbcffe3cc910bb441f21259",
          "linkedWithoutMetadata": "f5d2b294cac19c78c593798b4a1bae04c45c82839cbcffe3cc910bb441f21259"
        },
        "inherit": [
          "IERC20Metadata",
          "IERC20",
          "Context"
        ],
        "libraries": [],
        "methods": [
          "()",
          "name()",
          "symbol()",
          "decimals()",
          "totalSupply()",
          "balanceOf(address)",
          "transfer(address,uint256)",
          "allowance(address,address)",
          "approve(address,uint256)",
          "transferFrom(address,address,uint256)",
          "increaseAllowance(address,uint256)",
          "decreaseAllowance(address,uint256)",
          "_mint(address,uint256)"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "HouseBusinessToken",
            "src": "contracts\\TokenContract.sol:42"
          },
          {
            "kind": "state-variable-assignment",
            "name": "_name",
            "src": "contracts\\TokenContract.sol:37"
          },
          {
            "kind": "state-variable-assignment",
            "name": "_symbol",
            "src": "contracts\\TokenContract.sol:38"
          },
          {
            "kind": "state-variable-assignment",
            "name": "_decimals",
            "src": "contracts\\TokenContract.sol:39"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "_balances",
              "offset": 0,
              "slot": "0",
              "type": "t_mapping(t_address,t_uint256)",
              "contract": "HouseBusinessToken",
              "src": "contracts\\TokenContract.sol:34"
            },
            {
              "label": "_allowances",
              "offset": 0,
              "slot": "1",
              "type": "t_mapping(t_address,t_mapping(t_address,t_uint256))",
              "contract": "HouseBusinessToken",
              "src": "contracts\\TokenContract.sol:35"
            },
            {
              "label": "_totalSupply",
              "offset": 0,
              "slot": "2",
              "type": "t_uint256",
              "contract": "HouseBusinessToken",
              "src": "contracts\\TokenContract.sol:36"
            },
            {
              "label": "_name",
              "offset": 0,
              "slot": "3",
              "type": "t_string_storage",
              "contract": "HouseBusinessToken",
              "src": "contracts\\TokenContract.sol:37"
            },
            {
              "label": "_symbol",
              "offset": 0,
              "slot": "4",
              "type": "t_string_storage",
              "contract": "HouseBusinessToken",
              "src": "contracts\\TokenContract.sol:38"
            },
            {
              "label": "_decimals",
              "offset": 0,
              "slot": "5",
              "type": "t_uint8",
              "contract": "HouseBusinessToken",
              "src": "contracts\\TokenContract.sol:39"
            },
            {
              "label": "_owner",
              "offset": 1,
              "slot": "5",
              "type": "t_address",
              "contract": "HouseBusinessToken",
              "src": "contracts\\TokenContract.sol:40"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            },
            "t_mapping(t_address,t_mapping(t_address,t_uint256))": {
              "label": "mapping(address => mapping(address => uint256))",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_uint256)": {
              "label": "mapping(address => uint256)",
              "numberOfBytes": "32"
            },
            "t_string_storage": {
              "label": "string",
              "numberOfBytes": "32"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            },
            "t_uint8": {
              "label": "uint8",
              "numberOfBytes": "1"
            }
          },
          "layoutVersion": "1.1",
          "flat": true
        }
      },
      "IERC20": {
        "src": "contracts\\TokenContract.sol:5",
        "inherit": [],
        "libraries": [],
        "methods": [
          "totalSupply()",
          "balanceOf(address)",
          "transfer(address,uint256)",
          "allowance(address,address)",
          "approve(address,uint256)",
          "transferFrom(address,address,uint256)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "IERC20Metadata": {
        "src": "contracts\\TokenContract.sol:16",
        "inherit": [
          "IERC20"
        ],
        "libraries": [],
        "methods": [
          "name()",
          "symbol()",
          "decimals()"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      }
    },
    {
      "IPRC20": {
        "src": "contracts\\interfaces\\IPRC20.sol:4",
        "inherit": [],
        "libraries": [],
        "methods": [
          "totalSupply()",
          "balanceOf(address)",
          "transfer(address,uint256)",
          "allowance(address,address)",
          "approve(address,uint256)",
          "transferFrom(address,address,uint256)",
          "decimals()"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      }
    },
    {
      "IERC20": {
        "src": "@openzeppelin\\contracts\\token\\ERC20\\IERC20.sol:9",
        "inherit": [],
        "libraries": [],
        "methods": [
          "totalSupply()",
          "balanceOf(address)",
          "transfer(address,uint256)",
          "allowance(address,address)",
          "approve(address,uint256)",
          "transferFrom(address,address,uint256)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "IERC721": {
        "src": "@openzeppelin\\contracts\\token\\ERC721\\IERC721.sol:11",
        "inherit": [
          "IERC165"
        ],
        "libraries": [],
        "methods": [
          "balanceOf(address)",
          "ownerOf(uint256)",
          "safeTransferFrom(address,address,uint256,bytes)",
          "safeTransferFrom(address,address,uint256)",
          "transferFrom(address,address,uint256)",
          "approve(address,uint256)",
          "setApprovalForAll(address,bool)",
          "getApproved(uint256)",
          "isApprovedForAll(address,address)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "IERC165": {
        "src": "@openzeppelin\\contracts\\utils\\introspection\\IERC165.sol:15",
        "inherit": [],
        "libraries": [],
        "methods": [
          "supportsInterface(bytes4)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "HouseStaking": {
        "src": "contracts\\Staking.sol:6",
        "version": {
          "withMetadata": "b434e0d9fc6e61f20a7ae59c658eae1046efdaddcb12502607dc9c2ba1b48d96",
          "withoutMetadata": "55dd03d5604f70c2abf52ecb260f160dc660988f7e28526fbed5969d1a598935",
          "linkedWithoutMetadata": "55dd03d5604f70c2abf52ecb260f160dc660988f7e28526fbed5969d1a598935"
        },
        "inherit": [],
        "libraries": [],
        "methods": [
          "(address,address)",
          "calcDiv(uint256,uint256)",
          "setAPYConfig(uint256,uint256)",
          "getAllAPYTypes()",
          "stake(uint256,uint256)",
          "unstake(uint256)",
          "stakingFinished(uint256)",
          "totalRewards(address)",
          "claimRewards(address)",
          "getAllMyStakedNFTs()",
          "getAllAPYs()",
          "getPenalty()",
          "setPenalty(uint256)"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "HouseStaking",
            "src": "contracts\\Staking.sol:33"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "stakedCounter",
              "offset": 0,
              "slot": "0",
              "type": "t_uint256",
              "contract": "HouseStaking",
              "src": "contracts\\Staking.sol:8"
            },
            {
              "label": "penalty",
              "offset": 0,
              "slot": "1",
              "type": "t_uint256",
              "contract": "HouseStaking",
              "src": "contracts\\Staking.sol:10"
            },
            {
              "label": "APYtypes",
              "offset": 0,
              "slot": "2",
              "type": "t_array(t_uint256)dyn_storage",
              "contract": "HouseStaking",
              "src": "contracts\\Staking.sol:12"
            },
            {
              "label": "APYConfig",
              "offset": 0,
              "slot": "3",
              "type": "t_mapping(t_uint256,t_uint256)",
              "contract": "HouseStaking",
              "src": "contracts\\Staking.sol:15"
            },
            {
              "label": "stakedNfts",
              "offset": 0,
              "slot": "4",
              "type": "t_mapping(t_address,t_array(t_struct(StakedNft)248_storage)dyn_storage)",
              "contract": "HouseStaking",
              "src": "contracts\\Staking.sol:16"
            },
            {
              "label": "tokenAddress",
              "offset": 0,
              "slot": "5",
              "type": "t_address",
              "contract": "HouseStaking",
              "src": "contracts\\Staking.sol:18"
            },
            {
              "label": "houseNFTAddress",
              "offset": 0,
              "slot": "6",
              "type": "t_address",
              "contract": "HouseStaking",
              "src": "contracts\\Staking.sol:19"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            },
            "t_array(t_struct(StakedNft)248_storage)dyn_storage": {
              "label": "struct HouseStaking.StakedNft[]",
              "numberOfBytes": "32"
            },
            "t_array(t_uint256)dyn_storage": {
              "label": "uint256[]",
              "numberOfBytes": "32"
            },
            "t_bool": {
              "label": "bool",
              "numberOfBytes": "1"
            },
            "t_mapping(t_address,t_array(t_struct(StakedNft)248_storage)dyn_storage)": {
              "label": "mapping(address => struct HouseStaking.StakedNft[])",
              "numberOfBytes": "32"
            },
            "t_mapping(t_uint256,t_uint256)": {
              "label": "mapping(uint256 => uint256)",
              "numberOfBytes": "32"
            },
            "t_struct(StakedNft)248_storage": {
              "label": "struct HouseStaking.StakedNft",
              "members": [
                {
                  "label": "owner",
                  "type": "t_address",
                  "offset": 0,
                  "slot": "0"
                },
                {
                  "label": "tokenId",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "1"
                },
                {
                  "label": "startedDate",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "2"
                },
                {
                  "label": "endDate",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "3"
                },
                {
                  "label": "claimDate",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "4"
                },
                {
                  "label": "stakingType",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "5"
                },
                {
                  "label": "perSecRewards",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "6"
                },
                {
                  "label": "stakingStatus",
                  "type": "t_bool",
                  "offset": 0,
                  "slot": "7"
                }
              ],
              "numberOfBytes": "256"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            }
          },
          "layoutVersion": "1.1",
          "flat": true
        }
      },
      "IHouseBusiness": {
        "src": "contracts\\interfaces\\IHouseBusiness.sol:5",
        "inherit": [],
        "libraries": [],
        "methods": [
          "collectionName()",
          "collectionNameSymbol()",
          "houseCounter()",
          "stakedCounter()",
          "soldedCounter()",
          "hTypeCounter()",
          "minPrice()",
          "maxPrice()",
          "penalty()",
          "royalty()",
          "historyTypes(uint256)",
          "houseHistories(uint256)",
          "allMembers(address)",
          "allHouses(uint256)",
          "stakedNfts(address)",
          "setMinMaxHousePrice(uint256,uint256)",
          "setConfigToken(address)",
          "isMember()",
          "addMember(address)",
          "removeMember(address)",
          "tokenURI(uint256)",
          "setPayable(uint256,address,bool)",
          "mintHouse(string,string,string,string,uint256)",
          "addAllowList(uint256,address)",
          "removeAllowList(uint256,address)",
          "checkAllowedList(uint256,address)",
          "addHistory(uint256,uint256,string,string,string,string,string,uint256)",
          "getHistory(uint256)",
          "editHistory(uint256,uint256,string,string,string,string,string,uint256)",
          "getHistoryType()",
          "addOrEditHType(uint256,string,bool,bool,bool,bool,bool,bool,bool)",
          "removeHistoryType(uint256)",
          "getMinMaxNFT()",
          "getTokenOwner(uint256)",
          "buyHouseNft(uint256)",
          "sendToken(address,uint256)",
          "changeTokenPrice(uint256,uint256)",
          "getAllHouses()",
          "getAllPayableHouses()",
          "getAllMyHouses()",
          "withdrawToken(uint256)",
          "withdrawETH(uint256)",
          "setAPYConfig(uint256,uint256)",
          "getAllAPYTypes()",
          "stake(uint256,uint256)",
          "unstake(uint256)",
          "stakingFinished(uint256)",
          "totalRewards(address)",
          "claimRewards(address)",
          "getAllMyStakedNFTs()",
          "getTotalInfo()",
          "getAllAPYs()",
          "getPenalty()",
          "setPenalty(uint256)",
          "getRoyalty()",
          "setRoyalty(uint256)",
          "ownerOf(uint256)",
          "getTokenPrice(uint256)",
          "setHouseStakedStatus(uint256,bool)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      }
    },
    {
      "MainCleanContract": {
        "src": "contracts\\Contract.sol:6",
        "version": {
          "withMetadata": "6421e940ca2c08cec604e64c4e3802894c030e3491305b8df865d9e1c9e89aac",
          "withoutMetadata": "4b8cbb4879901533fe49280ca430f3230d2cf4cb717e76bb4a9404845cd178f8",
          "linkedWithoutMetadata": "4b8cbb4879901533fe49280ca430f3230d2cf4cb717e76bb4a9404845cd178f8"
        },
        "inherit": [],
        "libraries": [],
        "methods": [
          "(address)",
          "ccCreation(string,string,address,string,uint256,uint256,uint256,string)",
          "getAllContractsByOwner()",
          "getAllContractsBySigner()",
          "getContractById(uint256)",
          "addContractSigner(uint256,address)",
          "signContract(uint256)",
          "sendNotify(address,string,uint256)",
          "getUploadedCounter()",
          "getAllNotifies()",
          "calcDiv(uint256,uint256)",
          "toString(bytes)",
          "addressToString(address)",
          "uintToString(uint256)",
          "bytesToString(bytes32)",
          "transferContractOwnership(uint256,address,address)"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "MainCleanContract",
            "src": "contracts\\Contract.sol:52"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "ccCounter",
              "offset": 0,
              "slot": "0",
              "type": "t_uint256",
              "contract": "MainCleanContract",
              "src": "contracts\\Contract.sol:8"
            },
            {
              "label": "houseNFTAddress",
              "offset": 0,
              "slot": "1",
              "type": "t_address",
              "contract": "MainCleanContract",
              "src": "contracts\\Contract.sol:11"
            },
            {
              "label": "allCleanContracts",
              "offset": 0,
              "slot": "2",
              "type": "t_mapping(t_uint256,t_struct(CleanContract)39_storage)",
              "contract": "MainCleanContract",
              "src": "contracts\\Contract.sol:44"
            },
            {
              "label": "allContractsByOwner",
              "offset": 0,
              "slot": "3",
              "type": "t_mapping(t_address,t_array(t_uint256)dyn_storage)",
              "contract": "MainCleanContract",
              "src": "contracts\\Contract.sol:46"
            },
            {
              "label": "allContractsBySigner",
              "offset": 0,
              "slot": "4",
              "type": "t_mapping(t_address,t_array(t_uint256)dyn_storage)",
              "contract": "MainCleanContract",
              "src": "contracts\\Contract.sol:48"
            },
            {
              "label": "allNotifies",
              "offset": 0,
              "slot": "5",
              "type": "t_mapping(t_address,t_array(t_struct(Notify)52_storage)dyn_storage)",
              "contract": "MainCleanContract",
              "src": "contracts\\Contract.sol:50"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            },
            "t_array(t_struct(Notify)52_storage)dyn_storage": {
              "label": "struct MainCleanContract.Notify[]",
              "numberOfBytes": "32"
            },
            "t_array(t_uint256)dyn_storage": {
              "label": "uint256[]",
              "numberOfBytes": "32"
            },
            "t_bool": {
              "label": "bool",
              "numberOfBytes": "1"
            },
            "t_mapping(t_address,t_array(t_struct(Notify)52_storage)dyn_storage)": {
              "label": "mapping(address => struct MainCleanContract.Notify[])",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_array(t_uint256)dyn_storage)": {
              "label": "mapping(address => uint256[])",
              "numberOfBytes": "32"
            },
            "t_mapping(t_uint256,t_struct(CleanContract)39_storage)": {
              "label": "mapping(uint256 => struct MainCleanContract.CleanContract)",
              "numberOfBytes": "32"
            },
            "t_string_storage": {
              "label": "string",
              "numberOfBytes": "32"
            },
            "t_struct(CleanContract)39_storage": {
              "label": "struct MainCleanContract.CleanContract",
              "members": [
                {
                  "label": "contractId",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "0"
                },
                {
                  "label": "companyName",
                  "type": "t_string_storage",
                  "offset": 0,
                  "slot": "1"
                },
                {
                  "label": "contractType",
                  "type": "t_string_storage",
                  "offset": 0,
                  "slot": "2"
                },
                {
                  "label": "contractURI",
                  "type": "t_string_storage",
                  "offset": 0,
                  "slot": "3"
                },
                {
                  "label": "dateFrom",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "4"
                },
                {
                  "label": "dateTo",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "5"
                },
                {
                  "label": "agreedPrice",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "6"
                },
                {
                  "label": "currency",
                  "type": "t_string_storage",
                  "offset": 0,
                  "slot": "7"
                },
                {
                  "label": "creator",
                  "type": "t_address",
                  "offset": 0,
                  "slot": "8"
                },
                {
                  "label": "owner",
                  "type": "t_address",
                  "offset": 0,
                  "slot": "9"
                },
                {
                  "label": "creatorApproval",
                  "type": "t_bool",
                  "offset": 20,
                  "slot": "9"
                },
                {
                  "label": "creatorSignDate",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "10"
                },
                {
                  "label": "contractSigner",
                  "type": "t_address",
                  "offset": 0,
                  "slot": "11"
                },
                {
                  "label": "signerApproval",
                  "type": "t_bool",
                  "offset": 20,
                  "slot": "11"
                },
                {
                  "label": "signerSignDate",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "12"
                },
                {
                  "label": "status",
                  "type": "t_string_storage",
                  "offset": 0,
                  "slot": "13"
                }
              ],
              "numberOfBytes": "448"
            },
            "t_struct(Notify)52_storage": {
              "label": "struct MainCleanContract.Notify",
              "members": [
                {
                  "label": "nSender",
                  "type": "t_address",
                  "offset": 0,
                  "slot": "0"
                },
                {
                  "label": "nReceiver",
                  "type": "t_address",
                  "offset": 0,
                  "slot": "1"
                },
                {
                  "label": "ccID",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "2"
                },
                {
                  "label": "notifySentTime",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "3"
                },
                {
                  "label": "notifyContent",
                  "type": "t_string_storage",
                  "offset": 0,
                  "slot": "4"
                },
                {
                  "label": "status",
                  "type": "t_bool",
                  "offset": 0,
                  "slot": "5"
                }
              ],
              "numberOfBytes": "192"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            }
          },
          "layoutVersion": "1.1",
          "flat": true
        }
      }
    },
    {
      "IERC20": {
        "src": "@openzeppelin\\contracts\\token\\ERC20\\IERC20.sol:9",
        "inherit": [],
        "libraries": [],
        "methods": [
          "totalSupply()",
          "balanceOf(address)",
          "transfer(address,uint256)",
          "allowance(address,address)",
          "approve(address,uint256)",
          "transferFrom(address,address,uint256)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "ERC721": {
        "src": "@openzeppelin\\contracts\\token\\ERC721\\ERC721.sol:19",
        "version": {
          "withMetadata": "311027b738fb50ea92c84baf68eacb931adf05de03da13635a661dc9c5b03f73",
          "withoutMetadata": "9ec7f439077c3b762bc3aa6a17c55aba7a78d240190c9c7814df896455a0f780",
          "linkedWithoutMetadata": "9ec7f439077c3b762bc3aa6a17c55aba7a78d240190c9c7814df896455a0f780"
        },
        "inherit": [
          "IERC721Metadata",
          "IERC721",
          "ERC165",
          "IERC165",
          "Context"
        ],
        "libraries": [
          "Address",
          "Strings"
        ],
        "methods": [
          "(string,string)",
          "supportsInterface(bytes4)",
          "balanceOf(address)",
          "ownerOf(uint256)",
          "name()",
          "symbol()",
          "tokenURI(uint256)",
          "approve(address,uint256)",
          "getApproved(uint256)",
          "setApprovalForAll(address,bool)",
          "isApprovedForAll(address,address)",
          "transferFrom(address,address,uint256)",
          "safeTransferFrom(address,address,uint256)",
          "safeTransferFrom(address,address,uint256,bytes)"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "ERC721",
            "src": "@openzeppelin\\contracts\\token\\ERC721\\ERC721.sol:44"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "_name",
              "offset": 0,
              "slot": "0",
              "type": "t_string_storage",
              "contract": "ERC721",
              "src": "@openzeppelin\\contracts\\token\\ERC721\\ERC721.sol:24"
            },
            {
              "label": "_symbol",
              "offset": 0,
              "slot": "1",
              "type": "t_string_storage",
              "contract": "ERC721",
              "src": "@openzeppelin\\contracts\\token\\ERC721\\ERC721.sol:27"
            },
            {
              "label": "_owners",
              "offset": 0,
              "slot": "2",
              "type": "t_mapping(t_uint256,t_address)",
              "contract": "ERC721",
              "src": "@openzeppelin\\contracts\\token\\ERC721\\ERC721.sol:30"
            },
            {
              "label": "_balances",
              "offset": 0,
              "slot": "3",
              "type": "t_mapping(t_address,t_uint256)",
              "contract": "ERC721",
              "src": "@openzeppelin\\contracts\\token\\ERC721\\ERC721.sol:33"
            },
            {
              "label": "_tokenApprovals",
              "offset": 0,
              "slot": "4",
              "type": "t_mapping(t_uint256,t_address)",
              "contract": "ERC721",
              "src": "@openzeppelin\\contracts\\token\\ERC721\\ERC721.sol:36"
            },
            {
              "label": "_operatorApprovals",
              "offset": 0,
              "slot": "5",
              "type": "t_mapping(t_address,t_mapping(t_address,t_bool))",
              "contract": "ERC721",
              "src": "@openzeppelin\\contracts\\token\\ERC721\\ERC721.sol:39"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            },
            "t_bool": {
              "label": "bool",
              "numberOfBytes": "1"
            },
            "t_mapping(t_address,t_bool)": {
              "label": "mapping(address => bool)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_mapping(t_address,t_bool))": {
              "label": "mapping(address => mapping(address => bool))",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_uint256)": {
              "label": "mapping(address => uint256)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_uint256,t_address)": {
              "label": "mapping(uint256 => address)",
              "numberOfBytes": "32"
            },
            "t_string_storage": {
              "label": "string",
              "numberOfBytes": "32"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            }
          },
          "layoutVersion": "1.1",
          "flat": true
        }
      },
      "IERC721": {
        "src": "@openzeppelin\\contracts\\token\\ERC721\\IERC721.sol:11",
        "inherit": [
          "IERC165"
        ],
        "libraries": [],
        "methods": [
          "balanceOf(address)",
          "ownerOf(uint256)",
          "safeTransferFrom(address,address,uint256,bytes)",
          "safeTransferFrom(address,address,uint256)",
          "transferFrom(address,address,uint256)",
          "approve(address,uint256)",
          "setApprovalForAll(address,bool)",
          "getApproved(uint256)",
          "isApprovedForAll(address,address)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "IERC721Receiver": {
        "src": "@openzeppelin\\contracts\\token\\ERC721\\IERC721Receiver.sol:11",
        "inherit": [],
        "libraries": [],
        "methods": [
          "onERC721Received(address,address,uint256,bytes)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "ERC721URIStorage": {
        "src": "@openzeppelin\\contracts\\token\\ERC721\\extensions\\ERC721URIStorage.sol:11",
        "inherit": [
          "ERC721",
          "IERC721Metadata",
          "IERC721",
          "ERC165",
          "IERC165",
          "Context"
        ],
        "libraries": [
          "Strings"
        ],
        "methods": [
          "tokenURI(uint256)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [
            {
              "label": "_name",
              "offset": 0,
              "slot": "0",
              "type": "t_string_storage",
              "contract": "ERC721",
              "src": "@openzeppelin\\contracts\\token\\ERC721\\ERC721.sol:24"
            },
            {
              "label": "_symbol",
              "offset": 0,
              "slot": "1",
              "type": "t_string_storage",
              "contract": "ERC721",
              "src": "@openzeppelin\\contracts\\token\\ERC721\\ERC721.sol:27"
            },
            {
              "label": "_owners",
              "offset": 0,
              "slot": "2",
              "type": "t_mapping(t_uint256,t_address)",
              "contract": "ERC721",
              "src": "@openzeppelin\\contracts\\token\\ERC721\\ERC721.sol:30"
            },
            {
              "label": "_balances",
              "offset": 0,
              "slot": "3",
              "type": "t_mapping(t_address,t_uint256)",
              "contract": "ERC721",
              "src": "@openzeppelin\\contracts\\token\\ERC721\\ERC721.sol:33"
            },
            {
              "label": "_tokenApprovals",
              "offset": 0,
              "slot": "4",
              "type": "t_mapping(t_uint256,t_address)",
              "contract": "ERC721",
              "src": "@openzeppelin\\contracts\\token\\ERC721\\ERC721.sol:36"
            },
            {
              "label": "_operatorApprovals",
              "offset": 0,
              "slot": "5",
              "type": "t_mapping(t_address,t_mapping(t_address,t_bool))",
              "contract": "ERC721",
              "src": "@openzeppelin\\contracts\\token\\ERC721\\ERC721.sol:39"
            },
            {
              "label": "_tokenURIs",
              "offset": 0,
              "slot": "6",
              "type": "t_mapping(t_uint256,t_string_storage)",
              "contract": "ERC721URIStorage",
              "src": "@openzeppelin\\contracts\\token\\ERC721\\extensions\\ERC721URIStorage.sol:15"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            },
            "t_bool": {
              "label": "bool",
              "numberOfBytes": "1"
            },
            "t_mapping(t_address,t_bool)": {
              "label": "mapping(address => bool)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_mapping(t_address,t_bool))": {
              "label": "mapping(address => mapping(address => bool))",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_uint256)": {
              "label": "mapping(address => uint256)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_uint256,t_address)": {
              "label": "mapping(uint256 => address)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_uint256,t_string_storage)": {
              "label": "mapping(uint256 => string)",
              "numberOfBytes": "32"
            },
            "t_string_storage": {
              "label": "string",
              "numberOfBytes": "32"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            }
          },
          "layoutVersion": "1.1",
          "flat": true
        }
      },
      "IERC721Metadata": {
        "src": "@openzeppelin\\contracts\\token\\ERC721\\extensions\\IERC721Metadata.sol:12",
        "inherit": [
          "IERC721",
          "IERC165"
        ],
        "libraries": [],
        "methods": [
          "name()",
          "symbol()",
          "tokenURI(uint256)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "Address": {
        "src": "@openzeppelin\\contracts\\utils\\Address.sol:9",
        "version": {
          "withMetadata": "a0500f265408d7c0dbf75da3f9e44a5c2ee85e18bb1b58fe491ffcfa4ea7fd9b",
          "withoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db",
          "linkedWithoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db"
        },
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [
          {
            "kind": "delegatecall",
            "src": "@openzeppelin\\contracts\\utils\\Address.sol:185"
          }
        ],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "Context": {
        "src": "@openzeppelin\\contracts\\utils\\Context.sol:16",
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "Strings": {
        "src": "@openzeppelin\\contracts\\utils\\Strings.sol:11",
        "version": {
          "withMetadata": "c385b5200dd723f945d28b88358d79ca1b5c0f71c28cbbab9acf6d6f3fd15593",
          "withoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db",
          "linkedWithoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db"
        },
        "inherit": [],
        "libraries": [
          "Math"
        ],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "ERC165": {
        "src": "@openzeppelin\\contracts\\utils\\introspection\\ERC165.sol:22",
        "inherit": [
          "IERC165"
        ],
        "libraries": [],
        "methods": [
          "supportsInterface(bytes4)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "IERC165": {
        "src": "@openzeppelin\\contracts\\utils\\introspection\\IERC165.sol:15",
        "inherit": [],
        "libraries": [],
        "methods": [
          "supportsInterface(bytes4)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "Math": {
        "src": "@openzeppelin\\contracts\\utils\\math\\Math.sol:9",
        "version": {
          "withMetadata": "fcaf39e5e702f2902d6ef00c1def75c9800e8d2a0a78a87cf542096cafc7a4b0",
          "withoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db",
          "linkedWithoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db"
        },
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "HouseBusiness": {
        "src": "contracts\\HouseBusiness.sol:12",
        "version": {
          "withMetadata": "15f412f0f6980e0a190b7e49a25f85a44ba881dc4f93fefd4da7b5fdd56d1c16",
          "withoutMetadata": "740fef5df74a6d1b6963ea69e7d4d3c191ce22464b2dc0fadd0225e20d54ae94",
          "linkedWithoutMetadata": "740fef5df74a6d1b6963ea69e7d4d3c191ce22464b2dc0fadd0225e20d54ae94"
        },
        "inherit": [
          "ERC721URIStorage",
          "ERC721",
          "IERC721Metadata",
          "IERC721",
          "ERC165",
          "IERC165",
          "Context"
        ],
        "libraries": [],
        "methods": [
          "(address)",
          "setMinMaxHousePrice(uint256,uint256)",
          "setConfigToken(address)",
          "isMember()",
          "addMember(address)",
          "removeMember(address)",
          "tokenURI(uint256)",
          "setCContractAddress(address)",
          "setStakingContractAddress(address)",
          "setPayable(uint256,address,bool)",
          "mintHouse(string,string,string,string,uint256)",
          "addAllowList(uint256,address)",
          "removeAllowList(uint256,address)",
          "checkAllowedList(uint256,address)",
          "addHistory(uint256,uint256,uint256,string,string,string,string,string,uint256)",
          "getHistory(uint256)",
          "editHistory(uint256,uint256,string,string,string,string,string,uint256)",
          "getHistoryType()",
          "addOrEditHType(uint256,string,bool,bool,bool,bool,bool,bool,bool)",
          "removeHistoryType(uint256)",
          "getMinMaxNFT()",
          "getTokenOwner(uint256)",
          "disconnectContract(uint256,uint256,uint256)",
          "buyHouseNft(uint256)",
          "sendToken(address,uint256)",
          "changeTokenPrice(uint256,uint256)",
          "getAllHouses()",
          "getAllPayableHouses()",
          "getAllMyHouses()",
          "withdrawToken(uint256)",
          "withdrawETH(uint256)",
          "getTotalInfo()",
          "getTokenPrice(uint256)",
          "setHouseStakedStatus(uint256,bool)",
          "getRoyalty()",
          "setRoyalty(uint256)"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "HouseBusiness",
            "src": "contracts\\HouseBusiness.sol:92"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "_name",
              "offset": 0,
              "slot": "0",
              "type": "t_string_storage",
              "contract": "ERC721",
              "src": "@openzeppelin\\contracts\\token\\ERC721\\ERC721.sol:24"
            },
            {
              "label": "_symbol",
              "offset": 0,
              "slot": "1",
              "type": "t_string_storage",
              "contract": "ERC721",
              "src": "@openzeppelin\\contracts\\token\\ERC721\\ERC721.sol:27"
            },
            {
              "label": "_owners",
              "offset": 0,
              "slot": "2",
              "type": "t_mapping(t_uint256,t_address)",
              "contract": "ERC721",
              "src": "@openzeppelin\\contracts\\token\\ERC721\\ERC721.sol:30"
            },
            {
              "label": "_balances",
              "offset": 0,
              "slot": "3",
              "type": "t_mapping(t_address,t_uint256)",
              "contract": "ERC721",
              "src": "@openzeppelin\\contracts\\token\\ERC721\\ERC721.sol:33"
            },
            {
              "label": "_tokenApprovals",
              "offset": 0,
              "slot": "4",
              "type": "t_mapping(t_uint256,t_address)",
              "contract": "ERC721",
              "src": "@openzeppelin\\contracts\\token\\ERC721\\ERC721.sol:36"
            },
            {
              "label": "_operatorApprovals",
              "offset": 0,
              "slot": "5",
              "type": "t_mapping(t_address,t_mapping(t_address,t_bool))",
              "contract": "ERC721",
              "src": "@openzeppelin\\contracts\\token\\ERC721\\ERC721.sol:39"
            },
            {
              "label": "_tokenURIs",
              "offset": 0,
              "slot": "6",
              "type": "t_mapping(t_uint256,t_string_storage)",
              "contract": "ERC721URIStorage",
              "src": "@openzeppelin\\contracts\\token\\ERC721\\extensions\\ERC721URIStorage.sol:15"
            },
            {
              "label": "collectionName",
              "offset": 0,
              "slot": "7",
              "type": "t_string_storage",
              "contract": "HouseBusiness",
              "src": "contracts\\HouseBusiness.sol:14"
            },
            {
              "label": "collectionNameSymbol",
              "offset": 0,
              "slot": "8",
              "type": "t_string_storage",
              "contract": "HouseBusiness",
              "src": "contracts\\HouseBusiness.sol:16"
            },
            {
              "label": "houseCounter",
              "offset": 0,
              "slot": "9",
              "type": "t_uint256",
              "contract": "HouseBusiness",
              "src": "contracts\\HouseBusiness.sol:18"
            },
            {
              "label": "soldedCounter",
              "offset": 0,
              "slot": "10",
              "type": "t_uint256",
              "contract": "HouseBusiness",
              "src": "contracts\\HouseBusiness.sol:21"
            },
            {
              "label": "hTypeCounter",
              "offset": 0,
              "slot": "11",
              "type": "t_uint256",
              "contract": "HouseBusiness",
              "src": "contracts\\HouseBusiness.sol:23"
            },
            {
              "label": "_token",
              "offset": 0,
              "slot": "12",
              "type": "t_contract(IERC20)77",
              "contract": "HouseBusiness",
              "src": "contracts\\HouseBusiness.sol:25"
            },
            {
              "label": "minPrice",
              "offset": 0,
              "slot": "13",
              "type": "t_uint256",
              "contract": "HouseBusiness",
              "src": "contracts\\HouseBusiness.sol:27"
            },
            {
              "label": "maxPrice",
              "offset": 0,
              "slot": "14",
              "type": "t_uint256",
              "contract": "HouseBusiness",
              "src": "contracts\\HouseBusiness.sol:29"
            },
            {
              "label": "royalty",
              "offset": 0,
              "slot": "15",
              "type": "t_uint256",
              "contract": "HouseBusiness",
              "src": "contracts\\HouseBusiness.sol:31"
            },
            {
              "label": "cContract",
              "offset": 0,
              "slot": "16",
              "type": "t_contract(IMainCleanContract)5506",
              "contract": "HouseBusiness",
              "src": "contracts\\HouseBusiness.sol:33"
            },
            {
              "label": "historyTypes",
              "offset": 0,
              "slot": "17",
              "type": "t_array(t_struct(HistoryType)2831_storage)dyn_storage",
              "contract": "HouseBusiness",
              "src": "contracts\\HouseBusiness.sol:73"
            },
            {
              "label": "houseHistories",
              "offset": 0,
              "slot": "18",
              "type": "t_mapping(t_uint256,t_array(t_struct(History)2812_storage)dyn_storage)",
              "contract": "HouseBusiness",
              "src": "contracts\\HouseBusiness.sol:75"
            },
            {
              "label": "allMembers",
              "offset": 0,
              "slot": "19",
              "type": "t_mapping(t_address,t_bool)",
              "contract": "HouseBusiness",
              "src": "contracts\\HouseBusiness.sol:77"
            },
            {
              "label": "allHouses",
              "offset": 0,
              "slot": "20",
              "type": "t_mapping(t_uint256,t_struct(House)2795_storage)",
              "contract": "HouseBusiness",
              "src": "contracts\\HouseBusiness.sol:79"
            },
            {
              "label": "allowedList",
              "offset": 0,
              "slot": "21",
              "type": "t_mapping(t_uint256,t_mapping(t_address,t_bool))",
              "contract": "HouseBusiness",
              "src": "contracts\\HouseBusiness.sol:81"
            },
            {
              "label": "stakingContractAddress",
              "offset": 0,
              "slot": "22",
              "type": "t_address",
              "contract": "HouseBusiness",
              "src": "contracts\\HouseBusiness.sol:84"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            },
            "t_array(t_struct(History)2812_storage)dyn_storage": {
              "label": "struct HouseBusiness.History[]",
              "numberOfBytes": "32"
            },
            "t_array(t_struct(HistoryType)2831_storage)dyn_storage": {
              "label": "struct HouseBusiness.HistoryType[]",
              "numberOfBytes": "32"
            },
            "t_bool": {
              "label": "bool",
              "numberOfBytes": "1"
            },
            "t_contract(IERC20)77": {
              "label": "contract IERC20",
              "numberOfBytes": "20"
            },
            "t_contract(IMainCleanContract)5506": {
              "label": "contract IMainCleanContract",
              "numberOfBytes": "20"
            },
            "t_mapping(t_address,t_bool)": {
              "label": "mapping(address => bool)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_mapping(t_address,t_bool))": {
              "label": "mapping(address => mapping(address => bool))",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_uint256)": {
              "label": "mapping(address => uint256)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_uint256,t_address)": {
              "label": "mapping(uint256 => address)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_uint256,t_array(t_struct(History)2812_storage)dyn_storage)": {
              "label": "mapping(uint256 => struct HouseBusiness.History[])",
              "numberOfBytes": "32"
            },
            "t_mapping(t_uint256,t_mapping(t_address,t_bool))": {
              "label": "mapping(uint256 => mapping(address => bool))",
              "numberOfBytes": "32"
            },
            "t_mapping(t_uint256,t_string_storage)": {
              "label": "mapping(uint256 => string)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_uint256,t_struct(House)2795_storage)": {
              "label": "mapping(uint256 => struct HouseBusiness.House)",
              "numberOfBytes": "32"
            },
            "t_string_storage": {
              "label": "string",
              "numberOfBytes": "32"
            },
            "t_struct(History)2812_storage": {
              "label": "struct HouseBusiness.History",
              "members": [
                {
                  "label": "hID",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "0"
                },
                {
                  "label": "contractId",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "1"
                },
                {
                  "label": "houseImg",
                  "type": "t_string_storage",
                  "offset": 0,
                  "slot": "2"
                },
                {
                  "label": "houseBrand",
                  "type": "t_string_storage",
                  "offset": 0,
                  "slot": "3"
                },
                {
                  "label": "desc",
                  "type": "t_string_storage",
                  "offset": 0,
                  "slot": "4"
                },
                {
                  "label": "history",
                  "type": "t_string_storage",
                  "offset": 0,
                  "slot": "5"
                },
                {
                  "label": "brandType",
                  "type": "t_string_storage",
                  "offset": 0,
                  "slot": "6"
                },
                {
                  "label": "yearField",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "7"
                }
              ],
              "numberOfBytes": "256"
            },
            "t_struct(HistoryType)2831_storage": {
              "label": "struct HouseBusiness.HistoryType",
              "members": [
                {
                  "label": "hID",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "0"
                },
                {
                  "label": "hLabel",
                  "type": "t_string_storage",
                  "offset": 0,
                  "slot": "1"
                },
                {
                  "label": "connectContract",
                  "type": "t_bool",
                  "offset": 0,
                  "slot": "2"
                },
                {
                  "label": "imgNeed",
                  "type": "t_bool",
                  "offset": 1,
                  "slot": "2"
                },
                {
                  "label": "brandNeed",
                  "type": "t_bool",
                  "offset": 2,
                  "slot": "2"
                },
                {
                  "label": "descNeed",
                  "type": "t_bool",
                  "offset": 3,
                  "slot": "2"
                },
                {
                  "label": "brandTypeNeed",
                  "type": "t_bool",
                  "offset": 4,
                  "slot": "2"
                },
                {
                  "label": "yearNeed",
                  "type": "t_bool",
                  "offset": 5,
                  "slot": "2"
                },
                {
                  "label": "checkMark",
                  "type": "t_bool",
                  "offset": 6,
                  "slot": "2"
                }
              ],
              "numberOfBytes": "96"
            },
            "t_struct(House)2795_storage": {
              "label": "struct HouseBusiness.House",
              "members": [
                {
                  "label": "tokenId",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "0"
                },
                {
                  "label": "tokenName",
                  "type": "t_string_storage",
                  "offset": 0,
                  "slot": "1"
                },
                {
                  "label": "tokenURI",
                  "type": "t_string_storage",
                  "offset": 0,
                  "slot": "2"
                },
                {
                  "label": "tokenType",
                  "type": "t_string_storage",
                  "offset": 0,
                  "slot": "3"
                },
                {
                  "label": "currentOwner",
                  "type": "t_address",
                  "offset": 0,
                  "slot": "4"
                },
                {
                  "label": "previousOwner",
                  "type": "t_address",
                  "offset": 0,
                  "slot": "5"
                },
                {
                  "label": "buyer",
                  "type": "t_address",
                  "offset": 0,
                  "slot": "6"
                },
                {
                  "label": "price",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "7"
                },
                {
                  "label": "numberOfTransfers",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "8"
                },
                {
                  "label": "nftPayable",
                  "type": "t_bool",
                  "offset": 0,
                  "slot": "9"
                },
                {
                  "label": "staked",
                  "type": "t_bool",
                  "offset": 1,
                  "slot": "9"
                },
                {
                  "label": "soldstatus",
                  "type": "t_bool",
                  "offset": 2,
                  "slot": "9"
                }
              ],
              "numberOfBytes": "320"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            }
          },
          "layoutVersion": "1.1",
          "flat": true
        }
      },
      "HouseStaking": {
        "src": "contracts\\Staking.sol:6",
        "version": {
          "withMetadata": "b434e0d9fc6e61f20a7ae59c658eae1046efdaddcb12502607dc9c2ba1b48d96",
          "withoutMetadata": "55dd03d5604f70c2abf52ecb260f160dc660988f7e28526fbed5969d1a598935",
          "linkedWithoutMetadata": "55dd03d5604f70c2abf52ecb260f160dc660988f7e28526fbed5969d1a598935"
        },
        "inherit": [],
        "libraries": [],
        "methods": [
          "(address,address)",
          "calcDiv(uint256,uint256)",
          "setAPYConfig(uint256,uint256)",
          "getAllAPYTypes()",
          "stake(uint256,uint256)",
          "unstake(uint256)",
          "stakingFinished(uint256)",
          "totalRewards(address)",
          "claimRewards(address)",
          "getAllMyStakedNFTs()",
          "getAllAPYs()",
          "getPenalty()",
          "setPenalty(uint256)"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "HouseStaking",
            "src": "contracts\\Staking.sol:33"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "stakedCounter",
              "offset": 0,
              "slot": "0",
              "type": "t_uint256",
              "contract": "HouseStaking",
              "src": "contracts\\Staking.sol:8"
            },
            {
              "label": "penalty",
              "offset": 0,
              "slot": "1",
              "type": "t_uint256",
              "contract": "HouseStaking",
              "src": "contracts\\Staking.sol:10"
            },
            {
              "label": "APYtypes",
              "offset": 0,
              "slot": "2",
              "type": "t_array(t_uint256)dyn_storage",
              "contract": "HouseStaking",
              "src": "contracts\\Staking.sol:12"
            },
            {
              "label": "APYConfig",
              "offset": 0,
              "slot": "3",
              "type": "t_mapping(t_uint256,t_uint256)",
              "contract": "HouseStaking",
              "src": "contracts\\Staking.sol:15"
            },
            {
              "label": "stakedNfts",
              "offset": 0,
              "slot": "4",
              "type": "t_mapping(t_address,t_array(t_struct(StakedNft)4564_storage)dyn_storage)",
              "contract": "HouseStaking",
              "src": "contracts\\Staking.sol:16"
            },
            {
              "label": "tokenAddress",
              "offset": 0,
              "slot": "5",
              "type": "t_address",
              "contract": "HouseStaking",
              "src": "contracts\\Staking.sol:18"
            },
            {
              "label": "houseNFTAddress",
              "offset": 0,
              "slot": "6",
              "type": "t_address",
              "contract": "HouseStaking",
              "src": "contracts\\Staking.sol:19"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            },
            "t_array(t_struct(StakedNft)4564_storage)dyn_storage": {
              "label": "struct HouseStaking.StakedNft[]",
              "numberOfBytes": "32"
            },
            "t_array(t_uint256)dyn_storage": {
              "label": "uint256[]",
              "numberOfBytes": "32"
            },
            "t_bool": {
              "label": "bool",
              "numberOfBytes": "1"
            },
            "t_mapping(t_address,t_array(t_struct(StakedNft)4564_storage)dyn_storage)": {
              "label": "mapping(address => struct HouseStaking.StakedNft[])",
              "numberOfBytes": "32"
            },
            "t_mapping(t_uint256,t_uint256)": {
              "label": "mapping(uint256 => uint256)",
              "numberOfBytes": "32"
            },
            "t_struct(StakedNft)4564_storage": {
              "label": "struct HouseStaking.StakedNft",
              "members": [
                {
                  "label": "owner",
                  "type": "t_address",
                  "offset": 0,
                  "slot": "0"
                },
                {
                  "label": "tokenId",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "1"
                },
                {
                  "label": "startedDate",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "2"
                },
                {
                  "label": "endDate",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "3"
                },
                {
                  "label": "claimDate",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "4"
                },
                {
                  "label": "stakingType",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "5"
                },
                {
                  "label": "perSecRewards",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "6"
                },
                {
                  "label": "stakingStatus",
                  "type": "t_bool",
                  "offset": 0,
                  "slot": "7"
                }
              ],
              "numberOfBytes": "256"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            }
          },
          "layoutVersion": "1.1",
          "flat": true
        }
      },
      "IMainCleanContract": {
        "src": "contracts\\interfaces\\IContract.sol:6",
        "inherit": [],
        "libraries": [],
        "methods": [
          "getContractById(uint256)",
          "transferContractOwnership(uint256,address,address)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "IHouseBusiness": {
        "src": "contracts\\interfaces\\IHouseBusiness.sol:5",
        "inherit": [],
        "libraries": [],
        "methods": [
          "collectionName()",
          "collectionNameSymbol()",
          "houseCounter()",
          "stakedCounter()",
          "soldedCounter()",
          "hTypeCounter()",
          "minPrice()",
          "maxPrice()",
          "penalty()",
          "royalty()",
          "historyTypes(uint256)",
          "houseHistories(uint256)",
          "allMembers(address)",
          "allHouses(uint256)",
          "stakedNfts(address)",
          "setMinMaxHousePrice(uint256,uint256)",
          "setConfigToken(address)",
          "isMember()",
          "addMember(address)",
          "removeMember(address)",
          "tokenURI(uint256)",
          "setPayable(uint256,address,bool)",
          "mintHouse(string,string,string,string,uint256)",
          "addAllowList(uint256,address)",
          "removeAllowList(uint256,address)",
          "checkAllowedList(uint256,address)",
          "addHistory(uint256,uint256,string,string,string,string,string,uint256)",
          "getHistory(uint256)",
          "editHistory(uint256,uint256,string,string,string,string,string,uint256)",
          "getHistoryType()",
          "addOrEditHType(uint256,string,bool,bool,bool,bool,bool,bool,bool)",
          "removeHistoryType(uint256)",
          "getMinMaxNFT()",
          "getTokenOwner(uint256)",
          "buyHouseNft(uint256)",
          "sendToken(address,uint256)",
          "changeTokenPrice(uint256,uint256)",
          "getAllHouses()",
          "getAllPayableHouses()",
          "getAllMyHouses()",
          "withdrawToken(uint256)",
          "withdrawETH(uint256)",
          "setAPYConfig(uint256,uint256)",
          "getAllAPYTypes()",
          "stake(uint256,uint256)",
          "unstake(uint256)",
          "stakingFinished(uint256)",
          "totalRewards(address)",
          "claimRewards(address)",
          "getAllMyStakedNFTs()",
          "getTotalInfo()",
          "getAllAPYs()",
          "getPenalty()",
          "setPenalty(uint256)",
          "getRoyalty()",
          "setRoyalty(uint256)",
          "ownerOf(uint256)",
          "getTokenPrice(uint256)",
          "setHouseStakedStatus(uint256,bool)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "IStaking": {
        "src": "contracts\\interfaces\\IStaking.sol:5",
        "inherit": [],
        "libraries": [],
        "methods": [
          "stakeCounter()"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      }
    },
    {
      "MainCleanContract": {
        "src": "contracts\\Contract.sol:6",
        "version": {
          "withMetadata": "6421e940ca2c08cec604e64c4e3802894c030e3491305b8df865d9e1c9e89aac",
          "withoutMetadata": "4b8cbb4879901533fe49280ca430f3230d2cf4cb717e76bb4a9404845cd178f8",
          "linkedWithoutMetadata": "4b8cbb4879901533fe49280ca430f3230d2cf4cb717e76bb4a9404845cd178f8"
        },
        "inherit": [],
        "libraries": [],
        "methods": [
          "(address)",
          "ccCreation(string,string,address,string,uint256,uint256,uint256,string)",
          "getAllContractsByOwner()",
          "getAllContractsBySigner()",
          "getContractById(uint256)",
          "addContractSigner(uint256,address)",
          "signContract(uint256)",
          "sendNotify(address,string,uint256)",
          "getUploadedCounter()",
          "getAllNotifies()",
          "calcDiv(uint256,uint256)",
          "toString(bytes)",
          "addressToString(address)",
          "uintToString(uint256)",
          "bytesToString(bytes32)",
          "transferContractOwnership(uint256,address,address)"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "MainCleanContract",
            "src": "contracts\\Contract.sol:52"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "ccCounter",
              "offset": 0,
              "slot": "0",
              "type": "t_uint256",
              "contract": "MainCleanContract",
              "src": "contracts\\Contract.sol:8"
            },
            {
              "label": "houseNFTAddress",
              "offset": 0,
              "slot": "1",
              "type": "t_address",
              "contract": "MainCleanContract",
              "src": "contracts\\Contract.sol:11"
            },
            {
              "label": "allCleanContracts",
              "offset": 0,
              "slot": "2",
              "type": "t_mapping(t_uint256,t_struct(CleanContract)39_storage)",
              "contract": "MainCleanContract",
              "src": "contracts\\Contract.sol:44"
            },
            {
              "label": "allContractsByOwner",
              "offset": 0,
              "slot": "3",
              "type": "t_mapping(t_address,t_array(t_uint256)dyn_storage)",
              "contract": "MainCleanContract",
              "src": "contracts\\Contract.sol:46"
            },
            {
              "label": "allContractsBySigner",
              "offset": 0,
              "slot": "4",
              "type": "t_mapping(t_address,t_array(t_uint256)dyn_storage)",
              "contract": "MainCleanContract",
              "src": "contracts\\Contract.sol:48"
            },
            {
              "label": "allNotifies",
              "offset": 0,
              "slot": "5",
              "type": "t_mapping(t_address,t_array(t_struct(Notify)52_storage)dyn_storage)",
              "contract": "MainCleanContract",
              "src": "contracts\\Contract.sol:50"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            },
            "t_array(t_struct(Notify)52_storage)dyn_storage": {
              "label": "struct MainCleanContract.Notify[]",
              "numberOfBytes": "32"
            },
            "t_array(t_uint256)dyn_storage": {
              "label": "uint256[]",
              "numberOfBytes": "32"
            },
            "t_bool": {
              "label": "bool",
              "numberOfBytes": "1"
            },
            "t_mapping(t_address,t_array(t_struct(Notify)52_storage)dyn_storage)": {
              "label": "mapping(address => struct MainCleanContract.Notify[])",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_array(t_uint256)dyn_storage)": {
              "label": "mapping(address => uint256[])",
              "numberOfBytes": "32"
            },
            "t_mapping(t_uint256,t_struct(CleanContract)39_storage)": {
              "label": "mapping(uint256 => struct MainCleanContract.CleanContract)",
              "numberOfBytes": "32"
            },
            "t_string_storage": {
              "label": "string",
              "numberOfBytes": "32"
            },
            "t_struct(CleanContract)39_storage": {
              "label": "struct MainCleanContract.CleanContract",
              "members": [
                {
                  "label": "contractId",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "0"
                },
                {
                  "label": "companyName",
                  "type": "t_string_storage",
                  "offset": 0,
                  "slot": "1"
                },
                {
                  "label": "contractType",
                  "type": "t_string_storage",
                  "offset": 0,
                  "slot": "2"
                },
                {
                  "label": "contractURI",
                  "type": "t_string_storage",
                  "offset": 0,
                  "slot": "3"
                },
                {
                  "label": "dateFrom",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "4"
                },
                {
                  "label": "dateTo",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "5"
                },
                {
                  "label": "agreedPrice",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "6"
                },
                {
                  "label": "currency",
                  "type": "t_string_storage",
                  "offset": 0,
                  "slot": "7"
                },
                {
                  "label": "creator",
                  "type": "t_address",
                  "offset": 0,
                  "slot": "8"
                },
                {
                  "label": "owner",
                  "type": "t_address",
                  "offset": 0,
                  "slot": "9"
                },
                {
                  "label": "creatorApproval",
                  "type": "t_bool",
                  "offset": 20,
                  "slot": "9"
                },
                {
                  "label": "creatorSignDate",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "10"
                },
                {
                  "label": "contractSigner",
                  "type": "t_address",
                  "offset": 0,
                  "slot": "11"
                },
                {
                  "label": "signerApproval",
                  "type": "t_bool",
                  "offset": 20,
                  "slot": "11"
                },
                {
                  "label": "signerSignDate",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "12"
                },
                {
                  "label": "status",
                  "type": "t_string_storage",
                  "offset": 0,
                  "slot": "13"
                }
              ],
              "numberOfBytes": "448"
            },
            "t_struct(Notify)52_storage": {
              "label": "struct MainCleanContract.Notify",
              "members": [
                {
                  "label": "nSender",
                  "type": "t_address",
                  "offset": 0,
                  "slot": "0"
                },
                {
                  "label": "nReceiver",
                  "type": "t_address",
                  "offset": 0,
                  "slot": "1"
                },
                {
                  "label": "ccID",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "2"
                },
                {
                  "label": "notifySentTime",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "3"
                },
                {
                  "label": "notifyContent",
                  "type": "t_string_storage",
                  "offset": 0,
                  "slot": "4"
                },
                {
                  "label": "status",
                  "type": "t_bool",
                  "offset": 0,
                  "slot": "5"
                }
              ],
              "numberOfBytes": "192"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            }
          },
          "layoutVersion": "1.1",
          "flat": true
        }
      }
    },
    {
      "ThirdParty": {
        "src": "contracts\\ThirdParty.sol:5",
        "version": {
          "withMetadata": "cbf5b2fae6668ee45b86827e485cbed39526db15e39a77a193d607720ff0015c",
          "withoutMetadata": "c7f6b899dcbca6a360ab204550ba9b4fec9f4cae1bcd2f5879cfa3965e9d550f",
          "linkedWithoutMetadata": "c7f6b899dcbca6a360ab204550ba9b4fec9f4cae1bcd2f5879cfa3965e9d550f"
        },
        "inherit": [],
        "libraries": [],
        "methods": [
          "getAllCategories()",
          "addCategory(string,uint256[])",
          "editCategory(uint256,string,uint256[])",
          "deleteCategory(uint256)",
          "getAllProperties()",
          "addProperty(string)",
          "editProperty(uint256,string)",
          "deleteProperty(uint256)",
          "getPackagesByCategory(uint256)",
          "addPackage(uint256,string,uint256,uint256,uint256,bool[])",
          "editPackage(uint256,uint256,string,uint256,uint256,uint256,bool[])",
          "deletePackage(uint256,uint256)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [
            {
              "label": "categoryCounter",
              "offset": 0,
              "slot": "0",
              "type": "t_uint256",
              "contract": "ThirdParty",
              "src": "contracts\\ThirdParty.sol:12"
            },
            {
              "label": "packageCounter",
              "offset": 0,
              "slot": "1",
              "type": "t_uint256",
              "contract": "ThirdParty",
              "src": "contracts\\ThirdParty.sol:23"
            },
            {
              "label": "propertyCounter",
              "offset": 0,
              "slot": "2",
              "type": "t_uint256",
              "contract": "ThirdParty",
              "src": "contracts\\ThirdParty.sol:29"
            },
            {
              "label": "allCategories",
              "offset": 0,
              "slot": "3",
              "type": "t_array(t_struct(Category)11_storage)dyn_storage",
              "contract": "ThirdParty",
              "src": "contracts\\ThirdParty.sol:31"
            },
            {
              "label": "allPackages",
              "offset": 0,
              "slot": "4",
              "type": "t_mapping(t_uint256,t_array(t_struct(Package)29_storage)dyn_storage)",
              "contract": "ThirdParty",
              "src": "contracts\\ThirdParty.sol:34"
            },
            {
              "label": "allProperties",
              "offset": 0,
              "slot": "5",
              "type": "t_array(t_struct(Property)36_storage)dyn_storage",
              "contract": "ThirdParty",
              "src": "contracts\\ThirdParty.sol:37"
            }
          ],
          "types": {
            "t_array(t_bool)dyn_storage": {
              "label": "bool[]",
              "numberOfBytes": "32"
            },
            "t_array(t_struct(Category)11_storage)dyn_storage": {
              "label": "struct ThirdParty.Category[]",
              "numberOfBytes": "32"
            },
            "t_array(t_struct(Package)29_storage)dyn_storage": {
              "label": "struct ThirdParty.Package[]",
              "numberOfBytes": "32"
            },
            "t_array(t_struct(Property)36_storage)dyn_storage": {
              "label": "struct ThirdParty.Property[]",
              "numberOfBytes": "32"
            },
            "t_array(t_uint256)dyn_storage": {
              "label": "uint256[]",
              "numberOfBytes": "32"
            },
            "t_bool": {
              "label": "bool",
              "numberOfBytes": "1"
            },
            "t_mapping(t_uint256,t_array(t_struct(Package)29_storage)dyn_storage)": {
              "label": "mapping(uint256 => struct ThirdParty.Package[])",
              "numberOfBytes": "32"
            },
            "t_string_storage": {
              "label": "string",
              "numberOfBytes": "32"
            },
            "t_struct(Category)11_storage": {
              "label": "struct ThirdParty.Category",
              "members": [
                {
                  "label": "categoryID",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "0"
                },
                {
                  "label": "cartegoryName",
                  "type": "t_string_storage",
                  "offset": 0,
                  "slot": "1"
                },
                {
                  "label": "properties",
                  "type": "t_array(t_uint256)dyn_storage",
                  "offset": 0,
                  "slot": "2"
                },
                {
                  "label": "visible",
                  "type": "t_bool",
                  "offset": 0,
                  "slot": "3"
                }
              ],
              "numberOfBytes": "128"
            },
            "t_struct(Package)29_storage": {
              "label": "struct ThirdParty.Package",
              "members": [
                {
                  "label": "categoryID",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "0"
                },
                {
                  "label": "packageID",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "1"
                },
                {
                  "label": "packageName",
                  "type": "t_string_storage",
                  "offset": 0,
                  "slot": "2"
                },
                {
                  "label": "price",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "3"
                },
                {
                  "label": "period",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "4"
                },
                {
                  "label": "dataLimit",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "5"
                },
                {
                  "label": "propertyVisible",
                  "type": "t_array(t_bool)dyn_storage",
                  "offset": 0,
                  "slot": "6"
                }
              ],
              "numberOfBytes": "224"
            },
            "t_struct(Property)36_storage": {
              "label": "struct ThirdParty.Property",
              "members": [
                {
                  "label": "propertyID",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "0"
                },
                {
                  "label": "propertyName",
                  "type": "t_string_storage",
                  "offset": 0,
                  "slot": "1"
                }
              ],
              "numberOfBytes": "64"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            }
          },
          "layoutVersion": "1.1",
          "flat": true
        }
      }
    },
    {
      "Context": {
        "src": "contracts\\TokenContract.sol:22",
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "HouseBusinessToken": {
        "src": "contracts\\TokenContract.sol:33",
        "version": {
          "withMetadata": "e53f4b9234e67266e4442dec09d084a17cbe6b1b4fb90d62776f0d6f370f0570",
          "withoutMetadata": "f5d2b294cac19c78c593798b4a1bae04c45c82839cbcffe3cc910bb441f21259",
          "linkedWithoutMetadata": "f5d2b294cac19c78c593798b4a1bae04c45c82839cbcffe3cc910bb441f21259"
        },
        "inherit": [
          "IERC20Metadata",
          "IERC20",
          "Context"
        ],
        "libraries": [],
        "methods": [
          "()",
          "name()",
          "symbol()",
          "decimals()",
          "totalSupply()",
          "balanceOf(address)",
          "transfer(address,uint256)",
          "allowance(address,address)",
          "approve(address,uint256)",
          "transferFrom(address,address,uint256)",
          "increaseAllowance(address,uint256)",
          "decreaseAllowance(address,uint256)",
          "_mint(address,uint256)"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "HouseBusinessToken",
            "src": "contracts\\TokenContract.sol:42"
          },
          {
            "kind": "state-variable-assignment",
            "name": "_name",
            "src": "contracts\\TokenContract.sol:37"
          },
          {
            "kind": "state-variable-assignment",
            "name": "_symbol",
            "src": "contracts\\TokenContract.sol:38"
          },
          {
            "kind": "state-variable-assignment",
            "name": "_decimals",
            "src": "contracts\\TokenContract.sol:39"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "_balances",
              "offset": 0,
              "slot": "0",
              "type": "t_mapping(t_address,t_uint256)",
              "contract": "HouseBusinessToken",
              "src": "contracts\\TokenContract.sol:34"
            },
            {
              "label": "_allowances",
              "offset": 0,
              "slot": "1",
              "type": "t_mapping(t_address,t_mapping(t_address,t_uint256))",
              "contract": "HouseBusinessToken",
              "src": "contracts\\TokenContract.sol:35"
            },
            {
              "label": "_totalSupply",
              "offset": 0,
              "slot": "2",
              "type": "t_uint256",
              "contract": "HouseBusinessToken",
              "src": "contracts\\TokenContract.sol:36"
            },
            {
              "label": "_name",
              "offset": 0,
              "slot": "3",
              "type": "t_string_storage",
              "contract": "HouseBusinessToken",
              "src": "contracts\\TokenContract.sol:37"
            },
            {
              "label": "_symbol",
              "offset": 0,
              "slot": "4",
              "type": "t_string_storage",
              "contract": "HouseBusinessToken",
              "src": "contracts\\TokenContract.sol:38"
            },
            {
              "label": "_decimals",
              "offset": 0,
              "slot": "5",
              "type": "t_uint8",
              "contract": "HouseBusinessToken",
              "src": "contracts\\TokenContract.sol:39"
            },
            {
              "label": "_owner",
              "offset": 1,
              "slot": "5",
              "type": "t_address",
              "contract": "HouseBusinessToken",
              "src": "contracts\\TokenContract.sol:40"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            },
            "t_mapping(t_address,t_mapping(t_address,t_uint256))": {
              "label": "mapping(address => mapping(address => uint256))",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_uint256)": {
              "label": "mapping(address => uint256)",
              "numberOfBytes": "32"
            },
            "t_string_storage": {
              "label": "string",
              "numberOfBytes": "32"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            },
            "t_uint8": {
              "label": "uint8",
              "numberOfBytes": "1"
            }
          },
          "layoutVersion": "1.1",
          "flat": true
        }
      },
      "IERC20": {
        "src": "contracts\\TokenContract.sol:5",
        "inherit": [],
        "libraries": [],
        "methods": [
          "totalSupply()",
          "balanceOf(address)",
          "transfer(address,uint256)",
          "allowance(address,address)",
          "approve(address,uint256)",
          "transferFrom(address,address,uint256)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "IERC20Metadata": {
        "src": "contracts\\TokenContract.sol:16",
        "inherit": [
          "IERC20"
        ],
        "libraries": [],
        "methods": [
          "name()",
          "symbol()",
          "decimals()"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      }
    },
    {
      "IPRC20": {
        "src": "contracts\\interfaces\\IPRC20.sol:4",
        "inherit": [],
        "libraries": [],
        "methods": [
          "totalSupply()",
          "balanceOf(address)",
          "transfer(address,uint256)",
          "allowance(address,address)",
          "approve(address,uint256)",
          "transferFrom(address,address,uint256)",
          "decimals()"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      }
    },
    {
      "IERC20": {
        "src": "@openzeppelin\\contracts\\token\\ERC20\\IERC20.sol:9",
        "inherit": [],
        "libraries": [],
        "methods": [
          "totalSupply()",
          "balanceOf(address)",
          "transfer(address,uint256)",
          "allowance(address,address)",
          "approve(address,uint256)",
          "transferFrom(address,address,uint256)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "ERC721": {
        "src": "@openzeppelin\\contracts\\token\\ERC721\\ERC721.sol:19",
        "version": {
          "withMetadata": "311027b738fb50ea92c84baf68eacb931adf05de03da13635a661dc9c5b03f73",
          "withoutMetadata": "9ec7f439077c3b762bc3aa6a17c55aba7a78d240190c9c7814df896455a0f780",
          "linkedWithoutMetadata": "9ec7f439077c3b762bc3aa6a17c55aba7a78d240190c9c7814df896455a0f780"
        },
        "inherit": [
          "IERC721Metadata",
          "IERC721",
          "ERC165",
          "IERC165",
          "Context"
        ],
        "libraries": [
          "Address",
          "Strings"
        ],
        "methods": [
          "(string,string)",
          "supportsInterface(bytes4)",
          "balanceOf(address)",
          "ownerOf(uint256)",
          "name()",
          "symbol()",
          "tokenURI(uint256)",
          "approve(address,uint256)",
          "getApproved(uint256)",
          "setApprovalForAll(address,bool)",
          "isApprovedForAll(address,address)",
          "transferFrom(address,address,uint256)",
          "safeTransferFrom(address,address,uint256)",
          "safeTransferFrom(address,address,uint256,bytes)"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "ERC721",
            "src": "@openzeppelin\\contracts\\token\\ERC721\\ERC721.sol:44"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "_name",
              "offset": 0,
              "slot": "0",
              "type": "t_string_storage",
              "contract": "ERC721",
              "src": "@openzeppelin\\contracts\\token\\ERC721\\ERC721.sol:24"
            },
            {
              "label": "_symbol",
              "offset": 0,
              "slot": "1",
              "type": "t_string_storage",
              "contract": "ERC721",
              "src": "@openzeppelin\\contracts\\token\\ERC721\\ERC721.sol:27"
            },
            {
              "label": "_owners",
              "offset": 0,
              "slot": "2",
              "type": "t_mapping(t_uint256,t_address)",
              "contract": "ERC721",
              "src": "@openzeppelin\\contracts\\token\\ERC721\\ERC721.sol:30"
            },
            {
              "label": "_balances",
              "offset": 0,
              "slot": "3",
              "type": "t_mapping(t_address,t_uint256)",
              "contract": "ERC721",
              "src": "@openzeppelin\\contracts\\token\\ERC721\\ERC721.sol:33"
            },
            {
              "label": "_tokenApprovals",
              "offset": 0,
              "slot": "4",
              "type": "t_mapping(t_uint256,t_address)",
              "contract": "ERC721",
              "src": "@openzeppelin\\contracts\\token\\ERC721\\ERC721.sol:36"
            },
            {
              "label": "_operatorApprovals",
              "offset": 0,
              "slot": "5",
              "type": "t_mapping(t_address,t_mapping(t_address,t_bool))",
              "contract": "ERC721",
              "src": "@openzeppelin\\contracts\\token\\ERC721\\ERC721.sol:39"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            },
            "t_bool": {
              "label": "bool",
              "numberOfBytes": "1"
            },
            "t_mapping(t_address,t_bool)": {
              "label": "mapping(address => bool)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_mapping(t_address,t_bool))": {
              "label": "mapping(address => mapping(address => bool))",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_uint256)": {
              "label": "mapping(address => uint256)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_uint256,t_address)": {
              "label": "mapping(uint256 => address)",
              "numberOfBytes": "32"
            },
            "t_string_storage": {
              "label": "string",
              "numberOfBytes": "32"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            }
          },
          "layoutVersion": "1.1",
          "flat": true
        }
      },
      "IERC721": {
        "src": "@openzeppelin\\contracts\\token\\ERC721\\IERC721.sol:11",
        "inherit": [
          "IERC165"
        ],
        "libraries": [],
        "methods": [
          "balanceOf(address)",
          "ownerOf(uint256)",
          "safeTransferFrom(address,address,uint256,bytes)",
          "safeTransferFrom(address,address,uint256)",
          "transferFrom(address,address,uint256)",
          "approve(address,uint256)",
          "setApprovalForAll(address,bool)",
          "getApproved(uint256)",
          "isApprovedForAll(address,address)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "IERC721Receiver": {
        "src": "@openzeppelin\\contracts\\token\\ERC721\\IERC721Receiver.sol:11",
        "inherit": [],
        "libraries": [],
        "methods": [
          "onERC721Received(address,address,uint256,bytes)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "ERC721URIStorage": {
        "src": "@openzeppelin\\contracts\\token\\ERC721\\extensions\\ERC721URIStorage.sol:11",
        "inherit": [
          "ERC721",
          "IERC721Metadata",
          "IERC721",
          "ERC165",
          "IERC165",
          "Context"
        ],
        "libraries": [
          "Strings"
        ],
        "methods": [
          "tokenURI(uint256)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [
            {
              "label": "_name",
              "offset": 0,
              "slot": "0",
              "type": "t_string_storage",
              "contract": "ERC721",
              "src": "@openzeppelin\\contracts\\token\\ERC721\\ERC721.sol:24"
            },
            {
              "label": "_symbol",
              "offset": 0,
              "slot": "1",
              "type": "t_string_storage",
              "contract": "ERC721",
              "src": "@openzeppelin\\contracts\\token\\ERC721\\ERC721.sol:27"
            },
            {
              "label": "_owners",
              "offset": 0,
              "slot": "2",
              "type": "t_mapping(t_uint256,t_address)",
              "contract": "ERC721",
              "src": "@openzeppelin\\contracts\\token\\ERC721\\ERC721.sol:30"
            },
            {
              "label": "_balances",
              "offset": 0,
              "slot": "3",
              "type": "t_mapping(t_address,t_uint256)",
              "contract": "ERC721",
              "src": "@openzeppelin\\contracts\\token\\ERC721\\ERC721.sol:33"
            },
            {
              "label": "_tokenApprovals",
              "offset": 0,
              "slot": "4",
              "type": "t_mapping(t_uint256,t_address)",
              "contract": "ERC721",
              "src": "@openzeppelin\\contracts\\token\\ERC721\\ERC721.sol:36"
            },
            {
              "label": "_operatorApprovals",
              "offset": 0,
              "slot": "5",
              "type": "t_mapping(t_address,t_mapping(t_address,t_bool))",
              "contract": "ERC721",
              "src": "@openzeppelin\\contracts\\token\\ERC721\\ERC721.sol:39"
            },
            {
              "label": "_tokenURIs",
              "offset": 0,
              "slot": "6",
              "type": "t_mapping(t_uint256,t_string_storage)",
              "contract": "ERC721URIStorage",
              "src": "@openzeppelin\\contracts\\token\\ERC721\\extensions\\ERC721URIStorage.sol:15"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            },
            "t_bool": {
              "label": "bool",
              "numberOfBytes": "1"
            },
            "t_mapping(t_address,t_bool)": {
              "label": "mapping(address => bool)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_mapping(t_address,t_bool))": {
              "label": "mapping(address => mapping(address => bool))",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_uint256)": {
              "label": "mapping(address => uint256)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_uint256,t_address)": {
              "label": "mapping(uint256 => address)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_uint256,t_string_storage)": {
              "label": "mapping(uint256 => string)",
              "numberOfBytes": "32"
            },
            "t_string_storage": {
              "label": "string",
              "numberOfBytes": "32"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            }
          },
          "layoutVersion": "1.1",
          "flat": true
        }
      },
      "IERC721Metadata": {
        "src": "@openzeppelin\\contracts\\token\\ERC721\\extensions\\IERC721Metadata.sol:12",
        "inherit": [
          "IERC721",
          "IERC165"
        ],
        "libraries": [],
        "methods": [
          "name()",
          "symbol()",
          "tokenURI(uint256)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "Address": {
        "src": "@openzeppelin\\contracts\\utils\\Address.sol:9",
        "version": {
          "withMetadata": "a0500f265408d7c0dbf75da3f9e44a5c2ee85e18bb1b58fe491ffcfa4ea7fd9b",
          "withoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db",
          "linkedWithoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db"
        },
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [
          {
            "kind": "delegatecall",
            "src": "@openzeppelin\\contracts\\utils\\Address.sol:185"
          }
        ],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "Context": {
        "src": "@openzeppelin\\contracts\\utils\\Context.sol:16",
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "Strings": {
        "src": "@openzeppelin\\contracts\\utils\\Strings.sol:11",
        "version": {
          "withMetadata": "c385b5200dd723f945d28b88358d79ca1b5c0f71c28cbbab9acf6d6f3fd15593",
          "withoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db",
          "linkedWithoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db"
        },
        "inherit": [],
        "libraries": [
          "Math"
        ],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "ERC165": {
        "src": "@openzeppelin\\contracts\\utils\\introspection\\ERC165.sol:22",
        "inherit": [
          "IERC165"
        ],
        "libraries": [],
        "methods": [
          "supportsInterface(bytes4)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "IERC165": {
        "src": "@openzeppelin\\contracts\\utils\\introspection\\IERC165.sol:15",
        "inherit": [],
        "libraries": [],
        "methods": [
          "supportsInterface(bytes4)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "Math": {
        "src": "@openzeppelin\\contracts\\utils\\math\\Math.sol:9",
        "version": {
          "withMetadata": "fcaf39e5e702f2902d6ef00c1def75c9800e8d2a0a78a87cf542096cafc7a4b0",
          "withoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db",
          "linkedWithoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db"
        },
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "HouseBusiness": {
        "src": "contracts\\HouseBusiness.sol:12",
        "version": {
          "withMetadata": "15f412f0f6980e0a190b7e49a25f85a44ba881dc4f93fefd4da7b5fdd56d1c16",
          "withoutMetadata": "740fef5df74a6d1b6963ea69e7d4d3c191ce22464b2dc0fadd0225e20d54ae94",
          "linkedWithoutMetadata": "740fef5df74a6d1b6963ea69e7d4d3c191ce22464b2dc0fadd0225e20d54ae94"
        },
        "inherit": [
          "ERC721URIStorage",
          "ERC721",
          "IERC721Metadata",
          "IERC721",
          "ERC165",
          "IERC165",
          "Context"
        ],
        "libraries": [],
        "methods": [
          "(address)",
          "setMinMaxHousePrice(uint256,uint256)",
          "setConfigToken(address)",
          "isMember()",
          "addMember(address)",
          "removeMember(address)",
          "tokenURI(uint256)",
          "setCContractAddress(address)",
          "setStakingContractAddress(address)",
          "setPayable(uint256,address,bool)",
          "mintHouse(string,string,string,string,uint256)",
          "addAllowList(uint256,address)",
          "removeAllowList(uint256,address)",
          "checkAllowedList(uint256,address)",
          "addHistory(uint256,uint256,uint256,string,string,string,string,string,uint256)",
          "getHistory(uint256)",
          "editHistory(uint256,uint256,string,string,string,string,string,uint256)",
          "getHistoryType()",
          "addOrEditHType(uint256,string,bool,bool,bool,bool,bool,bool,bool)",
          "removeHistoryType(uint256)",
          "getMinMaxNFT()",
          "getTokenOwner(uint256)",
          "disconnectContract(uint256,uint256,uint256)",
          "buyHouseNft(uint256)",
          "sendToken(address,uint256)",
          "changeTokenPrice(uint256,uint256)",
          "getAllHouses()",
          "getAllPayableHouses()",
          "getAllMyHouses()",
          "withdrawToken(uint256)",
          "withdrawETH(uint256)",
          "getTotalInfo()",
          "getTokenPrice(uint256)",
          "setHouseStakedStatus(uint256,bool)",
          "getRoyalty()",
          "setRoyalty(uint256)"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "HouseBusiness",
            "src": "contracts\\HouseBusiness.sol:92"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "_name",
              "offset": 0,
              "slot": "0",
              "type": "t_string_storage",
              "contract": "ERC721",
              "src": "@openzeppelin\\contracts\\token\\ERC721\\ERC721.sol:24"
            },
            {
              "label": "_symbol",
              "offset": 0,
              "slot": "1",
              "type": "t_string_storage",
              "contract": "ERC721",
              "src": "@openzeppelin\\contracts\\token\\ERC721\\ERC721.sol:27"
            },
            {
              "label": "_owners",
              "offset": 0,
              "slot": "2",
              "type": "t_mapping(t_uint256,t_address)",
              "contract": "ERC721",
              "src": "@openzeppelin\\contracts\\token\\ERC721\\ERC721.sol:30"
            },
            {
              "label": "_balances",
              "offset": 0,
              "slot": "3",
              "type": "t_mapping(t_address,t_uint256)",
              "contract": "ERC721",
              "src": "@openzeppelin\\contracts\\token\\ERC721\\ERC721.sol:33"
            },
            {
              "label": "_tokenApprovals",
              "offset": 0,
              "slot": "4",
              "type": "t_mapping(t_uint256,t_address)",
              "contract": "ERC721",
              "src": "@openzeppelin\\contracts\\token\\ERC721\\ERC721.sol:36"
            },
            {
              "label": "_operatorApprovals",
              "offset": 0,
              "slot": "5",
              "type": "t_mapping(t_address,t_mapping(t_address,t_bool))",
              "contract": "ERC721",
              "src": "@openzeppelin\\contracts\\token\\ERC721\\ERC721.sol:39"
            },
            {
              "label": "_tokenURIs",
              "offset": 0,
              "slot": "6",
              "type": "t_mapping(t_uint256,t_string_storage)",
              "contract": "ERC721URIStorage",
              "src": "@openzeppelin\\contracts\\token\\ERC721\\extensions\\ERC721URIStorage.sol:15"
            },
            {
              "label": "collectionName",
              "offset": 0,
              "slot": "7",
              "type": "t_string_storage",
              "contract": "HouseBusiness",
              "src": "contracts\\HouseBusiness.sol:14"
            },
            {
              "label": "collectionNameSymbol",
              "offset": 0,
              "slot": "8",
              "type": "t_string_storage",
              "contract": "HouseBusiness",
              "src": "contracts\\HouseBusiness.sol:16"
            },
            {
              "label": "houseCounter",
              "offset": 0,
              "slot": "9",
              "type": "t_uint256",
              "contract": "HouseBusiness",
              "src": "contracts\\HouseBusiness.sol:18"
            },
            {
              "label": "soldedCounter",
              "offset": 0,
              "slot": "10",
              "type": "t_uint256",
              "contract": "HouseBusiness",
              "src": "contracts\\HouseBusiness.sol:21"
            },
            {
              "label": "hTypeCounter",
              "offset": 0,
              "slot": "11",
              "type": "t_uint256",
              "contract": "HouseBusiness",
              "src": "contracts\\HouseBusiness.sol:23"
            },
            {
              "label": "_token",
              "offset": 0,
              "slot": "12",
              "type": "t_contract(IERC20)77",
              "contract": "HouseBusiness",
              "src": "contracts\\HouseBusiness.sol:25"
            },
            {
              "label": "minPrice",
              "offset": 0,
              "slot": "13",
              "type": "t_uint256",
              "contract": "HouseBusiness",
              "src": "contracts\\HouseBusiness.sol:27"
            },
            {
              "label": "maxPrice",
              "offset": 0,
              "slot": "14",
              "type": "t_uint256",
              "contract": "HouseBusiness",
              "src": "contracts\\HouseBusiness.sol:29"
            },
            {
              "label": "royalty",
              "offset": 0,
              "slot": "15",
              "type": "t_uint256",
              "contract": "HouseBusiness",
              "src": "contracts\\HouseBusiness.sol:31"
            },
            {
              "label": "cContract",
              "offset": 0,
              "slot": "16",
              "type": "t_contract(IMainCleanContract)4575",
              "contract": "HouseBusiness",
              "src": "contracts\\HouseBusiness.sol:33"
            },
            {
              "label": "historyTypes",
              "offset": 0,
              "slot": "17",
              "type": "t_array(t_struct(HistoryType)2831_storage)dyn_storage",
              "contract": "HouseBusiness",
              "src": "contracts\\HouseBusiness.sol:73"
            },
            {
              "label": "houseHistories",
              "offset": 0,
              "slot": "18",
              "type": "t_mapping(t_uint256,t_array(t_struct(History)2812_storage)dyn_storage)",
              "contract": "HouseBusiness",
              "src": "contracts\\HouseBusiness.sol:75"
            },
            {
              "label": "allMembers",
              "offset": 0,
              "slot": "19",
              "type": "t_mapping(t_address,t_bool)",
              "contract": "HouseBusiness",
              "src": "contracts\\HouseBusiness.sol:77"
            },
            {
              "label": "allHouses",
              "offset": 0,
              "slot": "20",
              "type": "t_mapping(t_uint256,t_struct(House)2795_storage)",
              "contract": "HouseBusiness",
              "src": "contracts\\HouseBusiness.sol:79"
            },
            {
              "label": "allowedList",
              "offset": 0,
              "slot": "21",
              "type": "t_mapping(t_uint256,t_mapping(t_address,t_bool))",
              "contract": "HouseBusiness",
              "src": "contracts\\HouseBusiness.sol:81"
            },
            {
              "label": "stakingContractAddress",
              "offset": 0,
              "slot": "22",
              "type": "t_address",
              "contract": "HouseBusiness",
              "src": "contracts\\HouseBusiness.sol:84"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            },
            "t_array(t_struct(History)2812_storage)dyn_storage": {
              "label": "struct HouseBusiness.History[]",
              "numberOfBytes": "32"
            },
            "t_array(t_struct(HistoryType)2831_storage)dyn_storage": {
              "label": "struct HouseBusiness.HistoryType[]",
              "numberOfBytes": "32"
            },
            "t_bool": {
              "label": "bool",
              "numberOfBytes": "1"
            },
            "t_contract(IERC20)77": {
              "label": "contract IERC20",
              "numberOfBytes": "20"
            },
            "t_contract(IMainCleanContract)4575": {
              "label": "contract IMainCleanContract",
              "numberOfBytes": "20"
            },
            "t_mapping(t_address,t_bool)": {
              "label": "mapping(address => bool)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_mapping(t_address,t_bool))": {
              "label": "mapping(address => mapping(address => bool))",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_uint256)": {
              "label": "mapping(address => uint256)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_uint256,t_address)": {
              "label": "mapping(uint256 => address)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_uint256,t_array(t_struct(History)2812_storage)dyn_storage)": {
              "label": "mapping(uint256 => struct HouseBusiness.History[])",
              "numberOfBytes": "32"
            },
            "t_mapping(t_uint256,t_mapping(t_address,t_bool))": {
              "label": "mapping(uint256 => mapping(address => bool))",
              "numberOfBytes": "32"
            },
            "t_mapping(t_uint256,t_string_storage)": {
              "label": "mapping(uint256 => string)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_uint256,t_struct(House)2795_storage)": {
              "label": "mapping(uint256 => struct HouseBusiness.House)",
              "numberOfBytes": "32"
            },
            "t_string_storage": {
              "label": "string",
              "numberOfBytes": "32"
            },
            "t_struct(History)2812_storage": {
              "label": "struct HouseBusiness.History",
              "members": [
                {
                  "label": "hID",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "0"
                },
                {
                  "label": "contractId",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "1"
                },
                {
                  "label": "houseImg",
                  "type": "t_string_storage",
                  "offset": 0,
                  "slot": "2"
                },
                {
                  "label": "houseBrand",
                  "type": "t_string_storage",
                  "offset": 0,
                  "slot": "3"
                },
                {
                  "label": "desc",
                  "type": "t_string_storage",
                  "offset": 0,
                  "slot": "4"
                },
                {
                  "label": "history",
                  "type": "t_string_storage",
                  "offset": 0,
                  "slot": "5"
                },
                {
                  "label": "brandType",
                  "type": "t_string_storage",
                  "offset": 0,
                  "slot": "6"
                },
                {
                  "label": "yearField",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "7"
                }
              ],
              "numberOfBytes": "256"
            },
            "t_struct(HistoryType)2831_storage": {
              "label": "struct HouseBusiness.HistoryType",
              "members": [
                {
                  "label": "hID",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "0"
                },
                {
                  "label": "hLabel",
                  "type": "t_string_storage",
                  "offset": 0,
                  "slot": "1"
                },
                {
                  "label": "connectContract",
                  "type": "t_bool",
                  "offset": 0,
                  "slot": "2"
                },
                {
                  "label": "imgNeed",
                  "type": "t_bool",
                  "offset": 1,
                  "slot": "2"
                },
                {
                  "label": "brandNeed",
                  "type": "t_bool",
                  "offset": 2,
                  "slot": "2"
                },
                {
                  "label": "descNeed",
                  "type": "t_bool",
                  "offset": 3,
                  "slot": "2"
                },
                {
                  "label": "brandTypeNeed",
                  "type": "t_bool",
                  "offset": 4,
                  "slot": "2"
                },
                {
                  "label": "yearNeed",
                  "type": "t_bool",
                  "offset": 5,
                  "slot": "2"
                },
                {
                  "label": "checkMark",
                  "type": "t_bool",
                  "offset": 6,
                  "slot": "2"
                }
              ],
              "numberOfBytes": "96"
            },
            "t_struct(House)2795_storage": {
              "label": "struct HouseBusiness.House",
              "members": [
                {
                  "label": "tokenId",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "0"
                },
                {
                  "label": "tokenName",
                  "type": "t_string_storage",
                  "offset": 0,
                  "slot": "1"
                },
                {
                  "label": "tokenURI",
                  "type": "t_string_storage",
                  "offset": 0,
                  "slot": "2"
                },
                {
                  "label": "tokenType",
                  "type": "t_string_storage",
                  "offset": 0,
                  "slot": "3"
                },
                {
                  "label": "currentOwner",
                  "type": "t_address",
                  "offset": 0,
                  "slot": "4"
                },
                {
                  "label": "previousOwner",
                  "type": "t_address",
                  "offset": 0,
                  "slot": "5"
                },
                {
                  "label": "buyer",
                  "type": "t_address",
                  "offset": 0,
                  "slot": "6"
                },
                {
                  "label": "price",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "7"
                },
                {
                  "label": "numberOfTransfers",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "8"
                },
                {
                  "label": "nftPayable",
                  "type": "t_bool",
                  "offset": 0,
                  "slot": "9"
                },
                {
                  "label": "staked",
                  "type": "t_bool",
                  "offset": 1,
                  "slot": "9"
                },
                {
                  "label": "soldstatus",
                  "type": "t_bool",
                  "offset": 2,
                  "slot": "9"
                }
              ],
              "numberOfBytes": "320"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            }
          },
          "layoutVersion": "1.1",
          "flat": true
        }
      },
      "IMainCleanContract": {
        "src": "contracts\\interfaces\\IContract.sol:6",
        "inherit": [],
        "libraries": [],
        "methods": [
          "getContractById(uint256)",
          "transferContractOwnership(uint256,address,address)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "IStaking": {
        "src": "contracts\\interfaces\\IStaking.sol:5",
        "inherit": [],
        "libraries": [],
        "methods": [
          "stakeCounter()"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      }
    },
    {
      "IERC20": {
        "src": "@openzeppelin\\contracts\\token\\ERC20\\IERC20.sol:9",
        "inherit": [],
        "libraries": [],
        "methods": [
          "totalSupply()",
          "balanceOf(address)",
          "transfer(address,uint256)",
          "allowance(address,address)",
          "approve(address,uint256)",
          "transferFrom(address,address,uint256)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "ERC721": {
        "src": "@openzeppelin\\contracts\\token\\ERC721\\ERC721.sol:19",
        "version": {
          "withMetadata": "311027b738fb50ea92c84baf68eacb931adf05de03da13635a661dc9c5b03f73",
          "withoutMetadata": "9ec7f439077c3b762bc3aa6a17c55aba7a78d240190c9c7814df896455a0f780",
          "linkedWithoutMetadata": "9ec7f439077c3b762bc3aa6a17c55aba7a78d240190c9c7814df896455a0f780"
        },
        "inherit": [
          "IERC721Metadata",
          "IERC721",
          "ERC165",
          "IERC165",
          "Context"
        ],
        "libraries": [
          "Address",
          "Strings"
        ],
        "methods": [
          "(string,string)",
          "supportsInterface(bytes4)",
          "balanceOf(address)",
          "ownerOf(uint256)",
          "name()",
          "symbol()",
          "tokenURI(uint256)",
          "approve(address,uint256)",
          "getApproved(uint256)",
          "setApprovalForAll(address,bool)",
          "isApprovedForAll(address,address)",
          "transferFrom(address,address,uint256)",
          "safeTransferFrom(address,address,uint256)",
          "safeTransferFrom(address,address,uint256,bytes)"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "ERC721",
            "src": "@openzeppelin\\contracts\\token\\ERC721\\ERC721.sol:44"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "_name",
              "offset": 0,
              "slot": "0",
              "type": "t_string_storage",
              "contract": "ERC721",
              "src": "@openzeppelin\\contracts\\token\\ERC721\\ERC721.sol:24"
            },
            {
              "label": "_symbol",
              "offset": 0,
              "slot": "1",
              "type": "t_string_storage",
              "contract": "ERC721",
              "src": "@openzeppelin\\contracts\\token\\ERC721\\ERC721.sol:27"
            },
            {
              "label": "_owners",
              "offset": 0,
              "slot": "2",
              "type": "t_mapping(t_uint256,t_address)",
              "contract": "ERC721",
              "src": "@openzeppelin\\contracts\\token\\ERC721\\ERC721.sol:30"
            },
            {
              "label": "_balances",
              "offset": 0,
              "slot": "3",
              "type": "t_mapping(t_address,t_uint256)",
              "contract": "ERC721",
              "src": "@openzeppelin\\contracts\\token\\ERC721\\ERC721.sol:33"
            },
            {
              "label": "_tokenApprovals",
              "offset": 0,
              "slot": "4",
              "type": "t_mapping(t_uint256,t_address)",
              "contract": "ERC721",
              "src": "@openzeppelin\\contracts\\token\\ERC721\\ERC721.sol:36"
            },
            {
              "label": "_operatorApprovals",
              "offset": 0,
              "slot": "5",
              "type": "t_mapping(t_address,t_mapping(t_address,t_bool))",
              "contract": "ERC721",
              "src": "@openzeppelin\\contracts\\token\\ERC721\\ERC721.sol:39"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            },
            "t_bool": {
              "label": "bool",
              "numberOfBytes": "1"
            },
            "t_mapping(t_address,t_bool)": {
              "label": "mapping(address => bool)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_mapping(t_address,t_bool))": {
              "label": "mapping(address => mapping(address => bool))",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_uint256)": {
              "label": "mapping(address => uint256)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_uint256,t_address)": {
              "label": "mapping(uint256 => address)",
              "numberOfBytes": "32"
            },
            "t_string_storage": {
              "label": "string",
              "numberOfBytes": "32"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            }
          },
          "layoutVersion": "1.1",
          "flat": true
        }
      },
      "IERC721": {
        "src": "@openzeppelin\\contracts\\token\\ERC721\\IERC721.sol:11",
        "inherit": [
          "IERC165"
        ],
        "libraries": [],
        "methods": [
          "balanceOf(address)",
          "ownerOf(uint256)",
          "safeTransferFrom(address,address,uint256,bytes)",
          "safeTransferFrom(address,address,uint256)",
          "transferFrom(address,address,uint256)",
          "approve(address,uint256)",
          "setApprovalForAll(address,bool)",
          "getApproved(uint256)",
          "isApprovedForAll(address,address)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "IERC721Receiver": {
        "src": "@openzeppelin\\contracts\\token\\ERC721\\IERC721Receiver.sol:11",
        "inherit": [],
        "libraries": [],
        "methods": [
          "onERC721Received(address,address,uint256,bytes)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "ERC721URIStorage": {
        "src": "@openzeppelin\\contracts\\token\\ERC721\\extensions\\ERC721URIStorage.sol:11",
        "inherit": [
          "ERC721",
          "IERC721Metadata",
          "IERC721",
          "ERC165",
          "IERC165",
          "Context"
        ],
        "libraries": [
          "Strings"
        ],
        "methods": [
          "tokenURI(uint256)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [
            {
              "label": "_name",
              "offset": 0,
              "slot": "0",
              "type": "t_string_storage",
              "contract": "ERC721",
              "src": "@openzeppelin\\contracts\\token\\ERC721\\ERC721.sol:24"
            },
            {
              "label": "_symbol",
              "offset": 0,
              "slot": "1",
              "type": "t_string_storage",
              "contract": "ERC721",
              "src": "@openzeppelin\\contracts\\token\\ERC721\\ERC721.sol:27"
            },
            {
              "label": "_owners",
              "offset": 0,
              "slot": "2",
              "type": "t_mapping(t_uint256,t_address)",
              "contract": "ERC721",
              "src": "@openzeppelin\\contracts\\token\\ERC721\\ERC721.sol:30"
            },
            {
              "label": "_balances",
              "offset": 0,
              "slot": "3",
              "type": "t_mapping(t_address,t_uint256)",
              "contract": "ERC721",
              "src": "@openzeppelin\\contracts\\token\\ERC721\\ERC721.sol:33"
            },
            {
              "label": "_tokenApprovals",
              "offset": 0,
              "slot": "4",
              "type": "t_mapping(t_uint256,t_address)",
              "contract": "ERC721",
              "src": "@openzeppelin\\contracts\\token\\ERC721\\ERC721.sol:36"
            },
            {
              "label": "_operatorApprovals",
              "offset": 0,
              "slot": "5",
              "type": "t_mapping(t_address,t_mapping(t_address,t_bool))",
              "contract": "ERC721",
              "src": "@openzeppelin\\contracts\\token\\ERC721\\ERC721.sol:39"
            },
            {
              "label": "_tokenURIs",
              "offset": 0,
              "slot": "6",
              "type": "t_mapping(t_uint256,t_string_storage)",
              "contract": "ERC721URIStorage",
              "src": "@openzeppelin\\contracts\\token\\ERC721\\extensions\\ERC721URIStorage.sol:15"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            },
            "t_bool": {
              "label": "bool",
              "numberOfBytes": "1"
            },
            "t_mapping(t_address,t_bool)": {
              "label": "mapping(address => bool)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_mapping(t_address,t_bool))": {
              "label": "mapping(address => mapping(address => bool))",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_uint256)": {
              "label": "mapping(address => uint256)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_uint256,t_address)": {
              "label": "mapping(uint256 => address)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_uint256,t_string_storage)": {
              "label": "mapping(uint256 => string)",
              "numberOfBytes": "32"
            },
            "t_string_storage": {
              "label": "string",
              "numberOfBytes": "32"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            }
          },
          "layoutVersion": "1.1",
          "flat": true
        }
      },
      "IERC721Metadata": {
        "src": "@openzeppelin\\contracts\\token\\ERC721\\extensions\\IERC721Metadata.sol:12",
        "inherit": [
          "IERC721",
          "IERC165"
        ],
        "libraries": [],
        "methods": [
          "name()",
          "symbol()",
          "tokenURI(uint256)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "Address": {
        "src": "@openzeppelin\\contracts\\utils\\Address.sol:9",
        "version": {
          "withMetadata": "a0500f265408d7c0dbf75da3f9e44a5c2ee85e18bb1b58fe491ffcfa4ea7fd9b",
          "withoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db",
          "linkedWithoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db"
        },
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [
          {
            "kind": "delegatecall",
            "src": "@openzeppelin\\contracts\\utils\\Address.sol:185"
          }
        ],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "Context": {
        "src": "@openzeppelin\\contracts\\utils\\Context.sol:16",
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "Strings": {
        "src": "@openzeppelin\\contracts\\utils\\Strings.sol:11",
        "version": {
          "withMetadata": "c385b5200dd723f945d28b88358d79ca1b5c0f71c28cbbab9acf6d6f3fd15593",
          "withoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db",
          "linkedWithoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db"
        },
        "inherit": [],
        "libraries": [
          "Math"
        ],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "ERC165": {
        "src": "@openzeppelin\\contracts\\utils\\introspection\\ERC165.sol:22",
        "inherit": [
          "IERC165"
        ],
        "libraries": [],
        "methods": [
          "supportsInterface(bytes4)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "IERC165": {
        "src": "@openzeppelin\\contracts\\utils\\introspection\\IERC165.sol:15",
        "inherit": [],
        "libraries": [],
        "methods": [
          "supportsInterface(bytes4)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "Math": {
        "src": "@openzeppelin\\contracts\\utils\\math\\Math.sol:9",
        "version": {
          "withMetadata": "fcaf39e5e702f2902d6ef00c1def75c9800e8d2a0a78a87cf542096cafc7a4b0",
          "withoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db",
          "linkedWithoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db"
        },
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "HouseBusiness": {
        "src": "contracts\\HouseBusiness.sol:12",
        "version": {
          "withMetadata": "15f412f0f6980e0a190b7e49a25f85a44ba881dc4f93fefd4da7b5fdd56d1c16",
          "withoutMetadata": "740fef5df74a6d1b6963ea69e7d4d3c191ce22464b2dc0fadd0225e20d54ae94",
          "linkedWithoutMetadata": "740fef5df74a6d1b6963ea69e7d4d3c191ce22464b2dc0fadd0225e20d54ae94"
        },
        "inherit": [
          "ERC721URIStorage",
          "ERC721",
          "IERC721Metadata",
          "IERC721",
          "ERC165",
          "IERC165",
          "Context"
        ],
        "libraries": [],
        "methods": [
          "(address)",
          "setMinMaxHousePrice(uint256,uint256)",
          "setConfigToken(address)",
          "isMember()",
          "addMember(address)",
          "removeMember(address)",
          "tokenURI(uint256)",
          "setCContractAddress(address)",
          "setStakingContractAddress(address)",
          "setPayable(uint256,address,bool)",
          "mintHouse(string,string,string,string,uint256)",
          "addAllowList(uint256,address)",
          "removeAllowList(uint256,address)",
          "checkAllowedList(uint256,address)",
          "addHistory(uint256,uint256,uint256,string,string,string,string,string,uint256)",
          "getHistory(uint256)",
          "editHistory(uint256,uint256,string,string,string,string,string,uint256)",
          "getHistoryType()",
          "addOrEditHType(uint256,string,bool,bool,bool,bool,bool,bool,bool)",
          "removeHistoryType(uint256)",
          "getMinMaxNFT()",
          "getTokenOwner(uint256)",
          "disconnectContract(uint256,uint256,uint256)",
          "buyHouseNft(uint256)",
          "sendToken(address,uint256)",
          "changeTokenPrice(uint256,uint256)",
          "getAllHouses()",
          "getAllPayableHouses()",
          "getAllMyHouses()",
          "withdrawToken(uint256)",
          "withdrawETH(uint256)",
          "getTotalInfo()",
          "getTokenPrice(uint256)",
          "setHouseStakedStatus(uint256,bool)",
          "getRoyalty()",
          "setRoyalty(uint256)"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "HouseBusiness",
            "src": "contracts\\HouseBusiness.sol:92"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "_name",
              "offset": 0,
              "slot": "0",
              "type": "t_string_storage",
              "contract": "ERC721",
              "src": "@openzeppelin\\contracts\\token\\ERC721\\ERC721.sol:24"
            },
            {
              "label": "_symbol",
              "offset": 0,
              "slot": "1",
              "type": "t_string_storage",
              "contract": "ERC721",
              "src": "@openzeppelin\\contracts\\token\\ERC721\\ERC721.sol:27"
            },
            {
              "label": "_owners",
              "offset": 0,
              "slot": "2",
              "type": "t_mapping(t_uint256,t_address)",
              "contract": "ERC721",
              "src": "@openzeppelin\\contracts\\token\\ERC721\\ERC721.sol:30"
            },
            {
              "label": "_balances",
              "offset": 0,
              "slot": "3",
              "type": "t_mapping(t_address,t_uint256)",
              "contract": "ERC721",
              "src": "@openzeppelin\\contracts\\token\\ERC721\\ERC721.sol:33"
            },
            {
              "label": "_tokenApprovals",
              "offset": 0,
              "slot": "4",
              "type": "t_mapping(t_uint256,t_address)",
              "contract": "ERC721",
              "src": "@openzeppelin\\contracts\\token\\ERC721\\ERC721.sol:36"
            },
            {
              "label": "_operatorApprovals",
              "offset": 0,
              "slot": "5",
              "type": "t_mapping(t_address,t_mapping(t_address,t_bool))",
              "contract": "ERC721",
              "src": "@openzeppelin\\contracts\\token\\ERC721\\ERC721.sol:39"
            },
            {
              "label": "_tokenURIs",
              "offset": 0,
              "slot": "6",
              "type": "t_mapping(t_uint256,t_string_storage)",
              "contract": "ERC721URIStorage",
              "src": "@openzeppelin\\contracts\\token\\ERC721\\extensions\\ERC721URIStorage.sol:15"
            },
            {
              "label": "collectionName",
              "offset": 0,
              "slot": "7",
              "type": "t_string_storage",
              "contract": "HouseBusiness",
              "src": "contracts\\HouseBusiness.sol:14"
            },
            {
              "label": "collectionNameSymbol",
              "offset": 0,
              "slot": "8",
              "type": "t_string_storage",
              "contract": "HouseBusiness",
              "src": "contracts\\HouseBusiness.sol:16"
            },
            {
              "label": "houseCounter",
              "offset": 0,
              "slot": "9",
              "type": "t_uint256",
              "contract": "HouseBusiness",
              "src": "contracts\\HouseBusiness.sol:18"
            },
            {
              "label": "soldedCounter",
              "offset": 0,
              "slot": "10",
              "type": "t_uint256",
              "contract": "HouseBusiness",
              "src": "contracts\\HouseBusiness.sol:21"
            },
            {
              "label": "hTypeCounter",
              "offset": 0,
              "slot": "11",
              "type": "t_uint256",
              "contract": "HouseBusiness",
              "src": "contracts\\HouseBusiness.sol:23"
            },
            {
              "label": "_token",
              "offset": 0,
              "slot": "12",
              "type": "t_contract(IERC20)77",
              "contract": "HouseBusiness",
              "src": "contracts\\HouseBusiness.sol:25"
            },
            {
              "label": "minPrice",
              "offset": 0,
              "slot": "13",
              "type": "t_uint256",
              "contract": "HouseBusiness",
              "src": "contracts\\HouseBusiness.sol:27"
            },
            {
              "label": "maxPrice",
              "offset": 0,
              "slot": "14",
              "type": "t_uint256",
              "contract": "HouseBusiness",
              "src": "contracts\\HouseBusiness.sol:29"
            },
            {
              "label": "royalty",
              "offset": 0,
              "slot": "15",
              "type": "t_uint256",
              "contract": "HouseBusiness",
              "src": "contracts\\HouseBusiness.sol:31"
            },
            {
              "label": "cContract",
              "offset": 0,
              "slot": "16",
              "type": "t_contract(IMainCleanContract)5506",
              "contract": "HouseBusiness",
              "src": "contracts\\HouseBusiness.sol:33"
            },
            {
              "label": "historyTypes",
              "offset": 0,
              "slot": "17",
              "type": "t_array(t_struct(HistoryType)2831_storage)dyn_storage",
              "contract": "HouseBusiness",
              "src": "contracts\\HouseBusiness.sol:73"
            },
            {
              "label": "houseHistories",
              "offset": 0,
              "slot": "18",
              "type": "t_mapping(t_uint256,t_array(t_struct(History)2812_storage)dyn_storage)",
              "contract": "HouseBusiness",
              "src": "contracts\\HouseBusiness.sol:75"
            },
            {
              "label": "allMembers",
              "offset": 0,
              "slot": "19",
              "type": "t_mapping(t_address,t_bool)",
              "contract": "HouseBusiness",
              "src": "contracts\\HouseBusiness.sol:77"
            },
            {
              "label": "allHouses",
              "offset": 0,
              "slot": "20",
              "type": "t_mapping(t_uint256,t_struct(House)2795_storage)",
              "contract": "HouseBusiness",
              "src": "contracts\\HouseBusiness.sol:79"
            },
            {
              "label": "allowedList",
              "offset": 0,
              "slot": "21",
              "type": "t_mapping(t_uint256,t_mapping(t_address,t_bool))",
              "contract": "HouseBusiness",
              "src": "contracts\\HouseBusiness.sol:81"
            },
            {
              "label": "stakingContractAddress",
              "offset": 0,
              "slot": "22",
              "type": "t_address",
              "contract": "HouseBusiness",
              "src": "contracts\\HouseBusiness.sol:84"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            },
            "t_array(t_struct(History)2812_storage)dyn_storage": {
              "label": "struct HouseBusiness.History[]",
              "numberOfBytes": "32"
            },
            "t_array(t_struct(HistoryType)2831_storage)dyn_storage": {
              "label": "struct HouseBusiness.HistoryType[]",
              "numberOfBytes": "32"
            },
            "t_bool": {
              "label": "bool",
              "numberOfBytes": "1"
            },
            "t_contract(IERC20)77": {
              "label": "contract IERC20",
              "numberOfBytes": "20"
            },
            "t_contract(IMainCleanContract)5506": {
              "label": "contract IMainCleanContract",
              "numberOfBytes": "20"
            },
            "t_mapping(t_address,t_bool)": {
              "label": "mapping(address => bool)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_mapping(t_address,t_bool))": {
              "label": "mapping(address => mapping(address => bool))",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_uint256)": {
              "label": "mapping(address => uint256)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_uint256,t_address)": {
              "label": "mapping(uint256 => address)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_uint256,t_array(t_struct(History)2812_storage)dyn_storage)": {
              "label": "mapping(uint256 => struct HouseBusiness.History[])",
              "numberOfBytes": "32"
            },
            "t_mapping(t_uint256,t_mapping(t_address,t_bool))": {
              "label": "mapping(uint256 => mapping(address => bool))",
              "numberOfBytes": "32"
            },
            "t_mapping(t_uint256,t_string_storage)": {
              "label": "mapping(uint256 => string)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_uint256,t_struct(House)2795_storage)": {
              "label": "mapping(uint256 => struct HouseBusiness.House)",
              "numberOfBytes": "32"
            },
            "t_string_storage": {
              "label": "string",
              "numberOfBytes": "32"
            },
            "t_struct(History)2812_storage": {
              "label": "struct HouseBusiness.History",
              "members": [
                {
                  "label": "hID",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "0"
                },
                {
                  "label": "contractId",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "1"
                },
                {
                  "label": "houseImg",
                  "type": "t_string_storage",
                  "offset": 0,
                  "slot": "2"
                },
                {
                  "label": "houseBrand",
                  "type": "t_string_storage",
                  "offset": 0,
                  "slot": "3"
                },
                {
                  "label": "desc",
                  "type": "t_string_storage",
                  "offset": 0,
                  "slot": "4"
                },
                {
                  "label": "history",
                  "type": "t_string_storage",
                  "offset": 0,
                  "slot": "5"
                },
                {
                  "label": "brandType",
                  "type": "t_string_storage",
                  "offset": 0,
                  "slot": "6"
                },
                {
                  "label": "yearField",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "7"
                }
              ],
              "numberOfBytes": "256"
            },
            "t_struct(HistoryType)2831_storage": {
              "label": "struct HouseBusiness.HistoryType",
              "members": [
                {
                  "label": "hID",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "0"
                },
                {
                  "label": "hLabel",
                  "type": "t_string_storage",
                  "offset": 0,
                  "slot": "1"
                },
                {
                  "label": "connectContract",
                  "type": "t_bool",
                  "offset": 0,
                  "slot": "2"
                },
                {
                  "label": "imgNeed",
                  "type": "t_bool",
                  "offset": 1,
                  "slot": "2"
                },
                {
                  "label": "brandNeed",
                  "type": "t_bool",
                  "offset": 2,
                  "slot": "2"
                },
                {
                  "label": "descNeed",
                  "type": "t_bool",
                  "offset": 3,
                  "slot": "2"
                },
                {
                  "label": "brandTypeNeed",
                  "type": "t_bool",
                  "offset": 4,
                  "slot": "2"
                },
                {
                  "label": "yearNeed",
                  "type": "t_bool",
                  "offset": 5,
                  "slot": "2"
                },
                {
                  "label": "checkMark",
                  "type": "t_bool",
                  "offset": 6,
                  "slot": "2"
                }
              ],
              "numberOfBytes": "96"
            },
            "t_struct(House)2795_storage": {
              "label": "struct HouseBusiness.House",
              "members": [
                {
                  "label": "tokenId",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "0"
                },
                {
                  "label": "tokenName",
                  "type": "t_string_storage",
                  "offset": 0,
                  "slot": "1"
                },
                {
                  "label": "tokenURI",
                  "type": "t_string_storage",
                  "offset": 0,
                  "slot": "2"
                },
                {
                  "label": "tokenType",
                  "type": "t_string_storage",
                  "offset": 0,
                  "slot": "3"
                },
                {
                  "label": "currentOwner",
                  "type": "t_address",
                  "offset": 0,
                  "slot": "4"
                },
                {
                  "label": "previousOwner",
                  "type": "t_address",
                  "offset": 0,
                  "slot": "5"
                },
                {
                  "label": "buyer",
                  "type": "t_address",
                  "offset": 0,
                  "slot": "6"
                },
                {
                  "label": "price",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "7"
                },
                {
                  "label": "numberOfTransfers",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "8"
                },
                {
                  "label": "nftPayable",
                  "type": "t_bool",
                  "offset": 0,
                  "slot": "9"
                },
                {
                  "label": "staked",
                  "type": "t_bool",
                  "offset": 1,
                  "slot": "9"
                },
                {
                  "label": "soldstatus",
                  "type": "t_bool",
                  "offset": 2,
                  "slot": "9"
                }
              ],
              "numberOfBytes": "320"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            }
          },
          "layoutVersion": "1.1",
          "flat": true
        }
      },
      "HouseStaking": {
        "src": "contracts\\Staking.sol:6",
        "version": {
          "withMetadata": "b434e0d9fc6e61f20a7ae59c658eae1046efdaddcb12502607dc9c2ba1b48d96",
          "withoutMetadata": "55dd03d5604f70c2abf52ecb260f160dc660988f7e28526fbed5969d1a598935",
          "linkedWithoutMetadata": "55dd03d5604f70c2abf52ecb260f160dc660988f7e28526fbed5969d1a598935"
        },
        "inherit": [],
        "libraries": [],
        "methods": [
          "(address,address)",
          "calcDiv(uint256,uint256)",
          "setAPYConfig(uint256,uint256)",
          "getAllAPYTypes()",
          "stake(uint256,uint256)",
          "unstake(uint256)",
          "stakingFinished(uint256)",
          "totalRewards(address)",
          "claimRewards(address)",
          "getAllMyStakedNFTs()",
          "getAllAPYs()",
          "getPenalty()",
          "setPenalty(uint256)"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "HouseStaking",
            "src": "contracts\\Staking.sol:33"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "stakedCounter",
              "offset": 0,
              "slot": "0",
              "type": "t_uint256",
              "contract": "HouseStaking",
              "src": "contracts\\Staking.sol:8"
            },
            {
              "label": "penalty",
              "offset": 0,
              "slot": "1",
              "type": "t_uint256",
              "contract": "HouseStaking",
              "src": "contracts\\Staking.sol:10"
            },
            {
              "label": "APYtypes",
              "offset": 0,
              "slot": "2",
              "type": "t_array(t_uint256)dyn_storage",
              "contract": "HouseStaking",
              "src": "contracts\\Staking.sol:12"
            },
            {
              "label": "APYConfig",
              "offset": 0,
              "slot": "3",
              "type": "t_mapping(t_uint256,t_uint256)",
              "contract": "HouseStaking",
              "src": "contracts\\Staking.sol:15"
            },
            {
              "label": "stakedNfts",
              "offset": 0,
              "slot": "4",
              "type": "t_mapping(t_address,t_array(t_struct(StakedNft)4564_storage)dyn_storage)",
              "contract": "HouseStaking",
              "src": "contracts\\Staking.sol:16"
            },
            {
              "label": "tokenAddress",
              "offset": 0,
              "slot": "5",
              "type": "t_address",
              "contract": "HouseStaking",
              "src": "contracts\\Staking.sol:18"
            },
            {
              "label": "houseNFTAddress",
              "offset": 0,
              "slot": "6",
              "type": "t_address",
              "contract": "HouseStaking",
              "src": "contracts\\Staking.sol:19"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            },
            "t_array(t_struct(StakedNft)4564_storage)dyn_storage": {
              "label": "struct HouseStaking.StakedNft[]",
              "numberOfBytes": "32"
            },
            "t_array(t_uint256)dyn_storage": {
              "label": "uint256[]",
              "numberOfBytes": "32"
            },
            "t_bool": {
              "label": "bool",
              "numberOfBytes": "1"
            },
            "t_mapping(t_address,t_array(t_struct(StakedNft)4564_storage)dyn_storage)": {
              "label": "mapping(address => struct HouseStaking.StakedNft[])",
              "numberOfBytes": "32"
            },
            "t_mapping(t_uint256,t_uint256)": {
              "label": "mapping(uint256 => uint256)",
              "numberOfBytes": "32"
            },
            "t_struct(StakedNft)4564_storage": {
              "label": "struct HouseStaking.StakedNft",
              "members": [
                {
                  "label": "owner",
                  "type": "t_address",
                  "offset": 0,
                  "slot": "0"
                },
                {
                  "label": "tokenId",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "1"
                },
                {
                  "label": "startedDate",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "2"
                },
                {
                  "label": "endDate",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "3"
                },
                {
                  "label": "claimDate",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "4"
                },
                {
                  "label": "stakingType",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "5"
                },
                {
                  "label": "perSecRewards",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "6"
                },
                {
                  "label": "stakingStatus",
                  "type": "t_bool",
                  "offset": 0,
                  "slot": "7"
                }
              ],
              "numberOfBytes": "256"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            }
          },
          "layoutVersion": "1.1",
          "flat": true
        }
      },
      "IMainCleanContract": {
        "src": "contracts\\interfaces\\IContract.sol:6",
        "inherit": [],
        "libraries": [],
        "methods": [
          "getContractById(uint256)",
          "transferContractOwnership(uint256,address,address)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "IHouseBusiness": {
        "src": "contracts\\interfaces\\IHouseBusiness.sol:5",
        "inherit": [],
        "libraries": [],
        "methods": [
          "collectionName()",
          "collectionNameSymbol()",
          "houseCounter()",
          "stakedCounter()",
          "soldedCounter()",
          "hTypeCounter()",
          "minPrice()",
          "maxPrice()",
          "penalty()",
          "royalty()",
          "historyTypes(uint256)",
          "houseHistories(uint256)",
          "allMembers(address)",
          "allHouses(uint256)",
          "stakedNfts(address)",
          "setMinMaxHousePrice(uint256,uint256)",
          "setConfigToken(address)",
          "isMember()",
          "addMember(address)",
          "removeMember(address)",
          "tokenURI(uint256)",
          "setPayable(uint256,address,bool)",
          "mintHouse(string,string,string,string,uint256)",
          "addAllowList(uint256,address)",
          "removeAllowList(uint256,address)",
          "checkAllowedList(uint256,address)",
          "addHistory(uint256,uint256,string,string,string,string,string,uint256)",
          "getHistory(uint256)",
          "editHistory(uint256,uint256,string,string,string,string,string,uint256)",
          "getHistoryType()",
          "addOrEditHType(uint256,string,bool,bool,bool,bool,bool,bool,bool)",
          "removeHistoryType(uint256)",
          "getMinMaxNFT()",
          "getTokenOwner(uint256)",
          "buyHouseNft(uint256)",
          "sendToken(address,uint256)",
          "changeTokenPrice(uint256,uint256)",
          "getAllHouses()",
          "getAllPayableHouses()",
          "getAllMyHouses()",
          "withdrawToken(uint256)",
          "withdrawETH(uint256)",
          "setAPYConfig(uint256,uint256)",
          "getAllAPYTypes()",
          "stake(uint256,uint256)",
          "unstake(uint256)",
          "stakingFinished(uint256)",
          "totalRewards(address)",
          "claimRewards(address)",
          "getAllMyStakedNFTs()",
          "getTotalInfo()",
          "getAllAPYs()",
          "getPenalty()",
          "setPenalty(uint256)",
          "getRoyalty()",
          "setRoyalty(uint256)",
          "ownerOf(uint256)",
          "getTokenPrice(uint256)",
          "setHouseStakedStatus(uint256,bool)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "IStaking": {
        "src": "contracts\\interfaces\\IStaking.sol:5",
        "inherit": [],
        "libraries": [],
        "methods": [
          "stakeCounter()"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      }
    },
    {
      "MainCleanContract": {
        "src": "contracts\\Contract.sol:6",
        "version": {
          "withMetadata": "6421e940ca2c08cec604e64c4e3802894c030e3491305b8df865d9e1c9e89aac",
          "withoutMetadata": "4b8cbb4879901533fe49280ca430f3230d2cf4cb717e76bb4a9404845cd178f8",
          "linkedWithoutMetadata": "4b8cbb4879901533fe49280ca430f3230d2cf4cb717e76bb4a9404845cd178f8"
        },
        "inherit": [],
        "libraries": [],
        "methods": [
          "(address)",
          "ccCreation(string,string,address,string,uint256,uint256,uint256,string)",
          "getAllContractsByOwner()",
          "getAllContractsBySigner()",
          "getContractById(uint256)",
          "addContractSigner(uint256,address)",
          "signContract(uint256)",
          "sendNotify(address,string,uint256)",
          "getUploadedCounter()",
          "getAllNotifies()",
          "calcDiv(uint256,uint256)",
          "toString(bytes)",
          "addressToString(address)",
          "uintToString(uint256)",
          "bytesToString(bytes32)",
          "transferContractOwnership(uint256,address,address)"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "MainCleanContract",
            "src": "contracts\\Contract.sol:52"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "ccCounter",
              "offset": 0,
              "slot": "0",
              "type": "t_uint256",
              "contract": "MainCleanContract",
              "src": "contracts\\Contract.sol:8"
            },
            {
              "label": "houseNFTAddress",
              "offset": 0,
              "slot": "1",
              "type": "t_address",
              "contract": "MainCleanContract",
              "src": "contracts\\Contract.sol:11"
            },
            {
              "label": "allCleanContracts",
              "offset": 0,
              "slot": "2",
              "type": "t_mapping(t_uint256,t_struct(CleanContract)39_storage)",
              "contract": "MainCleanContract",
              "src": "contracts\\Contract.sol:44"
            },
            {
              "label": "allContractsByOwner",
              "offset": 0,
              "slot": "3",
              "type": "t_mapping(t_address,t_array(t_uint256)dyn_storage)",
              "contract": "MainCleanContract",
              "src": "contracts\\Contract.sol:46"
            },
            {
              "label": "allContractsBySigner",
              "offset": 0,
              "slot": "4",
              "type": "t_mapping(t_address,t_array(t_uint256)dyn_storage)",
              "contract": "MainCleanContract",
              "src": "contracts\\Contract.sol:48"
            },
            {
              "label": "allNotifies",
              "offset": 0,
              "slot": "5",
              "type": "t_mapping(t_address,t_array(t_struct(Notify)52_storage)dyn_storage)",
              "contract": "MainCleanContract",
              "src": "contracts\\Contract.sol:50"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            },
            "t_array(t_struct(Notify)52_storage)dyn_storage": {
              "label": "struct MainCleanContract.Notify[]",
              "numberOfBytes": "32"
            },
            "t_array(t_uint256)dyn_storage": {
              "label": "uint256[]",
              "numberOfBytes": "32"
            },
            "t_bool": {
              "label": "bool",
              "numberOfBytes": "1"
            },
            "t_mapping(t_address,t_array(t_struct(Notify)52_storage)dyn_storage)": {
              "label": "mapping(address => struct MainCleanContract.Notify[])",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_array(t_uint256)dyn_storage)": {
              "label": "mapping(address => uint256[])",
              "numberOfBytes": "32"
            },
            "t_mapping(t_uint256,t_struct(CleanContract)39_storage)": {
              "label": "mapping(uint256 => struct MainCleanContract.CleanContract)",
              "numberOfBytes": "32"
            },
            "t_string_storage": {
              "label": "string",
              "numberOfBytes": "32"
            },
            "t_struct(CleanContract)39_storage": {
              "label": "struct MainCleanContract.CleanContract",
              "members": [
                {
                  "label": "contractId",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "0"
                },
                {
                  "label": "companyName",
                  "type": "t_string_storage",
                  "offset": 0,
                  "slot": "1"
                },
                {
                  "label": "contractType",
                  "type": "t_string_storage",
                  "offset": 0,
                  "slot": "2"
                },
                {
                  "label": "contractURI",
                  "type": "t_string_storage",
                  "offset": 0,
                  "slot": "3"
                },
                {
                  "label": "dateFrom",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "4"
                },
                {
                  "label": "dateTo",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "5"
                },
                {
                  "label": "agreedPrice",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "6"
                },
                {
                  "label": "currency",
                  "type": "t_string_storage",
                  "offset": 0,
                  "slot": "7"
                },
                {
                  "label": "creator",
                  "type": "t_address",
                  "offset": 0,
                  "slot": "8"
                },
                {
                  "label": "owner",
                  "type": "t_address",
                  "offset": 0,
                  "slot": "9"
                },
                {
                  "label": "creatorApproval",
                  "type": "t_bool",
                  "offset": 20,
                  "slot": "9"
                },
                {
                  "label": "creatorSignDate",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "10"
                },
                {
                  "label": "contractSigner",
                  "type": "t_address",
                  "offset": 0,
                  "slot": "11"
                },
                {
                  "label": "signerApproval",
                  "type": "t_bool",
                  "offset": 20,
                  "slot": "11"
                },
                {
                  "label": "signerSignDate",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "12"
                },
                {
                  "label": "status",
                  "type": "t_string_storage",
                  "offset": 0,
                  "slot": "13"
                }
              ],
              "numberOfBytes": "448"
            },
            "t_struct(Notify)52_storage": {
              "label": "struct MainCleanContract.Notify",
              "members": [
                {
                  "label": "nSender",
                  "type": "t_address",
                  "offset": 0,
                  "slot": "0"
                },
                {
                  "label": "nReceiver",
                  "type": "t_address",
                  "offset": 0,
                  "slot": "1"
                },
                {
                  "label": "ccID",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "2"
                },
                {
                  "label": "notifySentTime",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "3"
                },
                {
                  "label": "notifyContent",
                  "type": "t_string_storage",
                  "offset": 0,
                  "slot": "4"
                },
                {
                  "label": "status",
                  "type": "t_bool",
                  "offset": 0,
                  "slot": "5"
                }
              ],
              "numberOfBytes": "192"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            }
          },
          "layoutVersion": "1.1",
          "flat": true
        }
      }
    },
    {
      "ThirdParty": {
        "src": "contracts\\ThirdParty.sol:5",
        "version": {
          "withMetadata": "cbf5b2fae6668ee45b86827e485cbed39526db15e39a77a193d607720ff0015c",
          "withoutMetadata": "c7f6b899dcbca6a360ab204550ba9b4fec9f4cae1bcd2f5879cfa3965e9d550f",
          "linkedWithoutMetadata": "c7f6b899dcbca6a360ab204550ba9b4fec9f4cae1bcd2f5879cfa3965e9d550f"
        },
        "inherit": [],
        "libraries": [],
        "methods": [
          "getAllCategories()",
          "addCategory(string,uint256[])",
          "editCategory(uint256,string,uint256[])",
          "deleteCategory(uint256)",
          "getAllProperties()",
          "addProperty(string)",
          "editProperty(uint256,string)",
          "deleteProperty(uint256)",
          "getPackagesByCategory(uint256)",
          "addPackage(uint256,string,uint256,uint256,uint256,bool[])",
          "editPackage(uint256,uint256,string,uint256,uint256,uint256,bool[])",
          "deletePackage(uint256,uint256)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [
            {
              "label": "categoryCounter",
              "offset": 0,
              "slot": "0",
              "type": "t_uint256",
              "contract": "ThirdParty",
              "src": "contracts\\ThirdParty.sol:12"
            },
            {
              "label": "packageCounter",
              "offset": 0,
              "slot": "1",
              "type": "t_uint256",
              "contract": "ThirdParty",
              "src": "contracts\\ThirdParty.sol:23"
            },
            {
              "label": "propertyCounter",
              "offset": 0,
              "slot": "2",
              "type": "t_uint256",
              "contract": "ThirdParty",
              "src": "contracts\\ThirdParty.sol:29"
            },
            {
              "label": "allCategories",
              "offset": 0,
              "slot": "3",
              "type": "t_array(t_struct(Category)11_storage)dyn_storage",
              "contract": "ThirdParty",
              "src": "contracts\\ThirdParty.sol:31"
            },
            {
              "label": "allPackages",
              "offset": 0,
              "slot": "4",
              "type": "t_mapping(t_uint256,t_array(t_struct(Package)29_storage)dyn_storage)",
              "contract": "ThirdParty",
              "src": "contracts\\ThirdParty.sol:34"
            },
            {
              "label": "allProperties",
              "offset": 0,
              "slot": "5",
              "type": "t_array(t_struct(Property)36_storage)dyn_storage",
              "contract": "ThirdParty",
              "src": "contracts\\ThirdParty.sol:37"
            }
          ],
          "types": {
            "t_array(t_bool)dyn_storage": {
              "label": "bool[]",
              "numberOfBytes": "32"
            },
            "t_array(t_struct(Category)11_storage)dyn_storage": {
              "label": "struct ThirdParty.Category[]",
              "numberOfBytes": "32"
            },
            "t_array(t_struct(Package)29_storage)dyn_storage": {
              "label": "struct ThirdParty.Package[]",
              "numberOfBytes": "32"
            },
            "t_array(t_struct(Property)36_storage)dyn_storage": {
              "label": "struct ThirdParty.Property[]",
              "numberOfBytes": "32"
            },
            "t_array(t_uint256)dyn_storage": {
              "label": "uint256[]",
              "numberOfBytes": "32"
            },
            "t_bool": {
              "label": "bool",
              "numberOfBytes": "1"
            },
            "t_mapping(t_uint256,t_array(t_struct(Package)29_storage)dyn_storage)": {
              "label": "mapping(uint256 => struct ThirdParty.Package[])",
              "numberOfBytes": "32"
            },
            "t_string_storage": {
              "label": "string",
              "numberOfBytes": "32"
            },
            "t_struct(Category)11_storage": {
              "label": "struct ThirdParty.Category",
              "members": [
                {
                  "label": "categoryID",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "0"
                },
                {
                  "label": "cartegoryName",
                  "type": "t_string_storage",
                  "offset": 0,
                  "slot": "1"
                },
                {
                  "label": "properties",
                  "type": "t_array(t_uint256)dyn_storage",
                  "offset": 0,
                  "slot": "2"
                },
                {
                  "label": "visible",
                  "type": "t_bool",
                  "offset": 0,
                  "slot": "3"
                }
              ],
              "numberOfBytes": "128"
            },
            "t_struct(Package)29_storage": {
              "label": "struct ThirdParty.Package",
              "members": [
                {
                  "label": "categoryID",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "0"
                },
                {
                  "label": "packageID",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "1"
                },
                {
                  "label": "packageName",
                  "type": "t_string_storage",
                  "offset": 0,
                  "slot": "2"
                },
                {
                  "label": "price",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "3"
                },
                {
                  "label": "period",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "4"
                },
                {
                  "label": "dataLimit",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "5"
                },
                {
                  "label": "propertyVisible",
                  "type": "t_array(t_bool)dyn_storage",
                  "offset": 0,
                  "slot": "6"
                }
              ],
              "numberOfBytes": "224"
            },
            "t_struct(Property)36_storage": {
              "label": "struct ThirdParty.Property",
              "members": [
                {
                  "label": "propertyID",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "0"
                },
                {
                  "label": "propertyName",
                  "type": "t_string_storage",
                  "offset": 0,
                  "slot": "1"
                }
              ],
              "numberOfBytes": "64"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            }
          },
          "layoutVersion": "1.1",
          "flat": true
        }
      }
    },
    {
      "Context": {
        "src": "contracts\\TokenContract.sol:22",
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "HouseBusinessToken": {
        "src": "contracts\\TokenContract.sol:33",
        "version": {
          "withMetadata": "e53f4b9234e67266e4442dec09d084a17cbe6b1b4fb90d62776f0d6f370f0570",
          "withoutMetadata": "f5d2b294cac19c78c593798b4a1bae04c45c82839cbcffe3cc910bb441f21259",
          "linkedWithoutMetadata": "f5d2b294cac19c78c593798b4a1bae04c45c82839cbcffe3cc910bb441f21259"
        },
        "inherit": [
          "IERC20Metadata",
          "IERC20",
          "Context"
        ],
        "libraries": [],
        "methods": [
          "()",
          "name()",
          "symbol()",
          "decimals()",
          "totalSupply()",
          "balanceOf(address)",
          "transfer(address,uint256)",
          "allowance(address,address)",
          "approve(address,uint256)",
          "transferFrom(address,address,uint256)",
          "increaseAllowance(address,uint256)",
          "decreaseAllowance(address,uint256)",
          "_mint(address,uint256)"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "HouseBusinessToken",
            "src": "contracts\\TokenContract.sol:42"
          },
          {
            "kind": "state-variable-assignment",
            "name": "_name",
            "src": "contracts\\TokenContract.sol:37"
          },
          {
            "kind": "state-variable-assignment",
            "name": "_symbol",
            "src": "contracts\\TokenContract.sol:38"
          },
          {
            "kind": "state-variable-assignment",
            "name": "_decimals",
            "src": "contracts\\TokenContract.sol:39"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "_balances",
              "offset": 0,
              "slot": "0",
              "type": "t_mapping(t_address,t_uint256)",
              "contract": "HouseBusinessToken",
              "src": "contracts\\TokenContract.sol:34"
            },
            {
              "label": "_allowances",
              "offset": 0,
              "slot": "1",
              "type": "t_mapping(t_address,t_mapping(t_address,t_uint256))",
              "contract": "HouseBusinessToken",
              "src": "contracts\\TokenContract.sol:35"
            },
            {
              "label": "_totalSupply",
              "offset": 0,
              "slot": "2",
              "type": "t_uint256",
              "contract": "HouseBusinessToken",
              "src": "contracts\\TokenContract.sol:36"
            },
            {
              "label": "_name",
              "offset": 0,
              "slot": "3",
              "type": "t_string_storage",
              "contract": "HouseBusinessToken",
              "src": "contracts\\TokenContract.sol:37"
            },
            {
              "label": "_symbol",
              "offset": 0,
              "slot": "4",
              "type": "t_string_storage",
              "contract": "HouseBusinessToken",
              "src": "contracts\\TokenContract.sol:38"
            },
            {
              "label": "_decimals",
              "offset": 0,
              "slot": "5",
              "type": "t_uint8",
              "contract": "HouseBusinessToken",
              "src": "contracts\\TokenContract.sol:39"
            },
            {
              "label": "_owner",
              "offset": 1,
              "slot": "5",
              "type": "t_address",
              "contract": "HouseBusinessToken",
              "src": "contracts\\TokenContract.sol:40"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            },
            "t_mapping(t_address,t_mapping(t_address,t_uint256))": {
              "label": "mapping(address => mapping(address => uint256))",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_uint256)": {
              "label": "mapping(address => uint256)",
              "numberOfBytes": "32"
            },
            "t_string_storage": {
              "label": "string",
              "numberOfBytes": "32"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            },
            "t_uint8": {
              "label": "uint8",
              "numberOfBytes": "1"
            }
          },
          "layoutVersion": "1.1",
          "flat": true
        }
      },
      "IERC20": {
        "src": "contracts\\TokenContract.sol:5",
        "inherit": [],
        "libraries": [],
        "methods": [
          "totalSupply()",
          "balanceOf(address)",
          "transfer(address,uint256)",
          "allowance(address,address)",
          "approve(address,uint256)",
          "transferFrom(address,address,uint256)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "IERC20Metadata": {
        "src": "contracts\\TokenContract.sol:16",
        "inherit": [
          "IERC20"
        ],
        "libraries": [],
        "methods": [
          "name()",
          "symbol()",
          "decimals()"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      }
    },
    {
      "IPRC20": {
        "src": "contracts\\interfaces\\IPRC20.sol:4",
        "inherit": [],
        "libraries": [],
        "methods": [
          "totalSupply()",
          "balanceOf(address)",
          "transfer(address,uint256)",
          "allowance(address,address)",
          "approve(address,uint256)",
          "transferFrom(address,address,uint256)",
          "decimals()"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      }
    },
    {
      "IERC20": {
        "src": "@openzeppelin\\contracts\\token\\ERC20\\IERC20.sol:9",
        "inherit": [],
        "libraries": [],
        "methods": [
          "totalSupply()",
          "balanceOf(address)",
          "transfer(address,uint256)",
          "allowance(address,address)",
          "approve(address,uint256)",
          "transferFrom(address,address,uint256)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "IERC721": {
        "src": "@openzeppelin\\contracts\\token\\ERC721\\IERC721.sol:11",
        "inherit": [
          "IERC165"
        ],
        "libraries": [],
        "methods": [
          "balanceOf(address)",
          "ownerOf(uint256)",
          "safeTransferFrom(address,address,uint256,bytes)",
          "safeTransferFrom(address,address,uint256)",
          "transferFrom(address,address,uint256)",
          "approve(address,uint256)",
          "setApprovalForAll(address,bool)",
          "getApproved(uint256)",
          "isApprovedForAll(address,address)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "IERC165": {
        "src": "@openzeppelin\\contracts\\utils\\introspection\\IERC165.sol:15",
        "inherit": [],
        "libraries": [],
        "methods": [
          "supportsInterface(bytes4)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "HouseStaking": {
        "src": "contracts\\Staking.sol:6",
        "version": {
          "withMetadata": "b434e0d9fc6e61f20a7ae59c658eae1046efdaddcb12502607dc9c2ba1b48d96",
          "withoutMetadata": "55dd03d5604f70c2abf52ecb260f160dc660988f7e28526fbed5969d1a598935",
          "linkedWithoutMetadata": "55dd03d5604f70c2abf52ecb260f160dc660988f7e28526fbed5969d1a598935"
        },
        "inherit": [],
        "libraries": [],
        "methods": [
          "(address,address)",
          "calcDiv(uint256,uint256)",
          "setAPYConfig(uint256,uint256)",
          "getAllAPYTypes()",
          "stake(uint256,uint256)",
          "unstake(uint256)",
          "stakingFinished(uint256)",
          "totalRewards(address)",
          "claimRewards(address)",
          "getAllMyStakedNFTs()",
          "getAllAPYs()",
          "getPenalty()",
          "setPenalty(uint256)"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "HouseStaking",
            "src": "contracts\\Staking.sol:33"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "stakedCounter",
              "offset": 0,
              "slot": "0",
              "type": "t_uint256",
              "contract": "HouseStaking",
              "src": "contracts\\Staking.sol:8"
            },
            {
              "label": "penalty",
              "offset": 0,
              "slot": "1",
              "type": "t_uint256",
              "contract": "HouseStaking",
              "src": "contracts\\Staking.sol:10"
            },
            {
              "label": "APYtypes",
              "offset": 0,
              "slot": "2",
              "type": "t_array(t_uint256)dyn_storage",
              "contract": "HouseStaking",
              "src": "contracts\\Staking.sol:12"
            },
            {
              "label": "APYConfig",
              "offset": 0,
              "slot": "3",
              "type": "t_mapping(t_uint256,t_uint256)",
              "contract": "HouseStaking",
              "src": "contracts\\Staking.sol:15"
            },
            {
              "label": "stakedNfts",
              "offset": 0,
              "slot": "4",
              "type": "t_mapping(t_address,t_array(t_struct(StakedNft)248_storage)dyn_storage)",
              "contract": "HouseStaking",
              "src": "contracts\\Staking.sol:16"
            },
            {
              "label": "tokenAddress",
              "offset": 0,
              "slot": "5",
              "type": "t_address",
              "contract": "HouseStaking",
              "src": "contracts\\Staking.sol:18"
            },
            {
              "label": "houseNFTAddress",
              "offset": 0,
              "slot": "6",
              "type": "t_address",
              "contract": "HouseStaking",
              "src": "contracts\\Staking.sol:19"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            },
            "t_array(t_struct(StakedNft)248_storage)dyn_storage": {
              "label": "struct HouseStaking.StakedNft[]",
              "numberOfBytes": "32"
            },
            "t_array(t_uint256)dyn_storage": {
              "label": "uint256[]",
              "numberOfBytes": "32"
            },
            "t_bool": {
              "label": "bool",
              "numberOfBytes": "1"
            },
            "t_mapping(t_address,t_array(t_struct(StakedNft)248_storage)dyn_storage)": {
              "label": "mapping(address => struct HouseStaking.StakedNft[])",
              "numberOfBytes": "32"
            },
            "t_mapping(t_uint256,t_uint256)": {
              "label": "mapping(uint256 => uint256)",
              "numberOfBytes": "32"
            },
            "t_struct(StakedNft)248_storage": {
              "label": "struct HouseStaking.StakedNft",
              "members": [
                {
                  "label": "owner",
                  "type": "t_address",
                  "offset": 0,
                  "slot": "0"
                },
                {
                  "label": "tokenId",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "1"
                },
                {
                  "label": "startedDate",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "2"
                },
                {
                  "label": "endDate",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "3"
                },
                {
                  "label": "claimDate",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "4"
                },
                {
                  "label": "stakingType",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "5"
                },
                {
                  "label": "perSecRewards",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "6"
                },
                {
                  "label": "stakingStatus",
                  "type": "t_bool",
                  "offset": 0,
                  "slot": "7"
                }
              ],
              "numberOfBytes": "256"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            }
          },
          "layoutVersion": "1.1",
          "flat": true
        }
      },
      "IHouseBusiness": {
        "src": "contracts\\interfaces\\IHouseBusiness.sol:5",
        "inherit": [],
        "libraries": [],
        "methods": [
          "collectionName()",
          "collectionNameSymbol()",
          "houseCounter()",
          "stakedCounter()",
          "soldedCounter()",
          "hTypeCounter()",
          "minPrice()",
          "maxPrice()",
          "penalty()",
          "royalty()",
          "historyTypes(uint256)",
          "houseHistories(uint256)",
          "allMembers(address)",
          "allHouses(uint256)",
          "stakedNfts(address)",
          "setMinMaxHousePrice(uint256,uint256)",
          "setConfigToken(address)",
          "isMember()",
          "addMember(address)",
          "removeMember(address)",
          "tokenURI(uint256)",
          "setPayable(uint256,address,bool)",
          "mintHouse(string,string,string,string,uint256)",
          "addAllowList(uint256,address)",
          "removeAllowList(uint256,address)",
          "checkAllowedList(uint256,address)",
          "addHistory(uint256,uint256,string,string,string,string,string,uint256)",
          "getHistory(uint256)",
          "editHistory(uint256,uint256,string,string,string,string,string,uint256)",
          "getHistoryType()",
          "addOrEditHType(uint256,string,bool,bool,bool,bool,bool,bool,bool)",
          "removeHistoryType(uint256)",
          "getMinMaxNFT()",
          "getTokenOwner(uint256)",
          "buyHouseNft(uint256)",
          "sendToken(address,uint256)",
          "changeTokenPrice(uint256,uint256)",
          "getAllHouses()",
          "getAllPayableHouses()",
          "getAllMyHouses()",
          "withdrawToken(uint256)",
          "withdrawETH(uint256)",
          "setAPYConfig(uint256,uint256)",
          "getAllAPYTypes()",
          "stake(uint256,uint256)",
          "unstake(uint256)",
          "stakingFinished(uint256)",
          "totalRewards(address)",
          "claimRewards(address)",
          "getAllMyStakedNFTs()",
          "getTotalInfo()",
          "getAllAPYs()",
          "getPenalty()",
          "setPenalty(uint256)",
          "getRoyalty()",
          "setRoyalty(uint256)",
          "ownerOf(uint256)",
          "getTokenPrice(uint256)",
          "setHouseStakedStatus(uint256,bool)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      }
    },
    {
      "MainCleanContract": {
        "src": "contracts\\Contract.sol:6",
        "version": {
          "withMetadata": "6421e940ca2c08cec604e64c4e3802894c030e3491305b8df865d9e1c9e89aac",
          "withoutMetadata": "4b8cbb4879901533fe49280ca430f3230d2cf4cb717e76bb4a9404845cd178f8",
          "linkedWithoutMetadata": "4b8cbb4879901533fe49280ca430f3230d2cf4cb717e76bb4a9404845cd178f8"
        },
        "inherit": [],
        "libraries": [],
        "methods": [
          "(address)",
          "ccCreation(string,string,address,string,uint256,uint256,uint256,string)",
          "getAllContractsByOwner()",
          "getAllContractsBySigner()",
          "getContractById(uint256)",
          "addContractSigner(uint256,address)",
          "signContract(uint256)",
          "sendNotify(address,string,uint256)",
          "getUploadedCounter()",
          "getAllNotifies()",
          "calcDiv(uint256,uint256)",
          "toString(bytes)",
          "addressToString(address)",
          "uintToString(uint256)",
          "bytesToString(bytes32)",
          "transferContractOwnership(uint256,address,address)"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "MainCleanContract",
            "src": "contracts\\Contract.sol:52"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "ccCounter",
              "offset": 0,
              "slot": "0",
              "type": "t_uint256",
              "contract": "MainCleanContract",
              "src": "contracts\\Contract.sol:8"
            },
            {
              "label": "houseNFTAddress",
              "offset": 0,
              "slot": "1",
              "type": "t_address",
              "contract": "MainCleanContract",
              "src": "contracts\\Contract.sol:11"
            },
            {
              "label": "allCleanContracts",
              "offset": 0,
              "slot": "2",
              "type": "t_mapping(t_uint256,t_struct(CleanContract)39_storage)",
              "contract": "MainCleanContract",
              "src": "contracts\\Contract.sol:44"
            },
            {
              "label": "allContractsByOwner",
              "offset": 0,
              "slot": "3",
              "type": "t_mapping(t_address,t_array(t_uint256)dyn_storage)",
              "contract": "MainCleanContract",
              "src": "contracts\\Contract.sol:46"
            },
            {
              "label": "allContractsBySigner",
              "offset": 0,
              "slot": "4",
              "type": "t_mapping(t_address,t_array(t_uint256)dyn_storage)",
              "contract": "MainCleanContract",
              "src": "contracts\\Contract.sol:48"
            },
            {
              "label": "allNotifies",
              "offset": 0,
              "slot": "5",
              "type": "t_mapping(t_address,t_array(t_struct(Notify)52_storage)dyn_storage)",
              "contract": "MainCleanContract",
              "src": "contracts\\Contract.sol:50"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            },
            "t_array(t_struct(Notify)52_storage)dyn_storage": {
              "label": "struct MainCleanContract.Notify[]",
              "numberOfBytes": "32"
            },
            "t_array(t_uint256)dyn_storage": {
              "label": "uint256[]",
              "numberOfBytes": "32"
            },
            "t_bool": {
              "label": "bool",
              "numberOfBytes": "1"
            },
            "t_mapping(t_address,t_array(t_struct(Notify)52_storage)dyn_storage)": {
              "label": "mapping(address => struct MainCleanContract.Notify[])",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_array(t_uint256)dyn_storage)": {
              "label": "mapping(address => uint256[])",
              "numberOfBytes": "32"
            },
            "t_mapping(t_uint256,t_struct(CleanContract)39_storage)": {
              "label": "mapping(uint256 => struct MainCleanContract.CleanContract)",
              "numberOfBytes": "32"
            },
            "t_string_storage": {
              "label": "string",
              "numberOfBytes": "32"
            },
            "t_struct(CleanContract)39_storage": {
              "label": "struct MainCleanContract.CleanContract",
              "members": [
                {
                  "label": "contractId",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "0"
                },
                {
                  "label": "companyName",
                  "type": "t_string_storage",
                  "offset": 0,
                  "slot": "1"
                },
                {
                  "label": "contractType",
                  "type": "t_string_storage",
                  "offset": 0,
                  "slot": "2"
                },
                {
                  "label": "contractURI",
                  "type": "t_string_storage",
                  "offset": 0,
                  "slot": "3"
                },
                {
                  "label": "dateFrom",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "4"
                },
                {
                  "label": "dateTo",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "5"
                },
                {
                  "label": "agreedPrice",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "6"
                },
                {
                  "label": "currency",
                  "type": "t_string_storage",
                  "offset": 0,
                  "slot": "7"
                },
                {
                  "label": "creator",
                  "type": "t_address",
                  "offset": 0,
                  "slot": "8"
                },
                {
                  "label": "owner",
                  "type": "t_address",
                  "offset": 0,
                  "slot": "9"
                },
                {
                  "label": "creatorApproval",
                  "type": "t_bool",
                  "offset": 20,
                  "slot": "9"
                },
                {
                  "label": "creatorSignDate",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "10"
                },
                {
                  "label": "contractSigner",
                  "type": "t_address",
                  "offset": 0,
                  "slot": "11"
                },
                {
                  "label": "signerApproval",
                  "type": "t_bool",
                  "offset": 20,
                  "slot": "11"
                },
                {
                  "label": "signerSignDate",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "12"
                },
                {
                  "label": "status",
                  "type": "t_string_storage",
                  "offset": 0,
                  "slot": "13"
                }
              ],
              "numberOfBytes": "448"
            },
            "t_struct(Notify)52_storage": {
              "label": "struct MainCleanContract.Notify",
              "members": [
                {
                  "label": "nSender",
                  "type": "t_address",
                  "offset": 0,
                  "slot": "0"
                },
                {
                  "label": "nReceiver",
                  "type": "t_address",
                  "offset": 0,
                  "slot": "1"
                },
                {
                  "label": "ccID",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "2"
                },
                {
                  "label": "notifySentTime",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "3"
                },
                {
                  "label": "notifyContent",
                  "type": "t_string_storage",
                  "offset": 0,
                  "slot": "4"
                },
                {
                  "label": "status",
                  "type": "t_bool",
                  "offset": 0,
                  "slot": "5"
                }
              ],
              "numberOfBytes": "192"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            }
          },
          "layoutVersion": "1.1",
          "flat": true
        }
      }
    },
    {
      "IERC20": {
        "src": "@openzeppelin\\contracts\\token\\ERC20\\IERC20.sol:9",
        "inherit": [],
        "libraries": [],
        "methods": [
          "totalSupply()",
          "balanceOf(address)",
          "transfer(address,uint256)",
          "allowance(address,address)",
          "approve(address,uint256)",
          "transferFrom(address,address,uint256)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "ERC721": {
        "src": "@openzeppelin\\contracts\\token\\ERC721\\ERC721.sol:19",
        "version": {
          "withMetadata": "311027b738fb50ea92c84baf68eacb931adf05de03da13635a661dc9c5b03f73",
          "withoutMetadata": "9ec7f439077c3b762bc3aa6a17c55aba7a78d240190c9c7814df896455a0f780",
          "linkedWithoutMetadata": "9ec7f439077c3b762bc3aa6a17c55aba7a78d240190c9c7814df896455a0f780"
        },
        "inherit": [
          "IERC721Metadata",
          "IERC721",
          "ERC165",
          "IERC165",
          "Context"
        ],
        "libraries": [
          "Address",
          "Strings"
        ],
        "methods": [
          "(string,string)",
          "supportsInterface(bytes4)",
          "balanceOf(address)",
          "ownerOf(uint256)",
          "name()",
          "symbol()",
          "tokenURI(uint256)",
          "approve(address,uint256)",
          "getApproved(uint256)",
          "setApprovalForAll(address,bool)",
          "isApprovedForAll(address,address)",
          "transferFrom(address,address,uint256)",
          "safeTransferFrom(address,address,uint256)",
          "safeTransferFrom(address,address,uint256,bytes)"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "ERC721",
            "src": "@openzeppelin\\contracts\\token\\ERC721\\ERC721.sol:44"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "_name",
              "offset": 0,
              "slot": "0",
              "type": "t_string_storage",
              "contract": "ERC721",
              "src": "@openzeppelin\\contracts\\token\\ERC721\\ERC721.sol:24"
            },
            {
              "label": "_symbol",
              "offset": 0,
              "slot": "1",
              "type": "t_string_storage",
              "contract": "ERC721",
              "src": "@openzeppelin\\contracts\\token\\ERC721\\ERC721.sol:27"
            },
            {
              "label": "_owners",
              "offset": 0,
              "slot": "2",
              "type": "t_mapping(t_uint256,t_address)",
              "contract": "ERC721",
              "src": "@openzeppelin\\contracts\\token\\ERC721\\ERC721.sol:30"
            },
            {
              "label": "_balances",
              "offset": 0,
              "slot": "3",
              "type": "t_mapping(t_address,t_uint256)",
              "contract": "ERC721",
              "src": "@openzeppelin\\contracts\\token\\ERC721\\ERC721.sol:33"
            },
            {
              "label": "_tokenApprovals",
              "offset": 0,
              "slot": "4",
              "type": "t_mapping(t_uint256,t_address)",
              "contract": "ERC721",
              "src": "@openzeppelin\\contracts\\token\\ERC721\\ERC721.sol:36"
            },
            {
              "label": "_operatorApprovals",
              "offset": 0,
              "slot": "5",
              "type": "t_mapping(t_address,t_mapping(t_address,t_bool))",
              "contract": "ERC721",
              "src": "@openzeppelin\\contracts\\token\\ERC721\\ERC721.sol:39"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            },
            "t_bool": {
              "label": "bool",
              "numberOfBytes": "1"
            },
            "t_mapping(t_address,t_bool)": {
              "label": "mapping(address => bool)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_mapping(t_address,t_bool))": {
              "label": "mapping(address => mapping(address => bool))",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_uint256)": {
              "label": "mapping(address => uint256)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_uint256,t_address)": {
              "label": "mapping(uint256 => address)",
              "numberOfBytes": "32"
            },
            "t_string_storage": {
              "label": "string",
              "numberOfBytes": "32"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            }
          },
          "layoutVersion": "1.1",
          "flat": true
        }
      },
      "IERC721": {
        "src": "@openzeppelin\\contracts\\token\\ERC721\\IERC721.sol:11",
        "inherit": [
          "IERC165"
        ],
        "libraries": [],
        "methods": [
          "balanceOf(address)",
          "ownerOf(uint256)",
          "safeTransferFrom(address,address,uint256,bytes)",
          "safeTransferFrom(address,address,uint256)",
          "transferFrom(address,address,uint256)",
          "approve(address,uint256)",
          "setApprovalForAll(address,bool)",
          "getApproved(uint256)",
          "isApprovedForAll(address,address)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "IERC721Receiver": {
        "src": "@openzeppelin\\contracts\\token\\ERC721\\IERC721Receiver.sol:11",
        "inherit": [],
        "libraries": [],
        "methods": [
          "onERC721Received(address,address,uint256,bytes)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "ERC721URIStorage": {
        "src": "@openzeppelin\\contracts\\token\\ERC721\\extensions\\ERC721URIStorage.sol:11",
        "inherit": [
          "ERC721",
          "IERC721Metadata",
          "IERC721",
          "ERC165",
          "IERC165",
          "Context"
        ],
        "libraries": [
          "Strings"
        ],
        "methods": [
          "tokenURI(uint256)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [
            {
              "label": "_name",
              "offset": 0,
              "slot": "0",
              "type": "t_string_storage",
              "contract": "ERC721",
              "src": "@openzeppelin\\contracts\\token\\ERC721\\ERC721.sol:24"
            },
            {
              "label": "_symbol",
              "offset": 0,
              "slot": "1",
              "type": "t_string_storage",
              "contract": "ERC721",
              "src": "@openzeppelin\\contracts\\token\\ERC721\\ERC721.sol:27"
            },
            {
              "label": "_owners",
              "offset": 0,
              "slot": "2",
              "type": "t_mapping(t_uint256,t_address)",
              "contract": "ERC721",
              "src": "@openzeppelin\\contracts\\token\\ERC721\\ERC721.sol:30"
            },
            {
              "label": "_balances",
              "offset": 0,
              "slot": "3",
              "type": "t_mapping(t_address,t_uint256)",
              "contract": "ERC721",
              "src": "@openzeppelin\\contracts\\token\\ERC721\\ERC721.sol:33"
            },
            {
              "label": "_tokenApprovals",
              "offset": 0,
              "slot": "4",
              "type": "t_mapping(t_uint256,t_address)",
              "contract": "ERC721",
              "src": "@openzeppelin\\contracts\\token\\ERC721\\ERC721.sol:36"
            },
            {
              "label": "_operatorApprovals",
              "offset": 0,
              "slot": "5",
              "type": "t_mapping(t_address,t_mapping(t_address,t_bool))",
              "contract": "ERC721",
              "src": "@openzeppelin\\contracts\\token\\ERC721\\ERC721.sol:39"
            },
            {
              "label": "_tokenURIs",
              "offset": 0,
              "slot": "6",
              "type": "t_mapping(t_uint256,t_string_storage)",
              "contract": "ERC721URIStorage",
              "src": "@openzeppelin\\contracts\\token\\ERC721\\extensions\\ERC721URIStorage.sol:15"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            },
            "t_bool": {
              "label": "bool",
              "numberOfBytes": "1"
            },
            "t_mapping(t_address,t_bool)": {
              "label": "mapping(address => bool)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_mapping(t_address,t_bool))": {
              "label": "mapping(address => mapping(address => bool))",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_uint256)": {
              "label": "mapping(address => uint256)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_uint256,t_address)": {
              "label": "mapping(uint256 => address)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_uint256,t_string_storage)": {
              "label": "mapping(uint256 => string)",
              "numberOfBytes": "32"
            },
            "t_string_storage": {
              "label": "string",
              "numberOfBytes": "32"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            }
          },
          "layoutVersion": "1.1",
          "flat": true
        }
      },
      "IERC721Metadata": {
        "src": "@openzeppelin\\contracts\\token\\ERC721\\extensions\\IERC721Metadata.sol:12",
        "inherit": [
          "IERC721",
          "IERC165"
        ],
        "libraries": [],
        "methods": [
          "name()",
          "symbol()",
          "tokenURI(uint256)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "Address": {
        "src": "@openzeppelin\\contracts\\utils\\Address.sol:9",
        "version": {
          "withMetadata": "a0500f265408d7c0dbf75da3f9e44a5c2ee85e18bb1b58fe491ffcfa4ea7fd9b",
          "withoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db",
          "linkedWithoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db"
        },
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [
          {
            "kind": "delegatecall",
            "src": "@openzeppelin\\contracts\\utils\\Address.sol:185"
          }
        ],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "Context": {
        "src": "@openzeppelin\\contracts\\utils\\Context.sol:16",
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "Strings": {
        "src": "@openzeppelin\\contracts\\utils\\Strings.sol:11",
        "version": {
          "withMetadata": "c385b5200dd723f945d28b88358d79ca1b5c0f71c28cbbab9acf6d6f3fd15593",
          "withoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db",
          "linkedWithoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db"
        },
        "inherit": [],
        "libraries": [
          "Math"
        ],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "ERC165": {
        "src": "@openzeppelin\\contracts\\utils\\introspection\\ERC165.sol:22",
        "inherit": [
          "IERC165"
        ],
        "libraries": [],
        "methods": [
          "supportsInterface(bytes4)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "IERC165": {
        "src": "@openzeppelin\\contracts\\utils\\introspection\\IERC165.sol:15",
        "inherit": [],
        "libraries": [],
        "methods": [
          "supportsInterface(bytes4)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "Math": {
        "src": "@openzeppelin\\contracts\\utils\\math\\Math.sol:9",
        "version": {
          "withMetadata": "fcaf39e5e702f2902d6ef00c1def75c9800e8d2a0a78a87cf542096cafc7a4b0",
          "withoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db",
          "linkedWithoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db"
        },
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "HouseBusiness": {
        "src": "contracts\\HouseBusiness.sol:12",
        "version": {
          "withMetadata": "47a1090e08563373c635dece4104bff8459e1bc7f8e13fdc03b3307ae605c21d",
          "withoutMetadata": "5bd000263f7cae38c6e988e48a8f6b8a40985f87f193947f9f2fa581e29f1387",
          "linkedWithoutMetadata": "5bd000263f7cae38c6e988e48a8f6b8a40985f87f193947f9f2fa581e29f1387"
        },
        "inherit": [
          "ERC721URIStorage",
          "ERC721",
          "IERC721Metadata",
          "IERC721",
          "ERC165",
          "IERC165",
          "Context"
        ],
        "libraries": [],
        "methods": [
          "(address)",
          "setMinMaxHousePrice(uint256,uint256)",
          "setConfigToken(address)",
          "isMember()",
          "addMember(address)",
          "removeMember(address)",
          "tokenURI(uint256)",
          "setCContractAddress(address)",
          "setStakingContractAddress(address)",
          "setPayable(uint256,address,bool)",
          "mintHouse(string,string,string,string,uint256)",
          "addAllowList(uint256,address)",
          "removeAllowList(uint256,address)",
          "checkAllowedList(uint256,address)",
          "addHistory(uint256,uint256,uint256,string,string,string,string,string,uint256)",
          "getHistory(uint256)",
          "editHistory(uint256,uint256,string,string,string,string,string,uint256)",
          "getHistoryType()",
          "addOrEditHType(uint256,string,bool,bool,bool,bool,bool,bool,bool)",
          "removeHistoryType(uint256)",
          "getMinMaxNFT()",
          "getTokenOwner(uint256)",
          "buyHouseNft(uint256)",
          "sendToken(address,uint256)",
          "changeTokenPrice(uint256,uint256)",
          "getAllHouses()",
          "getAllPayableHouses()",
          "getAllMyHouses()",
          "withdrawToken(uint256)",
          "withdrawETH(uint256)",
          "getTotalInfo()",
          "getTokenPrice(uint256)",
          "setHouseStakedStatus(uint256,bool)",
          "getRoyalty()",
          "setRoyalty(uint256)"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "HouseBusiness",
            "src": "contracts\\HouseBusiness.sol:92"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "_name",
              "offset": 0,
              "slot": "0",
              "type": "t_string_storage",
              "contract": "ERC721",
              "src": "@openzeppelin\\contracts\\token\\ERC721\\ERC721.sol:24"
            },
            {
              "label": "_symbol",
              "offset": 0,
              "slot": "1",
              "type": "t_string_storage",
              "contract": "ERC721",
              "src": "@openzeppelin\\contracts\\token\\ERC721\\ERC721.sol:27"
            },
            {
              "label": "_owners",
              "offset": 0,
              "slot": "2",
              "type": "t_mapping(t_uint256,t_address)",
              "contract": "ERC721",
              "src": "@openzeppelin\\contracts\\token\\ERC721\\ERC721.sol:30"
            },
            {
              "label": "_balances",
              "offset": 0,
              "slot": "3",
              "type": "t_mapping(t_address,t_uint256)",
              "contract": "ERC721",
              "src": "@openzeppelin\\contracts\\token\\ERC721\\ERC721.sol:33"
            },
            {
              "label": "_tokenApprovals",
              "offset": 0,
              "slot": "4",
              "type": "t_mapping(t_uint256,t_address)",
              "contract": "ERC721",
              "src": "@openzeppelin\\contracts\\token\\ERC721\\ERC721.sol:36"
            },
            {
              "label": "_operatorApprovals",
              "offset": 0,
              "slot": "5",
              "type": "t_mapping(t_address,t_mapping(t_address,t_bool))",
              "contract": "ERC721",
              "src": "@openzeppelin\\contracts\\token\\ERC721\\ERC721.sol:39"
            },
            {
              "label": "_tokenURIs",
              "offset": 0,
              "slot": "6",
              "type": "t_mapping(t_uint256,t_string_storage)",
              "contract": "ERC721URIStorage",
              "src": "@openzeppelin\\contracts\\token\\ERC721\\extensions\\ERC721URIStorage.sol:15"
            },
            {
              "label": "collectionName",
              "offset": 0,
              "slot": "7",
              "type": "t_string_storage",
              "contract": "HouseBusiness",
              "src": "contracts\\HouseBusiness.sol:14"
            },
            {
              "label": "collectionNameSymbol",
              "offset": 0,
              "slot": "8",
              "type": "t_string_storage",
              "contract": "HouseBusiness",
              "src": "contracts\\HouseBusiness.sol:16"
            },
            {
              "label": "houseCounter",
              "offset": 0,
              "slot": "9",
              "type": "t_uint256",
              "contract": "HouseBusiness",
              "src": "contracts\\HouseBusiness.sol:18"
            },
            {
              "label": "soldedCounter",
              "offset": 0,
              "slot": "10",
              "type": "t_uint256",
              "contract": "HouseBusiness",
              "src": "contracts\\HouseBusiness.sol:21"
            },
            {
              "label": "hTypeCounter",
              "offset": 0,
              "slot": "11",
              "type": "t_uint256",
              "contract": "HouseBusiness",
              "src": "contracts\\HouseBusiness.sol:23"
            },
            {
              "label": "_token",
              "offset": 0,
              "slot": "12",
              "type": "t_contract(IERC20)77",
              "contract": "HouseBusiness",
              "src": "contracts\\HouseBusiness.sol:25"
            },
            {
              "label": "minPrice",
              "offset": 0,
              "slot": "13",
              "type": "t_uint256",
              "contract": "HouseBusiness",
              "src": "contracts\\HouseBusiness.sol:27"
            },
            {
              "label": "maxPrice",
              "offset": 0,
              "slot": "14",
              "type": "t_uint256",
              "contract": "HouseBusiness",
              "src": "contracts\\HouseBusiness.sol:29"
            },
            {
              "label": "royalty",
              "offset": 0,
              "slot": "15",
              "type": "t_uint256",
              "contract": "HouseBusiness",
              "src": "contracts\\HouseBusiness.sol:31"
            },
            {
              "label": "cContract",
              "offset": 0,
              "slot": "16",
              "type": "t_contract(IMainCleanContract)5464",
              "contract": "HouseBusiness",
              "src": "contracts\\HouseBusiness.sol:33"
            },
            {
              "label": "historyTypes",
              "offset": 0,
              "slot": "17",
              "type": "t_array(t_struct(HistoryType)2831_storage)dyn_storage",
              "contract": "HouseBusiness",
              "src": "contracts\\HouseBusiness.sol:73"
            },
            {
              "label": "houseHistories",
              "offset": 0,
              "slot": "18",
              "type": "t_mapping(t_uint256,t_array(t_struct(History)2812_storage)dyn_storage)",
              "contract": "HouseBusiness",
              "src": "contracts\\HouseBusiness.sol:75"
            },
            {
              "label": "allMembers",
              "offset": 0,
              "slot": "19",
              "type": "t_mapping(t_address,t_bool)",
              "contract": "HouseBusiness",
              "src": "contracts\\HouseBusiness.sol:77"
            },
            {
              "label": "allHouses",
              "offset": 0,
              "slot": "20",
              "type": "t_mapping(t_uint256,t_struct(House)2795_storage)",
              "contract": "HouseBusiness",
              "src": "contracts\\HouseBusiness.sol:79"
            },
            {
              "label": "allowedList",
              "offset": 0,
              "slot": "21",
              "type": "t_mapping(t_uint256,t_mapping(t_address,t_bool))",
              "contract": "HouseBusiness",
              "src": "contracts\\HouseBusiness.sol:81"
            },
            {
              "label": "stakingContractAddress",
              "offset": 0,
              "slot": "22",
              "type": "t_address",
              "contract": "HouseBusiness",
              "src": "contracts\\HouseBusiness.sol:84"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            },
            "t_array(t_struct(History)2812_storage)dyn_storage": {
              "label": "struct HouseBusiness.History[]",
              "numberOfBytes": "32"
            },
            "t_array(t_struct(HistoryType)2831_storage)dyn_storage": {
              "label": "struct HouseBusiness.HistoryType[]",
              "numberOfBytes": "32"
            },
            "t_bool": {
              "label": "bool",
              "numberOfBytes": "1"
            },
            "t_contract(IERC20)77": {
              "label": "contract IERC20",
              "numberOfBytes": "20"
            },
            "t_contract(IMainCleanContract)5464": {
              "label": "contract IMainCleanContract",
              "numberOfBytes": "20"
            },
            "t_mapping(t_address,t_bool)": {
              "label": "mapping(address => bool)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_mapping(t_address,t_bool))": {
              "label": "mapping(address => mapping(address => bool))",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_uint256)": {
              "label": "mapping(address => uint256)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_uint256,t_address)": {
              "label": "mapping(uint256 => address)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_uint256,t_array(t_struct(History)2812_storage)dyn_storage)": {
              "label": "mapping(uint256 => struct HouseBusiness.History[])",
              "numberOfBytes": "32"
            },
            "t_mapping(t_uint256,t_mapping(t_address,t_bool))": {
              "label": "mapping(uint256 => mapping(address => bool))",
              "numberOfBytes": "32"
            },
            "t_mapping(t_uint256,t_string_storage)": {
              "label": "mapping(uint256 => string)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_uint256,t_struct(House)2795_storage)": {
              "label": "mapping(uint256 => struct HouseBusiness.House)",
              "numberOfBytes": "32"
            },
            "t_string_storage": {
              "label": "string",
              "numberOfBytes": "32"
            },
            "t_struct(History)2812_storage": {
              "label": "struct HouseBusiness.History",
              "members": [
                {
                  "label": "hID",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "0"
                },
                {
                  "label": "contractId",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "1"
                },
                {
                  "label": "houseImg",
                  "type": "t_string_storage",
                  "offset": 0,
                  "slot": "2"
                },
                {
                  "label": "houseBrand",
                  "type": "t_string_storage",
                  "offset": 0,
                  "slot": "3"
                },
                {
                  "label": "desc",
                  "type": "t_string_storage",
                  "offset": 0,
                  "slot": "4"
                },
                {
                  "label": "history",
                  "type": "t_string_storage",
                  "offset": 0,
                  "slot": "5"
                },
                {
                  "label": "brandType",
                  "type": "t_string_storage",
                  "offset": 0,
                  "slot": "6"
                },
                {
                  "label": "yearField",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "7"
                }
              ],
              "numberOfBytes": "256"
            },
            "t_struct(HistoryType)2831_storage": {
              "label": "struct HouseBusiness.HistoryType",
              "members": [
                {
                  "label": "hID",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "0"
                },
                {
                  "label": "hLabel",
                  "type": "t_string_storage",
                  "offset": 0,
                  "slot": "1"
                },
                {
                  "label": "connectContract",
                  "type": "t_bool",
                  "offset": 0,
                  "slot": "2"
                },
                {
                  "label": "imgNeed",
                  "type": "t_bool",
                  "offset": 1,
                  "slot": "2"
                },
                {
                  "label": "brandNeed",
                  "type": "t_bool",
                  "offset": 2,
                  "slot": "2"
                },
                {
                  "label": "descNeed",
                  "type": "t_bool",
                  "offset": 3,
                  "slot": "2"
                },
                {
                  "label": "brandTypeNeed",
                  "type": "t_bool",
                  "offset": 4,
                  "slot": "2"
                },
                {
                  "label": "yearNeed",
                  "type": "t_bool",
                  "offset": 5,
                  "slot": "2"
                },
                {
                  "label": "checkMark",
                  "type": "t_bool",
                  "offset": 6,
                  "slot": "2"
                }
              ],
              "numberOfBytes": "96"
            },
            "t_struct(House)2795_storage": {
              "label": "struct HouseBusiness.House",
              "members": [
                {
                  "label": "tokenId",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "0"
                },
                {
                  "label": "tokenName",
                  "type": "t_string_storage",
                  "offset": 0,
                  "slot": "1"
                },
                {
                  "label": "tokenURI",
                  "type": "t_string_storage",
                  "offset": 0,
                  "slot": "2"
                },
                {
                  "label": "tokenType",
                  "type": "t_string_storage",
                  "offset": 0,
                  "slot": "3"
                },
                {
                  "label": "currentOwner",
                  "type": "t_address",
                  "offset": 0,
                  "slot": "4"
                },
                {
                  "label": "previousOwner",
                  "type": "t_address",
                  "offset": 0,
                  "slot": "5"
                },
                {
                  "label": "buyer",
                  "type": "t_address",
                  "offset": 0,
                  "slot": "6"
                },
                {
                  "label": "price",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "7"
                },
                {
                  "label": "numberOfTransfers",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "8"
                },
                {
                  "label": "nftPayable",
                  "type": "t_bool",
                  "offset": 0,
                  "slot": "9"
                },
                {
                  "label": "staked",
                  "type": "t_bool",
                  "offset": 1,
                  "slot": "9"
                },
                {
                  "label": "soldstatus",
                  "type": "t_bool",
                  "offset": 2,
                  "slot": "9"
                }
              ],
              "numberOfBytes": "320"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            }
          },
          "layoutVersion": "1.1",
          "flat": true
        }
      },
      "HouseStaking": {
        "src": "contracts\\Staking.sol:6",
        "version": {
          "withMetadata": "b434e0d9fc6e61f20a7ae59c658eae1046efdaddcb12502607dc9c2ba1b48d96",
          "withoutMetadata": "55dd03d5604f70c2abf52ecb260f160dc660988f7e28526fbed5969d1a598935",
          "linkedWithoutMetadata": "55dd03d5604f70c2abf52ecb260f160dc660988f7e28526fbed5969d1a598935"
        },
        "inherit": [],
        "libraries": [],
        "methods": [
          "(address,address)",
          "calcDiv(uint256,uint256)",
          "setAPYConfig(uint256,uint256)",
          "getAllAPYTypes()",
          "stake(uint256,uint256)",
          "unstake(uint256)",
          "stakingFinished(uint256)",
          "totalRewards(address)",
          "claimRewards(address)",
          "getAllMyStakedNFTs()",
          "getAllAPYs()",
          "getPenalty()",
          "setPenalty(uint256)"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "HouseStaking",
            "src": "contracts\\Staking.sol:33"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "stakedCounter",
              "offset": 0,
              "slot": "0",
              "type": "t_uint256",
              "contract": "HouseStaking",
              "src": "contracts\\Staking.sol:8"
            },
            {
              "label": "penalty",
              "offset": 0,
              "slot": "1",
              "type": "t_uint256",
              "contract": "HouseStaking",
              "src": "contracts\\Staking.sol:10"
            },
            {
              "label": "APYtypes",
              "offset": 0,
              "slot": "2",
              "type": "t_array(t_uint256)dyn_storage",
              "contract": "HouseStaking",
              "src": "contracts\\Staking.sol:12"
            },
            {
              "label": "APYConfig",
              "offset": 0,
              "slot": "3",
              "type": "t_mapping(t_uint256,t_uint256)",
              "contract": "HouseStaking",
              "src": "contracts\\Staking.sol:15"
            },
            {
              "label": "stakedNfts",
              "offset": 0,
              "slot": "4",
              "type": "t_mapping(t_address,t_array(t_struct(StakedNft)4522_storage)dyn_storage)",
              "contract": "HouseStaking",
              "src": "contracts\\Staking.sol:16"
            },
            {
              "label": "tokenAddress",
              "offset": 0,
              "slot": "5",
              "type": "t_address",
              "contract": "HouseStaking",
              "src": "contracts\\Staking.sol:18"
            },
            {
              "label": "houseNFTAddress",
              "offset": 0,
              "slot": "6",
              "type": "t_address",
              "contract": "HouseStaking",
              "src": "contracts\\Staking.sol:19"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            },
            "t_array(t_struct(StakedNft)4522_storage)dyn_storage": {
              "label": "struct HouseStaking.StakedNft[]",
              "numberOfBytes": "32"
            },
            "t_array(t_uint256)dyn_storage": {
              "label": "uint256[]",
              "numberOfBytes": "32"
            },
            "t_bool": {
              "label": "bool",
              "numberOfBytes": "1"
            },
            "t_mapping(t_address,t_array(t_struct(StakedNft)4522_storage)dyn_storage)": {
              "label": "mapping(address => struct HouseStaking.StakedNft[])",
              "numberOfBytes": "32"
            },
            "t_mapping(t_uint256,t_uint256)": {
              "label": "mapping(uint256 => uint256)",
              "numberOfBytes": "32"
            },
            "t_struct(StakedNft)4522_storage": {
              "label": "struct HouseStaking.StakedNft",
              "members": [
                {
                  "label": "owner",
                  "type": "t_address",
                  "offset": 0,
                  "slot": "0"
                },
                {
                  "label": "tokenId",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "1"
                },
                {
                  "label": "startedDate",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "2"
                },
                {
                  "label": "endDate",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "3"
                },
                {
                  "label": "claimDate",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "4"
                },
                {
                  "label": "stakingType",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "5"
                },
                {
                  "label": "perSecRewards",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "6"
                },
                {
                  "label": "stakingStatus",
                  "type": "t_bool",
                  "offset": 0,
                  "slot": "7"
                }
              ],
              "numberOfBytes": "256"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            }
          },
          "layoutVersion": "1.1",
          "flat": true
        }
      },
      "IMainCleanContract": {
        "src": "contracts\\interfaces\\IContract.sol:6",
        "inherit": [],
        "libraries": [],
        "methods": [
          "getContractById(uint256)",
          "transferContractOwnership(uint256,address,address)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "IHouseBusiness": {
        "src": "contracts\\interfaces\\IHouseBusiness.sol:5",
        "inherit": [],
        "libraries": [],
        "methods": [
          "collectionName()",
          "collectionNameSymbol()",
          "houseCounter()",
          "stakedCounter()",
          "soldedCounter()",
          "hTypeCounter()",
          "minPrice()",
          "maxPrice()",
          "penalty()",
          "royalty()",
          "historyTypes(uint256)",
          "houseHistories(uint256)",
          "allMembers(address)",
          "allHouses(uint256)",
          "stakedNfts(address)",
          "setMinMaxHousePrice(uint256,uint256)",
          "setConfigToken(address)",
          "isMember()",
          "addMember(address)",
          "removeMember(address)",
          "tokenURI(uint256)",
          "setPayable(uint256,address,bool)",
          "mintHouse(string,string,string,string,uint256)",
          "addAllowList(uint256,address)",
          "removeAllowList(uint256,address)",
          "checkAllowedList(uint256,address)",
          "addHistory(uint256,uint256,string,string,string,string,string,uint256)",
          "getHistory(uint256)",
          "editHistory(uint256,uint256,string,string,string,string,string,uint256)",
          "getHistoryType()",
          "addOrEditHType(uint256,string,bool,bool,bool,bool,bool,bool,bool)",
          "removeHistoryType(uint256)",
          "getMinMaxNFT()",
          "getTokenOwner(uint256)",
          "buyHouseNft(uint256)",
          "sendToken(address,uint256)",
          "changeTokenPrice(uint256,uint256)",
          "getAllHouses()",
          "getAllPayableHouses()",
          "getAllMyHouses()",
          "withdrawToken(uint256)",
          "withdrawETH(uint256)",
          "setAPYConfig(uint256,uint256)",
          "getAllAPYTypes()",
          "stake(uint256,uint256)",
          "unstake(uint256)",
          "stakingFinished(uint256)",
          "totalRewards(address)",
          "claimRewards(address)",
          "getAllMyStakedNFTs()",
          "getTotalInfo()",
          "getAllAPYs()",
          "getPenalty()",
          "setPenalty(uint256)",
          "getRoyalty()",
          "setRoyalty(uint256)",
          "ownerOf(uint256)",
          "getTokenPrice(uint256)",
          "setHouseStakedStatus(uint256,bool)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "IStaking": {
        "src": "contracts\\interfaces\\IStaking.sol:5",
        "inherit": [],
        "libraries": [],
        "methods": [
          "stakeCounter()"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      }
    },
    {
      "MainCleanContract": {
        "src": "contracts\\Contract.sol:6",
        "version": {
          "withMetadata": "6421e940ca2c08cec604e64c4e3802894c030e3491305b8df865d9e1c9e89aac",
          "withoutMetadata": "4b8cbb4879901533fe49280ca430f3230d2cf4cb717e76bb4a9404845cd178f8",
          "linkedWithoutMetadata": "4b8cbb4879901533fe49280ca430f3230d2cf4cb717e76bb4a9404845cd178f8"
        },
        "inherit": [],
        "libraries": [],
        "methods": [
          "(address)",
          "ccCreation(string,string,address,string,uint256,uint256,uint256,string)",
          "getAllContractsByOwner()",
          "getAllContractsBySigner()",
          "getContractById(uint256)",
          "addContractSigner(uint256,address)",
          "signContract(uint256)",
          "sendNotify(address,string,uint256)",
          "getUploadedCounter()",
          "getAllNotifies()",
          "calcDiv(uint256,uint256)",
          "toString(bytes)",
          "addressToString(address)",
          "uintToString(uint256)",
          "bytesToString(bytes32)",
          "transferContractOwnership(uint256,address,address)"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "MainCleanContract",
            "src": "contracts\\Contract.sol:52"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "ccCounter",
              "offset": 0,
              "slot": "0",
              "type": "t_uint256",
              "contract": "MainCleanContract",
              "src": "contracts\\Contract.sol:8"
            },
            {
              "label": "houseNFTAddress",
              "offset": 0,
              "slot": "1",
              "type": "t_address",
              "contract": "MainCleanContract",
              "src": "contracts\\Contract.sol:11"
            },
            {
              "label": "allCleanContracts",
              "offset": 0,
              "slot": "2",
              "type": "t_mapping(t_uint256,t_struct(CleanContract)39_storage)",
              "contract": "MainCleanContract",
              "src": "contracts\\Contract.sol:44"
            },
            {
              "label": "allContractsByOwner",
              "offset": 0,
              "slot": "3",
              "type": "t_mapping(t_address,t_array(t_uint256)dyn_storage)",
              "contract": "MainCleanContract",
              "src": "contracts\\Contract.sol:46"
            },
            {
              "label": "allContractsBySigner",
              "offset": 0,
              "slot": "4",
              "type": "t_mapping(t_address,t_array(t_uint256)dyn_storage)",
              "contract": "MainCleanContract",
              "src": "contracts\\Contract.sol:48"
            },
            {
              "label": "allNotifies",
              "offset": 0,
              "slot": "5",
              "type": "t_mapping(t_address,t_array(t_struct(Notify)52_storage)dyn_storage)",
              "contract": "MainCleanContract",
              "src": "contracts\\Contract.sol:50"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            },
            "t_array(t_struct(Notify)52_storage)dyn_storage": {
              "label": "struct MainCleanContract.Notify[]",
              "numberOfBytes": "32"
            },
            "t_array(t_uint256)dyn_storage": {
              "label": "uint256[]",
              "numberOfBytes": "32"
            },
            "t_bool": {
              "label": "bool",
              "numberOfBytes": "1"
            },
            "t_mapping(t_address,t_array(t_struct(Notify)52_storage)dyn_storage)": {
              "label": "mapping(address => struct MainCleanContract.Notify[])",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_array(t_uint256)dyn_storage)": {
              "label": "mapping(address => uint256[])",
              "numberOfBytes": "32"
            },
            "t_mapping(t_uint256,t_struct(CleanContract)39_storage)": {
              "label": "mapping(uint256 => struct MainCleanContract.CleanContract)",
              "numberOfBytes": "32"
            },
            "t_string_storage": {
              "label": "string",
              "numberOfBytes": "32"
            },
            "t_struct(CleanContract)39_storage": {
              "label": "struct MainCleanContract.CleanContract",
              "members": [
                {
                  "label": "contractId",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "0"
                },
                {
                  "label": "companyName",
                  "type": "t_string_storage",
                  "offset": 0,
                  "slot": "1"
                },
                {
                  "label": "contractType",
                  "type": "t_string_storage",
                  "offset": 0,
                  "slot": "2"
                },
                {
                  "label": "contractURI",
                  "type": "t_string_storage",
                  "offset": 0,
                  "slot": "3"
                },
                {
                  "label": "dateFrom",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "4"
                },
                {
                  "label": "dateTo",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "5"
                },
                {
                  "label": "agreedPrice",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "6"
                },
                {
                  "label": "currency",
                  "type": "t_string_storage",
                  "offset": 0,
                  "slot": "7"
                },
                {
                  "label": "creator",
                  "type": "t_address",
                  "offset": 0,
                  "slot": "8"
                },
                {
                  "label": "owner",
                  "type": "t_address",
                  "offset": 0,
                  "slot": "9"
                },
                {
                  "label": "creatorApproval",
                  "type": "t_bool",
                  "offset": 20,
                  "slot": "9"
                },
                {
                  "label": "creatorSignDate",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "10"
                },
                {
                  "label": "contractSigner",
                  "type": "t_address",
                  "offset": 0,
                  "slot": "11"
                },
                {
                  "label": "signerApproval",
                  "type": "t_bool",
                  "offset": 20,
                  "slot": "11"
                },
                {
                  "label": "signerSignDate",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "12"
                },
                {
                  "label": "status",
                  "type": "t_string_storage",
                  "offset": 0,
                  "slot": "13"
                }
              ],
              "numberOfBytes": "448"
            },
            "t_struct(Notify)52_storage": {
              "label": "struct MainCleanContract.Notify",
              "members": [
                {
                  "label": "nSender",
                  "type": "t_address",
                  "offset": 0,
                  "slot": "0"
                },
                {
                  "label": "nReceiver",
                  "type": "t_address",
                  "offset": 0,
                  "slot": "1"
                },
                {
                  "label": "ccID",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "2"
                },
                {
                  "label": "notifySentTime",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "3"
                },
                {
                  "label": "notifyContent",
                  "type": "t_string_storage",
                  "offset": 0,
                  "slot": "4"
                },
                {
                  "label": "status",
                  "type": "t_bool",
                  "offset": 0,
                  "slot": "5"
                }
              ],
              "numberOfBytes": "192"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            }
          },
          "layoutVersion": "1.1",
          "flat": true
        }
      }
    },
    {
      "ThirdParty": {
        "src": "contracts\\ThirdParty.sol:5",
        "version": {
          "withMetadata": "cbf5b2fae6668ee45b86827e485cbed39526db15e39a77a193d607720ff0015c",
          "withoutMetadata": "c7f6b899dcbca6a360ab204550ba9b4fec9f4cae1bcd2f5879cfa3965e9d550f",
          "linkedWithoutMetadata": "c7f6b899dcbca6a360ab204550ba9b4fec9f4cae1bcd2f5879cfa3965e9d550f"
        },
        "inherit": [],
        "libraries": [],
        "methods": [
          "getAllCategories()",
          "addCategory(string,uint256[])",
          "editCategory(uint256,string,uint256[])",
          "deleteCategory(uint256)",
          "getAllProperties()",
          "addProperty(string)",
          "editProperty(uint256,string)",
          "deleteProperty(uint256)",
          "getPackagesByCategory(uint256)",
          "addPackage(uint256,string,uint256,uint256,uint256,bool[])",
          "editPackage(uint256,uint256,string,uint256,uint256,uint256,bool[])",
          "deletePackage(uint256,uint256)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [
            {
              "label": "categoryCounter",
              "offset": 0,
              "slot": "0",
              "type": "t_uint256",
              "contract": "ThirdParty",
              "src": "contracts\\ThirdParty.sol:12"
            },
            {
              "label": "packageCounter",
              "offset": 0,
              "slot": "1",
              "type": "t_uint256",
              "contract": "ThirdParty",
              "src": "contracts\\ThirdParty.sol:23"
            },
            {
              "label": "propertyCounter",
              "offset": 0,
              "slot": "2",
              "type": "t_uint256",
              "contract": "ThirdParty",
              "src": "contracts\\ThirdParty.sol:29"
            },
            {
              "label": "allCategories",
              "offset": 0,
              "slot": "3",
              "type": "t_array(t_struct(Category)11_storage)dyn_storage",
              "contract": "ThirdParty",
              "src": "contracts\\ThirdParty.sol:31"
            },
            {
              "label": "allPackages",
              "offset": 0,
              "slot": "4",
              "type": "t_mapping(t_uint256,t_array(t_struct(Package)29_storage)dyn_storage)",
              "contract": "ThirdParty",
              "src": "contracts\\ThirdParty.sol:34"
            },
            {
              "label": "allProperties",
              "offset": 0,
              "slot": "5",
              "type": "t_array(t_struct(Property)36_storage)dyn_storage",
              "contract": "ThirdParty",
              "src": "contracts\\ThirdParty.sol:37"
            }
          ],
          "types": {
            "t_array(t_bool)dyn_storage": {
              "label": "bool[]",
              "numberOfBytes": "32"
            },
            "t_array(t_struct(Category)11_storage)dyn_storage": {
              "label": "struct ThirdParty.Category[]",
              "numberOfBytes": "32"
            },
            "t_array(t_struct(Package)29_storage)dyn_storage": {
              "label": "struct ThirdParty.Package[]",
              "numberOfBytes": "32"
            },
            "t_array(t_struct(Property)36_storage)dyn_storage": {
              "label": "struct ThirdParty.Property[]",
              "numberOfBytes": "32"
            },
            "t_array(t_uint256)dyn_storage": {
              "label": "uint256[]",
              "numberOfBytes": "32"
            },
            "t_bool": {
              "label": "bool",
              "numberOfBytes": "1"
            },
            "t_mapping(t_uint256,t_array(t_struct(Package)29_storage)dyn_storage)": {
              "label": "mapping(uint256 => struct ThirdParty.Package[])",
              "numberOfBytes": "32"
            },
            "t_string_storage": {
              "label": "string",
              "numberOfBytes": "32"
            },
            "t_struct(Category)11_storage": {
              "label": "struct ThirdParty.Category",
              "members": [
                {
                  "label": "categoryID",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "0"
                },
                {
                  "label": "cartegoryName",
                  "type": "t_string_storage",
                  "offset": 0,
                  "slot": "1"
                },
                {
                  "label": "properties",
                  "type": "t_array(t_uint256)dyn_storage",
                  "offset": 0,
                  "slot": "2"
                },
                {
                  "label": "visible",
                  "type": "t_bool",
                  "offset": 0,
                  "slot": "3"
                }
              ],
              "numberOfBytes": "128"
            },
            "t_struct(Package)29_storage": {
              "label": "struct ThirdParty.Package",
              "members": [
                {
                  "label": "categoryID",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "0"
                },
                {
                  "label": "packageID",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "1"
                },
                {
                  "label": "packageName",
                  "type": "t_string_storage",
                  "offset": 0,
                  "slot": "2"
                },
                {
                  "label": "price",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "3"
                },
                {
                  "label": "period",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "4"
                },
                {
                  "label": "dataLimit",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "5"
                },
                {
                  "label": "propertyVisible",
                  "type": "t_array(t_bool)dyn_storage",
                  "offset": 0,
                  "slot": "6"
                }
              ],
              "numberOfBytes": "224"
            },
            "t_struct(Property)36_storage": {
              "label": "struct ThirdParty.Property",
              "members": [
                {
                  "label": "propertyID",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "0"
                },
                {
                  "label": "propertyName",
                  "type": "t_string_storage",
                  "offset": 0,
                  "slot": "1"
                }
              ],
              "numberOfBytes": "64"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            }
          },
          "layoutVersion": "1.1",
          "flat": true
        }
      }
    },
    {
      "Context": {
        "src": "contracts\\TokenContract.sol:22",
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "HouseBusinessToken": {
        "src": "contracts\\TokenContract.sol:33",
        "version": {
          "withMetadata": "e53f4b9234e67266e4442dec09d084a17cbe6b1b4fb90d62776f0d6f370f0570",
          "withoutMetadata": "f5d2b294cac19c78c593798b4a1bae04c45c82839cbcffe3cc910bb441f21259",
          "linkedWithoutMetadata": "f5d2b294cac19c78c593798b4a1bae04c45c82839cbcffe3cc910bb441f21259"
        },
        "inherit": [
          "IERC20Metadata",
          "IERC20",
          "Context"
        ],
        "libraries": [],
        "methods": [
          "()",
          "name()",
          "symbol()",
          "decimals()",
          "totalSupply()",
          "balanceOf(address)",
          "transfer(address,uint256)",
          "allowance(address,address)",
          "approve(address,uint256)",
          "transferFrom(address,address,uint256)",
          "increaseAllowance(address,uint256)",
          "decreaseAllowance(address,uint256)",
          "_mint(address,uint256)"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "HouseBusinessToken",
            "src": "contracts\\TokenContract.sol:42"
          },
          {
            "kind": "state-variable-assignment",
            "name": "_name",
            "src": "contracts\\TokenContract.sol:37"
          },
          {
            "kind": "state-variable-assignment",
            "name": "_symbol",
            "src": "contracts\\TokenContract.sol:38"
          },
          {
            "kind": "state-variable-assignment",
            "name": "_decimals",
            "src": "contracts\\TokenContract.sol:39"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "_balances",
              "offset": 0,
              "slot": "0",
              "type": "t_mapping(t_address,t_uint256)",
              "contract": "HouseBusinessToken",
              "src": "contracts\\TokenContract.sol:34"
            },
            {
              "label": "_allowances",
              "offset": 0,
              "slot": "1",
              "type": "t_mapping(t_address,t_mapping(t_address,t_uint256))",
              "contract": "HouseBusinessToken",
              "src": "contracts\\TokenContract.sol:35"
            },
            {
              "label": "_totalSupply",
              "offset": 0,
              "slot": "2",
              "type": "t_uint256",
              "contract": "HouseBusinessToken",
              "src": "contracts\\TokenContract.sol:36"
            },
            {
              "label": "_name",
              "offset": 0,
              "slot": "3",
              "type": "t_string_storage",
              "contract": "HouseBusinessToken",
              "src": "contracts\\TokenContract.sol:37"
            },
            {
              "label": "_symbol",
              "offset": 0,
              "slot": "4",
              "type": "t_string_storage",
              "contract": "HouseBusinessToken",
              "src": "contracts\\TokenContract.sol:38"
            },
            {
              "label": "_decimals",
              "offset": 0,
              "slot": "5",
              "type": "t_uint8",
              "contract": "HouseBusinessToken",
              "src": "contracts\\TokenContract.sol:39"
            },
            {
              "label": "_owner",
              "offset": 1,
              "slot": "5",
              "type": "t_address",
              "contract": "HouseBusinessToken",
              "src": "contracts\\TokenContract.sol:40"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            },
            "t_mapping(t_address,t_mapping(t_address,t_uint256))": {
              "label": "mapping(address => mapping(address => uint256))",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_uint256)": {
              "label": "mapping(address => uint256)",
              "numberOfBytes": "32"
            },
            "t_string_storage": {
              "label": "string",
              "numberOfBytes": "32"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            },
            "t_uint8": {
              "label": "uint8",
              "numberOfBytes": "1"
            }
          },
          "layoutVersion": "1.1",
          "flat": true
        }
      },
      "IERC20": {
        "src": "contracts\\TokenContract.sol:5",
        "inherit": [],
        "libraries": [],
        "methods": [
          "totalSupply()",
          "balanceOf(address)",
          "transfer(address,uint256)",
          "allowance(address,address)",
          "approve(address,uint256)",
          "transferFrom(address,address,uint256)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "IERC20Metadata": {
        "src": "contracts\\TokenContract.sol:16",
        "inherit": [
          "IERC20"
        ],
        "libraries": [],
        "methods": [
          "name()",
          "symbol()",
          "decimals()"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      }
    },
    {
      "IPRC20": {
        "src": "contracts\\interfaces\\IPRC20.sol:4",
        "inherit": [],
        "libraries": [],
        "methods": [
          "totalSupply()",
          "balanceOf(address)",
          "transfer(address,uint256)",
          "allowance(address,address)",
          "approve(address,uint256)",
          "transferFrom(address,address,uint256)",
          "decimals()"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      }
    },
    {
      "IERC20": {
        "src": "@openzeppelin\\contracts\\token\\ERC20\\IERC20.sol:9",
        "inherit": [],
        "libraries": [],
        "methods": [
          "totalSupply()",
          "balanceOf(address)",
          "transfer(address,uint256)",
          "allowance(address,address)",
          "approve(address,uint256)",
          "transferFrom(address,address,uint256)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "ERC721": {
        "src": "@openzeppelin\\contracts\\token\\ERC721\\ERC721.sol:19",
        "version": {
          "withMetadata": "311027b738fb50ea92c84baf68eacb931adf05de03da13635a661dc9c5b03f73",
          "withoutMetadata": "9ec7f439077c3b762bc3aa6a17c55aba7a78d240190c9c7814df896455a0f780",
          "linkedWithoutMetadata": "9ec7f439077c3b762bc3aa6a17c55aba7a78d240190c9c7814df896455a0f780"
        },
        "inherit": [
          "IERC721Metadata",
          "IERC721",
          "ERC165",
          "IERC165",
          "Context"
        ],
        "libraries": [
          "Address",
          "Strings"
        ],
        "methods": [
          "(string,string)",
          "supportsInterface(bytes4)",
          "balanceOf(address)",
          "ownerOf(uint256)",
          "name()",
          "symbol()",
          "tokenURI(uint256)",
          "approve(address,uint256)",
          "getApproved(uint256)",
          "setApprovalForAll(address,bool)",
          "isApprovedForAll(address,address)",
          "transferFrom(address,address,uint256)",
          "safeTransferFrom(address,address,uint256)",
          "safeTransferFrom(address,address,uint256,bytes)"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "ERC721",
            "src": "@openzeppelin\\contracts\\token\\ERC721\\ERC721.sol:44"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "_name",
              "offset": 0,
              "slot": "0",
              "type": "t_string_storage",
              "contract": "ERC721",
              "src": "@openzeppelin\\contracts\\token\\ERC721\\ERC721.sol:24"
            },
            {
              "label": "_symbol",
              "offset": 0,
              "slot": "1",
              "type": "t_string_storage",
              "contract": "ERC721",
              "src": "@openzeppelin\\contracts\\token\\ERC721\\ERC721.sol:27"
            },
            {
              "label": "_owners",
              "offset": 0,
              "slot": "2",
              "type": "t_mapping(t_uint256,t_address)",
              "contract": "ERC721",
              "src": "@openzeppelin\\contracts\\token\\ERC721\\ERC721.sol:30"
            },
            {
              "label": "_balances",
              "offset": 0,
              "slot": "3",
              "type": "t_mapping(t_address,t_uint256)",
              "contract": "ERC721",
              "src": "@openzeppelin\\contracts\\token\\ERC721\\ERC721.sol:33"
            },
            {
              "label": "_tokenApprovals",
              "offset": 0,
              "slot": "4",
              "type": "t_mapping(t_uint256,t_address)",
              "contract": "ERC721",
              "src": "@openzeppelin\\contracts\\token\\ERC721\\ERC721.sol:36"
            },
            {
              "label": "_operatorApprovals",
              "offset": 0,
              "slot": "5",
              "type": "t_mapping(t_address,t_mapping(t_address,t_bool))",
              "contract": "ERC721",
              "src": "@openzeppelin\\contracts\\token\\ERC721\\ERC721.sol:39"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            },
            "t_bool": {
              "label": "bool",
              "numberOfBytes": "1"
            },
            "t_mapping(t_address,t_bool)": {
              "label": "mapping(address => bool)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_mapping(t_address,t_bool))": {
              "label": "mapping(address => mapping(address => bool))",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_uint256)": {
              "label": "mapping(address => uint256)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_uint256,t_address)": {
              "label": "mapping(uint256 => address)",
              "numberOfBytes": "32"
            },
            "t_string_storage": {
              "label": "string",
              "numberOfBytes": "32"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            }
          },
          "layoutVersion": "1.1",
          "flat": true
        }
      },
      "IERC721": {
        "src": "@openzeppelin\\contracts\\token\\ERC721\\IERC721.sol:11",
        "inherit": [
          "IERC165"
        ],
        "libraries": [],
        "methods": [
          "balanceOf(address)",
          "ownerOf(uint256)",
          "safeTransferFrom(address,address,uint256,bytes)",
          "safeTransferFrom(address,address,uint256)",
          "transferFrom(address,address,uint256)",
          "approve(address,uint256)",
          "setApprovalForAll(address,bool)",
          "getApproved(uint256)",
          "isApprovedForAll(address,address)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "IERC721Receiver": {
        "src": "@openzeppelin\\contracts\\token\\ERC721\\IERC721Receiver.sol:11",
        "inherit": [],
        "libraries": [],
        "methods": [
          "onERC721Received(address,address,uint256,bytes)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "ERC721URIStorage": {
        "src": "@openzeppelin\\contracts\\token\\ERC721\\extensions\\ERC721URIStorage.sol:11",
        "inherit": [
          "ERC721",
          "IERC721Metadata",
          "IERC721",
          "ERC165",
          "IERC165",
          "Context"
        ],
        "libraries": [
          "Strings"
        ],
        "methods": [
          "tokenURI(uint256)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [
            {
              "label": "_name",
              "offset": 0,
              "slot": "0",
              "type": "t_string_storage",
              "contract": "ERC721",
              "src": "@openzeppelin\\contracts\\token\\ERC721\\ERC721.sol:24"
            },
            {
              "label": "_symbol",
              "offset": 0,
              "slot": "1",
              "type": "t_string_storage",
              "contract": "ERC721",
              "src": "@openzeppelin\\contracts\\token\\ERC721\\ERC721.sol:27"
            },
            {
              "label": "_owners",
              "offset": 0,
              "slot": "2",
              "type": "t_mapping(t_uint256,t_address)",
              "contract": "ERC721",
              "src": "@openzeppelin\\contracts\\token\\ERC721\\ERC721.sol:30"
            },
            {
              "label": "_balances",
              "offset": 0,
              "slot": "3",
              "type": "t_mapping(t_address,t_uint256)",
              "contract": "ERC721",
              "src": "@openzeppelin\\contracts\\token\\ERC721\\ERC721.sol:33"
            },
            {
              "label": "_tokenApprovals",
              "offset": 0,
              "slot": "4",
              "type": "t_mapping(t_uint256,t_address)",
              "contract": "ERC721",
              "src": "@openzeppelin\\contracts\\token\\ERC721\\ERC721.sol:36"
            },
            {
              "label": "_operatorApprovals",
              "offset": 0,
              "slot": "5",
              "type": "t_mapping(t_address,t_mapping(t_address,t_bool))",
              "contract": "ERC721",
              "src": "@openzeppelin\\contracts\\token\\ERC721\\ERC721.sol:39"
            },
            {
              "label": "_tokenURIs",
              "offset": 0,
              "slot": "6",
              "type": "t_mapping(t_uint256,t_string_storage)",
              "contract": "ERC721URIStorage",
              "src": "@openzeppelin\\contracts\\token\\ERC721\\extensions\\ERC721URIStorage.sol:15"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            },
            "t_bool": {
              "label": "bool",
              "numberOfBytes": "1"
            },
            "t_mapping(t_address,t_bool)": {
              "label": "mapping(address => bool)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_mapping(t_address,t_bool))": {
              "label": "mapping(address => mapping(address => bool))",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_uint256)": {
              "label": "mapping(address => uint256)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_uint256,t_address)": {
              "label": "mapping(uint256 => address)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_uint256,t_string_storage)": {
              "label": "mapping(uint256 => string)",
              "numberOfBytes": "32"
            },
            "t_string_storage": {
              "label": "string",
              "numberOfBytes": "32"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            }
          },
          "layoutVersion": "1.1",
          "flat": true
        }
      },
      "IERC721Metadata": {
        "src": "@openzeppelin\\contracts\\token\\ERC721\\extensions\\IERC721Metadata.sol:12",
        "inherit": [
          "IERC721",
          "IERC165"
        ],
        "libraries": [],
        "methods": [
          "name()",
          "symbol()",
          "tokenURI(uint256)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "Address": {
        "src": "@openzeppelin\\contracts\\utils\\Address.sol:9",
        "version": {
          "withMetadata": "a0500f265408d7c0dbf75da3f9e44a5c2ee85e18bb1b58fe491ffcfa4ea7fd9b",
          "withoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db",
          "linkedWithoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db"
        },
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [
          {
            "kind": "delegatecall",
            "src": "@openzeppelin\\contracts\\utils\\Address.sol:185"
          }
        ],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "Context": {
        "src": "@openzeppelin\\contracts\\utils\\Context.sol:16",
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "Strings": {
        "src": "@openzeppelin\\contracts\\utils\\Strings.sol:11",
        "version": {
          "withMetadata": "c385b5200dd723f945d28b88358d79ca1b5c0f71c28cbbab9acf6d6f3fd15593",
          "withoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db",
          "linkedWithoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db"
        },
        "inherit": [],
        "libraries": [
          "Math"
        ],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "ERC165": {
        "src": "@openzeppelin\\contracts\\utils\\introspection\\ERC165.sol:22",
        "inherit": [
          "IERC165"
        ],
        "libraries": [],
        "methods": [
          "supportsInterface(bytes4)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "IERC165": {
        "src": "@openzeppelin\\contracts\\utils\\introspection\\IERC165.sol:15",
        "inherit": [],
        "libraries": [],
        "methods": [
          "supportsInterface(bytes4)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "Math": {
        "src": "@openzeppelin\\contracts\\utils\\math\\Math.sol:9",
        "version": {
          "withMetadata": "fcaf39e5e702f2902d6ef00c1def75c9800e8d2a0a78a87cf542096cafc7a4b0",
          "withoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db",
          "linkedWithoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db"
        },
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "HouseBusiness": {
        "src": "contracts\\HouseBusiness.sol:12",
        "version": {
          "withMetadata": "47a1090e08563373c635dece4104bff8459e1bc7f8e13fdc03b3307ae605c21d",
          "withoutMetadata": "5bd000263f7cae38c6e988e48a8f6b8a40985f87f193947f9f2fa581e29f1387",
          "linkedWithoutMetadata": "5bd000263f7cae38c6e988e48a8f6b8a40985f87f193947f9f2fa581e29f1387"
        },
        "inherit": [
          "ERC721URIStorage",
          "ERC721",
          "IERC721Metadata",
          "IERC721",
          "ERC165",
          "IERC165",
          "Context"
        ],
        "libraries": [],
        "methods": [
          "(address)",
          "setMinMaxHousePrice(uint256,uint256)",
          "setConfigToken(address)",
          "isMember()",
          "addMember(address)",
          "removeMember(address)",
          "tokenURI(uint256)",
          "setCContractAddress(address)",
          "setStakingContractAddress(address)",
          "setPayable(uint256,address,bool)",
          "mintHouse(string,string,string,string,uint256)",
          "addAllowList(uint256,address)",
          "removeAllowList(uint256,address)",
          "checkAllowedList(uint256,address)",
          "addHistory(uint256,uint256,uint256,string,string,string,string,string,uint256)",
          "getHistory(uint256)",
          "editHistory(uint256,uint256,string,string,string,string,string,uint256)",
          "getHistoryType()",
          "addOrEditHType(uint256,string,bool,bool,bool,bool,bool,bool,bool)",
          "removeHistoryType(uint256)",
          "getMinMaxNFT()",
          "getTokenOwner(uint256)",
          "buyHouseNft(uint256)",
          "sendToken(address,uint256)",
          "changeTokenPrice(uint256,uint256)",
          "getAllHouses()",
          "getAllPayableHouses()",
          "getAllMyHouses()",
          "withdrawToken(uint256)",
          "withdrawETH(uint256)",
          "getTotalInfo()",
          "getTokenPrice(uint256)",
          "setHouseStakedStatus(uint256,bool)",
          "getRoyalty()",
          "setRoyalty(uint256)"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "HouseBusiness",
            "src": "contracts\\HouseBusiness.sol:92"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "_name",
              "offset": 0,
              "slot": "0",
              "type": "t_string_storage",
              "contract": "ERC721",
              "src": "@openzeppelin\\contracts\\token\\ERC721\\ERC721.sol:24"
            },
            {
              "label": "_symbol",
              "offset": 0,
              "slot": "1",
              "type": "t_string_storage",
              "contract": "ERC721",
              "src": "@openzeppelin\\contracts\\token\\ERC721\\ERC721.sol:27"
            },
            {
              "label": "_owners",
              "offset": 0,
              "slot": "2",
              "type": "t_mapping(t_uint256,t_address)",
              "contract": "ERC721",
              "src": "@openzeppelin\\contracts\\token\\ERC721\\ERC721.sol:30"
            },
            {
              "label": "_balances",
              "offset": 0,
              "slot": "3",
              "type": "t_mapping(t_address,t_uint256)",
              "contract": "ERC721",
              "src": "@openzeppelin\\contracts\\token\\ERC721\\ERC721.sol:33"
            },
            {
              "label": "_tokenApprovals",
              "offset": 0,
              "slot": "4",
              "type": "t_mapping(t_uint256,t_address)",
              "contract": "ERC721",
              "src": "@openzeppelin\\contracts\\token\\ERC721\\ERC721.sol:36"
            },
            {
              "label": "_operatorApprovals",
              "offset": 0,
              "slot": "5",
              "type": "t_mapping(t_address,t_mapping(t_address,t_bool))",
              "contract": "ERC721",
              "src": "@openzeppelin\\contracts\\token\\ERC721\\ERC721.sol:39"
            },
            {
              "label": "_tokenURIs",
              "offset": 0,
              "slot": "6",
              "type": "t_mapping(t_uint256,t_string_storage)",
              "contract": "ERC721URIStorage",
              "src": "@openzeppelin\\contracts\\token\\ERC721\\extensions\\ERC721URIStorage.sol:15"
            },
            {
              "label": "collectionName",
              "offset": 0,
              "slot": "7",
              "type": "t_string_storage",
              "contract": "HouseBusiness",
              "src": "contracts\\HouseBusiness.sol:14"
            },
            {
              "label": "collectionNameSymbol",
              "offset": 0,
              "slot": "8",
              "type": "t_string_storage",
              "contract": "HouseBusiness",
              "src": "contracts\\HouseBusiness.sol:16"
            },
            {
              "label": "houseCounter",
              "offset": 0,
              "slot": "9",
              "type": "t_uint256",
              "contract": "HouseBusiness",
              "src": "contracts\\HouseBusiness.sol:18"
            },
            {
              "label": "soldedCounter",
              "offset": 0,
              "slot": "10",
              "type": "t_uint256",
              "contract": "HouseBusiness",
              "src": "contracts\\HouseBusiness.sol:21"
            },
            {
              "label": "hTypeCounter",
              "offset": 0,
              "slot": "11",
              "type": "t_uint256",
              "contract": "HouseBusiness",
              "src": "contracts\\HouseBusiness.sol:23"
            },
            {
              "label": "_token",
              "offset": 0,
              "slot": "12",
              "type": "t_contract(IERC20)77",
              "contract": "HouseBusiness",
              "src": "contracts\\HouseBusiness.sol:25"
            },
            {
              "label": "minPrice",
              "offset": 0,
              "slot": "13",
              "type": "t_uint256",
              "contract": "HouseBusiness",
              "src": "contracts\\HouseBusiness.sol:27"
            },
            {
              "label": "maxPrice",
              "offset": 0,
              "slot": "14",
              "type": "t_uint256",
              "contract": "HouseBusiness",
              "src": "contracts\\HouseBusiness.sol:29"
            },
            {
              "label": "royalty",
              "offset": 0,
              "slot": "15",
              "type": "t_uint256",
              "contract": "HouseBusiness",
              "src": "contracts\\HouseBusiness.sol:31"
            },
            {
              "label": "cContract",
              "offset": 0,
              "slot": "16",
              "type": "t_contract(IMainCleanContract)4533",
              "contract": "HouseBusiness",
              "src": "contracts\\HouseBusiness.sol:33"
            },
            {
              "label": "historyTypes",
              "offset": 0,
              "slot": "17",
              "type": "t_array(t_struct(HistoryType)2831_storage)dyn_storage",
              "contract": "HouseBusiness",
              "src": "contracts\\HouseBusiness.sol:73"
            },
            {
              "label": "houseHistories",
              "offset": 0,
              "slot": "18",
              "type": "t_mapping(t_uint256,t_array(t_struct(History)2812_storage)dyn_storage)",
              "contract": "HouseBusiness",
              "src": "contracts\\HouseBusiness.sol:75"
            },
            {
              "label": "allMembers",
              "offset": 0,
              "slot": "19",
              "type": "t_mapping(t_address,t_bool)",
              "contract": "HouseBusiness",
              "src": "contracts\\HouseBusiness.sol:77"
            },
            {
              "label": "allHouses",
              "offset": 0,
              "slot": "20",
              "type": "t_mapping(t_uint256,t_struct(House)2795_storage)",
              "contract": "HouseBusiness",
              "src": "contracts\\HouseBusiness.sol:79"
            },
            {
              "label": "allowedList",
              "offset": 0,
              "slot": "21",
              "type": "t_mapping(t_uint256,t_mapping(t_address,t_bool))",
              "contract": "HouseBusiness",
              "src": "contracts\\HouseBusiness.sol:81"
            },
            {
              "label": "stakingContractAddress",
              "offset": 0,
              "slot": "22",
              "type": "t_address",
              "contract": "HouseBusiness",
              "src": "contracts\\HouseBusiness.sol:84"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            },
            "t_array(t_struct(History)2812_storage)dyn_storage": {
              "label": "struct HouseBusiness.History[]",
              "numberOfBytes": "32"
            },
            "t_array(t_struct(HistoryType)2831_storage)dyn_storage": {
              "label": "struct HouseBusiness.HistoryType[]",
              "numberOfBytes": "32"
            },
            "t_bool": {
              "label": "bool",
              "numberOfBytes": "1"
            },
            "t_contract(IERC20)77": {
              "label": "contract IERC20",
              "numberOfBytes": "20"
            },
            "t_contract(IMainCleanContract)4533": {
              "label": "contract IMainCleanContract",
              "numberOfBytes": "20"
            },
            "t_mapping(t_address,t_bool)": {
              "label": "mapping(address => bool)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_mapping(t_address,t_bool))": {
              "label": "mapping(address => mapping(address => bool))",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_uint256)": {
              "label": "mapping(address => uint256)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_uint256,t_address)": {
              "label": "mapping(uint256 => address)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_uint256,t_array(t_struct(History)2812_storage)dyn_storage)": {
              "label": "mapping(uint256 => struct HouseBusiness.History[])",
              "numberOfBytes": "32"
            },
            "t_mapping(t_uint256,t_mapping(t_address,t_bool))": {
              "label": "mapping(uint256 => mapping(address => bool))",
              "numberOfBytes": "32"
            },
            "t_mapping(t_uint256,t_string_storage)": {
              "label": "mapping(uint256 => string)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_uint256,t_struct(House)2795_storage)": {
              "label": "mapping(uint256 => struct HouseBusiness.House)",
              "numberOfBytes": "32"
            },
            "t_string_storage": {
              "label": "string",
              "numberOfBytes": "32"
            },
            "t_struct(History)2812_storage": {
              "label": "struct HouseBusiness.History",
              "members": [
                {
                  "label": "hID",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "0"
                },
                {
                  "label": "contractId",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "1"
                },
                {
                  "label": "houseImg",
                  "type": "t_string_storage",
                  "offset": 0,
                  "slot": "2"
                },
                {
                  "label": "houseBrand",
                  "type": "t_string_storage",
                  "offset": 0,
                  "slot": "3"
                },
                {
                  "label": "desc",
                  "type": "t_string_storage",
                  "offset": 0,
                  "slot": "4"
                },
                {
                  "label": "history",
                  "type": "t_string_storage",
                  "offset": 0,
                  "slot": "5"
                },
                {
                  "label": "brandType",
                  "type": "t_string_storage",
                  "offset": 0,
                  "slot": "6"
                },
                {
                  "label": "yearField",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "7"
                }
              ],
              "numberOfBytes": "256"
            },
            "t_struct(HistoryType)2831_storage": {
              "label": "struct HouseBusiness.HistoryType",
              "members": [
                {
                  "label": "hID",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "0"
                },
                {
                  "label": "hLabel",
                  "type": "t_string_storage",
                  "offset": 0,
                  "slot": "1"
                },
                {
                  "label": "connectContract",
                  "type": "t_bool",
                  "offset": 0,
                  "slot": "2"
                },
                {
                  "label": "imgNeed",
                  "type": "t_bool",
                  "offset": 1,
                  "slot": "2"
                },
                {
                  "label": "brandNeed",
                  "type": "t_bool",
                  "offset": 2,
                  "slot": "2"
                },
                {
                  "label": "descNeed",
                  "type": "t_bool",
                  "offset": 3,
                  "slot": "2"
                },
                {
                  "label": "brandTypeNeed",
                  "type": "t_bool",
                  "offset": 4,
                  "slot": "2"
                },
                {
                  "label": "yearNeed",
                  "type": "t_bool",
                  "offset": 5,
                  "slot": "2"
                },
                {
                  "label": "checkMark",
                  "type": "t_bool",
                  "offset": 6,
                  "slot": "2"
                }
              ],
              "numberOfBytes": "96"
            },
            "t_struct(House)2795_storage": {
              "label": "struct HouseBusiness.House",
              "members": [
                {
                  "label": "tokenId",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "0"
                },
                {
                  "label": "tokenName",
                  "type": "t_string_storage",
                  "offset": 0,
                  "slot": "1"
                },
                {
                  "label": "tokenURI",
                  "type": "t_string_storage",
                  "offset": 0,
                  "slot": "2"
                },
                {
                  "label": "tokenType",
                  "type": "t_string_storage",
                  "offset": 0,
                  "slot": "3"
                },
                {
                  "label": "currentOwner",
                  "type": "t_address",
                  "offset": 0,
                  "slot": "4"
                },
                {
                  "label": "previousOwner",
                  "type": "t_address",
                  "offset": 0,
                  "slot": "5"
                },
                {
                  "label": "buyer",
                  "type": "t_address",
                  "offset": 0,
                  "slot": "6"
                },
                {
                  "label": "price",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "7"
                },
                {
                  "label": "numberOfTransfers",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "8"
                },
                {
                  "label": "nftPayable",
                  "type": "t_bool",
                  "offset": 0,
                  "slot": "9"
                },
                {
                  "label": "staked",
                  "type": "t_bool",
                  "offset": 1,
                  "slot": "9"
                },
                {
                  "label": "soldstatus",
                  "type": "t_bool",
                  "offset": 2,
                  "slot": "9"
                }
              ],
              "numberOfBytes": "320"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            }
          },
          "layoutVersion": "1.1",
          "flat": true
        }
      },
      "IMainCleanContract": {
        "src": "contracts\\interfaces\\IContract.sol:6",
        "inherit": [],
        "libraries": [],
        "methods": [
          "getContractById(uint256)",
          "transferContractOwnership(uint256,address,address)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "IStaking": {
        "src": "contracts\\interfaces\\IStaking.sol:5",
        "inherit": [],
        "libraries": [],
        "methods": [
          "stakeCounter()"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      }
    },
    {
      "IERC20": {
        "src": "@openzeppelin\\contracts\\token\\ERC20\\IERC20.sol:9",
        "inherit": [],
        "libraries": [],
        "methods": [
          "totalSupply()",
          "balanceOf(address)",
          "transfer(address,uint256)",
          "allowance(address,address)",
          "approve(address,uint256)",
          "transferFrom(address,address,uint256)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "ERC721": {
        "src": "@openzeppelin\\contracts\\token\\ERC721\\ERC721.sol:19",
        "version": {
          "withMetadata": "311027b738fb50ea92c84baf68eacb931adf05de03da13635a661dc9c5b03f73",
          "withoutMetadata": "9ec7f439077c3b762bc3aa6a17c55aba7a78d240190c9c7814df896455a0f780",
          "linkedWithoutMetadata": "9ec7f439077c3b762bc3aa6a17c55aba7a78d240190c9c7814df896455a0f780"
        },
        "inherit": [
          "IERC721Metadata",
          "IERC721",
          "ERC165",
          "IERC165",
          "Context"
        ],
        "libraries": [
          "Address",
          "Strings"
        ],
        "methods": [
          "(string,string)",
          "supportsInterface(bytes4)",
          "balanceOf(address)",
          "ownerOf(uint256)",
          "name()",
          "symbol()",
          "tokenURI(uint256)",
          "approve(address,uint256)",
          "getApproved(uint256)",
          "setApprovalForAll(address,bool)",
          "isApprovedForAll(address,address)",
          "transferFrom(address,address,uint256)",
          "safeTransferFrom(address,address,uint256)",
          "safeTransferFrom(address,address,uint256,bytes)"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "ERC721",
            "src": "@openzeppelin\\contracts\\token\\ERC721\\ERC721.sol:44"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "_name",
              "offset": 0,
              "slot": "0",
              "type": "t_string_storage",
              "contract": "ERC721",
              "src": "@openzeppelin\\contracts\\token\\ERC721\\ERC721.sol:24"
            },
            {
              "label": "_symbol",
              "offset": 0,
              "slot": "1",
              "type": "t_string_storage",
              "contract": "ERC721",
              "src": "@openzeppelin\\contracts\\token\\ERC721\\ERC721.sol:27"
            },
            {
              "label": "_owners",
              "offset": 0,
              "slot": "2",
              "type": "t_mapping(t_uint256,t_address)",
              "contract": "ERC721",
              "src": "@openzeppelin\\contracts\\token\\ERC721\\ERC721.sol:30"
            },
            {
              "label": "_balances",
              "offset": 0,
              "slot": "3",
              "type": "t_mapping(t_address,t_uint256)",
              "contract": "ERC721",
              "src": "@openzeppelin\\contracts\\token\\ERC721\\ERC721.sol:33"
            },
            {
              "label": "_tokenApprovals",
              "offset": 0,
              "slot": "4",
              "type": "t_mapping(t_uint256,t_address)",
              "contract": "ERC721",
              "src": "@openzeppelin\\contracts\\token\\ERC721\\ERC721.sol:36"
            },
            {
              "label": "_operatorApprovals",
              "offset": 0,
              "slot": "5",
              "type": "t_mapping(t_address,t_mapping(t_address,t_bool))",
              "contract": "ERC721",
              "src": "@openzeppelin\\contracts\\token\\ERC721\\ERC721.sol:39"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            },
            "t_bool": {
              "label": "bool",
              "numberOfBytes": "1"
            },
            "t_mapping(t_address,t_bool)": {
              "label": "mapping(address => bool)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_mapping(t_address,t_bool))": {
              "label": "mapping(address => mapping(address => bool))",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_uint256)": {
              "label": "mapping(address => uint256)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_uint256,t_address)": {
              "label": "mapping(uint256 => address)",
              "numberOfBytes": "32"
            },
            "t_string_storage": {
              "label": "string",
              "numberOfBytes": "32"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            }
          },
          "layoutVersion": "1.1",
          "flat": true
        }
      },
      "IERC721": {
        "src": "@openzeppelin\\contracts\\token\\ERC721\\IERC721.sol:11",
        "inherit": [
          "IERC165"
        ],
        "libraries": [],
        "methods": [
          "balanceOf(address)",
          "ownerOf(uint256)",
          "safeTransferFrom(address,address,uint256,bytes)",
          "safeTransferFrom(address,address,uint256)",
          "transferFrom(address,address,uint256)",
          "approve(address,uint256)",
          "setApprovalForAll(address,bool)",
          "getApproved(uint256)",
          "isApprovedForAll(address,address)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "IERC721Receiver": {
        "src": "@openzeppelin\\contracts\\token\\ERC721\\IERC721Receiver.sol:11",
        "inherit": [],
        "libraries": [],
        "methods": [
          "onERC721Received(address,address,uint256,bytes)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "ERC721URIStorage": {
        "src": "@openzeppelin\\contracts\\token\\ERC721\\extensions\\ERC721URIStorage.sol:11",
        "inherit": [
          "ERC721",
          "IERC721Metadata",
          "IERC721",
          "ERC165",
          "IERC165",
          "Context"
        ],
        "libraries": [
          "Strings"
        ],
        "methods": [
          "tokenURI(uint256)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [
            {
              "label": "_name",
              "offset": 0,
              "slot": "0",
              "type": "t_string_storage",
              "contract": "ERC721",
              "src": "@openzeppelin\\contracts\\token\\ERC721\\ERC721.sol:24"
            },
            {
              "label": "_symbol",
              "offset": 0,
              "slot": "1",
              "type": "t_string_storage",
              "contract": "ERC721",
              "src": "@openzeppelin\\contracts\\token\\ERC721\\ERC721.sol:27"
            },
            {
              "label": "_owners",
              "offset": 0,
              "slot": "2",
              "type": "t_mapping(t_uint256,t_address)",
              "contract": "ERC721",
              "src": "@openzeppelin\\contracts\\token\\ERC721\\ERC721.sol:30"
            },
            {
              "label": "_balances",
              "offset": 0,
              "slot": "3",
              "type": "t_mapping(t_address,t_uint256)",
              "contract": "ERC721",
              "src": "@openzeppelin\\contracts\\token\\ERC721\\ERC721.sol:33"
            },
            {
              "label": "_tokenApprovals",
              "offset": 0,
              "slot": "4",
              "type": "t_mapping(t_uint256,t_address)",
              "contract": "ERC721",
              "src": "@openzeppelin\\contracts\\token\\ERC721\\ERC721.sol:36"
            },
            {
              "label": "_operatorApprovals",
              "offset": 0,
              "slot": "5",
              "type": "t_mapping(t_address,t_mapping(t_address,t_bool))",
              "contract": "ERC721",
              "src": "@openzeppelin\\contracts\\token\\ERC721\\ERC721.sol:39"
            },
            {
              "label": "_tokenURIs",
              "offset": 0,
              "slot": "6",
              "type": "t_mapping(t_uint256,t_string_storage)",
              "contract": "ERC721URIStorage",
              "src": "@openzeppelin\\contracts\\token\\ERC721\\extensions\\ERC721URIStorage.sol:15"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            },
            "t_bool": {
              "label": "bool",
              "numberOfBytes": "1"
            },
            "t_mapping(t_address,t_bool)": {
              "label": "mapping(address => bool)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_mapping(t_address,t_bool))": {
              "label": "mapping(address => mapping(address => bool))",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_uint256)": {
              "label": "mapping(address => uint256)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_uint256,t_address)": {
              "label": "mapping(uint256 => address)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_uint256,t_string_storage)": {
              "label": "mapping(uint256 => string)",
              "numberOfBytes": "32"
            },
            "t_string_storage": {
              "label": "string",
              "numberOfBytes": "32"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            }
          },
          "layoutVersion": "1.1",
          "flat": true
        }
      },
      "IERC721Metadata": {
        "src": "@openzeppelin\\contracts\\token\\ERC721\\extensions\\IERC721Metadata.sol:12",
        "inherit": [
          "IERC721",
          "IERC165"
        ],
        "libraries": [],
        "methods": [
          "name()",
          "symbol()",
          "tokenURI(uint256)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "Address": {
        "src": "@openzeppelin\\contracts\\utils\\Address.sol:9",
        "version": {
          "withMetadata": "a0500f265408d7c0dbf75da3f9e44a5c2ee85e18bb1b58fe491ffcfa4ea7fd9b",
          "withoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db",
          "linkedWithoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db"
        },
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [
          {
            "kind": "delegatecall",
            "src": "@openzeppelin\\contracts\\utils\\Address.sol:185"
          }
        ],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "Context": {
        "src": "@openzeppelin\\contracts\\utils\\Context.sol:16",
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "Strings": {
        "src": "@openzeppelin\\contracts\\utils\\Strings.sol:11",
        "version": {
          "withMetadata": "c385b5200dd723f945d28b88358d79ca1b5c0f71c28cbbab9acf6d6f3fd15593",
          "withoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db",
          "linkedWithoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db"
        },
        "inherit": [],
        "libraries": [
          "Math"
        ],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "ERC165": {
        "src": "@openzeppelin\\contracts\\utils\\introspection\\ERC165.sol:22",
        "inherit": [
          "IERC165"
        ],
        "libraries": [],
        "methods": [
          "supportsInterface(bytes4)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "IERC165": {
        "src": "@openzeppelin\\contracts\\utils\\introspection\\IERC165.sol:15",
        "inherit": [],
        "libraries": [],
        "methods": [
          "supportsInterface(bytes4)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "Math": {
        "src": "@openzeppelin\\contracts\\utils\\math\\Math.sol:9",
        "version": {
          "withMetadata": "fcaf39e5e702f2902d6ef00c1def75c9800e8d2a0a78a87cf542096cafc7a4b0",
          "withoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db",
          "linkedWithoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db"
        },
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "HouseBusiness": {
        "src": "contracts\\HouseBusiness.sol:12",
        "version": {
          "withMetadata": "47a1090e08563373c635dece4104bff8459e1bc7f8e13fdc03b3307ae605c21d",
          "withoutMetadata": "5bd000263f7cae38c6e988e48a8f6b8a40985f87f193947f9f2fa581e29f1387",
          "linkedWithoutMetadata": "5bd000263f7cae38c6e988e48a8f6b8a40985f87f193947f9f2fa581e29f1387"
        },
        "inherit": [
          "ERC721URIStorage",
          "ERC721",
          "IERC721Metadata",
          "IERC721",
          "ERC165",
          "IERC165",
          "Context"
        ],
        "libraries": [],
        "methods": [
          "(address)",
          "setMinMaxHousePrice(uint256,uint256)",
          "setConfigToken(address)",
          "isMember()",
          "addMember(address)",
          "removeMember(address)",
          "tokenURI(uint256)",
          "setCContractAddress(address)",
          "setStakingContractAddress(address)",
          "setPayable(uint256,address,bool)",
          "mintHouse(string,string,string,string,uint256)",
          "addAllowList(uint256,address)",
          "removeAllowList(uint256,address)",
          "checkAllowedList(uint256,address)",
          "addHistory(uint256,uint256,uint256,string,string,string,string,string,uint256)",
          "getHistory(uint256)",
          "editHistory(uint256,uint256,string,string,string,string,string,uint256)",
          "getHistoryType()",
          "addOrEditHType(uint256,string,bool,bool,bool,bool,bool,bool,bool)",
          "removeHistoryType(uint256)",
          "getMinMaxNFT()",
          "getTokenOwner(uint256)",
          "buyHouseNft(uint256)",
          "sendToken(address,uint256)",
          "changeTokenPrice(uint256,uint256)",
          "getAllHouses()",
          "getAllPayableHouses()",
          "getAllMyHouses()",
          "withdrawToken(uint256)",
          "withdrawETH(uint256)",
          "getTotalInfo()",
          "getTokenPrice(uint256)",
          "setHouseStakedStatus(uint256,bool)",
          "getRoyalty()",
          "setRoyalty(uint256)"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "HouseBusiness",
            "src": "contracts\\HouseBusiness.sol:92"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "_name",
              "offset": 0,
              "slot": "0",
              "type": "t_string_storage",
              "contract": "ERC721",
              "src": "@openzeppelin\\contracts\\token\\ERC721\\ERC721.sol:24"
            },
            {
              "label": "_symbol",
              "offset": 0,
              "slot": "1",
              "type": "t_string_storage",
              "contract": "ERC721",
              "src": "@openzeppelin\\contracts\\token\\ERC721\\ERC721.sol:27"
            },
            {
              "label": "_owners",
              "offset": 0,
              "slot": "2",
              "type": "t_mapping(t_uint256,t_address)",
              "contract": "ERC721",
              "src": "@openzeppelin\\contracts\\token\\ERC721\\ERC721.sol:30"
            },
            {
              "label": "_balances",
              "offset": 0,
              "slot": "3",
              "type": "t_mapping(t_address,t_uint256)",
              "contract": "ERC721",
              "src": "@openzeppelin\\contracts\\token\\ERC721\\ERC721.sol:33"
            },
            {
              "label": "_tokenApprovals",
              "offset": 0,
              "slot": "4",
              "type": "t_mapping(t_uint256,t_address)",
              "contract": "ERC721",
              "src": "@openzeppelin\\contracts\\token\\ERC721\\ERC721.sol:36"
            },
            {
              "label": "_operatorApprovals",
              "offset": 0,
              "slot": "5",
              "type": "t_mapping(t_address,t_mapping(t_address,t_bool))",
              "contract": "ERC721",
              "src": "@openzeppelin\\contracts\\token\\ERC721\\ERC721.sol:39"
            },
            {
              "label": "_tokenURIs",
              "offset": 0,
              "slot": "6",
              "type": "t_mapping(t_uint256,t_string_storage)",
              "contract": "ERC721URIStorage",
              "src": "@openzeppelin\\contracts\\token\\ERC721\\extensions\\ERC721URIStorage.sol:15"
            },
            {
              "label": "collectionName",
              "offset": 0,
              "slot": "7",
              "type": "t_string_storage",
              "contract": "HouseBusiness",
              "src": "contracts\\HouseBusiness.sol:14"
            },
            {
              "label": "collectionNameSymbol",
              "offset": 0,
              "slot": "8",
              "type": "t_string_storage",
              "contract": "HouseBusiness",
              "src": "contracts\\HouseBusiness.sol:16"
            },
            {
              "label": "houseCounter",
              "offset": 0,
              "slot": "9",
              "type": "t_uint256",
              "contract": "HouseBusiness",
              "src": "contracts\\HouseBusiness.sol:18"
            },
            {
              "label": "soldedCounter",
              "offset": 0,
              "slot": "10",
              "type": "t_uint256",
              "contract": "HouseBusiness",
              "src": "contracts\\HouseBusiness.sol:21"
            },
            {
              "label": "hTypeCounter",
              "offset": 0,
              "slot": "11",
              "type": "t_uint256",
              "contract": "HouseBusiness",
              "src": "contracts\\HouseBusiness.sol:23"
            },
            {
              "label": "_token",
              "offset": 0,
              "slot": "12",
              "type": "t_contract(IERC20)77",
              "contract": "HouseBusiness",
              "src": "contracts\\HouseBusiness.sol:25"
            },
            {
              "label": "minPrice",
              "offset": 0,
              "slot": "13",
              "type": "t_uint256",
              "contract": "HouseBusiness",
              "src": "contracts\\HouseBusiness.sol:27"
            },
            {
              "label": "maxPrice",
              "offset": 0,
              "slot": "14",
              "type": "t_uint256",
              "contract": "HouseBusiness",
              "src": "contracts\\HouseBusiness.sol:29"
            },
            {
              "label": "royalty",
              "offset": 0,
              "slot": "15",
              "type": "t_uint256",
              "contract": "HouseBusiness",
              "src": "contracts\\HouseBusiness.sol:31"
            },
            {
              "label": "cContract",
              "offset": 0,
              "slot": "16",
              "type": "t_contract(IMainCleanContract)5464",
              "contract": "HouseBusiness",
              "src": "contracts\\HouseBusiness.sol:33"
            },
            {
              "label": "historyTypes",
              "offset": 0,
              "slot": "17",
              "type": "t_array(t_struct(HistoryType)2831_storage)dyn_storage",
              "contract": "HouseBusiness",
              "src": "contracts\\HouseBusiness.sol:73"
            },
            {
              "label": "houseHistories",
              "offset": 0,
              "slot": "18",
              "type": "t_mapping(t_uint256,t_array(t_struct(History)2812_storage)dyn_storage)",
              "contract": "HouseBusiness",
              "src": "contracts\\HouseBusiness.sol:75"
            },
            {
              "label": "allMembers",
              "offset": 0,
              "slot": "19",
              "type": "t_mapping(t_address,t_bool)",
              "contract": "HouseBusiness",
              "src": "contracts\\HouseBusiness.sol:77"
            },
            {
              "label": "allHouses",
              "offset": 0,
              "slot": "20",
              "type": "t_mapping(t_uint256,t_struct(House)2795_storage)",
              "contract": "HouseBusiness",
              "src": "contracts\\HouseBusiness.sol:79"
            },
            {
              "label": "allowedList",
              "offset": 0,
              "slot": "21",
              "type": "t_mapping(t_uint256,t_mapping(t_address,t_bool))",
              "contract": "HouseBusiness",
              "src": "contracts\\HouseBusiness.sol:81"
            },
            {
              "label": "stakingContractAddress",
              "offset": 0,
              "slot": "22",
              "type": "t_address",
              "contract": "HouseBusiness",
              "src": "contracts\\HouseBusiness.sol:84"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            },
            "t_array(t_struct(History)2812_storage)dyn_storage": {
              "label": "struct HouseBusiness.History[]",
              "numberOfBytes": "32"
            },
            "t_array(t_struct(HistoryType)2831_storage)dyn_storage": {
              "label": "struct HouseBusiness.HistoryType[]",
              "numberOfBytes": "32"
            },
            "t_bool": {
              "label": "bool",
              "numberOfBytes": "1"
            },
            "t_contract(IERC20)77": {
              "label": "contract IERC20",
              "numberOfBytes": "20"
            },
            "t_contract(IMainCleanContract)5464": {
              "label": "contract IMainCleanContract",
              "numberOfBytes": "20"
            },
            "t_mapping(t_address,t_bool)": {
              "label": "mapping(address => bool)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_mapping(t_address,t_bool))": {
              "label": "mapping(address => mapping(address => bool))",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_uint256)": {
              "label": "mapping(address => uint256)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_uint256,t_address)": {
              "label": "mapping(uint256 => address)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_uint256,t_array(t_struct(History)2812_storage)dyn_storage)": {
              "label": "mapping(uint256 => struct HouseBusiness.History[])",
              "numberOfBytes": "32"
            },
            "t_mapping(t_uint256,t_mapping(t_address,t_bool))": {
              "label": "mapping(uint256 => mapping(address => bool))",
              "numberOfBytes": "32"
            },
            "t_mapping(t_uint256,t_string_storage)": {
              "label": "mapping(uint256 => string)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_uint256,t_struct(House)2795_storage)": {
              "label": "mapping(uint256 => struct HouseBusiness.House)",
              "numberOfBytes": "32"
            },
            "t_string_storage": {
              "label": "string",
              "numberOfBytes": "32"
            },
            "t_struct(History)2812_storage": {
              "label": "struct HouseBusiness.History",
              "members": [
                {
                  "label": "hID",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "0"
                },
                {
                  "label": "contractId",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "1"
                },
                {
                  "label": "houseImg",
                  "type": "t_string_storage",
                  "offset": 0,
                  "slot": "2"
                },
                {
                  "label": "houseBrand",
                  "type": "t_string_storage",
                  "offset": 0,
                  "slot": "3"
                },
                {
                  "label": "desc",
                  "type": "t_string_storage",
                  "offset": 0,
                  "slot": "4"
                },
                {
                  "label": "history",
                  "type": "t_string_storage",
                  "offset": 0,
                  "slot": "5"
                },
                {
                  "label": "brandType",
                  "type": "t_string_storage",
                  "offset": 0,
                  "slot": "6"
                },
                {
                  "label": "yearField",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "7"
                }
              ],
              "numberOfBytes": "256"
            },
            "t_struct(HistoryType)2831_storage": {
              "label": "struct HouseBusiness.HistoryType",
              "members": [
                {
                  "label": "hID",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "0"
                },
                {
                  "label": "hLabel",
                  "type": "t_string_storage",
                  "offset": 0,
                  "slot": "1"
                },
                {
                  "label": "connectContract",
                  "type": "t_bool",
                  "offset": 0,
                  "slot": "2"
                },
                {
                  "label": "imgNeed",
                  "type": "t_bool",
                  "offset": 1,
                  "slot": "2"
                },
                {
                  "label": "brandNeed",
                  "type": "t_bool",
                  "offset": 2,
                  "slot": "2"
                },
                {
                  "label": "descNeed",
                  "type": "t_bool",
                  "offset": 3,
                  "slot": "2"
                },
                {
                  "label": "brandTypeNeed",
                  "type": "t_bool",
                  "offset": 4,
                  "slot": "2"
                },
                {
                  "label": "yearNeed",
                  "type": "t_bool",
                  "offset": 5,
                  "slot": "2"
                },
                {
                  "label": "checkMark",
                  "type": "t_bool",
                  "offset": 6,
                  "slot": "2"
                }
              ],
              "numberOfBytes": "96"
            },
            "t_struct(House)2795_storage": {
              "label": "struct HouseBusiness.House",
              "members": [
                {
                  "label": "tokenId",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "0"
                },
                {
                  "label": "tokenName",
                  "type": "t_string_storage",
                  "offset": 0,
                  "slot": "1"
                },
                {
                  "label": "tokenURI",
                  "type": "t_string_storage",
                  "offset": 0,
                  "slot": "2"
                },
                {
                  "label": "tokenType",
                  "type": "t_string_storage",
                  "offset": 0,
                  "slot": "3"
                },
                {
                  "label": "currentOwner",
                  "type": "t_address",
                  "offset": 0,
                  "slot": "4"
                },
                {
                  "label": "previousOwner",
                  "type": "t_address",
                  "offset": 0,
                  "slot": "5"
                },
                {
                  "label": "buyer",
                  "type": "t_address",
                  "offset": 0,
                  "slot": "6"
                },
                {
                  "label": "price",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "7"
                },
                {
                  "label": "numberOfTransfers",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "8"
                },
                {
                  "label": "nftPayable",
                  "type": "t_bool",
                  "offset": 0,
                  "slot": "9"
                },
                {
                  "label": "staked",
                  "type": "t_bool",
                  "offset": 1,
                  "slot": "9"
                },
                {
                  "label": "soldstatus",
                  "type": "t_bool",
                  "offset": 2,
                  "slot": "9"
                }
              ],
              "numberOfBytes": "320"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            }
          },
          "layoutVersion": "1.1",
          "flat": true
        }
      },
      "HouseStaking": {
        "src": "contracts\\Staking.sol:6",
        "version": {
          "withMetadata": "b434e0d9fc6e61f20a7ae59c658eae1046efdaddcb12502607dc9c2ba1b48d96",
          "withoutMetadata": "55dd03d5604f70c2abf52ecb260f160dc660988f7e28526fbed5969d1a598935",
          "linkedWithoutMetadata": "55dd03d5604f70c2abf52ecb260f160dc660988f7e28526fbed5969d1a598935"
        },
        "inherit": [],
        "libraries": [],
        "methods": [
          "(address,address)",
          "calcDiv(uint256,uint256)",
          "setAPYConfig(uint256,uint256)",
          "getAllAPYTypes()",
          "stake(uint256,uint256)",
          "unstake(uint256)",
          "stakingFinished(uint256)",
          "totalRewards(address)",
          "claimRewards(address)",
          "getAllMyStakedNFTs()",
          "getAllAPYs()",
          "getPenalty()",
          "setPenalty(uint256)"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "HouseStaking",
            "src": "contracts\\Staking.sol:33"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "stakedCounter",
              "offset": 0,
              "slot": "0",
              "type": "t_uint256",
              "contract": "HouseStaking",
              "src": "contracts\\Staking.sol:8"
            },
            {
              "label": "penalty",
              "offset": 0,
              "slot": "1",
              "type": "t_uint256",
              "contract": "HouseStaking",
              "src": "contracts\\Staking.sol:10"
            },
            {
              "label": "APYtypes",
              "offset": 0,
              "slot": "2",
              "type": "t_array(t_uint256)dyn_storage",
              "contract": "HouseStaking",
              "src": "contracts\\Staking.sol:12"
            },
            {
              "label": "APYConfig",
              "offset": 0,
              "slot": "3",
              "type": "t_mapping(t_uint256,t_uint256)",
              "contract": "HouseStaking",
              "src": "contracts\\Staking.sol:15"
            },
            {
              "label": "stakedNfts",
              "offset": 0,
              "slot": "4",
              "type": "t_mapping(t_address,t_array(t_struct(StakedNft)4522_storage)dyn_storage)",
              "contract": "HouseStaking",
              "src": "contracts\\Staking.sol:16"
            },
            {
              "label": "tokenAddress",
              "offset": 0,
              "slot": "5",
              "type": "t_address",
              "contract": "HouseStaking",
              "src": "contracts\\Staking.sol:18"
            },
            {
              "label": "houseNFTAddress",
              "offset": 0,
              "slot": "6",
              "type": "t_address",
              "contract": "HouseStaking",
              "src": "contracts\\Staking.sol:19"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            },
            "t_array(t_struct(StakedNft)4522_storage)dyn_storage": {
              "label": "struct HouseStaking.StakedNft[]",
              "numberOfBytes": "32"
            },
            "t_array(t_uint256)dyn_storage": {
              "label": "uint256[]",
              "numberOfBytes": "32"
            },
            "t_bool": {
              "label": "bool",
              "numberOfBytes": "1"
            },
            "t_mapping(t_address,t_array(t_struct(StakedNft)4522_storage)dyn_storage)": {
              "label": "mapping(address => struct HouseStaking.StakedNft[])",
              "numberOfBytes": "32"
            },
            "t_mapping(t_uint256,t_uint256)": {
              "label": "mapping(uint256 => uint256)",
              "numberOfBytes": "32"
            },
            "t_struct(StakedNft)4522_storage": {
              "label": "struct HouseStaking.StakedNft",
              "members": [
                {
                  "label": "owner",
                  "type": "t_address",
                  "offset": 0,
                  "slot": "0"
                },
                {
                  "label": "tokenId",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "1"
                },
                {
                  "label": "startedDate",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "2"
                },
                {
                  "label": "endDate",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "3"
                },
                {
                  "label": "claimDate",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "4"
                },
                {
                  "label": "stakingType",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "5"
                },
                {
                  "label": "perSecRewards",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "6"
                },
                {
                  "label": "stakingStatus",
                  "type": "t_bool",
                  "offset": 0,
                  "slot": "7"
                }
              ],
              "numberOfBytes": "256"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            }
          },
          "layoutVersion": "1.1",
          "flat": true
        }
      },
      "IMainCleanContract": {
        "src": "contracts\\interfaces\\IContract.sol:6",
        "inherit": [],
        "libraries": [],
        "methods": [
          "getContractById(uint256)",
          "transferContractOwnership(uint256,address,address)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "IHouseBusiness": {
        "src": "contracts\\interfaces\\IHouseBusiness.sol:5",
        "inherit": [],
        "libraries": [],
        "methods": [
          "collectionName()",
          "collectionNameSymbol()",
          "houseCounter()",
          "stakedCounter()",
          "soldedCounter()",
          "hTypeCounter()",
          "minPrice()",
          "maxPrice()",
          "penalty()",
          "royalty()",
          "historyTypes(uint256)",
          "houseHistories(uint256)",
          "allMembers(address)",
          "allHouses(uint256)",
          "stakedNfts(address)",
          "setMinMaxHousePrice(uint256,uint256)",
          "setConfigToken(address)",
          "isMember()",
          "addMember(address)",
          "removeMember(address)",
          "tokenURI(uint256)",
          "setPayable(uint256,address,bool)",
          "mintHouse(string,string,string,string,uint256)",
          "addAllowList(uint256,address)",
          "removeAllowList(uint256,address)",
          "checkAllowedList(uint256,address)",
          "addHistory(uint256,uint256,string,string,string,string,string,uint256)",
          "getHistory(uint256)",
          "editHistory(uint256,uint256,string,string,string,string,string,uint256)",
          "getHistoryType()",
          "addOrEditHType(uint256,string,bool,bool,bool,bool,bool,bool,bool)",
          "removeHistoryType(uint256)",
          "getMinMaxNFT()",
          "getTokenOwner(uint256)",
          "buyHouseNft(uint256)",
          "sendToken(address,uint256)",
          "changeTokenPrice(uint256,uint256)",
          "getAllHouses()",
          "getAllPayableHouses()",
          "getAllMyHouses()",
          "withdrawToken(uint256)",
          "withdrawETH(uint256)",
          "setAPYConfig(uint256,uint256)",
          "getAllAPYTypes()",
          "stake(uint256,uint256)",
          "unstake(uint256)",
          "stakingFinished(uint256)",
          "totalRewards(address)",
          "claimRewards(address)",
          "getAllMyStakedNFTs()",
          "getTotalInfo()",
          "getAllAPYs()",
          "getPenalty()",
          "setPenalty(uint256)",
          "getRoyalty()",
          "setRoyalty(uint256)",
          "ownerOf(uint256)",
          "getTokenPrice(uint256)",
          "setHouseStakedStatus(uint256,bool)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "IStaking": {
        "src": "contracts\\interfaces\\IStaking.sol:5",
        "inherit": [],
        "libraries": [],
        "methods": [
          "stakeCounter()"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      }
    },
    {
      "MainCleanContract": {
        "src": "contracts\\Contract.sol:6",
        "version": {
          "withMetadata": "6421e940ca2c08cec604e64c4e3802894c030e3491305b8df865d9e1c9e89aac",
          "withoutMetadata": "4b8cbb4879901533fe49280ca430f3230d2cf4cb717e76bb4a9404845cd178f8",
          "linkedWithoutMetadata": "4b8cbb4879901533fe49280ca430f3230d2cf4cb717e76bb4a9404845cd178f8"
        },
        "inherit": [],
        "libraries": [],
        "methods": [
          "(address)",
          "ccCreation(string,string,address,string,uint256,uint256,uint256,string)",
          "getAllContractsByOwner()",
          "getAllContractsBySigner()",
          "getContractById(uint256)",
          "addContractSigner(uint256,address)",
          "signContract(uint256)",
          "sendNotify(address,string,uint256)",
          "getUploadedCounter()",
          "getAllNotifies()",
          "calcDiv(uint256,uint256)",
          "toString(bytes)",
          "addressToString(address)",
          "uintToString(uint256)",
          "bytesToString(bytes32)",
          "transferContractOwnership(uint256,address,address)"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "MainCleanContract",
            "src": "contracts\\Contract.sol:52"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "ccCounter",
              "offset": 0,
              "slot": "0",
              "type": "t_uint256",
              "contract": "MainCleanContract",
              "src": "contracts\\Contract.sol:8"
            },
            {
              "label": "houseNFTAddress",
              "offset": 0,
              "slot": "1",
              "type": "t_address",
              "contract": "MainCleanContract",
              "src": "contracts\\Contract.sol:11"
            },
            {
              "label": "allCleanContracts",
              "offset": 0,
              "slot": "2",
              "type": "t_mapping(t_uint256,t_struct(CleanContract)39_storage)",
              "contract": "MainCleanContract",
              "src": "contracts\\Contract.sol:44"
            },
            {
              "label": "allContractsByOwner",
              "offset": 0,
              "slot": "3",
              "type": "t_mapping(t_address,t_array(t_uint256)dyn_storage)",
              "contract": "MainCleanContract",
              "src": "contracts\\Contract.sol:46"
            },
            {
              "label": "allContractsBySigner",
              "offset": 0,
              "slot": "4",
              "type": "t_mapping(t_address,t_array(t_uint256)dyn_storage)",
              "contract": "MainCleanContract",
              "src": "contracts\\Contract.sol:48"
            },
            {
              "label": "allNotifies",
              "offset": 0,
              "slot": "5",
              "type": "t_mapping(t_address,t_array(t_struct(Notify)52_storage)dyn_storage)",
              "contract": "MainCleanContract",
              "src": "contracts\\Contract.sol:50"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            },
            "t_array(t_struct(Notify)52_storage)dyn_storage": {
              "label": "struct MainCleanContract.Notify[]",
              "numberOfBytes": "32"
            },
            "t_array(t_uint256)dyn_storage": {
              "label": "uint256[]",
              "numberOfBytes": "32"
            },
            "t_bool": {
              "label": "bool",
              "numberOfBytes": "1"
            },
            "t_mapping(t_address,t_array(t_struct(Notify)52_storage)dyn_storage)": {
              "label": "mapping(address => struct MainCleanContract.Notify[])",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_array(t_uint256)dyn_storage)": {
              "label": "mapping(address => uint256[])",
              "numberOfBytes": "32"
            },
            "t_mapping(t_uint256,t_struct(CleanContract)39_storage)": {
              "label": "mapping(uint256 => struct MainCleanContract.CleanContract)",
              "numberOfBytes": "32"
            },
            "t_string_storage": {
              "label": "string",
              "numberOfBytes": "32"
            },
            "t_struct(CleanContract)39_storage": {
              "label": "struct MainCleanContract.CleanContract",
              "members": [
                {
                  "label": "contractId",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "0"
                },
                {
                  "label": "companyName",
                  "type": "t_string_storage",
                  "offset": 0,
                  "slot": "1"
                },
                {
                  "label": "contractType",
                  "type": "t_string_storage",
                  "offset": 0,
                  "slot": "2"
                },
                {
                  "label": "contractURI",
                  "type": "t_string_storage",
                  "offset": 0,
                  "slot": "3"
                },
                {
                  "label": "dateFrom",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "4"
                },
                {
                  "label": "dateTo",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "5"
                },
                {
                  "label": "agreedPrice",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "6"
                },
                {
                  "label": "currency",
                  "type": "t_string_storage",
                  "offset": 0,
                  "slot": "7"
                },
                {
                  "label": "creator",
                  "type": "t_address",
                  "offset": 0,
                  "slot": "8"
                },
                {
                  "label": "owner",
                  "type": "t_address",
                  "offset": 0,
                  "slot": "9"
                },
                {
                  "label": "creatorApproval",
                  "type": "t_bool",
                  "offset": 20,
                  "slot": "9"
                },
                {
                  "label": "creatorSignDate",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "10"
                },
                {
                  "label": "contractSigner",
                  "type": "t_address",
                  "offset": 0,
                  "slot": "11"
                },
                {
                  "label": "signerApproval",
                  "type": "t_bool",
                  "offset": 20,
                  "slot": "11"
                },
                {
                  "label": "signerSignDate",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "12"
                },
                {
                  "label": "status",
                  "type": "t_string_storage",
                  "offset": 0,
                  "slot": "13"
                }
              ],
              "numberOfBytes": "448"
            },
            "t_struct(Notify)52_storage": {
              "label": "struct MainCleanContract.Notify",
              "members": [
                {
                  "label": "nSender",
                  "type": "t_address",
                  "offset": 0,
                  "slot": "0"
                },
                {
                  "label": "nReceiver",
                  "type": "t_address",
                  "offset": 0,
                  "slot": "1"
                },
                {
                  "label": "ccID",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "2"
                },
                {
                  "label": "notifySentTime",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "3"
                },
                {
                  "label": "notifyContent",
                  "type": "t_string_storage",
                  "offset": 0,
                  "slot": "4"
                },
                {
                  "label": "status",
                  "type": "t_bool",
                  "offset": 0,
                  "slot": "5"
                }
              ],
              "numberOfBytes": "192"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            }
          },
          "layoutVersion": "1.1",
          "flat": true
        }
      }
    },
    {
      "ThirdParty": {
        "src": "contracts\\ThirdParty.sol:5",
        "version": {
          "withMetadata": "cbf5b2fae6668ee45b86827e485cbed39526db15e39a77a193d607720ff0015c",
          "withoutMetadata": "c7f6b899dcbca6a360ab204550ba9b4fec9f4cae1bcd2f5879cfa3965e9d550f",
          "linkedWithoutMetadata": "c7f6b899dcbca6a360ab204550ba9b4fec9f4cae1bcd2f5879cfa3965e9d550f"
        },
        "inherit": [],
        "libraries": [],
        "methods": [
          "getAllCategories()",
          "addCategory(string,uint256[])",
          "editCategory(uint256,string,uint256[])",
          "deleteCategory(uint256)",
          "getAllProperties()",
          "addProperty(string)",
          "editProperty(uint256,string)",
          "deleteProperty(uint256)",
          "getPackagesByCategory(uint256)",
          "addPackage(uint256,string,uint256,uint256,uint256,bool[])",
          "editPackage(uint256,uint256,string,uint256,uint256,uint256,bool[])",
          "deletePackage(uint256,uint256)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [
            {
              "label": "categoryCounter",
              "offset": 0,
              "slot": "0",
              "type": "t_uint256",
              "contract": "ThirdParty",
              "src": "contracts\\ThirdParty.sol:12"
            },
            {
              "label": "packageCounter",
              "offset": 0,
              "slot": "1",
              "type": "t_uint256",
              "contract": "ThirdParty",
              "src": "contracts\\ThirdParty.sol:23"
            },
            {
              "label": "propertyCounter",
              "offset": 0,
              "slot": "2",
              "type": "t_uint256",
              "contract": "ThirdParty",
              "src": "contracts\\ThirdParty.sol:29"
            },
            {
              "label": "allCategories",
              "offset": 0,
              "slot": "3",
              "type": "t_array(t_struct(Category)11_storage)dyn_storage",
              "contract": "ThirdParty",
              "src": "contracts\\ThirdParty.sol:31"
            },
            {
              "label": "allPackages",
              "offset": 0,
              "slot": "4",
              "type": "t_mapping(t_uint256,t_array(t_struct(Package)29_storage)dyn_storage)",
              "contract": "ThirdParty",
              "src": "contracts\\ThirdParty.sol:34"
            },
            {
              "label": "allProperties",
              "offset": 0,
              "slot": "5",
              "type": "t_array(t_struct(Property)36_storage)dyn_storage",
              "contract": "ThirdParty",
              "src": "contracts\\ThirdParty.sol:37"
            }
          ],
          "types": {
            "t_array(t_bool)dyn_storage": {
              "label": "bool[]",
              "numberOfBytes": "32"
            },
            "t_array(t_struct(Category)11_storage)dyn_storage": {
              "label": "struct ThirdParty.Category[]",
              "numberOfBytes": "32"
            },
            "t_array(t_struct(Package)29_storage)dyn_storage": {
              "label": "struct ThirdParty.Package[]",
              "numberOfBytes": "32"
            },
            "t_array(t_struct(Property)36_storage)dyn_storage": {
              "label": "struct ThirdParty.Property[]",
              "numberOfBytes": "32"
            },
            "t_array(t_uint256)dyn_storage": {
              "label": "uint256[]",
              "numberOfBytes": "32"
            },
            "t_bool": {
              "label": "bool",
              "numberOfBytes": "1"
            },
            "t_mapping(t_uint256,t_array(t_struct(Package)29_storage)dyn_storage)": {
              "label": "mapping(uint256 => struct ThirdParty.Package[])",
              "numberOfBytes": "32"
            },
            "t_string_storage": {
              "label": "string",
              "numberOfBytes": "32"
            },
            "t_struct(Category)11_storage": {
              "label": "struct ThirdParty.Category",
              "members": [
                {
                  "label": "categoryID",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "0"
                },
                {
                  "label": "cartegoryName",
                  "type": "t_string_storage",
                  "offset": 0,
                  "slot": "1"
                },
                {
                  "label": "properties",
                  "type": "t_array(t_uint256)dyn_storage",
                  "offset": 0,
                  "slot": "2"
                },
                {
                  "label": "visible",
                  "type": "t_bool",
                  "offset": 0,
                  "slot": "3"
                }
              ],
              "numberOfBytes": "128"
            },
            "t_struct(Package)29_storage": {
              "label": "struct ThirdParty.Package",
              "members": [
                {
                  "label": "categoryID",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "0"
                },
                {
                  "label": "packageID",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "1"
                },
                {
                  "label": "packageName",
                  "type": "t_string_storage",
                  "offset": 0,
                  "slot": "2"
                },
                {
                  "label": "price",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "3"
                },
                {
                  "label": "period",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "4"
                },
                {
                  "label": "dataLimit",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "5"
                },
                {
                  "label": "propertyVisible",
                  "type": "t_array(t_bool)dyn_storage",
                  "offset": 0,
                  "slot": "6"
                }
              ],
              "numberOfBytes": "224"
            },
            "t_struct(Property)36_storage": {
              "label": "struct ThirdParty.Property",
              "members": [
                {
                  "label": "propertyID",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "0"
                },
                {
                  "label": "propertyName",
                  "type": "t_string_storage",
                  "offset": 0,
                  "slot": "1"
                }
              ],
              "numberOfBytes": "64"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            }
          },
          "layoutVersion": "1.1",
          "flat": true
        }
      }
    },
    {
      "Context": {
        "src": "contracts\\TokenContract.sol:22",
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "HouseBusinessToken": {
        "src": "contracts\\TokenContract.sol:33",
        "version": {
          "withMetadata": "e53f4b9234e67266e4442dec09d084a17cbe6b1b4fb90d62776f0d6f370f0570",
          "withoutMetadata": "f5d2b294cac19c78c593798b4a1bae04c45c82839cbcffe3cc910bb441f21259",
          "linkedWithoutMetadata": "f5d2b294cac19c78c593798b4a1bae04c45c82839cbcffe3cc910bb441f21259"
        },
        "inherit": [
          "IERC20Metadata",
          "IERC20",
          "Context"
        ],
        "libraries": [],
        "methods": [
          "()",
          "name()",
          "symbol()",
          "decimals()",
          "totalSupply()",
          "balanceOf(address)",
          "transfer(address,uint256)",
          "allowance(address,address)",
          "approve(address,uint256)",
          "transferFrom(address,address,uint256)",
          "increaseAllowance(address,uint256)",
          "decreaseAllowance(address,uint256)",
          "_mint(address,uint256)"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "HouseBusinessToken",
            "src": "contracts\\TokenContract.sol:42"
          },
          {
            "kind": "state-variable-assignment",
            "name": "_name",
            "src": "contracts\\TokenContract.sol:37"
          },
          {
            "kind": "state-variable-assignment",
            "name": "_symbol",
            "src": "contracts\\TokenContract.sol:38"
          },
          {
            "kind": "state-variable-assignment",
            "name": "_decimals",
            "src": "contracts\\TokenContract.sol:39"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "_balances",
              "offset": 0,
              "slot": "0",
              "type": "t_mapping(t_address,t_uint256)",
              "contract": "HouseBusinessToken",
              "src": "contracts\\TokenContract.sol:34"
            },
            {
              "label": "_allowances",
              "offset": 0,
              "slot": "1",
              "type": "t_mapping(t_address,t_mapping(t_address,t_uint256))",
              "contract": "HouseBusinessToken",
              "src": "contracts\\TokenContract.sol:35"
            },
            {
              "label": "_totalSupply",
              "offset": 0,
              "slot": "2",
              "type": "t_uint256",
              "contract": "HouseBusinessToken",
              "src": "contracts\\TokenContract.sol:36"
            },
            {
              "label": "_name",
              "offset": 0,
              "slot": "3",
              "type": "t_string_storage",
              "contract": "HouseBusinessToken",
              "src": "contracts\\TokenContract.sol:37"
            },
            {
              "label": "_symbol",
              "offset": 0,
              "slot": "4",
              "type": "t_string_storage",
              "contract": "HouseBusinessToken",
              "src": "contracts\\TokenContract.sol:38"
            },
            {
              "label": "_decimals",
              "offset": 0,
              "slot": "5",
              "type": "t_uint8",
              "contract": "HouseBusinessToken",
              "src": "contracts\\TokenContract.sol:39"
            },
            {
              "label": "_owner",
              "offset": 1,
              "slot": "5",
              "type": "t_address",
              "contract": "HouseBusinessToken",
              "src": "contracts\\TokenContract.sol:40"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            },
            "t_mapping(t_address,t_mapping(t_address,t_uint256))": {
              "label": "mapping(address => mapping(address => uint256))",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_uint256)": {
              "label": "mapping(address => uint256)",
              "numberOfBytes": "32"
            },
            "t_string_storage": {
              "label": "string",
              "numberOfBytes": "32"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            },
            "t_uint8": {
              "label": "uint8",
              "numberOfBytes": "1"
            }
          },
          "layoutVersion": "1.1",
          "flat": true
        }
      },
      "IERC20": {
        "src": "contracts\\TokenContract.sol:5",
        "inherit": [],
        "libraries": [],
        "methods": [
          "totalSupply()",
          "balanceOf(address)",
          "transfer(address,uint256)",
          "allowance(address,address)",
          "approve(address,uint256)",
          "transferFrom(address,address,uint256)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "IERC20Metadata": {
        "src": "contracts\\TokenContract.sol:16",
        "inherit": [
          "IERC20"
        ],
        "libraries": [],
        "methods": [
          "name()",
          "symbol()",
          "decimals()"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      }
    },
    {
      "IPRC20": {
        "src": "contracts\\interfaces\\IPRC20.sol:4",
        "inherit": [],
        "libraries": [],
        "methods": [
          "totalSupply()",
          "balanceOf(address)",
          "transfer(address,uint256)",
          "allowance(address,address)",
          "approve(address,uint256)",
          "transferFrom(address,address,uint256)",
          "decimals()"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      }
    },
    {
      "IERC20": {
        "src": "@openzeppelin\\contracts\\token\\ERC20\\IERC20.sol:9",
        "inherit": [],
        "libraries": [],
        "methods": [
          "totalSupply()",
          "balanceOf(address)",
          "transfer(address,uint256)",
          "allowance(address,address)",
          "approve(address,uint256)",
          "transferFrom(address,address,uint256)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "IERC721": {
        "src": "@openzeppelin\\contracts\\token\\ERC721\\IERC721.sol:11",
        "inherit": [
          "IERC165"
        ],
        "libraries": [],
        "methods": [
          "balanceOf(address)",
          "ownerOf(uint256)",
          "safeTransferFrom(address,address,uint256,bytes)",
          "safeTransferFrom(address,address,uint256)",
          "transferFrom(address,address,uint256)",
          "approve(address,uint256)",
          "setApprovalForAll(address,bool)",
          "getApproved(uint256)",
          "isApprovedForAll(address,address)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "IERC165": {
        "src": "@openzeppelin\\contracts\\utils\\introspection\\IERC165.sol:15",
        "inherit": [],
        "libraries": [],
        "methods": [
          "supportsInterface(bytes4)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "HouseStaking": {
        "src": "contracts\\Staking.sol:6",
        "version": {
          "withMetadata": "b434e0d9fc6e61f20a7ae59c658eae1046efdaddcb12502607dc9c2ba1b48d96",
          "withoutMetadata": "55dd03d5604f70c2abf52ecb260f160dc660988f7e28526fbed5969d1a598935",
          "linkedWithoutMetadata": "55dd03d5604f70c2abf52ecb260f160dc660988f7e28526fbed5969d1a598935"
        },
        "inherit": [],
        "libraries": [],
        "methods": [
          "(address,address)",
          "calcDiv(uint256,uint256)",
          "setAPYConfig(uint256,uint256)",
          "getAllAPYTypes()",
          "stake(uint256,uint256)",
          "unstake(uint256)",
          "stakingFinished(uint256)",
          "totalRewards(address)",
          "claimRewards(address)",
          "getAllMyStakedNFTs()",
          "getAllAPYs()",
          "getPenalty()",
          "setPenalty(uint256)"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "HouseStaking",
            "src": "contracts\\Staking.sol:33"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "stakedCounter",
              "offset": 0,
              "slot": "0",
              "type": "t_uint256",
              "contract": "HouseStaking",
              "src": "contracts\\Staking.sol:8"
            },
            {
              "label": "penalty",
              "offset": 0,
              "slot": "1",
              "type": "t_uint256",
              "contract": "HouseStaking",
              "src": "contracts\\Staking.sol:10"
            },
            {
              "label": "APYtypes",
              "offset": 0,
              "slot": "2",
              "type": "t_array(t_uint256)dyn_storage",
              "contract": "HouseStaking",
              "src": "contracts\\Staking.sol:12"
            },
            {
              "label": "APYConfig",
              "offset": 0,
              "slot": "3",
              "type": "t_mapping(t_uint256,t_uint256)",
              "contract": "HouseStaking",
              "src": "contracts\\Staking.sol:15"
            },
            {
              "label": "stakedNfts",
              "offset": 0,
              "slot": "4",
              "type": "t_mapping(t_address,t_array(t_struct(StakedNft)248_storage)dyn_storage)",
              "contract": "HouseStaking",
              "src": "contracts\\Staking.sol:16"
            },
            {
              "label": "tokenAddress",
              "offset": 0,
              "slot": "5",
              "type": "t_address",
              "contract": "HouseStaking",
              "src": "contracts\\Staking.sol:18"
            },
            {
              "label": "houseNFTAddress",
              "offset": 0,
              "slot": "6",
              "type": "t_address",
              "contract": "HouseStaking",
              "src": "contracts\\Staking.sol:19"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            },
            "t_array(t_struct(StakedNft)248_storage)dyn_storage": {
              "label": "struct HouseStaking.StakedNft[]",
              "numberOfBytes": "32"
            },
            "t_array(t_uint256)dyn_storage": {
              "label": "uint256[]",
              "numberOfBytes": "32"
            },
            "t_bool": {
              "label": "bool",
              "numberOfBytes": "1"
            },
            "t_mapping(t_address,t_array(t_struct(StakedNft)248_storage)dyn_storage)": {
              "label": "mapping(address => struct HouseStaking.StakedNft[])",
              "numberOfBytes": "32"
            },
            "t_mapping(t_uint256,t_uint256)": {
              "label": "mapping(uint256 => uint256)",
              "numberOfBytes": "32"
            },
            "t_struct(StakedNft)248_storage": {
              "label": "struct HouseStaking.StakedNft",
              "members": [
                {
                  "label": "owner",
                  "type": "t_address",
                  "offset": 0,
                  "slot": "0"
                },
                {
                  "label": "tokenId",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "1"
                },
                {
                  "label": "startedDate",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "2"
                },
                {
                  "label": "endDate",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "3"
                },
                {
                  "label": "claimDate",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "4"
                },
                {
                  "label": "stakingType",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "5"
                },
                {
                  "label": "perSecRewards",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "6"
                },
                {
                  "label": "stakingStatus",
                  "type": "t_bool",
                  "offset": 0,
                  "slot": "7"
                }
              ],
              "numberOfBytes": "256"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            }
          },
          "layoutVersion": "1.1",
          "flat": true
        }
      },
      "IHouseBusiness": {
        "src": "contracts\\interfaces\\IHouseBusiness.sol:5",
        "inherit": [],
        "libraries": [],
        "methods": [
          "collectionName()",
          "collectionNameSymbol()",
          "houseCounter()",
          "stakedCounter()",
          "soldedCounter()",
          "hTypeCounter()",
          "minPrice()",
          "maxPrice()",
          "penalty()",
          "royalty()",
          "historyTypes(uint256)",
          "houseHistories(uint256)",
          "allMembers(address)",
          "allHouses(uint256)",
          "stakedNfts(address)",
          "setMinMaxHousePrice(uint256,uint256)",
          "setConfigToken(address)",
          "isMember()",
          "addMember(address)",
          "removeMember(address)",
          "tokenURI(uint256)",
          "setPayable(uint256,address,bool)",
          "mintHouse(string,string,string,string,uint256)",
          "addAllowList(uint256,address)",
          "removeAllowList(uint256,address)",
          "checkAllowedList(uint256,address)",
          "addHistory(uint256,uint256,string,string,string,string,string,uint256)",
          "getHistory(uint256)",
          "editHistory(uint256,uint256,string,string,string,string,string,uint256)",
          "getHistoryType()",
          "addOrEditHType(uint256,string,bool,bool,bool,bool,bool,bool,bool)",
          "removeHistoryType(uint256)",
          "getMinMaxNFT()",
          "getTokenOwner(uint256)",
          "buyHouseNft(uint256)",
          "sendToken(address,uint256)",
          "changeTokenPrice(uint256,uint256)",
          "getAllHouses()",
          "getAllPayableHouses()",
          "getAllMyHouses()",
          "withdrawToken(uint256)",
          "withdrawETH(uint256)",
          "setAPYConfig(uint256,uint256)",
          "getAllAPYTypes()",
          "stake(uint256,uint256)",
          "unstake(uint256)",
          "stakingFinished(uint256)",
          "totalRewards(address)",
          "claimRewards(address)",
          "getAllMyStakedNFTs()",
          "getTotalInfo()",
          "getAllAPYs()",
          "getPenalty()",
          "setPenalty(uint256)",
          "getRoyalty()",
          "setRoyalty(uint256)",
          "ownerOf(uint256)",
          "getTokenPrice(uint256)",
          "setHouseStakedStatus(uint256,bool)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      }
    },
    {
      "MainCleanContract": {
        "src": "contracts\\Contract.sol:6",
        "version": {
          "withMetadata": "6421e940ca2c08cec604e64c4e3802894c030e3491305b8df865d9e1c9e89aac",
          "withoutMetadata": "4b8cbb4879901533fe49280ca430f3230d2cf4cb717e76bb4a9404845cd178f8",
          "linkedWithoutMetadata": "4b8cbb4879901533fe49280ca430f3230d2cf4cb717e76bb4a9404845cd178f8"
        },
        "inherit": [],
        "libraries": [],
        "methods": [
          "(address)",
          "ccCreation(string,string,address,string,uint256,uint256,uint256,string)",
          "getAllContractsByOwner()",
          "getAllContractsBySigner()",
          "getContractById(uint256)",
          "addContractSigner(uint256,address)",
          "signContract(uint256)",
          "sendNotify(address,string,uint256)",
          "getUploadedCounter()",
          "getAllNotifies()",
          "calcDiv(uint256,uint256)",
          "toString(bytes)",
          "addressToString(address)",
          "uintToString(uint256)",
          "bytesToString(bytes32)",
          "transferContractOwnership(uint256,address,address)"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "MainCleanContract",
            "src": "contracts\\Contract.sol:52"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "ccCounter",
              "offset": 0,
              "slot": "0",
              "type": "t_uint256",
              "contract": "MainCleanContract",
              "src": "contracts\\Contract.sol:8"
            },
            {
              "label": "houseNFTAddress",
              "offset": 0,
              "slot": "1",
              "type": "t_address",
              "contract": "MainCleanContract",
              "src": "contracts\\Contract.sol:11"
            },
            {
              "label": "allCleanContracts",
              "offset": 0,
              "slot": "2",
              "type": "t_mapping(t_uint256,t_struct(CleanContract)39_storage)",
              "contract": "MainCleanContract",
              "src": "contracts\\Contract.sol:44"
            },
            {
              "label": "allContractsByOwner",
              "offset": 0,
              "slot": "3",
              "type": "t_mapping(t_address,t_array(t_uint256)dyn_storage)",
              "contract": "MainCleanContract",
              "src": "contracts\\Contract.sol:46"
            },
            {
              "label": "allContractsBySigner",
              "offset": 0,
              "slot": "4",
              "type": "t_mapping(t_address,t_array(t_uint256)dyn_storage)",
              "contract": "MainCleanContract",
              "src": "contracts\\Contract.sol:48"
            },
            {
              "label": "allNotifies",
              "offset": 0,
              "slot": "5",
              "type": "t_mapping(t_address,t_array(t_struct(Notify)52_storage)dyn_storage)",
              "contract": "MainCleanContract",
              "src": "contracts\\Contract.sol:50"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            },
            "t_array(t_struct(Notify)52_storage)dyn_storage": {
              "label": "struct MainCleanContract.Notify[]",
              "numberOfBytes": "32"
            },
            "t_array(t_uint256)dyn_storage": {
              "label": "uint256[]",
              "numberOfBytes": "32"
            },
            "t_bool": {
              "label": "bool",
              "numberOfBytes": "1"
            },
            "t_mapping(t_address,t_array(t_struct(Notify)52_storage)dyn_storage)": {
              "label": "mapping(address => struct MainCleanContract.Notify[])",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_array(t_uint256)dyn_storage)": {
              "label": "mapping(address => uint256[])",
              "numberOfBytes": "32"
            },
            "t_mapping(t_uint256,t_struct(CleanContract)39_storage)": {
              "label": "mapping(uint256 => struct MainCleanContract.CleanContract)",
              "numberOfBytes": "32"
            },
            "t_string_storage": {
              "label": "string",
              "numberOfBytes": "32"
            },
            "t_struct(CleanContract)39_storage": {
              "label": "struct MainCleanContract.CleanContract",
              "members": [
                {
                  "label": "contractId",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "0"
                },
                {
                  "label": "companyName",
                  "type": "t_string_storage",
                  "offset": 0,
                  "slot": "1"
                },
                {
                  "label": "contractType",
                  "type": "t_string_storage",
                  "offset": 0,
                  "slot": "2"
                },
                {
                  "label": "contractURI",
                  "type": "t_string_storage",
                  "offset": 0,
                  "slot": "3"
                },
                {
                  "label": "dateFrom",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "4"
                },
                {
                  "label": "dateTo",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "5"
                },
                {
                  "label": "agreedPrice",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "6"
                },
                {
                  "label": "currency",
                  "type": "t_string_storage",
                  "offset": 0,
                  "slot": "7"
                },
                {
                  "label": "creator",
                  "type": "t_address",
                  "offset": 0,
                  "slot": "8"
                },
                {
                  "label": "owner",
                  "type": "t_address",
                  "offset": 0,
                  "slot": "9"
                },
                {
                  "label": "creatorApproval",
                  "type": "t_bool",
                  "offset": 20,
                  "slot": "9"
                },
                {
                  "label": "creatorSignDate",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "10"
                },
                {
                  "label": "contractSigner",
                  "type": "t_address",
                  "offset": 0,
                  "slot": "11"
                },
                {
                  "label": "signerApproval",
                  "type": "t_bool",
                  "offset": 20,
                  "slot": "11"
                },
                {
                  "label": "signerSignDate",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "12"
                },
                {
                  "label": "status",
                  "type": "t_string_storage",
                  "offset": 0,
                  "slot": "13"
                }
              ],
              "numberOfBytes": "448"
            },
            "t_struct(Notify)52_storage": {
              "label": "struct MainCleanContract.Notify",
              "members": [
                {
                  "label": "nSender",
                  "type": "t_address",
                  "offset": 0,
                  "slot": "0"
                },
                {
                  "label": "nReceiver",
                  "type": "t_address",
                  "offset": 0,
                  "slot": "1"
                },
                {
                  "label": "ccID",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "2"
                },
                {
                  "label": "notifySentTime",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "3"
                },
                {
                  "label": "notifyContent",
                  "type": "t_string_storage",
                  "offset": 0,
                  "slot": "4"
                },
                {
                  "label": "status",
                  "type": "t_bool",
                  "offset": 0,
                  "slot": "5"
                }
              ],
              "numberOfBytes": "192"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            }
          },
          "layoutVersion": "1.1",
          "flat": true
        }
      }
    },
    {
      "IERC20": {
        "src": "@openzeppelin\\contracts\\token\\ERC20\\IERC20.sol:9",
        "inherit": [],
        "libraries": [],
        "methods": [
          "totalSupply()",
          "balanceOf(address)",
          "transfer(address,uint256)",
          "allowance(address,address)",
          "approve(address,uint256)",
          "transferFrom(address,address,uint256)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "ERC721": {
        "src": "@openzeppelin\\contracts\\token\\ERC721\\ERC721.sol:19",
        "version": {
          "withMetadata": "311027b738fb50ea92c84baf68eacb931adf05de03da13635a661dc9c5b03f73",
          "withoutMetadata": "9ec7f439077c3b762bc3aa6a17c55aba7a78d240190c9c7814df896455a0f780",
          "linkedWithoutMetadata": "9ec7f439077c3b762bc3aa6a17c55aba7a78d240190c9c7814df896455a0f780"
        },
        "inherit": [
          "IERC721Metadata",
          "IERC721",
          "ERC165",
          "IERC165",
          "Context"
        ],
        "libraries": [
          "Address",
          "Strings"
        ],
        "methods": [
          "(string,string)",
          "supportsInterface(bytes4)",
          "balanceOf(address)",
          "ownerOf(uint256)",
          "name()",
          "symbol()",
          "tokenURI(uint256)",
          "approve(address,uint256)",
          "getApproved(uint256)",
          "setApprovalForAll(address,bool)",
          "isApprovedForAll(address,address)",
          "transferFrom(address,address,uint256)",
          "safeTransferFrom(address,address,uint256)",
          "safeTransferFrom(address,address,uint256,bytes)"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "ERC721",
            "src": "@openzeppelin\\contracts\\token\\ERC721\\ERC721.sol:44"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "_name",
              "offset": 0,
              "slot": "0",
              "type": "t_string_storage",
              "contract": "ERC721",
              "src": "@openzeppelin\\contracts\\token\\ERC721\\ERC721.sol:24"
            },
            {
              "label": "_symbol",
              "offset": 0,
              "slot": "1",
              "type": "t_string_storage",
              "contract": "ERC721",
              "src": "@openzeppelin\\contracts\\token\\ERC721\\ERC721.sol:27"
            },
            {
              "label": "_owners",
              "offset": 0,
              "slot": "2",
              "type": "t_mapping(t_uint256,t_address)",
              "contract": "ERC721",
              "src": "@openzeppelin\\contracts\\token\\ERC721\\ERC721.sol:30"
            },
            {
              "label": "_balances",
              "offset": 0,
              "slot": "3",
              "type": "t_mapping(t_address,t_uint256)",
              "contract": "ERC721",
              "src": "@openzeppelin\\contracts\\token\\ERC721\\ERC721.sol:33"
            },
            {
              "label": "_tokenApprovals",
              "offset": 0,
              "slot": "4",
              "type": "t_mapping(t_uint256,t_address)",
              "contract": "ERC721",
              "src": "@openzeppelin\\contracts\\token\\ERC721\\ERC721.sol:36"
            },
            {
              "label": "_operatorApprovals",
              "offset": 0,
              "slot": "5",
              "type": "t_mapping(t_address,t_mapping(t_address,t_bool))",
              "contract": "ERC721",
              "src": "@openzeppelin\\contracts\\token\\ERC721\\ERC721.sol:39"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            },
            "t_bool": {
              "label": "bool",
              "numberOfBytes": "1"
            },
            "t_mapping(t_address,t_bool)": {
              "label": "mapping(address => bool)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_mapping(t_address,t_bool))": {
              "label": "mapping(address => mapping(address => bool))",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_uint256)": {
              "label": "mapping(address => uint256)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_uint256,t_address)": {
              "label": "mapping(uint256 => address)",
              "numberOfBytes": "32"
            },
            "t_string_storage": {
              "label": "string",
              "numberOfBytes": "32"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            }
          },
          "layoutVersion": "1.1",
          "flat": true
        }
      },
      "IERC721": {
        "src": "@openzeppelin\\contracts\\token\\ERC721\\IERC721.sol:11",
        "inherit": [
          "IERC165"
        ],
        "libraries": [],
        "methods": [
          "balanceOf(address)",
          "ownerOf(uint256)",
          "safeTransferFrom(address,address,uint256,bytes)",
          "safeTransferFrom(address,address,uint256)",
          "transferFrom(address,address,uint256)",
          "approve(address,uint256)",
          "setApprovalForAll(address,bool)",
          "getApproved(uint256)",
          "isApprovedForAll(address,address)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "IERC721Receiver": {
        "src": "@openzeppelin\\contracts\\token\\ERC721\\IERC721Receiver.sol:11",
        "inherit": [],
        "libraries": [],
        "methods": [
          "onERC721Received(address,address,uint256,bytes)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "ERC721URIStorage": {
        "src": "@openzeppelin\\contracts\\token\\ERC721\\extensions\\ERC721URIStorage.sol:11",
        "inherit": [
          "ERC721",
          "IERC721Metadata",
          "IERC721",
          "ERC165",
          "IERC165",
          "Context"
        ],
        "libraries": [
          "Strings"
        ],
        "methods": [
          "tokenURI(uint256)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [
            {
              "label": "_name",
              "offset": 0,
              "slot": "0",
              "type": "t_string_storage",
              "contract": "ERC721",
              "src": "@openzeppelin\\contracts\\token\\ERC721\\ERC721.sol:24"
            },
            {
              "label": "_symbol",
              "offset": 0,
              "slot": "1",
              "type": "t_string_storage",
              "contract": "ERC721",
              "src": "@openzeppelin\\contracts\\token\\ERC721\\ERC721.sol:27"
            },
            {
              "label": "_owners",
              "offset": 0,
              "slot": "2",
              "type": "t_mapping(t_uint256,t_address)",
              "contract": "ERC721",
              "src": "@openzeppelin\\contracts\\token\\ERC721\\ERC721.sol:30"
            },
            {
              "label": "_balances",
              "offset": 0,
              "slot": "3",
              "type": "t_mapping(t_address,t_uint256)",
              "contract": "ERC721",
              "src": "@openzeppelin\\contracts\\token\\ERC721\\ERC721.sol:33"
            },
            {
              "label": "_tokenApprovals",
              "offset": 0,
              "slot": "4",
              "type": "t_mapping(t_uint256,t_address)",
              "contract": "ERC721",
              "src": "@openzeppelin\\contracts\\token\\ERC721\\ERC721.sol:36"
            },
            {
              "label": "_operatorApprovals",
              "offset": 0,
              "slot": "5",
              "type": "t_mapping(t_address,t_mapping(t_address,t_bool))",
              "contract": "ERC721",
              "src": "@openzeppelin\\contracts\\token\\ERC721\\ERC721.sol:39"
            },
            {
              "label": "_tokenURIs",
              "offset": 0,
              "slot": "6",
              "type": "t_mapping(t_uint256,t_string_storage)",
              "contract": "ERC721URIStorage",
              "src": "@openzeppelin\\contracts\\token\\ERC721\\extensions\\ERC721URIStorage.sol:15"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            },
            "t_bool": {
              "label": "bool",
              "numberOfBytes": "1"
            },
            "t_mapping(t_address,t_bool)": {
              "label": "mapping(address => bool)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_mapping(t_address,t_bool))": {
              "label": "mapping(address => mapping(address => bool))",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_uint256)": {
              "label": "mapping(address => uint256)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_uint256,t_address)": {
              "label": "mapping(uint256 => address)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_uint256,t_string_storage)": {
              "label": "mapping(uint256 => string)",
              "numberOfBytes": "32"
            },
            "t_string_storage": {
              "label": "string",
              "numberOfBytes": "32"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            }
          },
          "layoutVersion": "1.1",
          "flat": true
        }
      },
      "IERC721Metadata": {
        "src": "@openzeppelin\\contracts\\token\\ERC721\\extensions\\IERC721Metadata.sol:12",
        "inherit": [
          "IERC721",
          "IERC165"
        ],
        "libraries": [],
        "methods": [
          "name()",
          "symbol()",
          "tokenURI(uint256)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "Address": {
        "src": "@openzeppelin\\contracts\\utils\\Address.sol:9",
        "version": {
          "withMetadata": "a0500f265408d7c0dbf75da3f9e44a5c2ee85e18bb1b58fe491ffcfa4ea7fd9b",
          "withoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db",
          "linkedWithoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db"
        },
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [
          {
            "kind": "delegatecall",
            "src": "@openzeppelin\\contracts\\utils\\Address.sol:185"
          }
        ],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "Context": {
        "src": "@openzeppelin\\contracts\\utils\\Context.sol:16",
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "Strings": {
        "src": "@openzeppelin\\contracts\\utils\\Strings.sol:11",
        "version": {
          "withMetadata": "c385b5200dd723f945d28b88358d79ca1b5c0f71c28cbbab9acf6d6f3fd15593",
          "withoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db",
          "linkedWithoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db"
        },
        "inherit": [],
        "libraries": [
          "Math"
        ],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "ERC165": {
        "src": "@openzeppelin\\contracts\\utils\\introspection\\ERC165.sol:22",
        "inherit": [
          "IERC165"
        ],
        "libraries": [],
        "methods": [
          "supportsInterface(bytes4)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "IERC165": {
        "src": "@openzeppelin\\contracts\\utils\\introspection\\IERC165.sol:15",
        "inherit": [],
        "libraries": [],
        "methods": [
          "supportsInterface(bytes4)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "Math": {
        "src": "@openzeppelin\\contracts\\utils\\math\\Math.sol:9",
        "version": {
          "withMetadata": "fcaf39e5e702f2902d6ef00c1def75c9800e8d2a0a78a87cf542096cafc7a4b0",
          "withoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db",
          "linkedWithoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db"
        },
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "HouseBusiness": {
        "src": "contracts\\HouseBusiness.sol:12",
        "version": {
          "withMetadata": "70e1ccafeffff0009a438997fc9159da21874168e425507dd95f7d30293dd594",
          "withoutMetadata": "6c407d0db57db9757fbc2276ab73ce93088615abd3b98eda738a38c41f3bb580",
          "linkedWithoutMetadata": "6c407d0db57db9757fbc2276ab73ce93088615abd3b98eda738a38c41f3bb580"
        },
        "inherit": [
          "ERC721URIStorage",
          "ERC721",
          "IERC721Metadata",
          "IERC721",
          "ERC165",
          "IERC165",
          "Context"
        ],
        "libraries": [],
        "methods": [
          "(address)",
          "setMinMaxHousePrice(uint256,uint256)",
          "setConfigToken(address)",
          "isMember()",
          "addMember(address)",
          "removeMember(address)",
          "tokenURI(uint256)",
          "setCContractAddress(address)",
          "setStakingContractAddress(address)",
          "setPayable(uint256,address,bool)",
          "mintHouse(string,string,string,string,uint256)",
          "addAllowList(uint256,address)",
          "removeAllowList(uint256,address)",
          "checkAllowedList(uint256,address)",
          "addHistory(uint256,uint256,uint256,string,string,string,string,string,uint256)",
          "getHistory(uint256)",
          "editHistory(uint256,uint256,string,string,string,string,string,uint256)",
          "getHistoryType()",
          "addOrEditHType(uint256,string,bool,bool,bool,bool,bool,bool,bool)",
          "removeHistoryType(uint256)",
          "getMinMaxNFT()",
          "getTokenOwner(uint256)",
          "buyHouseNft(uint256)",
          "sendToken(address,uint256)",
          "changeTokenPrice(uint256,uint256)",
          "getAllHouses()",
          "getAllPayableHouses()",
          "getAllMyHouses()",
          "withdrawToken(uint256)",
          "withdrawETH(uint256)",
          "getTotalInfo()",
          "getTokenPrice(uint256)",
          "setHouseStakedStatus(uint256,bool)",
          "getRoyalty()",
          "setRoyalty(uint256)"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "HouseBusiness",
            "src": "contracts\\HouseBusiness.sol:92"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "_name",
              "offset": 0,
              "slot": "0",
              "type": "t_string_storage",
              "contract": "ERC721",
              "src": "@openzeppelin\\contracts\\token\\ERC721\\ERC721.sol:24"
            },
            {
              "label": "_symbol",
              "offset": 0,
              "slot": "1",
              "type": "t_string_storage",
              "contract": "ERC721",
              "src": "@openzeppelin\\contracts\\token\\ERC721\\ERC721.sol:27"
            },
            {
              "label": "_owners",
              "offset": 0,
              "slot": "2",
              "type": "t_mapping(t_uint256,t_address)",
              "contract": "ERC721",
              "src": "@openzeppelin\\contracts\\token\\ERC721\\ERC721.sol:30"
            },
            {
              "label": "_balances",
              "offset": 0,
              "slot": "3",
              "type": "t_mapping(t_address,t_uint256)",
              "contract": "ERC721",
              "src": "@openzeppelin\\contracts\\token\\ERC721\\ERC721.sol:33"
            },
            {
              "label": "_tokenApprovals",
              "offset": 0,
              "slot": "4",
              "type": "t_mapping(t_uint256,t_address)",
              "contract": "ERC721",
              "src": "@openzeppelin\\contracts\\token\\ERC721\\ERC721.sol:36"
            },
            {
              "label": "_operatorApprovals",
              "offset": 0,
              "slot": "5",
              "type": "t_mapping(t_address,t_mapping(t_address,t_bool))",
              "contract": "ERC721",
              "src": "@openzeppelin\\contracts\\token\\ERC721\\ERC721.sol:39"
            },
            {
              "label": "_tokenURIs",
              "offset": 0,
              "slot": "6",
              "type": "t_mapping(t_uint256,t_string_storage)",
              "contract": "ERC721URIStorage",
              "src": "@openzeppelin\\contracts\\token\\ERC721\\extensions\\ERC721URIStorage.sol:15"
            },
            {
              "label": "collectionName",
              "offset": 0,
              "slot": "7",
              "type": "t_string_storage",
              "contract": "HouseBusiness",
              "src": "contracts\\HouseBusiness.sol:14"
            },
            {
              "label": "collectionNameSymbol",
              "offset": 0,
              "slot": "8",
              "type": "t_string_storage",
              "contract": "HouseBusiness",
              "src": "contracts\\HouseBusiness.sol:16"
            },
            {
              "label": "houseCounter",
              "offset": 0,
              "slot": "9",
              "type": "t_uint256",
              "contract": "HouseBusiness",
              "src": "contracts\\HouseBusiness.sol:18"
            },
            {
              "label": "soldedCounter",
              "offset": 0,
              "slot": "10",
              "type": "t_uint256",
              "contract": "HouseBusiness",
              "src": "contracts\\HouseBusiness.sol:21"
            },
            {
              "label": "hTypeCounter",
              "offset": 0,
              "slot": "11",
              "type": "t_uint256",
              "contract": "HouseBusiness",
              "src": "contracts\\HouseBusiness.sol:23"
            },
            {
              "label": "_token",
              "offset": 0,
              "slot": "12",
              "type": "t_contract(IERC20)77",
              "contract": "HouseBusiness",
              "src": "contracts\\HouseBusiness.sol:25"
            },
            {
              "label": "minPrice",
              "offset": 0,
              "slot": "13",
              "type": "t_uint256",
              "contract": "HouseBusiness",
              "src": "contracts\\HouseBusiness.sol:27"
            },
            {
              "label": "maxPrice",
              "offset": 0,
              "slot": "14",
              "type": "t_uint256",
              "contract": "HouseBusiness",
              "src": "contracts\\HouseBusiness.sol:29"
            },
            {
              "label": "royalty",
              "offset": 0,
              "slot": "15",
              "type": "t_uint256",
              "contract": "HouseBusiness",
              "src": "contracts\\HouseBusiness.sol:31"
            },
            {
              "label": "cContract",
              "offset": 0,
              "slot": "16",
              "type": "t_contract(IMainCleanContract)5462",
              "contract": "HouseBusiness",
              "src": "contracts\\HouseBusiness.sol:33"
            },
            {
              "label": "historyTypes",
              "offset": 0,
              "slot": "17",
              "type": "t_array(t_struct(HistoryType)2831_storage)dyn_storage",
              "contract": "HouseBusiness",
              "src": "contracts\\HouseBusiness.sol:73"
            },
            {
              "label": "houseHistories",
              "offset": 0,
              "slot": "18",
              "type": "t_mapping(t_uint256,t_array(t_struct(History)2812_storage)dyn_storage)",
              "contract": "HouseBusiness",
              "src": "contracts\\HouseBusiness.sol:75"
            },
            {
              "label": "allMembers",
              "offset": 0,
              "slot": "19",
              "type": "t_mapping(t_address,t_bool)",
              "contract": "HouseBusiness",
              "src": "contracts\\HouseBusiness.sol:77"
            },
            {
              "label": "allHouses",
              "offset": 0,
              "slot": "20",
              "type": "t_mapping(t_uint256,t_struct(House)2795_storage)",
              "contract": "HouseBusiness",
              "src": "contracts\\HouseBusiness.sol:79"
            },
            {
              "label": "allowedList",
              "offset": 0,
              "slot": "21",
              "type": "t_mapping(t_uint256,t_mapping(t_address,t_bool))",
              "contract": "HouseBusiness",
              "src": "contracts\\HouseBusiness.sol:81"
            },
            {
              "label": "stakingContractAddress",
              "offset": 0,
              "slot": "22",
              "type": "t_address",
              "contract": "HouseBusiness",
              "src": "contracts\\HouseBusiness.sol:84"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            },
            "t_array(t_struct(History)2812_storage)dyn_storage": {
              "label": "struct HouseBusiness.History[]",
              "numberOfBytes": "32"
            },
            "t_array(t_struct(HistoryType)2831_storage)dyn_storage": {
              "label": "struct HouseBusiness.HistoryType[]",
              "numberOfBytes": "32"
            },
            "t_bool": {
              "label": "bool",
              "numberOfBytes": "1"
            },
            "t_contract(IERC20)77": {
              "label": "contract IERC20",
              "numberOfBytes": "20"
            },
            "t_contract(IMainCleanContract)5462": {
              "label": "contract IMainCleanContract",
              "numberOfBytes": "20"
            },
            "t_mapping(t_address,t_bool)": {
              "label": "mapping(address => bool)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_mapping(t_address,t_bool))": {
              "label": "mapping(address => mapping(address => bool))",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_uint256)": {
              "label": "mapping(address => uint256)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_uint256,t_address)": {
              "label": "mapping(uint256 => address)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_uint256,t_array(t_struct(History)2812_storage)dyn_storage)": {
              "label": "mapping(uint256 => struct HouseBusiness.History[])",
              "numberOfBytes": "32"
            },
            "t_mapping(t_uint256,t_mapping(t_address,t_bool))": {
              "label": "mapping(uint256 => mapping(address => bool))",
              "numberOfBytes": "32"
            },
            "t_mapping(t_uint256,t_string_storage)": {
              "label": "mapping(uint256 => string)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_uint256,t_struct(House)2795_storage)": {
              "label": "mapping(uint256 => struct HouseBusiness.House)",
              "numberOfBytes": "32"
            },
            "t_string_storage": {
              "label": "string",
              "numberOfBytes": "32"
            },
            "t_struct(History)2812_storage": {
              "label": "struct HouseBusiness.History",
              "members": [
                {
                  "label": "hID",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "0"
                },
                {
                  "label": "contractId",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "1"
                },
                {
                  "label": "houseImg",
                  "type": "t_string_storage",
                  "offset": 0,
                  "slot": "2"
                },
                {
                  "label": "houseBrand",
                  "type": "t_string_storage",
                  "offset": 0,
                  "slot": "3"
                },
                {
                  "label": "desc",
                  "type": "t_string_storage",
                  "offset": 0,
                  "slot": "4"
                },
                {
                  "label": "history",
                  "type": "t_string_storage",
                  "offset": 0,
                  "slot": "5"
                },
                {
                  "label": "brandType",
                  "type": "t_string_storage",
                  "offset": 0,
                  "slot": "6"
                },
                {
                  "label": "yearField",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "7"
                }
              ],
              "numberOfBytes": "256"
            },
            "t_struct(HistoryType)2831_storage": {
              "label": "struct HouseBusiness.HistoryType",
              "members": [
                {
                  "label": "hID",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "0"
                },
                {
                  "label": "hLabel",
                  "type": "t_string_storage",
                  "offset": 0,
                  "slot": "1"
                },
                {
                  "label": "connectContract",
                  "type": "t_bool",
                  "offset": 0,
                  "slot": "2"
                },
                {
                  "label": "imgNeed",
                  "type": "t_bool",
                  "offset": 1,
                  "slot": "2"
                },
                {
                  "label": "brandNeed",
                  "type": "t_bool",
                  "offset": 2,
                  "slot": "2"
                },
                {
                  "label": "descNeed",
                  "type": "t_bool",
                  "offset": 3,
                  "slot": "2"
                },
                {
                  "label": "brandTypeNeed",
                  "type": "t_bool",
                  "offset": 4,
                  "slot": "2"
                },
                {
                  "label": "yearNeed",
                  "type": "t_bool",
                  "offset": 5,
                  "slot": "2"
                },
                {
                  "label": "checkMark",
                  "type": "t_bool",
                  "offset": 6,
                  "slot": "2"
                }
              ],
              "numberOfBytes": "96"
            },
            "t_struct(House)2795_storage": {
              "label": "struct HouseBusiness.House",
              "members": [
                {
                  "label": "tokenId",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "0"
                },
                {
                  "label": "tokenName",
                  "type": "t_string_storage",
                  "offset": 0,
                  "slot": "1"
                },
                {
                  "label": "tokenURI",
                  "type": "t_string_storage",
                  "offset": 0,
                  "slot": "2"
                },
                {
                  "label": "tokenType",
                  "type": "t_string_storage",
                  "offset": 0,
                  "slot": "3"
                },
                {
                  "label": "currentOwner",
                  "type": "t_address",
                  "offset": 0,
                  "slot": "4"
                },
                {
                  "label": "previousOwner",
                  "type": "t_address",
                  "offset": 0,
                  "slot": "5"
                },
                {
                  "label": "buyer",
                  "type": "t_address",
                  "offset": 0,
                  "slot": "6"
                },
                {
                  "label": "price",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "7"
                },
                {
                  "label": "numberOfTransfers",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "8"
                },
                {
                  "label": "nftPayable",
                  "type": "t_bool",
                  "offset": 0,
                  "slot": "9"
                },
                {
                  "label": "staked",
                  "type": "t_bool",
                  "offset": 1,
                  "slot": "9"
                },
                {
                  "label": "soldstatus",
                  "type": "t_bool",
                  "offset": 2,
                  "slot": "9"
                }
              ],
              "numberOfBytes": "320"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            }
          },
          "layoutVersion": "1.1",
          "flat": true
        }
      },
      "HouseStaking": {
        "src": "contracts\\Staking.sol:6",
        "version": {
          "withMetadata": "b434e0d9fc6e61f20a7ae59c658eae1046efdaddcb12502607dc9c2ba1b48d96",
          "withoutMetadata": "55dd03d5604f70c2abf52ecb260f160dc660988f7e28526fbed5969d1a598935",
          "linkedWithoutMetadata": "55dd03d5604f70c2abf52ecb260f160dc660988f7e28526fbed5969d1a598935"
        },
        "inherit": [],
        "libraries": [],
        "methods": [
          "(address,address)",
          "calcDiv(uint256,uint256)",
          "setAPYConfig(uint256,uint256)",
          "getAllAPYTypes()",
          "stake(uint256,uint256)",
          "unstake(uint256)",
          "stakingFinished(uint256)",
          "totalRewards(address)",
          "claimRewards(address)",
          "getAllMyStakedNFTs()",
          "getAllAPYs()",
          "getPenalty()",
          "setPenalty(uint256)"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "HouseStaking",
            "src": "contracts\\Staking.sol:33"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "stakedCounter",
              "offset": 0,
              "slot": "0",
              "type": "t_uint256",
              "contract": "HouseStaking",
              "src": "contracts\\Staking.sol:8"
            },
            {
              "label": "penalty",
              "offset": 0,
              "slot": "1",
              "type": "t_uint256",
              "contract": "HouseStaking",
              "src": "contracts\\Staking.sol:10"
            },
            {
              "label": "APYtypes",
              "offset": 0,
              "slot": "2",
              "type": "t_array(t_uint256)dyn_storage",
              "contract": "HouseStaking",
              "src": "contracts\\Staking.sol:12"
            },
            {
              "label": "APYConfig",
              "offset": 0,
              "slot": "3",
              "type": "t_mapping(t_uint256,t_uint256)",
              "contract": "HouseStaking",
              "src": "contracts\\Staking.sol:15"
            },
            {
              "label": "stakedNfts",
              "offset": 0,
              "slot": "4",
              "type": "t_mapping(t_address,t_array(t_struct(StakedNft)4520_storage)dyn_storage)",
              "contract": "HouseStaking",
              "src": "contracts\\Staking.sol:16"
            },
            {
              "label": "tokenAddress",
              "offset": 0,
              "slot": "5",
              "type": "t_address",
              "contract": "HouseStaking",
              "src": "contracts\\Staking.sol:18"
            },
            {
              "label": "houseNFTAddress",
              "offset": 0,
              "slot": "6",
              "type": "t_address",
              "contract": "HouseStaking",
              "src": "contracts\\Staking.sol:19"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            },
            "t_array(t_struct(StakedNft)4520_storage)dyn_storage": {
              "label": "struct HouseStaking.StakedNft[]",
              "numberOfBytes": "32"
            },
            "t_array(t_uint256)dyn_storage": {
              "label": "uint256[]",
              "numberOfBytes": "32"
            },
            "t_bool": {
              "label": "bool",
              "numberOfBytes": "1"
            },
            "t_mapping(t_address,t_array(t_struct(StakedNft)4520_storage)dyn_storage)": {
              "label": "mapping(address => struct HouseStaking.StakedNft[])",
              "numberOfBytes": "32"
            },
            "t_mapping(t_uint256,t_uint256)": {
              "label": "mapping(uint256 => uint256)",
              "numberOfBytes": "32"
            },
            "t_struct(StakedNft)4520_storage": {
              "label": "struct HouseStaking.StakedNft",
              "members": [
                {
                  "label": "owner",
                  "type": "t_address",
                  "offset": 0,
                  "slot": "0"
                },
                {
                  "label": "tokenId",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "1"
                },
                {
                  "label": "startedDate",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "2"
                },
                {
                  "label": "endDate",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "3"
                },
                {
                  "label": "claimDate",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "4"
                },
                {
                  "label": "stakingType",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "5"
                },
                {
                  "label": "perSecRewards",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "6"
                },
                {
                  "label": "stakingStatus",
                  "type": "t_bool",
                  "offset": 0,
                  "slot": "7"
                }
              ],
              "numberOfBytes": "256"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            }
          },
          "layoutVersion": "1.1",
          "flat": true
        }
      },
      "IMainCleanContract": {
        "src": "contracts\\interfaces\\IContract.sol:6",
        "inherit": [],
        "libraries": [],
        "methods": [
          "getContractById(uint256)",
          "transferContractOwnership(uint256,address,address)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "IHouseBusiness": {
        "src": "contracts\\interfaces\\IHouseBusiness.sol:5",
        "inherit": [],
        "libraries": [],
        "methods": [
          "collectionName()",
          "collectionNameSymbol()",
          "houseCounter()",
          "stakedCounter()",
          "soldedCounter()",
          "hTypeCounter()",
          "minPrice()",
          "maxPrice()",
          "penalty()",
          "royalty()",
          "historyTypes(uint256)",
          "houseHistories(uint256)",
          "allMembers(address)",
          "allHouses(uint256)",
          "stakedNfts(address)",
          "setMinMaxHousePrice(uint256,uint256)",
          "setConfigToken(address)",
          "isMember()",
          "addMember(address)",
          "removeMember(address)",
          "tokenURI(uint256)",
          "setPayable(uint256,address,bool)",
          "mintHouse(string,string,string,string,uint256)",
          "addAllowList(uint256,address)",
          "removeAllowList(uint256,address)",
          "checkAllowedList(uint256,address)",
          "addHistory(uint256,uint256,string,string,string,string,string,uint256)",
          "getHistory(uint256)",
          "editHistory(uint256,uint256,string,string,string,string,string,uint256)",
          "getHistoryType()",
          "addOrEditHType(uint256,string,bool,bool,bool,bool,bool,bool,bool)",
          "removeHistoryType(uint256)",
          "getMinMaxNFT()",
          "getTokenOwner(uint256)",
          "buyHouseNft(uint256)",
          "sendToken(address,uint256)",
          "changeTokenPrice(uint256,uint256)",
          "getAllHouses()",
          "getAllPayableHouses()",
          "getAllMyHouses()",
          "withdrawToken(uint256)",
          "withdrawETH(uint256)",
          "setAPYConfig(uint256,uint256)",
          "getAllAPYTypes()",
          "stake(uint256,uint256)",
          "unstake(uint256)",
          "stakingFinished(uint256)",
          "totalRewards(address)",
          "claimRewards(address)",
          "getAllMyStakedNFTs()",
          "getTotalInfo()",
          "getAllAPYs()",
          "getPenalty()",
          "setPenalty(uint256)",
          "getRoyalty()",
          "setRoyalty(uint256)",
          "ownerOf(uint256)",
          "getTokenPrice(uint256)",
          "setHouseStakedStatus(uint256,bool)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "IStaking": {
        "src": "contracts\\interfaces\\IStaking.sol:5",
        "inherit": [],
        "libraries": [],
        "methods": [
          "stakeCounter()"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      }
    },
    {
      "MainCleanContract": {
        "src": "contracts\\Contract.sol:6",
        "version": {
          "withMetadata": "6421e940ca2c08cec604e64c4e3802894c030e3491305b8df865d9e1c9e89aac",
          "withoutMetadata": "4b8cbb4879901533fe49280ca430f3230d2cf4cb717e76bb4a9404845cd178f8",
          "linkedWithoutMetadata": "4b8cbb4879901533fe49280ca430f3230d2cf4cb717e76bb4a9404845cd178f8"
        },
        "inherit": [],
        "libraries": [],
        "methods": [
          "(address)",
          "ccCreation(string,string,address,string,uint256,uint256,uint256,string)",
          "getAllContractsByOwner()",
          "getAllContractsBySigner()",
          "getContractById(uint256)",
          "addContractSigner(uint256,address)",
          "signContract(uint256)",
          "sendNotify(address,string,uint256)",
          "getUploadedCounter()",
          "getAllNotifies()",
          "calcDiv(uint256,uint256)",
          "toString(bytes)",
          "addressToString(address)",
          "uintToString(uint256)",
          "bytesToString(bytes32)",
          "transferContractOwnership(uint256,address,address)"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "MainCleanContract",
            "src": "contracts\\Contract.sol:52"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "ccCounter",
              "offset": 0,
              "slot": "0",
              "type": "t_uint256",
              "contract": "MainCleanContract",
              "src": "contracts\\Contract.sol:8"
            },
            {
              "label": "houseNFTAddress",
              "offset": 0,
              "slot": "1",
              "type": "t_address",
              "contract": "MainCleanContract",
              "src": "contracts\\Contract.sol:11"
            },
            {
              "label": "allCleanContracts",
              "offset": 0,
              "slot": "2",
              "type": "t_mapping(t_uint256,t_struct(CleanContract)39_storage)",
              "contract": "MainCleanContract",
              "src": "contracts\\Contract.sol:44"
            },
            {
              "label": "allContractsByOwner",
              "offset": 0,
              "slot": "3",
              "type": "t_mapping(t_address,t_array(t_uint256)dyn_storage)",
              "contract": "MainCleanContract",
              "src": "contracts\\Contract.sol:46"
            },
            {
              "label": "allContractsBySigner",
              "offset": 0,
              "slot": "4",
              "type": "t_mapping(t_address,t_array(t_uint256)dyn_storage)",
              "contract": "MainCleanContract",
              "src": "contracts\\Contract.sol:48"
            },
            {
              "label": "allNotifies",
              "offset": 0,
              "slot": "5",
              "type": "t_mapping(t_address,t_array(t_struct(Notify)52_storage)dyn_storage)",
              "contract": "MainCleanContract",
              "src": "contracts\\Contract.sol:50"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            },
            "t_array(t_struct(Notify)52_storage)dyn_storage": {
              "label": "struct MainCleanContract.Notify[]",
              "numberOfBytes": "32"
            },
            "t_array(t_uint256)dyn_storage": {
              "label": "uint256[]",
              "numberOfBytes": "32"
            },
            "t_bool": {
              "label": "bool",
              "numberOfBytes": "1"
            },
            "t_mapping(t_address,t_array(t_struct(Notify)52_storage)dyn_storage)": {
              "label": "mapping(address => struct MainCleanContract.Notify[])",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_array(t_uint256)dyn_storage)": {
              "label": "mapping(address => uint256[])",
              "numberOfBytes": "32"
            },
            "t_mapping(t_uint256,t_struct(CleanContract)39_storage)": {
              "label": "mapping(uint256 => struct MainCleanContract.CleanContract)",
              "numberOfBytes": "32"
            },
            "t_string_storage": {
              "label": "string",
              "numberOfBytes": "32"
            },
            "t_struct(CleanContract)39_storage": {
              "label": "struct MainCleanContract.CleanContract",
              "members": [
                {
                  "label": "contractId",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "0"
                },
                {
                  "label": "companyName",
                  "type": "t_string_storage",
                  "offset": 0,
                  "slot": "1"
                },
                {
                  "label": "contractType",
                  "type": "t_string_storage",
                  "offset": 0,
                  "slot": "2"
                },
                {
                  "label": "contractURI",
                  "type": "t_string_storage",
                  "offset": 0,
                  "slot": "3"
                },
                {
                  "label": "dateFrom",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "4"
                },
                {
                  "label": "dateTo",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "5"
                },
                {
                  "label": "agreedPrice",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "6"
                },
                {
                  "label": "currency",
                  "type": "t_string_storage",
                  "offset": 0,
                  "slot": "7"
                },
                {
                  "label": "creator",
                  "type": "t_address",
                  "offset": 0,
                  "slot": "8"
                },
                {
                  "label": "owner",
                  "type": "t_address",
                  "offset": 0,
                  "slot": "9"
                },
                {
                  "label": "creatorApproval",
                  "type": "t_bool",
                  "offset": 20,
                  "slot": "9"
                },
                {
                  "label": "creatorSignDate",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "10"
                },
                {
                  "label": "contractSigner",
                  "type": "t_address",
                  "offset": 0,
                  "slot": "11"
                },
                {
                  "label": "signerApproval",
                  "type": "t_bool",
                  "offset": 20,
                  "slot": "11"
                },
                {
                  "label": "signerSignDate",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "12"
                },
                {
                  "label": "status",
                  "type": "t_string_storage",
                  "offset": 0,
                  "slot": "13"
                }
              ],
              "numberOfBytes": "448"
            },
            "t_struct(Notify)52_storage": {
              "label": "struct MainCleanContract.Notify",
              "members": [
                {
                  "label": "nSender",
                  "type": "t_address",
                  "offset": 0,
                  "slot": "0"
                },
                {
                  "label": "nReceiver",
                  "type": "t_address",
                  "offset": 0,
                  "slot": "1"
                },
                {
                  "label": "ccID",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "2"
                },
                {
                  "label": "notifySentTime",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "3"
                },
                {
                  "label": "notifyContent",
                  "type": "t_string_storage",
                  "offset": 0,
                  "slot": "4"
                },
                {
                  "label": "status",
                  "type": "t_bool",
                  "offset": 0,
                  "slot": "5"
                }
              ],
              "numberOfBytes": "192"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            }
          },
          "layoutVersion": "1.1",
          "flat": true
        }
      }
    },
    {
      "ThirdParty": {
        "src": "contracts\\ThirdParty.sol:5",
        "version": {
          "withMetadata": "cbf5b2fae6668ee45b86827e485cbed39526db15e39a77a193d607720ff0015c",
          "withoutMetadata": "c7f6b899dcbca6a360ab204550ba9b4fec9f4cae1bcd2f5879cfa3965e9d550f",
          "linkedWithoutMetadata": "c7f6b899dcbca6a360ab204550ba9b4fec9f4cae1bcd2f5879cfa3965e9d550f"
        },
        "inherit": [],
        "libraries": [],
        "methods": [
          "getAllCategories()",
          "addCategory(string,uint256[])",
          "editCategory(uint256,string,uint256[])",
          "deleteCategory(uint256)",
          "getAllProperties()",
          "addProperty(string)",
          "editProperty(uint256,string)",
          "deleteProperty(uint256)",
          "getPackagesByCategory(uint256)",
          "addPackage(uint256,string,uint256,uint256,uint256,bool[])",
          "editPackage(uint256,uint256,string,uint256,uint256,uint256,bool[])",
          "deletePackage(uint256,uint256)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [
            {
              "label": "categoryCounter",
              "offset": 0,
              "slot": "0",
              "type": "t_uint256",
              "contract": "ThirdParty",
              "src": "contracts\\ThirdParty.sol:12"
            },
            {
              "label": "packageCounter",
              "offset": 0,
              "slot": "1",
              "type": "t_uint256",
              "contract": "ThirdParty",
              "src": "contracts\\ThirdParty.sol:23"
            },
            {
              "label": "propertyCounter",
              "offset": 0,
              "slot": "2",
              "type": "t_uint256",
              "contract": "ThirdParty",
              "src": "contracts\\ThirdParty.sol:29"
            },
            {
              "label": "allCategories",
              "offset": 0,
              "slot": "3",
              "type": "t_array(t_struct(Category)11_storage)dyn_storage",
              "contract": "ThirdParty",
              "src": "contracts\\ThirdParty.sol:31"
            },
            {
              "label": "allPackages",
              "offset": 0,
              "slot": "4",
              "type": "t_mapping(t_uint256,t_array(t_struct(Package)29_storage)dyn_storage)",
              "contract": "ThirdParty",
              "src": "contracts\\ThirdParty.sol:34"
            },
            {
              "label": "allProperties",
              "offset": 0,
              "slot": "5",
              "type": "t_array(t_struct(Property)36_storage)dyn_storage",
              "contract": "ThirdParty",
              "src": "contracts\\ThirdParty.sol:37"
            }
          ],
          "types": {
            "t_array(t_bool)dyn_storage": {
              "label": "bool[]",
              "numberOfBytes": "32"
            },
            "t_array(t_struct(Category)11_storage)dyn_storage": {
              "label": "struct ThirdParty.Category[]",
              "numberOfBytes": "32"
            },
            "t_array(t_struct(Package)29_storage)dyn_storage": {
              "label": "struct ThirdParty.Package[]",
              "numberOfBytes": "32"
            },
            "t_array(t_struct(Property)36_storage)dyn_storage": {
              "label": "struct ThirdParty.Property[]",
              "numberOfBytes": "32"
            },
            "t_array(t_uint256)dyn_storage": {
              "label": "uint256[]",
              "numberOfBytes": "32"
            },
            "t_bool": {
              "label": "bool",
              "numberOfBytes": "1"
            },
            "t_mapping(t_uint256,t_array(t_struct(Package)29_storage)dyn_storage)": {
              "label": "mapping(uint256 => struct ThirdParty.Package[])",
              "numberOfBytes": "32"
            },
            "t_string_storage": {
              "label": "string",
              "numberOfBytes": "32"
            },
            "t_struct(Category)11_storage": {
              "label": "struct ThirdParty.Category",
              "members": [
                {
                  "label": "categoryID",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "0"
                },
                {
                  "label": "cartegoryName",
                  "type": "t_string_storage",
                  "offset": 0,
                  "slot": "1"
                },
                {
                  "label": "properties",
                  "type": "t_array(t_uint256)dyn_storage",
                  "offset": 0,
                  "slot": "2"
                },
                {
                  "label": "visible",
                  "type": "t_bool",
                  "offset": 0,
                  "slot": "3"
                }
              ],
              "numberOfBytes": "128"
            },
            "t_struct(Package)29_storage": {
              "label": "struct ThirdParty.Package",
              "members": [
                {
                  "label": "categoryID",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "0"
                },
                {
                  "label": "packageID",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "1"
                },
                {
                  "label": "packageName",
                  "type": "t_string_storage",
                  "offset": 0,
                  "slot": "2"
                },
                {
                  "label": "price",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "3"
                },
                {
                  "label": "period",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "4"
                },
                {
                  "label": "dataLimit",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "5"
                },
                {
                  "label": "propertyVisible",
                  "type": "t_array(t_bool)dyn_storage",
                  "offset": 0,
                  "slot": "6"
                }
              ],
              "numberOfBytes": "224"
            },
            "t_struct(Property)36_storage": {
              "label": "struct ThirdParty.Property",
              "members": [
                {
                  "label": "propertyID",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "0"
                },
                {
                  "label": "propertyName",
                  "type": "t_string_storage",
                  "offset": 0,
                  "slot": "1"
                }
              ],
              "numberOfBytes": "64"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            }
          },
          "layoutVersion": "1.1",
          "flat": true
        }
      }
    },
    {
      "Context": {
        "src": "contracts\\TokenContract.sol:22",
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "HouseBusinessToken": {
        "src": "contracts\\TokenContract.sol:33",
        "version": {
          "withMetadata": "e53f4b9234e67266e4442dec09d084a17cbe6b1b4fb90d62776f0d6f370f0570",
          "withoutMetadata": "f5d2b294cac19c78c593798b4a1bae04c45c82839cbcffe3cc910bb441f21259",
          "linkedWithoutMetadata": "f5d2b294cac19c78c593798b4a1bae04c45c82839cbcffe3cc910bb441f21259"
        },
        "inherit": [
          "IERC20Metadata",
          "IERC20",
          "Context"
        ],
        "libraries": [],
        "methods": [
          "()",
          "name()",
          "symbol()",
          "decimals()",
          "totalSupply()",
          "balanceOf(address)",
          "transfer(address,uint256)",
          "allowance(address,address)",
          "approve(address,uint256)",
          "transferFrom(address,address,uint256)",
          "increaseAllowance(address,uint256)",
          "decreaseAllowance(address,uint256)",
          "_mint(address,uint256)"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "HouseBusinessToken",
            "src": "contracts\\TokenContract.sol:42"
          },
          {
            "kind": "state-variable-assignment",
            "name": "_name",
            "src": "contracts\\TokenContract.sol:37"
          },
          {
            "kind": "state-variable-assignment",
            "name": "_symbol",
            "src": "contracts\\TokenContract.sol:38"
          },
          {
            "kind": "state-variable-assignment",
            "name": "_decimals",
            "src": "contracts\\TokenContract.sol:39"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "_balances",
              "offset": 0,
              "slot": "0",
              "type": "t_mapping(t_address,t_uint256)",
              "contract": "HouseBusinessToken",
              "src": "contracts\\TokenContract.sol:34"
            },
            {
              "label": "_allowances",
              "offset": 0,
              "slot": "1",
              "type": "t_mapping(t_address,t_mapping(t_address,t_uint256))",
              "contract": "HouseBusinessToken",
              "src": "contracts\\TokenContract.sol:35"
            },
            {
              "label": "_totalSupply",
              "offset": 0,
              "slot": "2",
              "type": "t_uint256",
              "contract": "HouseBusinessToken",
              "src": "contracts\\TokenContract.sol:36"
            },
            {
              "label": "_name",
              "offset": 0,
              "slot": "3",
              "type": "t_string_storage",
              "contract": "HouseBusinessToken",
              "src": "contracts\\TokenContract.sol:37"
            },
            {
              "label": "_symbol",
              "offset": 0,
              "slot": "4",
              "type": "t_string_storage",
              "contract": "HouseBusinessToken",
              "src": "contracts\\TokenContract.sol:38"
            },
            {
              "label": "_decimals",
              "offset": 0,
              "slot": "5",
              "type": "t_uint8",
              "contract": "HouseBusinessToken",
              "src": "contracts\\TokenContract.sol:39"
            },
            {
              "label": "_owner",
              "offset": 1,
              "slot": "5",
              "type": "t_address",
              "contract": "HouseBusinessToken",
              "src": "contracts\\TokenContract.sol:40"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            },
            "t_mapping(t_address,t_mapping(t_address,t_uint256))": {
              "label": "mapping(address => mapping(address => uint256))",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_uint256)": {
              "label": "mapping(address => uint256)",
              "numberOfBytes": "32"
            },
            "t_string_storage": {
              "label": "string",
              "numberOfBytes": "32"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            },
            "t_uint8": {
              "label": "uint8",
              "numberOfBytes": "1"
            }
          },
          "layoutVersion": "1.1",
          "flat": true
        }
      },
      "IERC20": {
        "src": "contracts\\TokenContract.sol:5",
        "inherit": [],
        "libraries": [],
        "methods": [
          "totalSupply()",
          "balanceOf(address)",
          "transfer(address,uint256)",
          "allowance(address,address)",
          "approve(address,uint256)",
          "transferFrom(address,address,uint256)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "IERC20Metadata": {
        "src": "contracts\\TokenContract.sol:16",
        "inherit": [
          "IERC20"
        ],
        "libraries": [],
        "methods": [
          "name()",
          "symbol()",
          "decimals()"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      }
    },
    {
      "IPRC20": {
        "src": "contracts\\interfaces\\IPRC20.sol:4",
        "inherit": [],
        "libraries": [],
        "methods": [
          "totalSupply()",
          "balanceOf(address)",
          "transfer(address,uint256)",
          "allowance(address,address)",
          "approve(address,uint256)",
          "transferFrom(address,address,uint256)",
          "decimals()"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      }
    },
    {
      "IERC20": {
        "src": "@openzeppelin\\contracts\\token\\ERC20\\IERC20.sol:9",
        "inherit": [],
        "libraries": [],
        "methods": [
          "totalSupply()",
          "balanceOf(address)",
          "transfer(address,uint256)",
          "allowance(address,address)",
          "approve(address,uint256)",
          "transferFrom(address,address,uint256)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "ERC721": {
        "src": "@openzeppelin\\contracts\\token\\ERC721\\ERC721.sol:19",
        "version": {
          "withMetadata": "311027b738fb50ea92c84baf68eacb931adf05de03da13635a661dc9c5b03f73",
          "withoutMetadata": "9ec7f439077c3b762bc3aa6a17c55aba7a78d240190c9c7814df896455a0f780",
          "linkedWithoutMetadata": "9ec7f439077c3b762bc3aa6a17c55aba7a78d240190c9c7814df896455a0f780"
        },
        "inherit": [
          "IERC721Metadata",
          "IERC721",
          "ERC165",
          "IERC165",
          "Context"
        ],
        "libraries": [
          "Address",
          "Strings"
        ],
        "methods": [
          "(string,string)",
          "supportsInterface(bytes4)",
          "balanceOf(address)",
          "ownerOf(uint256)",
          "name()",
          "symbol()",
          "tokenURI(uint256)",
          "approve(address,uint256)",
          "getApproved(uint256)",
          "setApprovalForAll(address,bool)",
          "isApprovedForAll(address,address)",
          "transferFrom(address,address,uint256)",
          "safeTransferFrom(address,address,uint256)",
          "safeTransferFrom(address,address,uint256,bytes)"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "ERC721",
            "src": "@openzeppelin\\contracts\\token\\ERC721\\ERC721.sol:44"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "_name",
              "offset": 0,
              "slot": "0",
              "type": "t_string_storage",
              "contract": "ERC721",
              "src": "@openzeppelin\\contracts\\token\\ERC721\\ERC721.sol:24"
            },
            {
              "label": "_symbol",
              "offset": 0,
              "slot": "1",
              "type": "t_string_storage",
              "contract": "ERC721",
              "src": "@openzeppelin\\contracts\\token\\ERC721\\ERC721.sol:27"
            },
            {
              "label": "_owners",
              "offset": 0,
              "slot": "2",
              "type": "t_mapping(t_uint256,t_address)",
              "contract": "ERC721",
              "src": "@openzeppelin\\contracts\\token\\ERC721\\ERC721.sol:30"
            },
            {
              "label": "_balances",
              "offset": 0,
              "slot": "3",
              "type": "t_mapping(t_address,t_uint256)",
              "contract": "ERC721",
              "src": "@openzeppelin\\contracts\\token\\ERC721\\ERC721.sol:33"
            },
            {
              "label": "_tokenApprovals",
              "offset": 0,
              "slot": "4",
              "type": "t_mapping(t_uint256,t_address)",
              "contract": "ERC721",
              "src": "@openzeppelin\\contracts\\token\\ERC721\\ERC721.sol:36"
            },
            {
              "label": "_operatorApprovals",
              "offset": 0,
              "slot": "5",
              "type": "t_mapping(t_address,t_mapping(t_address,t_bool))",
              "contract": "ERC721",
              "src": "@openzeppelin\\contracts\\token\\ERC721\\ERC721.sol:39"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            },
            "t_bool": {
              "label": "bool",
              "numberOfBytes": "1"
            },
            "t_mapping(t_address,t_bool)": {
              "label": "mapping(address => bool)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_mapping(t_address,t_bool))": {
              "label": "mapping(address => mapping(address => bool))",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_uint256)": {
              "label": "mapping(address => uint256)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_uint256,t_address)": {
              "label": "mapping(uint256 => address)",
              "numberOfBytes": "32"
            },
            "t_string_storage": {
              "label": "string",
              "numberOfBytes": "32"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            }
          },
          "layoutVersion": "1.1",
          "flat": true
        }
      },
      "IERC721": {
        "src": "@openzeppelin\\contracts\\token\\ERC721\\IERC721.sol:11",
        "inherit": [
          "IERC165"
        ],
        "libraries": [],
        "methods": [
          "balanceOf(address)",
          "ownerOf(uint256)",
          "safeTransferFrom(address,address,uint256,bytes)",
          "safeTransferFrom(address,address,uint256)",
          "transferFrom(address,address,uint256)",
          "approve(address,uint256)",
          "setApprovalForAll(address,bool)",
          "getApproved(uint256)",
          "isApprovedForAll(address,address)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "IERC721Receiver": {
        "src": "@openzeppelin\\contracts\\token\\ERC721\\IERC721Receiver.sol:11",
        "inherit": [],
        "libraries": [],
        "methods": [
          "onERC721Received(address,address,uint256,bytes)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "ERC721URIStorage": {
        "src": "@openzeppelin\\contracts\\token\\ERC721\\extensions\\ERC721URIStorage.sol:11",
        "inherit": [
          "ERC721",
          "IERC721Metadata",
          "IERC721",
          "ERC165",
          "IERC165",
          "Context"
        ],
        "libraries": [
          "Strings"
        ],
        "methods": [
          "tokenURI(uint256)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [
            {
              "label": "_name",
              "offset": 0,
              "slot": "0",
              "type": "t_string_storage",
              "contract": "ERC721",
              "src": "@openzeppelin\\contracts\\token\\ERC721\\ERC721.sol:24"
            },
            {
              "label": "_symbol",
              "offset": 0,
              "slot": "1",
              "type": "t_string_storage",
              "contract": "ERC721",
              "src": "@openzeppelin\\contracts\\token\\ERC721\\ERC721.sol:27"
            },
            {
              "label": "_owners",
              "offset": 0,
              "slot": "2",
              "type": "t_mapping(t_uint256,t_address)",
              "contract": "ERC721",
              "src": "@openzeppelin\\contracts\\token\\ERC721\\ERC721.sol:30"
            },
            {
              "label": "_balances",
              "offset": 0,
              "slot": "3",
              "type": "t_mapping(t_address,t_uint256)",
              "contract": "ERC721",
              "src": "@openzeppelin\\contracts\\token\\ERC721\\ERC721.sol:33"
            },
            {
              "label": "_tokenApprovals",
              "offset": 0,
              "slot": "4",
              "type": "t_mapping(t_uint256,t_address)",
              "contract": "ERC721",
              "src": "@openzeppelin\\contracts\\token\\ERC721\\ERC721.sol:36"
            },
            {
              "label": "_operatorApprovals",
              "offset": 0,
              "slot": "5",
              "type": "t_mapping(t_address,t_mapping(t_address,t_bool))",
              "contract": "ERC721",
              "src": "@openzeppelin\\contracts\\token\\ERC721\\ERC721.sol:39"
            },
            {
              "label": "_tokenURIs",
              "offset": 0,
              "slot": "6",
              "type": "t_mapping(t_uint256,t_string_storage)",
              "contract": "ERC721URIStorage",
              "src": "@openzeppelin\\contracts\\token\\ERC721\\extensions\\ERC721URIStorage.sol:15"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            },
            "t_bool": {
              "label": "bool",
              "numberOfBytes": "1"
            },
            "t_mapping(t_address,t_bool)": {
              "label": "mapping(address => bool)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_mapping(t_address,t_bool))": {
              "label": "mapping(address => mapping(address => bool))",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_uint256)": {
              "label": "mapping(address => uint256)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_uint256,t_address)": {
              "label": "mapping(uint256 => address)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_uint256,t_string_storage)": {
              "label": "mapping(uint256 => string)",
              "numberOfBytes": "32"
            },
            "t_string_storage": {
              "label": "string",
              "numberOfBytes": "32"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            }
          },
          "layoutVersion": "1.1",
          "flat": true
        }
      },
      "IERC721Metadata": {
        "src": "@openzeppelin\\contracts\\token\\ERC721\\extensions\\IERC721Metadata.sol:12",
        "inherit": [
          "IERC721",
          "IERC165"
        ],
        "libraries": [],
        "methods": [
          "name()",
          "symbol()",
          "tokenURI(uint256)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "Address": {
        "src": "@openzeppelin\\contracts\\utils\\Address.sol:9",
        "version": {
          "withMetadata": "a0500f265408d7c0dbf75da3f9e44a5c2ee85e18bb1b58fe491ffcfa4ea7fd9b",
          "withoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db",
          "linkedWithoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db"
        },
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [
          {
            "kind": "delegatecall",
            "src": "@openzeppelin\\contracts\\utils\\Address.sol:185"
          }
        ],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "Context": {
        "src": "@openzeppelin\\contracts\\utils\\Context.sol:16",
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "Strings": {
        "src": "@openzeppelin\\contracts\\utils\\Strings.sol:11",
        "version": {
          "withMetadata": "c385b5200dd723f945d28b88358d79ca1b5c0f71c28cbbab9acf6d6f3fd15593",
          "withoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db",
          "linkedWithoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db"
        },
        "inherit": [],
        "libraries": [
          "Math"
        ],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "ERC165": {
        "src": "@openzeppelin\\contracts\\utils\\introspection\\ERC165.sol:22",
        "inherit": [
          "IERC165"
        ],
        "libraries": [],
        "methods": [
          "supportsInterface(bytes4)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "IERC165": {
        "src": "@openzeppelin\\contracts\\utils\\introspection\\IERC165.sol:15",
        "inherit": [],
        "libraries": [],
        "methods": [
          "supportsInterface(bytes4)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "Math": {
        "src": "@openzeppelin\\contracts\\utils\\math\\Math.sol:9",
        "version": {
          "withMetadata": "fcaf39e5e702f2902d6ef00c1def75c9800e8d2a0a78a87cf542096cafc7a4b0",
          "withoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db",
          "linkedWithoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db"
        },
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "HouseBusiness": {
        "src": "contracts\\HouseBusiness.sol:12",
        "version": {
          "withMetadata": "70e1ccafeffff0009a438997fc9159da21874168e425507dd95f7d30293dd594",
          "withoutMetadata": "6c407d0db57db9757fbc2276ab73ce93088615abd3b98eda738a38c41f3bb580",
          "linkedWithoutMetadata": "6c407d0db57db9757fbc2276ab73ce93088615abd3b98eda738a38c41f3bb580"
        },
        "inherit": [
          "ERC721URIStorage",
          "ERC721",
          "IERC721Metadata",
          "IERC721",
          "ERC165",
          "IERC165",
          "Context"
        ],
        "libraries": [],
        "methods": [
          "(address)",
          "setMinMaxHousePrice(uint256,uint256)",
          "setConfigToken(address)",
          "isMember()",
          "addMember(address)",
          "removeMember(address)",
          "tokenURI(uint256)",
          "setCContractAddress(address)",
          "setStakingContractAddress(address)",
          "setPayable(uint256,address,bool)",
          "mintHouse(string,string,string,string,uint256)",
          "addAllowList(uint256,address)",
          "removeAllowList(uint256,address)",
          "checkAllowedList(uint256,address)",
          "addHistory(uint256,uint256,uint256,string,string,string,string,string,uint256)",
          "getHistory(uint256)",
          "editHistory(uint256,uint256,string,string,string,string,string,uint256)",
          "getHistoryType()",
          "addOrEditHType(uint256,string,bool,bool,bool,bool,bool,bool,bool)",
          "removeHistoryType(uint256)",
          "getMinMaxNFT()",
          "getTokenOwner(uint256)",
          "buyHouseNft(uint256)",
          "sendToken(address,uint256)",
          "changeTokenPrice(uint256,uint256)",
          "getAllHouses()",
          "getAllPayableHouses()",
          "getAllMyHouses()",
          "withdrawToken(uint256)",
          "withdrawETH(uint256)",
          "getTotalInfo()",
          "getTokenPrice(uint256)",
          "setHouseStakedStatus(uint256,bool)",
          "getRoyalty()",
          "setRoyalty(uint256)"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "HouseBusiness",
            "src": "contracts\\HouseBusiness.sol:92"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "_name",
              "offset": 0,
              "slot": "0",
              "type": "t_string_storage",
              "contract": "ERC721",
              "src": "@openzeppelin\\contracts\\token\\ERC721\\ERC721.sol:24"
            },
            {
              "label": "_symbol",
              "offset": 0,
              "slot": "1",
              "type": "t_string_storage",
              "contract": "ERC721",
              "src": "@openzeppelin\\contracts\\token\\ERC721\\ERC721.sol:27"
            },
            {
              "label": "_owners",
              "offset": 0,
              "slot": "2",
              "type": "t_mapping(t_uint256,t_address)",
              "contract": "ERC721",
              "src": "@openzeppelin\\contracts\\token\\ERC721\\ERC721.sol:30"
            },
            {
              "label": "_balances",
              "offset": 0,
              "slot": "3",
              "type": "t_mapping(t_address,t_uint256)",
              "contract": "ERC721",
              "src": "@openzeppelin\\contracts\\token\\ERC721\\ERC721.sol:33"
            },
            {
              "label": "_tokenApprovals",
              "offset": 0,
              "slot": "4",
              "type": "t_mapping(t_uint256,t_address)",
              "contract": "ERC721",
              "src": "@openzeppelin\\contracts\\token\\ERC721\\ERC721.sol:36"
            },
            {
              "label": "_operatorApprovals",
              "offset": 0,
              "slot": "5",
              "type": "t_mapping(t_address,t_mapping(t_address,t_bool))",
              "contract": "ERC721",
              "src": "@openzeppelin\\contracts\\token\\ERC721\\ERC721.sol:39"
            },
            {
              "label": "_tokenURIs",
              "offset": 0,
              "slot": "6",
              "type": "t_mapping(t_uint256,t_string_storage)",
              "contract": "ERC721URIStorage",
              "src": "@openzeppelin\\contracts\\token\\ERC721\\extensions\\ERC721URIStorage.sol:15"
            },
            {
              "label": "collectionName",
              "offset": 0,
              "slot": "7",
              "type": "t_string_storage",
              "contract": "HouseBusiness",
              "src": "contracts\\HouseBusiness.sol:14"
            },
            {
              "label": "collectionNameSymbol",
              "offset": 0,
              "slot": "8",
              "type": "t_string_storage",
              "contract": "HouseBusiness",
              "src": "contracts\\HouseBusiness.sol:16"
            },
            {
              "label": "houseCounter",
              "offset": 0,
              "slot": "9",
              "type": "t_uint256",
              "contract": "HouseBusiness",
              "src": "contracts\\HouseBusiness.sol:18"
            },
            {
              "label": "soldedCounter",
              "offset": 0,
              "slot": "10",
              "type": "t_uint256",
              "contract": "HouseBusiness",
              "src": "contracts\\HouseBusiness.sol:21"
            },
            {
              "label": "hTypeCounter",
              "offset": 0,
              "slot": "11",
              "type": "t_uint256",
              "contract": "HouseBusiness",
              "src": "contracts\\HouseBusiness.sol:23"
            },
            {
              "label": "_token",
              "offset": 0,
              "slot": "12",
              "type": "t_contract(IERC20)77",
              "contract": "HouseBusiness",
              "src": "contracts\\HouseBusiness.sol:25"
            },
            {
              "label": "minPrice",
              "offset": 0,
              "slot": "13",
              "type": "t_uint256",
              "contract": "HouseBusiness",
              "src": "contracts\\HouseBusiness.sol:27"
            },
            {
              "label": "maxPrice",
              "offset": 0,
              "slot": "14",
              "type": "t_uint256",
              "contract": "HouseBusiness",
              "src": "contracts\\HouseBusiness.sol:29"
            },
            {
              "label": "royalty",
              "offset": 0,
              "slot": "15",
              "type": "t_uint256",
              "contract": "HouseBusiness",
              "src": "contracts\\HouseBusiness.sol:31"
            },
            {
              "label": "cContract",
              "offset": 0,
              "slot": "16",
              "type": "t_contract(IMainCleanContract)4531",
              "contract": "HouseBusiness",
              "src": "contracts\\HouseBusiness.sol:33"
            },
            {
              "label": "historyTypes",
              "offset": 0,
              "slot": "17",
              "type": "t_array(t_struct(HistoryType)2831_storage)dyn_storage",
              "contract": "HouseBusiness",
              "src": "contracts\\HouseBusiness.sol:73"
            },
            {
              "label": "houseHistories",
              "offset": 0,
              "slot": "18",
              "type": "t_mapping(t_uint256,t_array(t_struct(History)2812_storage)dyn_storage)",
              "contract": "HouseBusiness",
              "src": "contracts\\HouseBusiness.sol:75"
            },
            {
              "label": "allMembers",
              "offset": 0,
              "slot": "19",
              "type": "t_mapping(t_address,t_bool)",
              "contract": "HouseBusiness",
              "src": "contracts\\HouseBusiness.sol:77"
            },
            {
              "label": "allHouses",
              "offset": 0,
              "slot": "20",
              "type": "t_mapping(t_uint256,t_struct(House)2795_storage)",
              "contract": "HouseBusiness",
              "src": "contracts\\HouseBusiness.sol:79"
            },
            {
              "label": "allowedList",
              "offset": 0,
              "slot": "21",
              "type": "t_mapping(t_uint256,t_mapping(t_address,t_bool))",
              "contract": "HouseBusiness",
              "src": "contracts\\HouseBusiness.sol:81"
            },
            {
              "label": "stakingContractAddress",
              "offset": 0,
              "slot": "22",
              "type": "t_address",
              "contract": "HouseBusiness",
              "src": "contracts\\HouseBusiness.sol:84"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            },
            "t_array(t_struct(History)2812_storage)dyn_storage": {
              "label": "struct HouseBusiness.History[]",
              "numberOfBytes": "32"
            },
            "t_array(t_struct(HistoryType)2831_storage)dyn_storage": {
              "label": "struct HouseBusiness.HistoryType[]",
              "numberOfBytes": "32"
            },
            "t_bool": {
              "label": "bool",
              "numberOfBytes": "1"
            },
            "t_contract(IERC20)77": {
              "label": "contract IERC20",
              "numberOfBytes": "20"
            },
            "t_contract(IMainCleanContract)4531": {
              "label": "contract IMainCleanContract",
              "numberOfBytes": "20"
            },
            "t_mapping(t_address,t_bool)": {
              "label": "mapping(address => bool)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_mapping(t_address,t_bool))": {
              "label": "mapping(address => mapping(address => bool))",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_uint256)": {
              "label": "mapping(address => uint256)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_uint256,t_address)": {
              "label": "mapping(uint256 => address)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_uint256,t_array(t_struct(History)2812_storage)dyn_storage)": {
              "label": "mapping(uint256 => struct HouseBusiness.History[])",
              "numberOfBytes": "32"
            },
            "t_mapping(t_uint256,t_mapping(t_address,t_bool))": {
              "label": "mapping(uint256 => mapping(address => bool))",
              "numberOfBytes": "32"
            },
            "t_mapping(t_uint256,t_string_storage)": {
              "label": "mapping(uint256 => string)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_uint256,t_struct(House)2795_storage)": {
              "label": "mapping(uint256 => struct HouseBusiness.House)",
              "numberOfBytes": "32"
            },
            "t_string_storage": {
              "label": "string",
              "numberOfBytes": "32"
            },
            "t_struct(History)2812_storage": {
              "label": "struct HouseBusiness.History",
              "members": [
                {
                  "label": "hID",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "0"
                },
                {
                  "label": "contractId",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "1"
                },
                {
                  "label": "houseImg",
                  "type": "t_string_storage",
                  "offset": 0,
                  "slot": "2"
                },
                {
                  "label": "houseBrand",
                  "type": "t_string_storage",
                  "offset": 0,
                  "slot": "3"
                },
                {
                  "label": "desc",
                  "type": "t_string_storage",
                  "offset": 0,
                  "slot": "4"
                },
                {
                  "label": "history",
                  "type": "t_string_storage",
                  "offset": 0,
                  "slot": "5"
                },
                {
                  "label": "brandType",
                  "type": "t_string_storage",
                  "offset": 0,
                  "slot": "6"
                },
                {
                  "label": "yearField",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "7"
                }
              ],
              "numberOfBytes": "256"
            },
            "t_struct(HistoryType)2831_storage": {
              "label": "struct HouseBusiness.HistoryType",
              "members": [
                {
                  "label": "hID",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "0"
                },
                {
                  "label": "hLabel",
                  "type": "t_string_storage",
                  "offset": 0,
                  "slot": "1"
                },
                {
                  "label": "connectContract",
                  "type": "t_bool",
                  "offset": 0,
                  "slot": "2"
                },
                {
                  "label": "imgNeed",
                  "type": "t_bool",
                  "offset": 1,
                  "slot": "2"
                },
                {
                  "label": "brandNeed",
                  "type": "t_bool",
                  "offset": 2,
                  "slot": "2"
                },
                {
                  "label": "descNeed",
                  "type": "t_bool",
                  "offset": 3,
                  "slot": "2"
                },
                {
                  "label": "brandTypeNeed",
                  "type": "t_bool",
                  "offset": 4,
                  "slot": "2"
                },
                {
                  "label": "yearNeed",
                  "type": "t_bool",
                  "offset": 5,
                  "slot": "2"
                },
                {
                  "label": "checkMark",
                  "type": "t_bool",
                  "offset": 6,
                  "slot": "2"
                }
              ],
              "numberOfBytes": "96"
            },
            "t_struct(House)2795_storage": {
              "label": "struct HouseBusiness.House",
              "members": [
                {
                  "label": "tokenId",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "0"
                },
                {
                  "label": "tokenName",
                  "type": "t_string_storage",
                  "offset": 0,
                  "slot": "1"
                },
                {
                  "label": "tokenURI",
                  "type": "t_string_storage",
                  "offset": 0,
                  "slot": "2"
                },
                {
                  "label": "tokenType",
                  "type": "t_string_storage",
                  "offset": 0,
                  "slot": "3"
                },
                {
                  "label": "currentOwner",
                  "type": "t_address",
                  "offset": 0,
                  "slot": "4"
                },
                {
                  "label": "previousOwner",
                  "type": "t_address",
                  "offset": 0,
                  "slot": "5"
                },
                {
                  "label": "buyer",
                  "type": "t_address",
                  "offset": 0,
                  "slot": "6"
                },
                {
                  "label": "price",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "7"
                },
                {
                  "label": "numberOfTransfers",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "8"
                },
                {
                  "label": "nftPayable",
                  "type": "t_bool",
                  "offset": 0,
                  "slot": "9"
                },
                {
                  "label": "staked",
                  "type": "t_bool",
                  "offset": 1,
                  "slot": "9"
                },
                {
                  "label": "soldstatus",
                  "type": "t_bool",
                  "offset": 2,
                  "slot": "9"
                }
              ],
              "numberOfBytes": "320"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            }
          },
          "layoutVersion": "1.1",
          "flat": true
        }
      },
      "IMainCleanContract": {
        "src": "contracts\\interfaces\\IContract.sol:6",
        "inherit": [],
        "libraries": [],
        "methods": [
          "getContractById(uint256)",
          "transferContractOwnership(uint256,address,address)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "IStaking": {
        "src": "contracts\\interfaces\\IStaking.sol:5",
        "inherit": [],
        "libraries": [],
        "methods": [
          "stakeCounter()"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      }
    },
    {
      "IERC20": {
        "src": "@openzeppelin\\contracts\\token\\ERC20\\IERC20.sol:9",
        "inherit": [],
        "libraries": [],
        "methods": [
          "totalSupply()",
          "balanceOf(address)",
          "transfer(address,uint256)",
          "allowance(address,address)",
          "approve(address,uint256)",
          "transferFrom(address,address,uint256)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "ERC721": {
        "src": "@openzeppelin\\contracts\\token\\ERC721\\ERC721.sol:19",
        "version": {
          "withMetadata": "311027b738fb50ea92c84baf68eacb931adf05de03da13635a661dc9c5b03f73",
          "withoutMetadata": "9ec7f439077c3b762bc3aa6a17c55aba7a78d240190c9c7814df896455a0f780",
          "linkedWithoutMetadata": "9ec7f439077c3b762bc3aa6a17c55aba7a78d240190c9c7814df896455a0f780"
        },
        "inherit": [
          "IERC721Metadata",
          "IERC721",
          "ERC165",
          "IERC165",
          "Context"
        ],
        "libraries": [
          "Address",
          "Strings"
        ],
        "methods": [
          "(string,string)",
          "supportsInterface(bytes4)",
          "balanceOf(address)",
          "ownerOf(uint256)",
          "name()",
          "symbol()",
          "tokenURI(uint256)",
          "approve(address,uint256)",
          "getApproved(uint256)",
          "setApprovalForAll(address,bool)",
          "isApprovedForAll(address,address)",
          "transferFrom(address,address,uint256)",
          "safeTransferFrom(address,address,uint256)",
          "safeTransferFrom(address,address,uint256,bytes)"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "ERC721",
            "src": "@openzeppelin\\contracts\\token\\ERC721\\ERC721.sol:44"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "_name",
              "offset": 0,
              "slot": "0",
              "type": "t_string_storage",
              "contract": "ERC721",
              "src": "@openzeppelin\\contracts\\token\\ERC721\\ERC721.sol:24"
            },
            {
              "label": "_symbol",
              "offset": 0,
              "slot": "1",
              "type": "t_string_storage",
              "contract": "ERC721",
              "src": "@openzeppelin\\contracts\\token\\ERC721\\ERC721.sol:27"
            },
            {
              "label": "_owners",
              "offset": 0,
              "slot": "2",
              "type": "t_mapping(t_uint256,t_address)",
              "contract": "ERC721",
              "src": "@openzeppelin\\contracts\\token\\ERC721\\ERC721.sol:30"
            },
            {
              "label": "_balances",
              "offset": 0,
              "slot": "3",
              "type": "t_mapping(t_address,t_uint256)",
              "contract": "ERC721",
              "src": "@openzeppelin\\contracts\\token\\ERC721\\ERC721.sol:33"
            },
            {
              "label": "_tokenApprovals",
              "offset": 0,
              "slot": "4",
              "type": "t_mapping(t_uint256,t_address)",
              "contract": "ERC721",
              "src": "@openzeppelin\\contracts\\token\\ERC721\\ERC721.sol:36"
            },
            {
              "label": "_operatorApprovals",
              "offset": 0,
              "slot": "5",
              "type": "t_mapping(t_address,t_mapping(t_address,t_bool))",
              "contract": "ERC721",
              "src": "@openzeppelin\\contracts\\token\\ERC721\\ERC721.sol:39"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            },
            "t_bool": {
              "label": "bool",
              "numberOfBytes": "1"
            },
            "t_mapping(t_address,t_bool)": {
              "label": "mapping(address => bool)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_mapping(t_address,t_bool))": {
              "label": "mapping(address => mapping(address => bool))",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_uint256)": {
              "label": "mapping(address => uint256)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_uint256,t_address)": {
              "label": "mapping(uint256 => address)",
              "numberOfBytes": "32"
            },
            "t_string_storage": {
              "label": "string",
              "numberOfBytes": "32"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            }
          },
          "layoutVersion": "1.1",
          "flat": true
        }
      },
      "IERC721": {
        "src": "@openzeppelin\\contracts\\token\\ERC721\\IERC721.sol:11",
        "inherit": [
          "IERC165"
        ],
        "libraries": [],
        "methods": [
          "balanceOf(address)",
          "ownerOf(uint256)",
          "safeTransferFrom(address,address,uint256,bytes)",
          "safeTransferFrom(address,address,uint256)",
          "transferFrom(address,address,uint256)",
          "approve(address,uint256)",
          "setApprovalForAll(address,bool)",
          "getApproved(uint256)",
          "isApprovedForAll(address,address)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "IERC721Receiver": {
        "src": "@openzeppelin\\contracts\\token\\ERC721\\IERC721Receiver.sol:11",
        "inherit": [],
        "libraries": [],
        "methods": [
          "onERC721Received(address,address,uint256,bytes)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "ERC721URIStorage": {
        "src": "@openzeppelin\\contracts\\token\\ERC721\\extensions\\ERC721URIStorage.sol:11",
        "inherit": [
          "ERC721",
          "IERC721Metadata",
          "IERC721",
          "ERC165",
          "IERC165",
          "Context"
        ],
        "libraries": [
          "Strings"
        ],
        "methods": [
          "tokenURI(uint256)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [
            {
              "label": "_name",
              "offset": 0,
              "slot": "0",
              "type": "t_string_storage",
              "contract": "ERC721",
              "src": "@openzeppelin\\contracts\\token\\ERC721\\ERC721.sol:24"
            },
            {
              "label": "_symbol",
              "offset": 0,
              "slot": "1",
              "type": "t_string_storage",
              "contract": "ERC721",
              "src": "@openzeppelin\\contracts\\token\\ERC721\\ERC721.sol:27"
            },
            {
              "label": "_owners",
              "offset": 0,
              "slot": "2",
              "type": "t_mapping(t_uint256,t_address)",
              "contract": "ERC721",
              "src": "@openzeppelin\\contracts\\token\\ERC721\\ERC721.sol:30"
            },
            {
              "label": "_balances",
              "offset": 0,
              "slot": "3",
              "type": "t_mapping(t_address,t_uint256)",
              "contract": "ERC721",
              "src": "@openzeppelin\\contracts\\token\\ERC721\\ERC721.sol:33"
            },
            {
              "label": "_tokenApprovals",
              "offset": 0,
              "slot": "4",
              "type": "t_mapping(t_uint256,t_address)",
              "contract": "ERC721",
              "src": "@openzeppelin\\contracts\\token\\ERC721\\ERC721.sol:36"
            },
            {
              "label": "_operatorApprovals",
              "offset": 0,
              "slot": "5",
              "type": "t_mapping(t_address,t_mapping(t_address,t_bool))",
              "contract": "ERC721",
              "src": "@openzeppelin\\contracts\\token\\ERC721\\ERC721.sol:39"
            },
            {
              "label": "_tokenURIs",
              "offset": 0,
              "slot": "6",
              "type": "t_mapping(t_uint256,t_string_storage)",
              "contract": "ERC721URIStorage",
              "src": "@openzeppelin\\contracts\\token\\ERC721\\extensions\\ERC721URIStorage.sol:15"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            },
            "t_bool": {
              "label": "bool",
              "numberOfBytes": "1"
            },
            "t_mapping(t_address,t_bool)": {
              "label": "mapping(address => bool)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_mapping(t_address,t_bool))": {
              "label": "mapping(address => mapping(address => bool))",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_uint256)": {
              "label": "mapping(address => uint256)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_uint256,t_address)": {
              "label": "mapping(uint256 => address)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_uint256,t_string_storage)": {
              "label": "mapping(uint256 => string)",
              "numberOfBytes": "32"
            },
            "t_string_storage": {
              "label": "string",
              "numberOfBytes": "32"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            }
          },
          "layoutVersion": "1.1",
          "flat": true
        }
      },
      "IERC721Metadata": {
        "src": "@openzeppelin\\contracts\\token\\ERC721\\extensions\\IERC721Metadata.sol:12",
        "inherit": [
          "IERC721",
          "IERC165"
        ],
        "libraries": [],
        "methods": [
          "name()",
          "symbol()",
          "tokenURI(uint256)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "Address": {
        "src": "@openzeppelin\\contracts\\utils\\Address.sol:9",
        "version": {
          "withMetadata": "a0500f265408d7c0dbf75da3f9e44a5c2ee85e18bb1b58fe491ffcfa4ea7fd9b",
          "withoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db",
          "linkedWithoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db"
        },
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [
          {
            "kind": "delegatecall",
            "src": "@openzeppelin\\contracts\\utils\\Address.sol:185"
          }
        ],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "Context": {
        "src": "@openzeppelin\\contracts\\utils\\Context.sol:16",
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "Strings": {
        "src": "@openzeppelin\\contracts\\utils\\Strings.sol:11",
        "version": {
          "withMetadata": "c385b5200dd723f945d28b88358d79ca1b5c0f71c28cbbab9acf6d6f3fd15593",
          "withoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db",
          "linkedWithoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db"
        },
        "inherit": [],
        "libraries": [
          "Math"
        ],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "ERC165": {
        "src": "@openzeppelin\\contracts\\utils\\introspection\\ERC165.sol:22",
        "inherit": [
          "IERC165"
        ],
        "libraries": [],
        "methods": [
          "supportsInterface(bytes4)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "IERC165": {
        "src": "@openzeppelin\\contracts\\utils\\introspection\\IERC165.sol:15",
        "inherit": [],
        "libraries": [],
        "methods": [
          "supportsInterface(bytes4)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "Math": {
        "src": "@openzeppelin\\contracts\\utils\\math\\Math.sol:9",
        "version": {
          "withMetadata": "fcaf39e5e702f2902d6ef00c1def75c9800e8d2a0a78a87cf542096cafc7a4b0",
          "withoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db",
          "linkedWithoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db"
        },
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "HouseBusiness": {
        "src": "contracts\\HouseBusiness.sol:12",
        "version": {
          "withMetadata": "70e1ccafeffff0009a438997fc9159da21874168e425507dd95f7d30293dd594",
          "withoutMetadata": "6c407d0db57db9757fbc2276ab73ce93088615abd3b98eda738a38c41f3bb580",
          "linkedWithoutMetadata": "6c407d0db57db9757fbc2276ab73ce93088615abd3b98eda738a38c41f3bb580"
        },
        "inherit": [
          "ERC721URIStorage",
          "ERC721",
          "IERC721Metadata",
          "IERC721",
          "ERC165",
          "IERC165",
          "Context"
        ],
        "libraries": [],
        "methods": [
          "(address)",
          "setMinMaxHousePrice(uint256,uint256)",
          "setConfigToken(address)",
          "isMember()",
          "addMember(address)",
          "removeMember(address)",
          "tokenURI(uint256)",
          "setCContractAddress(address)",
          "setStakingContractAddress(address)",
          "setPayable(uint256,address,bool)",
          "mintHouse(string,string,string,string,uint256)",
          "addAllowList(uint256,address)",
          "removeAllowList(uint256,address)",
          "checkAllowedList(uint256,address)",
          "addHistory(uint256,uint256,uint256,string,string,string,string,string,uint256)",
          "getHistory(uint256)",
          "editHistory(uint256,uint256,string,string,string,string,string,uint256)",
          "getHistoryType()",
          "addOrEditHType(uint256,string,bool,bool,bool,bool,bool,bool,bool)",
          "removeHistoryType(uint256)",
          "getMinMaxNFT()",
          "getTokenOwner(uint256)",
          "buyHouseNft(uint256)",
          "sendToken(address,uint256)",
          "changeTokenPrice(uint256,uint256)",
          "getAllHouses()",
          "getAllPayableHouses()",
          "getAllMyHouses()",
          "withdrawToken(uint256)",
          "withdrawETH(uint256)",
          "getTotalInfo()",
          "getTokenPrice(uint256)",
          "setHouseStakedStatus(uint256,bool)",
          "getRoyalty()",
          "setRoyalty(uint256)"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "HouseBusiness",
            "src": "contracts\\HouseBusiness.sol:92"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "_name",
              "offset": 0,
              "slot": "0",
              "type": "t_string_storage",
              "contract": "ERC721",
              "src": "@openzeppelin\\contracts\\token\\ERC721\\ERC721.sol:24"
            },
            {
              "label": "_symbol",
              "offset": 0,
              "slot": "1",
              "type": "t_string_storage",
              "contract": "ERC721",
              "src": "@openzeppelin\\contracts\\token\\ERC721\\ERC721.sol:27"
            },
            {
              "label": "_owners",
              "offset": 0,
              "slot": "2",
              "type": "t_mapping(t_uint256,t_address)",
              "contract": "ERC721",
              "src": "@openzeppelin\\contracts\\token\\ERC721\\ERC721.sol:30"
            },
            {
              "label": "_balances",
              "offset": 0,
              "slot": "3",
              "type": "t_mapping(t_address,t_uint256)",
              "contract": "ERC721",
              "src": "@openzeppelin\\contracts\\token\\ERC721\\ERC721.sol:33"
            },
            {
              "label": "_tokenApprovals",
              "offset": 0,
              "slot": "4",
              "type": "t_mapping(t_uint256,t_address)",
              "contract": "ERC721",
              "src": "@openzeppelin\\contracts\\token\\ERC721\\ERC721.sol:36"
            },
            {
              "label": "_operatorApprovals",
              "offset": 0,
              "slot": "5",
              "type": "t_mapping(t_address,t_mapping(t_address,t_bool))",
              "contract": "ERC721",
              "src": "@openzeppelin\\contracts\\token\\ERC721\\ERC721.sol:39"
            },
            {
              "label": "_tokenURIs",
              "offset": 0,
              "slot": "6",
              "type": "t_mapping(t_uint256,t_string_storage)",
              "contract": "ERC721URIStorage",
              "src": "@openzeppelin\\contracts\\token\\ERC721\\extensions\\ERC721URIStorage.sol:15"
            },
            {
              "label": "collectionName",
              "offset": 0,
              "slot": "7",
              "type": "t_string_storage",
              "contract": "HouseBusiness",
              "src": "contracts\\HouseBusiness.sol:14"
            },
            {
              "label": "collectionNameSymbol",
              "offset": 0,
              "slot": "8",
              "type": "t_string_storage",
              "contract": "HouseBusiness",
              "src": "contracts\\HouseBusiness.sol:16"
            },
            {
              "label": "houseCounter",
              "offset": 0,
              "slot": "9",
              "type": "t_uint256",
              "contract": "HouseBusiness",
              "src": "contracts\\HouseBusiness.sol:18"
            },
            {
              "label": "soldedCounter",
              "offset": 0,
              "slot": "10",
              "type": "t_uint256",
              "contract": "HouseBusiness",
              "src": "contracts\\HouseBusiness.sol:21"
            },
            {
              "label": "hTypeCounter",
              "offset": 0,
              "slot": "11",
              "type": "t_uint256",
              "contract": "HouseBusiness",
              "src": "contracts\\HouseBusiness.sol:23"
            },
            {
              "label": "_token",
              "offset": 0,
              "slot": "12",
              "type": "t_contract(IERC20)77",
              "contract": "HouseBusiness",
              "src": "contracts\\HouseBusiness.sol:25"
            },
            {
              "label": "minPrice",
              "offset": 0,
              "slot": "13",
              "type": "t_uint256",
              "contract": "HouseBusiness",
              "src": "contracts\\HouseBusiness.sol:27"
            },
            {
              "label": "maxPrice",
              "offset": 0,
              "slot": "14",
              "type": "t_uint256",
              "contract": "HouseBusiness",
              "src": "contracts\\HouseBusiness.sol:29"
            },
            {
              "label": "royalty",
              "offset": 0,
              "slot": "15",
              "type": "t_uint256",
              "contract": "HouseBusiness",
              "src": "contracts\\HouseBusiness.sol:31"
            },
            {
              "label": "cContract",
              "offset": 0,
              "slot": "16",
              "type": "t_contract(IMainCleanContract)5462",
              "contract": "HouseBusiness",
              "src": "contracts\\HouseBusiness.sol:33"
            },
            {
              "label": "historyTypes",
              "offset": 0,
              "slot": "17",
              "type": "t_array(t_struct(HistoryType)2831_storage)dyn_storage",
              "contract": "HouseBusiness",
              "src": "contracts\\HouseBusiness.sol:73"
            },
            {
              "label": "houseHistories",
              "offset": 0,
              "slot": "18",
              "type": "t_mapping(t_uint256,t_array(t_struct(History)2812_storage)dyn_storage)",
              "contract": "HouseBusiness",
              "src": "contracts\\HouseBusiness.sol:75"
            },
            {
              "label": "allMembers",
              "offset": 0,
              "slot": "19",
              "type": "t_mapping(t_address,t_bool)",
              "contract": "HouseBusiness",
              "src": "contracts\\HouseBusiness.sol:77"
            },
            {
              "label": "allHouses",
              "offset": 0,
              "slot": "20",
              "type": "t_mapping(t_uint256,t_struct(House)2795_storage)",
              "contract": "HouseBusiness",
              "src": "contracts\\HouseBusiness.sol:79"
            },
            {
              "label": "allowedList",
              "offset": 0,
              "slot": "21",
              "type": "t_mapping(t_uint256,t_mapping(t_address,t_bool))",
              "contract": "HouseBusiness",
              "src": "contracts\\HouseBusiness.sol:81"
            },
            {
              "label": "stakingContractAddress",
              "offset": 0,
              "slot": "22",
              "type": "t_address",
              "contract": "HouseBusiness",
              "src": "contracts\\HouseBusiness.sol:84"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            },
            "t_array(t_struct(History)2812_storage)dyn_storage": {
              "label": "struct HouseBusiness.History[]",
              "numberOfBytes": "32"
            },
            "t_array(t_struct(HistoryType)2831_storage)dyn_storage": {
              "label": "struct HouseBusiness.HistoryType[]",
              "numberOfBytes": "32"
            },
            "t_bool": {
              "label": "bool",
              "numberOfBytes": "1"
            },
            "t_contract(IERC20)77": {
              "label": "contract IERC20",
              "numberOfBytes": "20"
            },
            "t_contract(IMainCleanContract)5462": {
              "label": "contract IMainCleanContract",
              "numberOfBytes": "20"
            },
            "t_mapping(t_address,t_bool)": {
              "label": "mapping(address => bool)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_mapping(t_address,t_bool))": {
              "label": "mapping(address => mapping(address => bool))",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_uint256)": {
              "label": "mapping(address => uint256)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_uint256,t_address)": {
              "label": "mapping(uint256 => address)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_uint256,t_array(t_struct(History)2812_storage)dyn_storage)": {
              "label": "mapping(uint256 => struct HouseBusiness.History[])",
              "numberOfBytes": "32"
            },
            "t_mapping(t_uint256,t_mapping(t_address,t_bool))": {
              "label": "mapping(uint256 => mapping(address => bool))",
              "numberOfBytes": "32"
            },
            "t_mapping(t_uint256,t_string_storage)": {
              "label": "mapping(uint256 => string)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_uint256,t_struct(House)2795_storage)": {
              "label": "mapping(uint256 => struct HouseBusiness.House)",
              "numberOfBytes": "32"
            },
            "t_string_storage": {
              "label": "string",
              "numberOfBytes": "32"
            },
            "t_struct(History)2812_storage": {
              "label": "struct HouseBusiness.History",
              "members": [
                {
                  "label": "hID",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "0"
                },
                {
                  "label": "contractId",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "1"
                },
                {
                  "label": "houseImg",
                  "type": "t_string_storage",
                  "offset": 0,
                  "slot": "2"
                },
                {
                  "label": "houseBrand",
                  "type": "t_string_storage",
                  "offset": 0,
                  "slot": "3"
                },
                {
                  "label": "desc",
                  "type": "t_string_storage",
                  "offset": 0,
                  "slot": "4"
                },
                {
                  "label": "history",
                  "type": "t_string_storage",
                  "offset": 0,
                  "slot": "5"
                },
                {
                  "label": "brandType",
                  "type": "t_string_storage",
                  "offset": 0,
                  "slot": "6"
                },
                {
                  "label": "yearField",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "7"
                }
              ],
              "numberOfBytes": "256"
            },
            "t_struct(HistoryType)2831_storage": {
              "label": "struct HouseBusiness.HistoryType",
              "members": [
                {
                  "label": "hID",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "0"
                },
                {
                  "label": "hLabel",
                  "type": "t_string_storage",
                  "offset": 0,
                  "slot": "1"
                },
                {
                  "label": "connectContract",
                  "type": "t_bool",
                  "offset": 0,
                  "slot": "2"
                },
                {
                  "label": "imgNeed",
                  "type": "t_bool",
                  "offset": 1,
                  "slot": "2"
                },
                {
                  "label": "brandNeed",
                  "type": "t_bool",
                  "offset": 2,
                  "slot": "2"
                },
                {
                  "label": "descNeed",
                  "type": "t_bool",
                  "offset": 3,
                  "slot": "2"
                },
                {
                  "label": "brandTypeNeed",
                  "type": "t_bool",
                  "offset": 4,
                  "slot": "2"
                },
                {
                  "label": "yearNeed",
                  "type": "t_bool",
                  "offset": 5,
                  "slot": "2"
                },
                {
                  "label": "checkMark",
                  "type": "t_bool",
                  "offset": 6,
                  "slot": "2"
                }
              ],
              "numberOfBytes": "96"
            },
            "t_struct(House)2795_storage": {
              "label": "struct HouseBusiness.House",
              "members": [
                {
                  "label": "tokenId",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "0"
                },
                {
                  "label": "tokenName",
                  "type": "t_string_storage",
                  "offset": 0,
                  "slot": "1"
                },
                {
                  "label": "tokenURI",
                  "type": "t_string_storage",
                  "offset": 0,
                  "slot": "2"
                },
                {
                  "label": "tokenType",
                  "type": "t_string_storage",
                  "offset": 0,
                  "slot": "3"
                },
                {
                  "label": "currentOwner",
                  "type": "t_address",
                  "offset": 0,
                  "slot": "4"
                },
                {
                  "label": "previousOwner",
                  "type": "t_address",
                  "offset": 0,
                  "slot": "5"
                },
                {
                  "label": "buyer",
                  "type": "t_address",
                  "offset": 0,
                  "slot": "6"
                },
                {
                  "label": "price",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "7"
                },
                {
                  "label": "numberOfTransfers",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "8"
                },
                {
                  "label": "nftPayable",
                  "type": "t_bool",
                  "offset": 0,
                  "slot": "9"
                },
                {
                  "label": "staked",
                  "type": "t_bool",
                  "offset": 1,
                  "slot": "9"
                },
                {
                  "label": "soldstatus",
                  "type": "t_bool",
                  "offset": 2,
                  "slot": "9"
                }
              ],
              "numberOfBytes": "320"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            }
          },
          "layoutVersion": "1.1",
          "flat": true
        }
      },
      "HouseStaking": {
        "src": "contracts\\Staking.sol:6",
        "version": {
          "withMetadata": "b434e0d9fc6e61f20a7ae59c658eae1046efdaddcb12502607dc9c2ba1b48d96",
          "withoutMetadata": "55dd03d5604f70c2abf52ecb260f160dc660988f7e28526fbed5969d1a598935",
          "linkedWithoutMetadata": "55dd03d5604f70c2abf52ecb260f160dc660988f7e28526fbed5969d1a598935"
        },
        "inherit": [],
        "libraries": [],
        "methods": [
          "(address,address)",
          "calcDiv(uint256,uint256)",
          "setAPYConfig(uint256,uint256)",
          "getAllAPYTypes()",
          "stake(uint256,uint256)",
          "unstake(uint256)",
          "stakingFinished(uint256)",
          "totalRewards(address)",
          "claimRewards(address)",
          "getAllMyStakedNFTs()",
          "getAllAPYs()",
          "getPenalty()",
          "setPenalty(uint256)"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "HouseStaking",
            "src": "contracts\\Staking.sol:33"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "stakedCounter",
              "offset": 0,
              "slot": "0",
              "type": "t_uint256",
              "contract": "HouseStaking",
              "src": "contracts\\Staking.sol:8"
            },
            {
              "label": "penalty",
              "offset": 0,
              "slot": "1",
              "type": "t_uint256",
              "contract": "HouseStaking",
              "src": "contracts\\Staking.sol:10"
            },
            {
              "label": "APYtypes",
              "offset": 0,
              "slot": "2",
              "type": "t_array(t_uint256)dyn_storage",
              "contract": "HouseStaking",
              "src": "contracts\\Staking.sol:12"
            },
            {
              "label": "APYConfig",
              "offset": 0,
              "slot": "3",
              "type": "t_mapping(t_uint256,t_uint256)",
              "contract": "HouseStaking",
              "src": "contracts\\Staking.sol:15"
            },
            {
              "label": "stakedNfts",
              "offset": 0,
              "slot": "4",
              "type": "t_mapping(t_address,t_array(t_struct(StakedNft)4520_storage)dyn_storage)",
              "contract": "HouseStaking",
              "src": "contracts\\Staking.sol:16"
            },
            {
              "label": "tokenAddress",
              "offset": 0,
              "slot": "5",
              "type": "t_address",
              "contract": "HouseStaking",
              "src": "contracts\\Staking.sol:18"
            },
            {
              "label": "houseNFTAddress",
              "offset": 0,
              "slot": "6",
              "type": "t_address",
              "contract": "HouseStaking",
              "src": "contracts\\Staking.sol:19"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            },
            "t_array(t_struct(StakedNft)4520_storage)dyn_storage": {
              "label": "struct HouseStaking.StakedNft[]",
              "numberOfBytes": "32"
            },
            "t_array(t_uint256)dyn_storage": {
              "label": "uint256[]",
              "numberOfBytes": "32"
            },
            "t_bool": {
              "label": "bool",
              "numberOfBytes": "1"
            },
            "t_mapping(t_address,t_array(t_struct(StakedNft)4520_storage)dyn_storage)": {
              "label": "mapping(address => struct HouseStaking.StakedNft[])",
              "numberOfBytes": "32"
            },
            "t_mapping(t_uint256,t_uint256)": {
              "label": "mapping(uint256 => uint256)",
              "numberOfBytes": "32"
            },
            "t_struct(StakedNft)4520_storage": {
              "label": "struct HouseStaking.StakedNft",
              "members": [
                {
                  "label": "owner",
                  "type": "t_address",
                  "offset": 0,
                  "slot": "0"
                },
                {
                  "label": "tokenId",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "1"
                },
                {
                  "label": "startedDate",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "2"
                },
                {
                  "label": "endDate",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "3"
                },
                {
                  "label": "claimDate",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "4"
                },
                {
                  "label": "stakingType",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "5"
                },
                {
                  "label": "perSecRewards",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "6"
                },
                {
                  "label": "stakingStatus",
                  "type": "t_bool",
                  "offset": 0,
                  "slot": "7"
                }
              ],
              "numberOfBytes": "256"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            }
          },
          "layoutVersion": "1.1",
          "flat": true
        }
      },
      "IMainCleanContract": {
        "src": "contracts\\interfaces\\IContract.sol:6",
        "inherit": [],
        "libraries": [],
        "methods": [
          "getContractById(uint256)",
          "transferContractOwnership(uint256,address,address)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "IHouseBusiness": {
        "src": "contracts\\interfaces\\IHouseBusiness.sol:5",
        "inherit": [],
        "libraries": [],
        "methods": [
          "collectionName()",
          "collectionNameSymbol()",
          "houseCounter()",
          "stakedCounter()",
          "soldedCounter()",
          "hTypeCounter()",
          "minPrice()",
          "maxPrice()",
          "penalty()",
          "royalty()",
          "historyTypes(uint256)",
          "houseHistories(uint256)",
          "allMembers(address)",
          "allHouses(uint256)",
          "stakedNfts(address)",
          "setMinMaxHousePrice(uint256,uint256)",
          "setConfigToken(address)",
          "isMember()",
          "addMember(address)",
          "removeMember(address)",
          "tokenURI(uint256)",
          "setPayable(uint256,address,bool)",
          "mintHouse(string,string,string,string,uint256)",
          "addAllowList(uint256,address)",
          "removeAllowList(uint256,address)",
          "checkAllowedList(uint256,address)",
          "addHistory(uint256,uint256,string,string,string,string,string,uint256)",
          "getHistory(uint256)",
          "editHistory(uint256,uint256,string,string,string,string,string,uint256)",
          "getHistoryType()",
          "addOrEditHType(uint256,string,bool,bool,bool,bool,bool,bool,bool)",
          "removeHistoryType(uint256)",
          "getMinMaxNFT()",
          "getTokenOwner(uint256)",
          "buyHouseNft(uint256)",
          "sendToken(address,uint256)",
          "changeTokenPrice(uint256,uint256)",
          "getAllHouses()",
          "getAllPayableHouses()",
          "getAllMyHouses()",
          "withdrawToken(uint256)",
          "withdrawETH(uint256)",
          "setAPYConfig(uint256,uint256)",
          "getAllAPYTypes()",
          "stake(uint256,uint256)",
          "unstake(uint256)",
          "stakingFinished(uint256)",
          "totalRewards(address)",
          "claimRewards(address)",
          "getAllMyStakedNFTs()",
          "getTotalInfo()",
          "getAllAPYs()",
          "getPenalty()",
          "setPenalty(uint256)",
          "getRoyalty()",
          "setRoyalty(uint256)",
          "ownerOf(uint256)",
          "getTokenPrice(uint256)",
          "setHouseStakedStatus(uint256,bool)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "IStaking": {
        "src": "contracts\\interfaces\\IStaking.sol:5",
        "inherit": [],
        "libraries": [],
        "methods": [
          "stakeCounter()"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      }
    },
    {
      "IERC20": {
        "src": "@openzeppelin\\contracts\\token\\ERC20\\IERC20.sol:9",
        "inherit": [],
        "libraries": [],
        "methods": [
          "totalSupply()",
          "balanceOf(address)",
          "transfer(address,uint256)",
          "allowance(address,address)",
          "approve(address,uint256)",
          "transferFrom(address,address,uint256)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "ERC721": {
        "src": "@openzeppelin\\contracts\\token\\ERC721\\ERC721.sol:19",
        "version": {
          "withMetadata": "311027b738fb50ea92c84baf68eacb931adf05de03da13635a661dc9c5b03f73",
          "withoutMetadata": "9ec7f439077c3b762bc3aa6a17c55aba7a78d240190c9c7814df896455a0f780",
          "linkedWithoutMetadata": "9ec7f439077c3b762bc3aa6a17c55aba7a78d240190c9c7814df896455a0f780"
        },
        "inherit": [
          "IERC721Metadata",
          "IERC721",
          "ERC165",
          "IERC165",
          "Context"
        ],
        "libraries": [
          "Address",
          "Strings"
        ],
        "methods": [
          "(string,string)",
          "supportsInterface(bytes4)",
          "balanceOf(address)",
          "ownerOf(uint256)",
          "name()",
          "symbol()",
          "tokenURI(uint256)",
          "approve(address,uint256)",
          "getApproved(uint256)",
          "setApprovalForAll(address,bool)",
          "isApprovedForAll(address,address)",
          "transferFrom(address,address,uint256)",
          "safeTransferFrom(address,address,uint256)",
          "safeTransferFrom(address,address,uint256,bytes)"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "ERC721",
            "src": "@openzeppelin\\contracts\\token\\ERC721\\ERC721.sol:44"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "_name",
              "offset": 0,
              "slot": "0",
              "type": "t_string_storage",
              "contract": "ERC721",
              "src": "@openzeppelin\\contracts\\token\\ERC721\\ERC721.sol:24"
            },
            {
              "label": "_symbol",
              "offset": 0,
              "slot": "1",
              "type": "t_string_storage",
              "contract": "ERC721",
              "src": "@openzeppelin\\contracts\\token\\ERC721\\ERC721.sol:27"
            },
            {
              "label": "_owners",
              "offset": 0,
              "slot": "2",
              "type": "t_mapping(t_uint256,t_address)",
              "contract": "ERC721",
              "src": "@openzeppelin\\contracts\\token\\ERC721\\ERC721.sol:30"
            },
            {
              "label": "_balances",
              "offset": 0,
              "slot": "3",
              "type": "t_mapping(t_address,t_uint256)",
              "contract": "ERC721",
              "src": "@openzeppelin\\contracts\\token\\ERC721\\ERC721.sol:33"
            },
            {
              "label": "_tokenApprovals",
              "offset": 0,
              "slot": "4",
              "type": "t_mapping(t_uint256,t_address)",
              "contract": "ERC721",
              "src": "@openzeppelin\\contracts\\token\\ERC721\\ERC721.sol:36"
            },
            {
              "label": "_operatorApprovals",
              "offset": 0,
              "slot": "5",
              "type": "t_mapping(t_address,t_mapping(t_address,t_bool))",
              "contract": "ERC721",
              "src": "@openzeppelin\\contracts\\token\\ERC721\\ERC721.sol:39"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            },
            "t_bool": {
              "label": "bool",
              "numberOfBytes": "1"
            },
            "t_mapping(t_address,t_bool)": {
              "label": "mapping(address => bool)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_mapping(t_address,t_bool))": {
              "label": "mapping(address => mapping(address => bool))",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_uint256)": {
              "label": "mapping(address => uint256)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_uint256,t_address)": {
              "label": "mapping(uint256 => address)",
              "numberOfBytes": "32"
            },
            "t_string_storage": {
              "label": "string",
              "numberOfBytes": "32"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            }
          },
          "layoutVersion": "1.1",
          "flat": true
        }
      },
      "IERC721": {
        "src": "@openzeppelin\\contracts\\token\\ERC721\\IERC721.sol:11",
        "inherit": [
          "IERC165"
        ],
        "libraries": [],
        "methods": [
          "balanceOf(address)",
          "ownerOf(uint256)",
          "safeTransferFrom(address,address,uint256,bytes)",
          "safeTransferFrom(address,address,uint256)",
          "transferFrom(address,address,uint256)",
          "approve(address,uint256)",
          "setApprovalForAll(address,bool)",
          "getApproved(uint256)",
          "isApprovedForAll(address,address)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "IERC721Receiver": {
        "src": "@openzeppelin\\contracts\\token\\ERC721\\IERC721Receiver.sol:11",
        "inherit": [],
        "libraries": [],
        "methods": [
          "onERC721Received(address,address,uint256,bytes)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "ERC721URIStorage": {
        "src": "@openzeppelin\\contracts\\token\\ERC721\\extensions\\ERC721URIStorage.sol:11",
        "inherit": [
          "ERC721",
          "IERC721Metadata",
          "IERC721",
          "ERC165",
          "IERC165",
          "Context"
        ],
        "libraries": [
          "Strings"
        ],
        "methods": [
          "tokenURI(uint256)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [
            {
              "label": "_name",
              "offset": 0,
              "slot": "0",
              "type": "t_string_storage",
              "contract": "ERC721",
              "src": "@openzeppelin\\contracts\\token\\ERC721\\ERC721.sol:24"
            },
            {
              "label": "_symbol",
              "offset": 0,
              "slot": "1",
              "type": "t_string_storage",
              "contract": "ERC721",
              "src": "@openzeppelin\\contracts\\token\\ERC721\\ERC721.sol:27"
            },
            {
              "label": "_owners",
              "offset": 0,
              "slot": "2",
              "type": "t_mapping(t_uint256,t_address)",
              "contract": "ERC721",
              "src": "@openzeppelin\\contracts\\token\\ERC721\\ERC721.sol:30"
            },
            {
              "label": "_balances",
              "offset": 0,
              "slot": "3",
              "type": "t_mapping(t_address,t_uint256)",
              "contract": "ERC721",
              "src": "@openzeppelin\\contracts\\token\\ERC721\\ERC721.sol:33"
            },
            {
              "label": "_tokenApprovals",
              "offset": 0,
              "slot": "4",
              "type": "t_mapping(t_uint256,t_address)",
              "contract": "ERC721",
              "src": "@openzeppelin\\contracts\\token\\ERC721\\ERC721.sol:36"
            },
            {
              "label": "_operatorApprovals",
              "offset": 0,
              "slot": "5",
              "type": "t_mapping(t_address,t_mapping(t_address,t_bool))",
              "contract": "ERC721",
              "src": "@openzeppelin\\contracts\\token\\ERC721\\ERC721.sol:39"
            },
            {
              "label": "_tokenURIs",
              "offset": 0,
              "slot": "6",
              "type": "t_mapping(t_uint256,t_string_storage)",
              "contract": "ERC721URIStorage",
              "src": "@openzeppelin\\contracts\\token\\ERC721\\extensions\\ERC721URIStorage.sol:15"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            },
            "t_bool": {
              "label": "bool",
              "numberOfBytes": "1"
            },
            "t_mapping(t_address,t_bool)": {
              "label": "mapping(address => bool)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_mapping(t_address,t_bool))": {
              "label": "mapping(address => mapping(address => bool))",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_uint256)": {
              "label": "mapping(address => uint256)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_uint256,t_address)": {
              "label": "mapping(uint256 => address)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_uint256,t_string_storage)": {
              "label": "mapping(uint256 => string)",
              "numberOfBytes": "32"
            },
            "t_string_storage": {
              "label": "string",
              "numberOfBytes": "32"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            }
          },
          "layoutVersion": "1.1",
          "flat": true
        }
      },
      "IERC721Metadata": {
        "src": "@openzeppelin\\contracts\\token\\ERC721\\extensions\\IERC721Metadata.sol:12",
        "inherit": [
          "IERC721",
          "IERC165"
        ],
        "libraries": [],
        "methods": [
          "name()",
          "symbol()",
          "tokenURI(uint256)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "Address": {
        "src": "@openzeppelin\\contracts\\utils\\Address.sol:9",
        "version": {
          "withMetadata": "a0500f265408d7c0dbf75da3f9e44a5c2ee85e18bb1b58fe491ffcfa4ea7fd9b",
          "withoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db",
          "linkedWithoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db"
        },
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [
          {
            "kind": "delegatecall",
            "src": "@openzeppelin\\contracts\\utils\\Address.sol:185"
          }
        ],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "Context": {
        "src": "@openzeppelin\\contracts\\utils\\Context.sol:16",
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "Strings": {
        "src": "@openzeppelin\\contracts\\utils\\Strings.sol:11",
        "version": {
          "withMetadata": "c385b5200dd723f945d28b88358d79ca1b5c0f71c28cbbab9acf6d6f3fd15593",
          "withoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db",
          "linkedWithoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db"
        },
        "inherit": [],
        "libraries": [
          "Math"
        ],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "ERC165": {
        "src": "@openzeppelin\\contracts\\utils\\introspection\\ERC165.sol:22",
        "inherit": [
          "IERC165"
        ],
        "libraries": [],
        "methods": [
          "supportsInterface(bytes4)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "IERC165": {
        "src": "@openzeppelin\\contracts\\utils\\introspection\\IERC165.sol:15",
        "inherit": [],
        "libraries": [],
        "methods": [
          "supportsInterface(bytes4)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "Math": {
        "src": "@openzeppelin\\contracts\\utils\\math\\Math.sol:9",
        "version": {
          "withMetadata": "fcaf39e5e702f2902d6ef00c1def75c9800e8d2a0a78a87cf542096cafc7a4b0",
          "withoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db",
          "linkedWithoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db"
        },
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "HouseBusiness": {
        "src": "contracts\\HouseBusiness.sol:12",
        "version": {
          "withMetadata": "70e1ccafeffff0009a438997fc9159da21874168e425507dd95f7d30293dd594",
          "withoutMetadata": "6c407d0db57db9757fbc2276ab73ce93088615abd3b98eda738a38c41f3bb580",
          "linkedWithoutMetadata": "6c407d0db57db9757fbc2276ab73ce93088615abd3b98eda738a38c41f3bb580"
        },
        "inherit": [
          "ERC721URIStorage",
          "ERC721",
          "IERC721Metadata",
          "IERC721",
          "ERC165",
          "IERC165",
          "Context"
        ],
        "libraries": [],
        "methods": [
          "(address)",
          "setMinMaxHousePrice(uint256,uint256)",
          "setConfigToken(address)",
          "isMember()",
          "addMember(address)",
          "removeMember(address)",
          "tokenURI(uint256)",
          "setCContractAddress(address)",
          "setStakingContractAddress(address)",
          "setPayable(uint256,address,bool)",
          "mintHouse(string,string,string,string,uint256)",
          "addAllowList(uint256,address)",
          "removeAllowList(uint256,address)",
          "checkAllowedList(uint256,address)",
          "addHistory(uint256,uint256,uint256,string,string,string,string,string,uint256)",
          "getHistory(uint256)",
          "editHistory(uint256,uint256,string,string,string,string,string,uint256)",
          "getHistoryType()",
          "addOrEditHType(uint256,string,bool,bool,bool,bool,bool,bool,bool)",
          "removeHistoryType(uint256)",
          "getMinMaxNFT()",
          "getTokenOwner(uint256)",
          "buyHouseNft(uint256)",
          "sendToken(address,uint256)",
          "changeTokenPrice(uint256,uint256)",
          "getAllHouses()",
          "getAllPayableHouses()",
          "getAllMyHouses()",
          "withdrawToken(uint256)",
          "withdrawETH(uint256)",
          "getTotalInfo()",
          "getTokenPrice(uint256)",
          "setHouseStakedStatus(uint256,bool)",
          "getRoyalty()",
          "setRoyalty(uint256)"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "HouseBusiness",
            "src": "contracts\\HouseBusiness.sol:92"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "_name",
              "offset": 0,
              "slot": "0",
              "type": "t_string_storage",
              "contract": "ERC721",
              "src": "@openzeppelin\\contracts\\token\\ERC721\\ERC721.sol:24"
            },
            {
              "label": "_symbol",
              "offset": 0,
              "slot": "1",
              "type": "t_string_storage",
              "contract": "ERC721",
              "src": "@openzeppelin\\contracts\\token\\ERC721\\ERC721.sol:27"
            },
            {
              "label": "_owners",
              "offset": 0,
              "slot": "2",
              "type": "t_mapping(t_uint256,t_address)",
              "contract": "ERC721",
              "src": "@openzeppelin\\contracts\\token\\ERC721\\ERC721.sol:30"
            },
            {
              "label": "_balances",
              "offset": 0,
              "slot": "3",
              "type": "t_mapping(t_address,t_uint256)",
              "contract": "ERC721",
              "src": "@openzeppelin\\contracts\\token\\ERC721\\ERC721.sol:33"
            },
            {
              "label": "_tokenApprovals",
              "offset": 0,
              "slot": "4",
              "type": "t_mapping(t_uint256,t_address)",
              "contract": "ERC721",
              "src": "@openzeppelin\\contracts\\token\\ERC721\\ERC721.sol:36"
            },
            {
              "label": "_operatorApprovals",
              "offset": 0,
              "slot": "5",
              "type": "t_mapping(t_address,t_mapping(t_address,t_bool))",
              "contract": "ERC721",
              "src": "@openzeppelin\\contracts\\token\\ERC721\\ERC721.sol:39"
            },
            {
              "label": "_tokenURIs",
              "offset": 0,
              "slot": "6",
              "type": "t_mapping(t_uint256,t_string_storage)",
              "contract": "ERC721URIStorage",
              "src": "@openzeppelin\\contracts\\token\\ERC721\\extensions\\ERC721URIStorage.sol:15"
            },
            {
              "label": "collectionName",
              "offset": 0,
              "slot": "7",
              "type": "t_string_storage",
              "contract": "HouseBusiness",
              "src": "contracts\\HouseBusiness.sol:14"
            },
            {
              "label": "collectionNameSymbol",
              "offset": 0,
              "slot": "8",
              "type": "t_string_storage",
              "contract": "HouseBusiness",
              "src": "contracts\\HouseBusiness.sol:16"
            },
            {
              "label": "houseCounter",
              "offset": 0,
              "slot": "9",
              "type": "t_uint256",
              "contract": "HouseBusiness",
              "src": "contracts\\HouseBusiness.sol:18"
            },
            {
              "label": "soldedCounter",
              "offset": 0,
              "slot": "10",
              "type": "t_uint256",
              "contract": "HouseBusiness",
              "src": "contracts\\HouseBusiness.sol:21"
            },
            {
              "label": "hTypeCounter",
              "offset": 0,
              "slot": "11",
              "type": "t_uint256",
              "contract": "HouseBusiness",
              "src": "contracts\\HouseBusiness.sol:23"
            },
            {
              "label": "_token",
              "offset": 0,
              "slot": "12",
              "type": "t_contract(IERC20)77",
              "contract": "HouseBusiness",
              "src": "contracts\\HouseBusiness.sol:25"
            },
            {
              "label": "minPrice",
              "offset": 0,
              "slot": "13",
              "type": "t_uint256",
              "contract": "HouseBusiness",
              "src": "contracts\\HouseBusiness.sol:27"
            },
            {
              "label": "maxPrice",
              "offset": 0,
              "slot": "14",
              "type": "t_uint256",
              "contract": "HouseBusiness",
              "src": "contracts\\HouseBusiness.sol:29"
            },
            {
              "label": "royalty",
              "offset": 0,
              "slot": "15",
              "type": "t_uint256",
              "contract": "HouseBusiness",
              "src": "contracts\\HouseBusiness.sol:31"
            },
            {
              "label": "cContract",
              "offset": 0,
              "slot": "16",
              "type": "t_contract(IMainCleanContract)5462",
              "contract": "HouseBusiness",
              "src": "contracts\\HouseBusiness.sol:33"
            },
            {
              "label": "historyTypes",
              "offset": 0,
              "slot": "17",
              "type": "t_array(t_struct(HistoryType)2831_storage)dyn_storage",
              "contract": "HouseBusiness",
              "src": "contracts\\HouseBusiness.sol:73"
            },
            {
              "label": "houseHistories",
              "offset": 0,
              "slot": "18",
              "type": "t_mapping(t_uint256,t_array(t_struct(History)2812_storage)dyn_storage)",
              "contract": "HouseBusiness",
              "src": "contracts\\HouseBusiness.sol:75"
            },
            {
              "label": "allMembers",
              "offset": 0,
              "slot": "19",
              "type": "t_mapping(t_address,t_bool)",
              "contract": "HouseBusiness",
              "src": "contracts\\HouseBusiness.sol:77"
            },
            {
              "label": "allHouses",
              "offset": 0,
              "slot": "20",
              "type": "t_mapping(t_uint256,t_struct(House)2795_storage)",
              "contract": "HouseBusiness",
              "src": "contracts\\HouseBusiness.sol:79"
            },
            {
              "label": "allowedList",
              "offset": 0,
              "slot": "21",
              "type": "t_mapping(t_uint256,t_mapping(t_address,t_bool))",
              "contract": "HouseBusiness",
              "src": "contracts\\HouseBusiness.sol:81"
            },
            {
              "label": "stakingContractAddress",
              "offset": 0,
              "slot": "22",
              "type": "t_address",
              "contract": "HouseBusiness",
              "src": "contracts\\HouseBusiness.sol:84"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            },
            "t_array(t_struct(History)2812_storage)dyn_storage": {
              "label": "struct HouseBusiness.History[]",
              "numberOfBytes": "32"
            },
            "t_array(t_struct(HistoryType)2831_storage)dyn_storage": {
              "label": "struct HouseBusiness.HistoryType[]",
              "numberOfBytes": "32"
            },
            "t_bool": {
              "label": "bool",
              "numberOfBytes": "1"
            },
            "t_contract(IERC20)77": {
              "label": "contract IERC20",
              "numberOfBytes": "20"
            },
            "t_contract(IMainCleanContract)5462": {
              "label": "contract IMainCleanContract",
              "numberOfBytes": "20"
            },
            "t_mapping(t_address,t_bool)": {
              "label": "mapping(address => bool)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_mapping(t_address,t_bool))": {
              "label": "mapping(address => mapping(address => bool))",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_uint256)": {
              "label": "mapping(address => uint256)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_uint256,t_address)": {
              "label": "mapping(uint256 => address)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_uint256,t_array(t_struct(History)2812_storage)dyn_storage)": {
              "label": "mapping(uint256 => struct HouseBusiness.History[])",
              "numberOfBytes": "32"
            },
            "t_mapping(t_uint256,t_mapping(t_address,t_bool))": {
              "label": "mapping(uint256 => mapping(address => bool))",
              "numberOfBytes": "32"
            },
            "t_mapping(t_uint256,t_string_storage)": {
              "label": "mapping(uint256 => string)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_uint256,t_struct(House)2795_storage)": {
              "label": "mapping(uint256 => struct HouseBusiness.House)",
              "numberOfBytes": "32"
            },
            "t_string_storage": {
              "label": "string",
              "numberOfBytes": "32"
            },
            "t_struct(History)2812_storage": {
              "label": "struct HouseBusiness.History",
              "members": [
                {
                  "label": "hID",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "0"
                },
                {
                  "label": "contractId",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "1"
                },
                {
                  "label": "houseImg",
                  "type": "t_string_storage",
                  "offset": 0,
                  "slot": "2"
                },
                {
                  "label": "houseBrand",
                  "type": "t_string_storage",
                  "offset": 0,
                  "slot": "3"
                },
                {
                  "label": "desc",
                  "type": "t_string_storage",
                  "offset": 0,
                  "slot": "4"
                },
                {
                  "label": "history",
                  "type": "t_string_storage",
                  "offset": 0,
                  "slot": "5"
                },
                {
                  "label": "brandType",
                  "type": "t_string_storage",
                  "offset": 0,
                  "slot": "6"
                },
                {
                  "label": "yearField",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "7"
                }
              ],
              "numberOfBytes": "256"
            },
            "t_struct(HistoryType)2831_storage": {
              "label": "struct HouseBusiness.HistoryType",
              "members": [
                {
                  "label": "hID",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "0"
                },
                {
                  "label": "hLabel",
                  "type": "t_string_storage",
                  "offset": 0,
                  "slot": "1"
                },
                {
                  "label": "connectContract",
                  "type": "t_bool",
                  "offset": 0,
                  "slot": "2"
                },
                {
                  "label": "imgNeed",
                  "type": "t_bool",
                  "offset": 1,
                  "slot": "2"
                },
                {
                  "label": "brandNeed",
                  "type": "t_bool",
                  "offset": 2,
                  "slot": "2"
                },
                {
                  "label": "descNeed",
                  "type": "t_bool",
                  "offset": 3,
                  "slot": "2"
                },
                {
                  "label": "brandTypeNeed",
                  "type": "t_bool",
                  "offset": 4,
                  "slot": "2"
                },
                {
                  "label": "yearNeed",
                  "type": "t_bool",
                  "offset": 5,
                  "slot": "2"
                },
                {
                  "label": "checkMark",
                  "type": "t_bool",
                  "offset": 6,
                  "slot": "2"
                }
              ],
              "numberOfBytes": "96"
            },
            "t_struct(House)2795_storage": {
              "label": "struct HouseBusiness.House",
              "members": [
                {
                  "label": "tokenId",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "0"
                },
                {
                  "label": "tokenName",
                  "type": "t_string_storage",
                  "offset": 0,
                  "slot": "1"
                },
                {
                  "label": "tokenURI",
                  "type": "t_string_storage",
                  "offset": 0,
                  "slot": "2"
                },
                {
                  "label": "tokenType",
                  "type": "t_string_storage",
                  "offset": 0,
                  "slot": "3"
                },
                {
                  "label": "currentOwner",
                  "type": "t_address",
                  "offset": 0,
                  "slot": "4"
                },
                {
                  "label": "previousOwner",
                  "type": "t_address",
                  "offset": 0,
                  "slot": "5"
                },
                {
                  "label": "buyer",
                  "type": "t_address",
                  "offset": 0,
                  "slot": "6"
                },
                {
                  "label": "price",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "7"
                },
                {
                  "label": "numberOfTransfers",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "8"
                },
                {
                  "label": "nftPayable",
                  "type": "t_bool",
                  "offset": 0,
                  "slot": "9"
                },
                {
                  "label": "staked",
                  "type": "t_bool",
                  "offset": 1,
                  "slot": "9"
                },
                {
                  "label": "soldstatus",
                  "type": "t_bool",
                  "offset": 2,
                  "slot": "9"
                }
              ],
              "numberOfBytes": "320"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            }
          },
          "layoutVersion": "1.1",
          "flat": true
        }
      },
      "HouseStaking": {
        "src": "contracts\\Staking.sol:6",
        "version": {
          "withMetadata": "9410a3de905e14873c9a6fd0c83d1ea38a862cd0bba946220f4de83c67cf05d9",
          "withoutMetadata": "cd4d9bf1c51716f320e2d38fbbc274c233a648f049aada48cda6f783c32399a0",
          "linkedWithoutMetadata": "cd4d9bf1c51716f320e2d38fbbc274c233a648f049aada48cda6f783c32399a0"
        },
        "inherit": [],
        "libraries": [],
        "methods": [
          "(address,address)",
          "calcDiv(uint256,uint256)",
          "setAPYConfig(uint256,uint256)",
          "getAllAPYTypes()",
          "stake(uint256,uint256)",
          "unstake(uint256)",
          "stakingFinished(uint256)",
          "totalRewards(address)",
          "claimRewards(address)",
          "getAllMyStakedNFTs()",
          "getAllAPYs()",
          "getPenalty()",
          "setPenalty(uint256)"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "HouseStaking",
            "src": "contracts\\Staking.sol:33"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "stakedCounter",
              "offset": 0,
              "slot": "0",
              "type": "t_uint256",
              "contract": "HouseStaking",
              "src": "contracts\\Staking.sol:8"
            },
            {
              "label": "penalty",
              "offset": 0,
              "slot": "1",
              "type": "t_uint256",
              "contract": "HouseStaking",
              "src": "contracts\\Staking.sol:10"
            },
            {
              "label": "APYtypes",
              "offset": 0,
              "slot": "2",
              "type": "t_array(t_uint256)dyn_storage",
              "contract": "HouseStaking",
              "src": "contracts\\Staking.sol:12"
            },
            {
              "label": "APYConfig",
              "offset": 0,
              "slot": "3",
              "type": "t_mapping(t_uint256,t_uint256)",
              "contract": "HouseStaking",
              "src": "contracts\\Staking.sol:15"
            },
            {
              "label": "stakedNfts",
              "offset": 0,
              "slot": "4",
              "type": "t_mapping(t_address,t_array(t_struct(StakedNft)4520_storage)dyn_storage)",
              "contract": "HouseStaking",
              "src": "contracts\\Staking.sol:16"
            },
            {
              "label": "tokenAddress",
              "offset": 0,
              "slot": "5",
              "type": "t_address",
              "contract": "HouseStaking",
              "src": "contracts\\Staking.sol:18"
            },
            {
              "label": "houseNFTAddress",
              "offset": 0,
              "slot": "6",
              "type": "t_address",
              "contract": "HouseStaking",
              "src": "contracts\\Staking.sol:19"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            },
            "t_array(t_struct(StakedNft)4520_storage)dyn_storage": {
              "label": "struct HouseStaking.StakedNft[]",
              "numberOfBytes": "32"
            },
            "t_array(t_uint256)dyn_storage": {
              "label": "uint256[]",
              "numberOfBytes": "32"
            },
            "t_bool": {
              "label": "bool",
              "numberOfBytes": "1"
            },
            "t_mapping(t_address,t_array(t_struct(StakedNft)4520_storage)dyn_storage)": {
              "label": "mapping(address => struct HouseStaking.StakedNft[])",
              "numberOfBytes": "32"
            },
            "t_mapping(t_uint256,t_uint256)": {
              "label": "mapping(uint256 => uint256)",
              "numberOfBytes": "32"
            },
            "t_struct(StakedNft)4520_storage": {
              "label": "struct HouseStaking.StakedNft",
              "members": [
                {
                  "label": "owner",
                  "type": "t_address",
                  "offset": 0,
                  "slot": "0"
                },
                {
                  "label": "tokenId",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "1"
                },
                {
                  "label": "startedDate",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "2"
                },
                {
                  "label": "endDate",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "3"
                },
                {
                  "label": "claimDate",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "4"
                },
                {
                  "label": "stakingType",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "5"
                },
                {
                  "label": "perSecRewards",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "6"
                },
                {
                  "label": "stakingStatus",
                  "type": "t_bool",
                  "offset": 0,
                  "slot": "7"
                }
              ],
              "numberOfBytes": "256"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            }
          },
          "layoutVersion": "1.1",
          "flat": true
        }
      },
      "IMainCleanContract": {
        "src": "contracts\\interfaces\\IContract.sol:6",
        "inherit": [],
        "libraries": [],
        "methods": [
          "getContractById(uint256)",
          "transferContractOwnership(uint256,address,address)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "IHouseBusiness": {
        "src": "contracts\\interfaces\\IHouseBusiness.sol:5",
        "inherit": [],
        "libraries": [],
        "methods": [
          "collectionName()",
          "collectionNameSymbol()",
          "houseCounter()",
          "stakedCounter()",
          "soldedCounter()",
          "hTypeCounter()",
          "minPrice()",
          "maxPrice()",
          "penalty()",
          "royalty()",
          "historyTypes(uint256)",
          "houseHistories(uint256)",
          "allMembers(address)",
          "allHouses(uint256)",
          "stakedNfts(address)",
          "setMinMaxHousePrice(uint256,uint256)",
          "setConfigToken(address)",
          "isMember()",
          "addMember(address)",
          "removeMember(address)",
          "tokenURI(uint256)",
          "setPayable(uint256,address,bool)",
          "mintHouse(string,string,string,string,uint256)",
          "addAllowList(uint256,address)",
          "removeAllowList(uint256,address)",
          "checkAllowedList(uint256,address)",
          "addHistory(uint256,uint256,string,string,string,string,string,uint256)",
          "getHistory(uint256)",
          "editHistory(uint256,uint256,string,string,string,string,string,uint256)",
          "getHistoryType()",
          "addOrEditHType(uint256,string,bool,bool,bool,bool,bool,bool,bool)",
          "removeHistoryType(uint256)",
          "getMinMaxNFT()",
          "getTokenOwner(uint256)",
          "buyHouseNft(uint256)",
          "sendToken(address,uint256)",
          "changeTokenPrice(uint256,uint256)",
          "getAllHouses()",
          "getAllPayableHouses()",
          "getAllMyHouses()",
          "withdrawToken(uint256)",
          "withdrawETH(uint256)",
          "setAPYConfig(uint256,uint256)",
          "getAllAPYTypes()",
          "stake(uint256,uint256)",
          "unstake(uint256)",
          "stakingFinished(uint256)",
          "totalRewards(address)",
          "claimRewards(address)",
          "getAllMyStakedNFTs()",
          "getTotalInfo()",
          "getAllAPYs()",
          "getPenalty()",
          "setPenalty(uint256)",
          "getRoyalty()",
          "setRoyalty(uint256)",
          "ownerOf(uint256)",
          "getTokenPrice(uint256)",
          "setHouseStakedStatus(uint256,bool)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "IStaking": {
        "src": "contracts\\interfaces\\IStaking.sol:5",
        "inherit": [],
        "libraries": [],
        "methods": [
          "stakeCounter()"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      }
    },
    {
      "IERC20": {
        "src": "@openzeppelin\\contracts\\token\\ERC20\\IERC20.sol:9",
        "inherit": [],
        "libraries": [],
        "methods": [
          "totalSupply()",
          "balanceOf(address)",
          "transfer(address,uint256)",
          "allowance(address,address)",
          "approve(address,uint256)",
          "transferFrom(address,address,uint256)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "ERC721": {
        "src": "@openzeppelin\\contracts\\token\\ERC721\\ERC721.sol:19",
        "version": {
          "withMetadata": "311027b738fb50ea92c84baf68eacb931adf05de03da13635a661dc9c5b03f73",
          "withoutMetadata": "9ec7f439077c3b762bc3aa6a17c55aba7a78d240190c9c7814df896455a0f780",
          "linkedWithoutMetadata": "9ec7f439077c3b762bc3aa6a17c55aba7a78d240190c9c7814df896455a0f780"
        },
        "inherit": [
          "IERC721Metadata",
          "IERC721",
          "ERC165",
          "IERC165",
          "Context"
        ],
        "libraries": [
          "Address",
          "Strings"
        ],
        "methods": [
          "(string,string)",
          "supportsInterface(bytes4)",
          "balanceOf(address)",
          "ownerOf(uint256)",
          "name()",
          "symbol()",
          "tokenURI(uint256)",
          "approve(address,uint256)",
          "getApproved(uint256)",
          "setApprovalForAll(address,bool)",
          "isApprovedForAll(address,address)",
          "transferFrom(address,address,uint256)",
          "safeTransferFrom(address,address,uint256)",
          "safeTransferFrom(address,address,uint256,bytes)"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "ERC721",
            "src": "@openzeppelin\\contracts\\token\\ERC721\\ERC721.sol:44"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "_name",
              "offset": 0,
              "slot": "0",
              "type": "t_string_storage",
              "contract": "ERC721",
              "src": "@openzeppelin\\contracts\\token\\ERC721\\ERC721.sol:24"
            },
            {
              "label": "_symbol",
              "offset": 0,
              "slot": "1",
              "type": "t_string_storage",
              "contract": "ERC721",
              "src": "@openzeppelin\\contracts\\token\\ERC721\\ERC721.sol:27"
            },
            {
              "label": "_owners",
              "offset": 0,
              "slot": "2",
              "type": "t_mapping(t_uint256,t_address)",
              "contract": "ERC721",
              "src": "@openzeppelin\\contracts\\token\\ERC721\\ERC721.sol:30"
            },
            {
              "label": "_balances",
              "offset": 0,
              "slot": "3",
              "type": "t_mapping(t_address,t_uint256)",
              "contract": "ERC721",
              "src": "@openzeppelin\\contracts\\token\\ERC721\\ERC721.sol:33"
            },
            {
              "label": "_tokenApprovals",
              "offset": 0,
              "slot": "4",
              "type": "t_mapping(t_uint256,t_address)",
              "contract": "ERC721",
              "src": "@openzeppelin\\contracts\\token\\ERC721\\ERC721.sol:36"
            },
            {
              "label": "_operatorApprovals",
              "offset": 0,
              "slot": "5",
              "type": "t_mapping(t_address,t_mapping(t_address,t_bool))",
              "contract": "ERC721",
              "src": "@openzeppelin\\contracts\\token\\ERC721\\ERC721.sol:39"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            },
            "t_bool": {
              "label": "bool",
              "numberOfBytes": "1"
            },
            "t_mapping(t_address,t_bool)": {
              "label": "mapping(address => bool)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_mapping(t_address,t_bool))": {
              "label": "mapping(address => mapping(address => bool))",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_uint256)": {
              "label": "mapping(address => uint256)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_uint256,t_address)": {
              "label": "mapping(uint256 => address)",
              "numberOfBytes": "32"
            },
            "t_string_storage": {
              "label": "string",
              "numberOfBytes": "32"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            }
          },
          "layoutVersion": "1.1",
          "flat": true
        }
      },
      "IERC721": {
        "src": "@openzeppelin\\contracts\\token\\ERC721\\IERC721.sol:11",
        "inherit": [
          "IERC165"
        ],
        "libraries": [],
        "methods": [
          "balanceOf(address)",
          "ownerOf(uint256)",
          "safeTransferFrom(address,address,uint256,bytes)",
          "safeTransferFrom(address,address,uint256)",
          "transferFrom(address,address,uint256)",
          "approve(address,uint256)",
          "setApprovalForAll(address,bool)",
          "getApproved(uint256)",
          "isApprovedForAll(address,address)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "IERC721Receiver": {
        "src": "@openzeppelin\\contracts\\token\\ERC721\\IERC721Receiver.sol:11",
        "inherit": [],
        "libraries": [],
        "methods": [
          "onERC721Received(address,address,uint256,bytes)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "ERC721URIStorage": {
        "src": "@openzeppelin\\contracts\\token\\ERC721\\extensions\\ERC721URIStorage.sol:11",
        "inherit": [
          "ERC721",
          "IERC721Metadata",
          "IERC721",
          "ERC165",
          "IERC165",
          "Context"
        ],
        "libraries": [
          "Strings"
        ],
        "methods": [
          "tokenURI(uint256)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [
            {
              "label": "_name",
              "offset": 0,
              "slot": "0",
              "type": "t_string_storage",
              "contract": "ERC721",
              "src": "@openzeppelin\\contracts\\token\\ERC721\\ERC721.sol:24"
            },
            {
              "label": "_symbol",
              "offset": 0,
              "slot": "1",
              "type": "t_string_storage",
              "contract": "ERC721",
              "src": "@openzeppelin\\contracts\\token\\ERC721\\ERC721.sol:27"
            },
            {
              "label": "_owners",
              "offset": 0,
              "slot": "2",
              "type": "t_mapping(t_uint256,t_address)",
              "contract": "ERC721",
              "src": "@openzeppelin\\contracts\\token\\ERC721\\ERC721.sol:30"
            },
            {
              "label": "_balances",
              "offset": 0,
              "slot": "3",
              "type": "t_mapping(t_address,t_uint256)",
              "contract": "ERC721",
              "src": "@openzeppelin\\contracts\\token\\ERC721\\ERC721.sol:33"
            },
            {
              "label": "_tokenApprovals",
              "offset": 0,
              "slot": "4",
              "type": "t_mapping(t_uint256,t_address)",
              "contract": "ERC721",
              "src": "@openzeppelin\\contracts\\token\\ERC721\\ERC721.sol:36"
            },
            {
              "label": "_operatorApprovals",
              "offset": 0,
              "slot": "5",
              "type": "t_mapping(t_address,t_mapping(t_address,t_bool))",
              "contract": "ERC721",
              "src": "@openzeppelin\\contracts\\token\\ERC721\\ERC721.sol:39"
            },
            {
              "label": "_tokenURIs",
              "offset": 0,
              "slot": "6",
              "type": "t_mapping(t_uint256,t_string_storage)",
              "contract": "ERC721URIStorage",
              "src": "@openzeppelin\\contracts\\token\\ERC721\\extensions\\ERC721URIStorage.sol:15"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            },
            "t_bool": {
              "label": "bool",
              "numberOfBytes": "1"
            },
            "t_mapping(t_address,t_bool)": {
              "label": "mapping(address => bool)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_mapping(t_address,t_bool))": {
              "label": "mapping(address => mapping(address => bool))",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_uint256)": {
              "label": "mapping(address => uint256)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_uint256,t_address)": {
              "label": "mapping(uint256 => address)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_uint256,t_string_storage)": {
              "label": "mapping(uint256 => string)",
              "numberOfBytes": "32"
            },
            "t_string_storage": {
              "label": "string",
              "numberOfBytes": "32"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            }
          },
          "layoutVersion": "1.1",
          "flat": true
        }
      },
      "IERC721Metadata": {
        "src": "@openzeppelin\\contracts\\token\\ERC721\\extensions\\IERC721Metadata.sol:12",
        "inherit": [
          "IERC721",
          "IERC165"
        ],
        "libraries": [],
        "methods": [
          "name()",
          "symbol()",
          "tokenURI(uint256)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "Address": {
        "src": "@openzeppelin\\contracts\\utils\\Address.sol:9",
        "version": {
          "withMetadata": "a0500f265408d7c0dbf75da3f9e44a5c2ee85e18bb1b58fe491ffcfa4ea7fd9b",
          "withoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db",
          "linkedWithoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db"
        },
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [
          {
            "kind": "delegatecall",
            "src": "@openzeppelin\\contracts\\utils\\Address.sol:185"
          }
        ],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "Context": {
        "src": "@openzeppelin\\contracts\\utils\\Context.sol:16",
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "Strings": {
        "src": "@openzeppelin\\contracts\\utils\\Strings.sol:11",
        "version": {
          "withMetadata": "c385b5200dd723f945d28b88358d79ca1b5c0f71c28cbbab9acf6d6f3fd15593",
          "withoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db",
          "linkedWithoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db"
        },
        "inherit": [],
        "libraries": [
          "Math"
        ],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "ERC165": {
        "src": "@openzeppelin\\contracts\\utils\\introspection\\ERC165.sol:22",
        "inherit": [
          "IERC165"
        ],
        "libraries": [],
        "methods": [
          "supportsInterface(bytes4)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "IERC165": {
        "src": "@openzeppelin\\contracts\\utils\\introspection\\IERC165.sol:15",
        "inherit": [],
        "libraries": [],
        "methods": [
          "supportsInterface(bytes4)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "Math": {
        "src": "@openzeppelin\\contracts\\utils\\math\\Math.sol:9",
        "version": {
          "withMetadata": "fcaf39e5e702f2902d6ef00c1def75c9800e8d2a0a78a87cf542096cafc7a4b0",
          "withoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db",
          "linkedWithoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db"
        },
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "HouseBusiness": {
        "src": "contracts\\HouseBusiness.sol:11",
        "version": {
          "withMetadata": "28d58fa7342843320a1d863a19f761db6e9126f96f288222bc5b0cea1268485d",
          "withoutMetadata": "164a90dcdda36995f8c28a198ab9b4ffbc6eff880c8601140631e58fe123cde4",
          "linkedWithoutMetadata": "164a90dcdda36995f8c28a198ab9b4ffbc6eff880c8601140631e58fe123cde4"
        },
        "inherit": [
          "ERC721URIStorage",
          "ERC721",
          "IERC721Metadata",
          "IERC721",
          "ERC165",
          "IERC165",
          "Context"
        ],
        "libraries": [],
        "methods": [
          "(address)",
          "setMinMaxHousePrice(uint256,uint256)",
          "setConfigToken(address)",
          "isMember()",
          "addMember(address)",
          "removeMember(address)",
          "tokenURI(uint256)",
          "setCContractAddress(address)",
          "setPayable(uint256,address,bool)",
          "mintHouse(string,string,string,string,uint256)",
          "addAllowList(uint256,address)",
          "removeAllowList(uint256,address)",
          "checkAllowedList(uint256,address)",
          "addHistory(uint256,uint256,uint256,string,string,string,string,string,uint256)",
          "getHistory(uint256)",
          "editHistory(uint256,uint256,string,string,string,string,string,uint256)",
          "getHistoryType()",
          "addOrEditHType(uint256,string,bool,bool,bool,bool,bool,bool,bool)",
          "removeHistoryType(uint256)",
          "getMinMaxNFT()",
          "getTokenOwner(uint256)",
          "buyHouseNft(uint256)",
          "sendToken(address,uint256)",
          "changeTokenPrice(uint256,uint256)",
          "getAllHouses()",
          "getAllPayableHouses()",
          "getAllMyHouses()",
          "withdrawToken(uint256)",
          "withdrawETH(uint256)",
          "calcDiv(uint256,uint256)",
          "setAPYConfig(uint256,uint256)",
          "getAllAPYTypes()",
          "stake(uint256,uint256)",
          "unstake(uint256)",
          "stakingFinished(uint256)",
          "totalRewards(address)",
          "claimRewards(address)",
          "getAllMyStakedNFTs()",
          "getTotalInfo()",
          "getAllAPYs()",
          "getPenalty()",
          "setPenalty(uint256)",
          "getRoyalty()",
          "setRoyalty(uint256)"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "HouseBusiness",
            "src": "contracts\\HouseBusiness.sol:106"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "_name",
              "offset": 0,
              "slot": "0",
              "type": "t_string_storage",
              "contract": "ERC721",
              "src": "@openzeppelin\\contracts\\token\\ERC721\\ERC721.sol:24"
            },
            {
              "label": "_symbol",
              "offset": 0,
              "slot": "1",
              "type": "t_string_storage",
              "contract": "ERC721",
              "src": "@openzeppelin\\contracts\\token\\ERC721\\ERC721.sol:27"
            },
            {
              "label": "_owners",
              "offset": 0,
              "slot": "2",
              "type": "t_mapping(t_uint256,t_address)",
              "contract": "ERC721",
              "src": "@openzeppelin\\contracts\\token\\ERC721\\ERC721.sol:30"
            },
            {
              "label": "_balances",
              "offset": 0,
              "slot": "3",
              "type": "t_mapping(t_address,t_uint256)",
              "contract": "ERC721",
              "src": "@openzeppelin\\contracts\\token\\ERC721\\ERC721.sol:33"
            },
            {
              "label": "_tokenApprovals",
              "offset": 0,
              "slot": "4",
              "type": "t_mapping(t_uint256,t_address)",
              "contract": "ERC721",
              "src": "@openzeppelin\\contracts\\token\\ERC721\\ERC721.sol:36"
            },
            {
              "label": "_operatorApprovals",
              "offset": 0,
              "slot": "5",
              "type": "t_mapping(t_address,t_mapping(t_address,t_bool))",
              "contract": "ERC721",
              "src": "@openzeppelin\\contracts\\token\\ERC721\\ERC721.sol:39"
            },
            {
              "label": "_tokenURIs",
              "offset": 0,
              "slot": "6",
              "type": "t_mapping(t_uint256,t_string_storage)",
              "contract": "ERC721URIStorage",
              "src": "@openzeppelin\\contracts\\token\\ERC721\\extensions\\ERC721URIStorage.sol:15"
            },
            {
              "label": "collectionName",
              "offset": 0,
              "slot": "7",
              "type": "t_string_storage",
              "contract": "HouseBusiness",
              "src": "contracts\\HouseBusiness.sol:13"
            },
            {
              "label": "collectionNameSymbol",
              "offset": 0,
              "slot": "8",
              "type": "t_string_storage",
              "contract": "HouseBusiness",
              "src": "contracts\\HouseBusiness.sol:15"
            },
            {
              "label": "houseCounter",
              "offset": 0,
              "slot": "9",
              "type": "t_uint256",
              "contract": "HouseBusiness",
              "src": "contracts\\HouseBusiness.sol:17"
            },
            {
              "label": "stakedCounter",
              "offset": 0,
              "slot": "10",
              "type": "t_uint256",
              "contract": "HouseBusiness",
              "src": "contracts\\HouseBusiness.sol:19"
            },
            {
              "label": "soldedCounter",
              "offset": 0,
              "slot": "11",
              "type": "t_uint256",
              "contract": "HouseBusiness",
              "src": "contracts\\HouseBusiness.sol:21"
            },
            {
              "label": "hTypeCounter",
              "offset": 0,
              "slot": "12",
              "type": "t_uint256",
              "contract": "HouseBusiness",
              "src": "contracts\\HouseBusiness.sol:23"
            },
            {
              "label": "_token",
              "offset": 0,
              "slot": "13",
              "type": "t_contract(IERC20)77",
              "contract": "HouseBusiness",
              "src": "contracts\\HouseBusiness.sol:25"
            },
            {
              "label": "minPrice",
              "offset": 0,
              "slot": "14",
              "type": "t_uint256",
              "contract": "HouseBusiness",
              "src": "contracts\\HouseBusiness.sol:27"
            },
            {
              "label": "maxPrice",
              "offset": 0,
              "slot": "15",
              "type": "t_uint256",
              "contract": "HouseBusiness",
              "src": "contracts\\HouseBusiness.sol:29"
            },
            {
              "label": "penalty",
              "offset": 0,
              "slot": "16",
              "type": "t_uint256",
              "contract": "HouseBusiness",
              "src": "contracts\\HouseBusiness.sol:31"
            },
            {
              "label": "royalty",
              "offset": 0,
              "slot": "17",
              "type": "t_uint256",
              "contract": "HouseBusiness",
              "src": "contracts\\HouseBusiness.sol:33"
            },
            {
              "label": "cContract",
              "offset": 0,
              "slot": "18",
              "type": "t_contract(IMainCleanContract)5468",
              "contract": "HouseBusiness",
              "src": "contracts\\HouseBusiness.sol:35"
            },
            {
              "label": "historyTypes",
              "offset": 0,
              "slot": "19",
              "type": "t_array(t_struct(HistoryType)2851_storage)dyn_storage",
              "contract": "HouseBusiness",
              "src": "contracts\\HouseBusiness.sol:86"
            },
            {
              "label": "houseHistories",
              "offset": 0,
              "slot": "20",
              "type": "t_mapping(t_uint256,t_array(t_struct(History)2832_storage)dyn_storage)",
              "contract": "HouseBusiness",
              "src": "contracts\\HouseBusiness.sol:88"
            },
            {
              "label": "APYtypes",
              "offset": 0,
              "slot": "21",
              "type": "t_array(t_uint256)dyn_storage",
              "contract": "HouseBusiness",
              "src": "contracts\\HouseBusiness.sol:90"
            },
            {
              "label": "APYConfig",
              "offset": 0,
              "slot": "22",
              "type": "t_mapping(t_uint256,t_uint256)",
              "contract": "HouseBusiness",
              "src": "contracts\\HouseBusiness.sol:92"
            },
            {
              "label": "allMembers",
              "offset": 0,
              "slot": "23",
              "type": "t_mapping(t_address,t_bool)",
              "contract": "HouseBusiness",
              "src": "contracts\\HouseBusiness.sol:94"
            },
            {
              "label": "allHouses",
              "offset": 0,
              "slot": "24",
              "type": "t_mapping(t_uint256,t_struct(House)2798_storage)",
              "contract": "HouseBusiness",
              "src": "contracts\\HouseBusiness.sol:96"
            },
            {
              "label": "allowedList",
              "offset": 0,
              "slot": "25",
              "type": "t_mapping(t_uint256,t_mapping(t_address,t_bool))",
              "contract": "HouseBusiness",
              "src": "contracts\\HouseBusiness.sol:98"
            },
            {
              "label": "stakedNfts",
              "offset": 0,
              "slot": "26",
              "type": "t_mapping(t_address,t_array(t_struct(StakedNft)2815_storage)dyn_storage)",
              "contract": "HouseBusiness",
              "src": "contracts\\HouseBusiness.sol:104"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            },
            "t_array(t_struct(History)2832_storage)dyn_storage": {
              "label": "struct HouseBusiness.History[]",
              "numberOfBytes": "32"
            },
            "t_array(t_struct(HistoryType)2851_storage)dyn_storage": {
              "label": "struct HouseBusiness.HistoryType[]",
              "numberOfBytes": "32"
            },
            "t_array(t_struct(StakedNft)2815_storage)dyn_storage": {
              "label": "struct HouseBusiness.StakedNft[]",
              "numberOfBytes": "32"
            },
            "t_array(t_uint256)dyn_storage": {
              "label": "uint256[]",
              "numberOfBytes": "32"
            },
            "t_bool": {
              "label": "bool",
              "numberOfBytes": "1"
            },
            "t_contract(IERC20)77": {
              "label": "contract IERC20",
              "numberOfBytes": "20"
            },
            "t_contract(IMainCleanContract)5468": {
              "label": "contract IMainCleanContract",
              "numberOfBytes": "20"
            },
            "t_mapping(t_address,t_array(t_struct(StakedNft)2815_storage)dyn_storage)": {
              "label": "mapping(address => struct HouseBusiness.StakedNft[])",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_bool)": {
              "label": "mapping(address => bool)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_mapping(t_address,t_bool))": {
              "label": "mapping(address => mapping(address => bool))",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_uint256)": {
              "label": "mapping(address => uint256)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_uint256,t_address)": {
              "label": "mapping(uint256 => address)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_uint256,t_array(t_struct(History)2832_storage)dyn_storage)": {
              "label": "mapping(uint256 => struct HouseBusiness.History[])",
              "numberOfBytes": "32"
            },
            "t_mapping(t_uint256,t_mapping(t_address,t_bool))": {
              "label": "mapping(uint256 => mapping(address => bool))",
              "numberOfBytes": "32"
            },
            "t_mapping(t_uint256,t_string_storage)": {
              "label": "mapping(uint256 => string)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_uint256,t_struct(House)2798_storage)": {
              "label": "mapping(uint256 => struct HouseBusiness.House)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_uint256,t_uint256)": {
              "label": "mapping(uint256 => uint256)",
              "numberOfBytes": "32"
            },
            "t_string_storage": {
              "label": "string",
              "numberOfBytes": "32"
            },
            "t_struct(History)2832_storage": {
              "label": "struct HouseBusiness.History",
              "members": [
                {
                  "label": "hID",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "0"
                },
                {
                  "label": "contractId",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "1"
                },
                {
                  "label": "houseImg",
                  "type": "t_string_storage",
                  "offset": 0,
                  "slot": "2"
                },
                {
                  "label": "houseBrand",
                  "type": "t_string_storage",
                  "offset": 0,
                  "slot": "3"
                },
                {
                  "label": "desc",
                  "type": "t_string_storage",
                  "offset": 0,
                  "slot": "4"
                },
                {
                  "label": "history",
                  "type": "t_string_storage",
                  "offset": 0,
                  "slot": "5"
                },
                {
                  "label": "brandType",
                  "type": "t_string_storage",
                  "offset": 0,
                  "slot": "6"
                },
                {
                  "label": "yearField",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "7"
                }
              ],
              "numberOfBytes": "256"
            },
            "t_struct(HistoryType)2851_storage": {
              "label": "struct HouseBusiness.HistoryType",
              "members": [
                {
                  "label": "hID",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "0"
                },
                {
                  "label": "hLabel",
                  "type": "t_string_storage",
                  "offset": 0,
                  "slot": "1"
                },
                {
                  "label": "connectContract",
                  "type": "t_bool",
                  "offset": 0,
                  "slot": "2"
                },
                {
                  "label": "imgNeed",
                  "type": "t_bool",
                  "offset": 1,
                  "slot": "2"
                },
                {
                  "label": "brandNeed",
                  "type": "t_bool",
                  "offset": 2,
                  "slot": "2"
                },
                {
                  "label": "descNeed",
                  "type": "t_bool",
                  "offset": 3,
                  "slot": "2"
                },
                {
                  "label": "brandTypeNeed",
                  "type": "t_bool",
                  "offset": 4,
                  "slot": "2"
                },
                {
                  "label": "yearNeed",
                  "type": "t_bool",
                  "offset": 5,
                  "slot": "2"
                },
                {
                  "label": "checkMark",
                  "type": "t_bool",
                  "offset": 6,
                  "slot": "2"
                }
              ],
              "numberOfBytes": "96"
            },
            "t_struct(House)2798_storage": {
              "label": "struct HouseBusiness.House",
              "members": [
                {
                  "label": "tokenId",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "0"
                },
                {
                  "label": "tokenName",
                  "type": "t_string_storage",
                  "offset": 0,
                  "slot": "1"
                },
                {
                  "label": "tokenURI",
                  "type": "t_string_storage",
                  "offset": 0,
                  "slot": "2"
                },
                {
                  "label": "tokenType",
                  "type": "t_string_storage",
                  "offset": 0,
                  "slot": "3"
                },
                {
                  "label": "currentOwner",
                  "type": "t_address",
                  "offset": 0,
                  "slot": "4"
                },
                {
                  "label": "previousOwner",
                  "type": "t_address",
                  "offset": 0,
                  "slot": "5"
                },
                {
                  "label": "buyer",
                  "type": "t_address",
                  "offset": 0,
                  "slot": "6"
                },
                {
                  "label": "price",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "7"
                },
                {
                  "label": "numberOfTransfers",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "8"
                },
                {
                  "label": "nftPayable",
                  "type": "t_bool",
                  "offset": 0,
                  "slot": "9"
                },
                {
                  "label": "staked",
                  "type": "t_bool",
                  "offset": 1,
                  "slot": "9"
                },
                {
                  "label": "soldstatus",
                  "type": "t_bool",
                  "offset": 2,
                  "slot": "9"
                }
              ],
              "numberOfBytes": "320"
            },
            "t_struct(StakedNft)2815_storage": {
              "label": "struct HouseBusiness.StakedNft",
              "members": [
                {
                  "label": "owner",
                  "type": "t_address",
                  "offset": 0,
                  "slot": "0"
                },
                {
                  "label": "tokenId",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "1"
                },
                {
                  "label": "startedDate",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "2"
                },
                {
                  "label": "endDate",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "3"
                },
                {
                  "label": "claimDate",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "4"
                },
                {
                  "label": "stakingType",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "5"
                },
                {
                  "label": "perSecRewards",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "6"
                },
                {
                  "label": "stakingStatus",
                  "type": "t_bool",
                  "offset": 0,
                  "slot": "7"
                }
              ],
              "numberOfBytes": "256"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            }
          },
          "layoutVersion": "1.1",
          "flat": true
        }
      },
      "IMainCleanContract": {
        "src": "contracts\\interfaces\\IContract.sol:6",
        "inherit": [],
        "libraries": [],
        "methods": [
          "getContractById(uint256)",
          "transferContractOwnership(uint256,address,address)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      }
    },
    {
      "MainCleanContract": {
        "src": "contracts\\Contract.sol:6",
        "version": {
          "withMetadata": "6421e940ca2c08cec604e64c4e3802894c030e3491305b8df865d9e1c9e89aac",
          "withoutMetadata": "4b8cbb4879901533fe49280ca430f3230d2cf4cb717e76bb4a9404845cd178f8",
          "linkedWithoutMetadata": "4b8cbb4879901533fe49280ca430f3230d2cf4cb717e76bb4a9404845cd178f8"
        },
        "inherit": [],
        "libraries": [],
        "methods": [
          "(address)",
          "ccCreation(string,string,address,string,uint256,uint256,uint256,string)",
          "getAllContractsByOwner()",
          "getAllContractsBySigner()",
          "getContractById(uint256)",
          "addContractSigner(uint256,address)",
          "signContract(uint256)",
          "sendNotify(address,string,uint256)",
          "getUploadedCounter()",
          "getAllNotifies()",
          "calcDiv(uint256,uint256)",
          "toString(bytes)",
          "addressToString(address)",
          "uintToString(uint256)",
          "bytesToString(bytes32)",
          "transferContractOwnership(uint256,address,address)"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "MainCleanContract",
            "src": "contracts\\Contract.sol:52"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "ccCounter",
              "offset": 0,
              "slot": "0",
              "type": "t_uint256",
              "contract": "MainCleanContract",
              "src": "contracts\\Contract.sol:8"
            },
            {
              "label": "houseNFTAddress",
              "offset": 0,
              "slot": "1",
              "type": "t_address",
              "contract": "MainCleanContract",
              "src": "contracts\\Contract.sol:11"
            },
            {
              "label": "allCleanContracts",
              "offset": 0,
              "slot": "2",
              "type": "t_mapping(t_uint256,t_struct(CleanContract)39_storage)",
              "contract": "MainCleanContract",
              "src": "contracts\\Contract.sol:44"
            },
            {
              "label": "allContractsByOwner",
              "offset": 0,
              "slot": "3",
              "type": "t_mapping(t_address,t_array(t_uint256)dyn_storage)",
              "contract": "MainCleanContract",
              "src": "contracts\\Contract.sol:46"
            },
            {
              "label": "allContractsBySigner",
              "offset": 0,
              "slot": "4",
              "type": "t_mapping(t_address,t_array(t_uint256)dyn_storage)",
              "contract": "MainCleanContract",
              "src": "contracts\\Contract.sol:48"
            },
            {
              "label": "allNotifies",
              "offset": 0,
              "slot": "5",
              "type": "t_mapping(t_address,t_array(t_struct(Notify)52_storage)dyn_storage)",
              "contract": "MainCleanContract",
              "src": "contracts\\Contract.sol:50"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            },
            "t_array(t_struct(Notify)52_storage)dyn_storage": {
              "label": "struct MainCleanContract.Notify[]",
              "numberOfBytes": "32"
            },
            "t_array(t_uint256)dyn_storage": {
              "label": "uint256[]",
              "numberOfBytes": "32"
            },
            "t_bool": {
              "label": "bool",
              "numberOfBytes": "1"
            },
            "t_mapping(t_address,t_array(t_struct(Notify)52_storage)dyn_storage)": {
              "label": "mapping(address => struct MainCleanContract.Notify[])",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_array(t_uint256)dyn_storage)": {
              "label": "mapping(address => uint256[])",
              "numberOfBytes": "32"
            },
            "t_mapping(t_uint256,t_struct(CleanContract)39_storage)": {
              "label": "mapping(uint256 => struct MainCleanContract.CleanContract)",
              "numberOfBytes": "32"
            },
            "t_string_storage": {
              "label": "string",
              "numberOfBytes": "32"
            },
            "t_struct(CleanContract)39_storage": {
              "label": "struct MainCleanContract.CleanContract",
              "members": [
                {
                  "label": "contractId",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "0"
                },
                {
                  "label": "companyName",
                  "type": "t_string_storage",
                  "offset": 0,
                  "slot": "1"
                },
                {
                  "label": "contractType",
                  "type": "t_string_storage",
                  "offset": 0,
                  "slot": "2"
                },
                {
                  "label": "contractURI",
                  "type": "t_string_storage",
                  "offset": 0,
                  "slot": "3"
                },
                {
                  "label": "dateFrom",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "4"
                },
                {
                  "label": "dateTo",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "5"
                },
                {
                  "label": "agreedPrice",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "6"
                },
                {
                  "label": "currency",
                  "type": "t_string_storage",
                  "offset": 0,
                  "slot": "7"
                },
                {
                  "label": "creator",
                  "type": "t_address",
                  "offset": 0,
                  "slot": "8"
                },
                {
                  "label": "owner",
                  "type": "t_address",
                  "offset": 0,
                  "slot": "9"
                },
                {
                  "label": "creatorApproval",
                  "type": "t_bool",
                  "offset": 20,
                  "slot": "9"
                },
                {
                  "label": "creatorSignDate",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "10"
                },
                {
                  "label": "contractSigner",
                  "type": "t_address",
                  "offset": 0,
                  "slot": "11"
                },
                {
                  "label": "signerApproval",
                  "type": "t_bool",
                  "offset": 20,
                  "slot": "11"
                },
                {
                  "label": "signerSignDate",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "12"
                },
                {
                  "label": "status",
                  "type": "t_string_storage",
                  "offset": 0,
                  "slot": "13"
                }
              ],
              "numberOfBytes": "448"
            },
            "t_struct(Notify)52_storage": {
              "label": "struct MainCleanContract.Notify",
              "members": [
                {
                  "label": "nSender",
                  "type": "t_address",
                  "offset": 0,
                  "slot": "0"
                },
                {
                  "label": "nReceiver",
                  "type": "t_address",
                  "offset": 0,
                  "slot": "1"
                },
                {
                  "label": "ccID",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "2"
                },
                {
                  "label": "notifySentTime",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "3"
                },
                {
                  "label": "notifyContent",
                  "type": "t_string_storage",
                  "offset": 0,
                  "slot": "4"
                },
                {
                  "label": "status",
                  "type": "t_bool",
                  "offset": 0,
                  "slot": "5"
                }
              ],
              "numberOfBytes": "192"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            }
          },
          "layoutVersion": "1.1",
          "flat": true
        }
      }
    },
    {
      "ThirdParty": {
        "src": "contracts\\ThirdParty.sol:5",
        "version": {
          "withMetadata": "cbf5b2fae6668ee45b86827e485cbed39526db15e39a77a193d607720ff0015c",
          "withoutMetadata": "c7f6b899dcbca6a360ab204550ba9b4fec9f4cae1bcd2f5879cfa3965e9d550f",
          "linkedWithoutMetadata": "c7f6b899dcbca6a360ab204550ba9b4fec9f4cae1bcd2f5879cfa3965e9d550f"
        },
        "inherit": [],
        "libraries": [],
        "methods": [
          "getAllCategories()",
          "addCategory(string,uint256[])",
          "editCategory(uint256,string,uint256[])",
          "deleteCategory(uint256)",
          "getAllProperties()",
          "addProperty(string)",
          "editProperty(uint256,string)",
          "deleteProperty(uint256)",
          "getPackagesByCategory(uint256)",
          "addPackage(uint256,string,uint256,uint256,uint256,bool[])",
          "editPackage(uint256,uint256,string,uint256,uint256,uint256,bool[])",
          "deletePackage(uint256,uint256)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [
            {
              "label": "categoryCounter",
              "offset": 0,
              "slot": "0",
              "type": "t_uint256",
              "contract": "ThirdParty",
              "src": "contracts\\ThirdParty.sol:12"
            },
            {
              "label": "packageCounter",
              "offset": 0,
              "slot": "1",
              "type": "t_uint256",
              "contract": "ThirdParty",
              "src": "contracts\\ThirdParty.sol:23"
            },
            {
              "label": "propertyCounter",
              "offset": 0,
              "slot": "2",
              "type": "t_uint256",
              "contract": "ThirdParty",
              "src": "contracts\\ThirdParty.sol:29"
            },
            {
              "label": "allCategories",
              "offset": 0,
              "slot": "3",
              "type": "t_array(t_struct(Category)11_storage)dyn_storage",
              "contract": "ThirdParty",
              "src": "contracts\\ThirdParty.sol:31"
            },
            {
              "label": "allPackages",
              "offset": 0,
              "slot": "4",
              "type": "t_mapping(t_uint256,t_array(t_struct(Package)29_storage)dyn_storage)",
              "contract": "ThirdParty",
              "src": "contracts\\ThirdParty.sol:34"
            },
            {
              "label": "allProperties",
              "offset": 0,
              "slot": "5",
              "type": "t_array(t_struct(Property)36_storage)dyn_storage",
              "contract": "ThirdParty",
              "src": "contracts\\ThirdParty.sol:37"
            }
          ],
          "types": {
            "t_array(t_bool)dyn_storage": {
              "label": "bool[]",
              "numberOfBytes": "32"
            },
            "t_array(t_struct(Category)11_storage)dyn_storage": {
              "label": "struct ThirdParty.Category[]",
              "numberOfBytes": "32"
            },
            "t_array(t_struct(Package)29_storage)dyn_storage": {
              "label": "struct ThirdParty.Package[]",
              "numberOfBytes": "32"
            },
            "t_array(t_struct(Property)36_storage)dyn_storage": {
              "label": "struct ThirdParty.Property[]",
              "numberOfBytes": "32"
            },
            "t_array(t_uint256)dyn_storage": {
              "label": "uint256[]",
              "numberOfBytes": "32"
            },
            "t_bool": {
              "label": "bool",
              "numberOfBytes": "1"
            },
            "t_mapping(t_uint256,t_array(t_struct(Package)29_storage)dyn_storage)": {
              "label": "mapping(uint256 => struct ThirdParty.Package[])",
              "numberOfBytes": "32"
            },
            "t_string_storage": {
              "label": "string",
              "numberOfBytes": "32"
            },
            "t_struct(Category)11_storage": {
              "label": "struct ThirdParty.Category",
              "members": [
                {
                  "label": "categoryID",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "0"
                },
                {
                  "label": "cartegoryName",
                  "type": "t_string_storage",
                  "offset": 0,
                  "slot": "1"
                },
                {
                  "label": "properties",
                  "type": "t_array(t_uint256)dyn_storage",
                  "offset": 0,
                  "slot": "2"
                },
                {
                  "label": "visible",
                  "type": "t_bool",
                  "offset": 0,
                  "slot": "3"
                }
              ],
              "numberOfBytes": "128"
            },
            "t_struct(Package)29_storage": {
              "label": "struct ThirdParty.Package",
              "members": [
                {
                  "label": "categoryID",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "0"
                },
                {
                  "label": "packageID",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "1"
                },
                {
                  "label": "packageName",
                  "type": "t_string_storage",
                  "offset": 0,
                  "slot": "2"
                },
                {
                  "label": "price",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "3"
                },
                {
                  "label": "period",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "4"
                },
                {
                  "label": "dataLimit",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "5"
                },
                {
                  "label": "propertyVisible",
                  "type": "t_array(t_bool)dyn_storage",
                  "offset": 0,
                  "slot": "6"
                }
              ],
              "numberOfBytes": "224"
            },
            "t_struct(Property)36_storage": {
              "label": "struct ThirdParty.Property",
              "members": [
                {
                  "label": "propertyID",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "0"
                },
                {
                  "label": "propertyName",
                  "type": "t_string_storage",
                  "offset": 0,
                  "slot": "1"
                }
              ],
              "numberOfBytes": "64"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            }
          },
          "layoutVersion": "1.1",
          "flat": true
        }
      }
    },
    {
      "Context": {
        "src": "contracts\\TokenContract.sol:22",
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "HouseBusinessToken": {
        "src": "contracts\\TokenContract.sol:33",
        "version": {
          "withMetadata": "e53f4b9234e67266e4442dec09d084a17cbe6b1b4fb90d62776f0d6f370f0570",
          "withoutMetadata": "f5d2b294cac19c78c593798b4a1bae04c45c82839cbcffe3cc910bb441f21259",
          "linkedWithoutMetadata": "f5d2b294cac19c78c593798b4a1bae04c45c82839cbcffe3cc910bb441f21259"
        },
        "inherit": [
          "IERC20Metadata",
          "IERC20",
          "Context"
        ],
        "libraries": [],
        "methods": [
          "()",
          "name()",
          "symbol()",
          "decimals()",
          "totalSupply()",
          "balanceOf(address)",
          "transfer(address,uint256)",
          "allowance(address,address)",
          "approve(address,uint256)",
          "transferFrom(address,address,uint256)",
          "increaseAllowance(address,uint256)",
          "decreaseAllowance(address,uint256)",
          "_mint(address,uint256)"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "HouseBusinessToken",
            "src": "contracts\\TokenContract.sol:42"
          },
          {
            "kind": "state-variable-assignment",
            "name": "_name",
            "src": "contracts\\TokenContract.sol:37"
          },
          {
            "kind": "state-variable-assignment",
            "name": "_symbol",
            "src": "contracts\\TokenContract.sol:38"
          },
          {
            "kind": "state-variable-assignment",
            "name": "_decimals",
            "src": "contracts\\TokenContract.sol:39"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "_balances",
              "offset": 0,
              "slot": "0",
              "type": "t_mapping(t_address,t_uint256)",
              "contract": "HouseBusinessToken",
              "src": "contracts\\TokenContract.sol:34"
            },
            {
              "label": "_allowances",
              "offset": 0,
              "slot": "1",
              "type": "t_mapping(t_address,t_mapping(t_address,t_uint256))",
              "contract": "HouseBusinessToken",
              "src": "contracts\\TokenContract.sol:35"
            },
            {
              "label": "_totalSupply",
              "offset": 0,
              "slot": "2",
              "type": "t_uint256",
              "contract": "HouseBusinessToken",
              "src": "contracts\\TokenContract.sol:36"
            },
            {
              "label": "_name",
              "offset": 0,
              "slot": "3",
              "type": "t_string_storage",
              "contract": "HouseBusinessToken",
              "src": "contracts\\TokenContract.sol:37"
            },
            {
              "label": "_symbol",
              "offset": 0,
              "slot": "4",
              "type": "t_string_storage",
              "contract": "HouseBusinessToken",
              "src": "contracts\\TokenContract.sol:38"
            },
            {
              "label": "_decimals",
              "offset": 0,
              "slot": "5",
              "type": "t_uint8",
              "contract": "HouseBusinessToken",
              "src": "contracts\\TokenContract.sol:39"
            },
            {
              "label": "_owner",
              "offset": 1,
              "slot": "5",
              "type": "t_address",
              "contract": "HouseBusinessToken",
              "src": "contracts\\TokenContract.sol:40"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            },
            "t_mapping(t_address,t_mapping(t_address,t_uint256))": {
              "label": "mapping(address => mapping(address => uint256))",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_uint256)": {
              "label": "mapping(address => uint256)",
              "numberOfBytes": "32"
            },
            "t_string_storage": {
              "label": "string",
              "numberOfBytes": "32"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            },
            "t_uint8": {
              "label": "uint8",
              "numberOfBytes": "1"
            }
          },
          "layoutVersion": "1.1",
          "flat": true
        }
      },
      "IERC20": {
        "src": "contracts\\TokenContract.sol:5",
        "inherit": [],
        "libraries": [],
        "methods": [
          "totalSupply()",
          "balanceOf(address)",
          "transfer(address,uint256)",
          "allowance(address,address)",
          "approve(address,uint256)",
          "transferFrom(address,address,uint256)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "IERC20Metadata": {
        "src": "contracts\\TokenContract.sol:16",
        "inherit": [
          "IERC20"
        ],
        "libraries": [],
        "methods": [
          "name()",
          "symbol()",
          "decimals()"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      }
    },
    {
      "IPRC20": {
        "src": "contracts\\interfaces\\IPRC20.sol:4",
        "inherit": [],
        "libraries": [],
        "methods": [
          "totalSupply()",
          "balanceOf(address)",
          "transfer(address,uint256)",
          "allowance(address,address)",
          "approve(address,uint256)",
          "transferFrom(address,address,uint256)",
          "decimals()"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      }
    },
    {
      "IHouseBusiness": {
        "src": "contracts\\interfaces\\IHouseBusiness.sol:5",
        "inherit": [],
        "libraries": [],
        "methods": [
          "collectionName()",
          "collectionNameSymbol()",
          "houseCounter()",
          "stakedCounter()",
          "soldedCounter()",
          "hTypeCounter()",
          "minPrice()",
          "maxPrice()",
          "penalty()",
          "royalty()",
          "historyTypes(uint256)",
          "houseHistories(uint256)",
          "APYtypes(uint256)",
          "APYConfig(uint256)",
          "allMembers(address)",
          "allMembers(uint256)",
          "allowedList(uint256,address)",
          "stakedNfts(address)",
          "setMinMaxHousePrice(uint256,uint256)",
          "setConfigToken(address)",
          "isMember()",
          "addMember(address)",
          "removeMember(address)",
          "tokenURI(uint256)",
          "setPayable(uint256,address,bool)",
          "mintHouse(string,string,string,string,uint256)",
          "addAllowList(uint256,address)",
          "removeAllowList(uint256,address)",
          "checkAllowedList(uint256,address)",
          "addHistory(uint256,uint256,string,string,string,string,string,uint256)",
          "getHistory(uint256)",
          "editHistory(uint256,uint256,string,string,string,string,string,uint256)",
          "getHistoryType()",
          "addOrEditHType(uint256,string,bool,bool,bool,bool,bool,bool,bool)",
          "removeHistoryType(uint256)",
          "getMinMaxNFT()",
          "getTokenOwner(uint256)",
          "buyHouseNft(uint256)",
          "sendToken(address,uint256)",
          "changeTokenPrice(uint256,uint256)",
          "getAllHouses()",
          "getAllPayableHouses()",
          "getAllMyHouses()",
          "withdrawToken(uint256)",
          "withdrawETH(uint256)",
          "setAPYConfig(uint256,uint256)",
          "getAllAPYTypes()",
          "stake(uint256,uint256)",
          "unstake(uint256)",
          "stakingFinished(uint256)",
          "totalRewards(address)",
          "claimRewards(address)",
          "getAllMyStakedNFTs()",
          "getTotalInfo()",
          "getAllAPYs()",
          "getPenalty()",
          "setPenalty(uint256)",
          "getRoyalty()",
          "setRoyalty(uint256)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      }
    },
    {
      "MainCleanContract": {
        "src": "contracts\\Contract.sol:6",
        "version": {
          "withMetadata": "6421e940ca2c08cec604e64c4e3802894c030e3491305b8df865d9e1c9e89aac",
          "withoutMetadata": "4b8cbb4879901533fe49280ca430f3230d2cf4cb717e76bb4a9404845cd178f8",
          "linkedWithoutMetadata": "4b8cbb4879901533fe49280ca430f3230d2cf4cb717e76bb4a9404845cd178f8"
        },
        "inherit": [],
        "libraries": [],
        "methods": [
          "(address)",
          "ccCreation(string,string,address,string,uint256,uint256,uint256,string)",
          "getAllContractsByOwner()",
          "getAllContractsBySigner()",
          "getContractById(uint256)",
          "addContractSigner(uint256,address)",
          "signContract(uint256)",
          "sendNotify(address,string,uint256)",
          "getUploadedCounter()",
          "getAllNotifies()",
          "calcDiv(uint256,uint256)",
          "toString(bytes)",
          "addressToString(address)",
          "uintToString(uint256)",
          "bytesToString(bytes32)",
          "transferContractOwnership(uint256,address,address)"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "MainCleanContract",
            "src": "contracts\\Contract.sol:52"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "ccCounter",
              "offset": 0,
              "slot": "0",
              "type": "t_uint256",
              "contract": "MainCleanContract",
              "src": "contracts\\Contract.sol:8"
            },
            {
              "label": "houseNFTAddress",
              "offset": 0,
              "slot": "1",
              "type": "t_address",
              "contract": "MainCleanContract",
              "src": "contracts\\Contract.sol:11"
            },
            {
              "label": "allCleanContracts",
              "offset": 0,
              "slot": "2",
              "type": "t_mapping(t_uint256,t_struct(CleanContract)39_storage)",
              "contract": "MainCleanContract",
              "src": "contracts\\Contract.sol:44"
            },
            {
              "label": "allContractsByOwner",
              "offset": 0,
              "slot": "3",
              "type": "t_mapping(t_address,t_array(t_uint256)dyn_storage)",
              "contract": "MainCleanContract",
              "src": "contracts\\Contract.sol:46"
            },
            {
              "label": "allContractsBySigner",
              "offset": 0,
              "slot": "4",
              "type": "t_mapping(t_address,t_array(t_uint256)dyn_storage)",
              "contract": "MainCleanContract",
              "src": "contracts\\Contract.sol:48"
            },
            {
              "label": "allNotifies",
              "offset": 0,
              "slot": "5",
              "type": "t_mapping(t_address,t_array(t_struct(Notify)52_storage)dyn_storage)",
              "contract": "MainCleanContract",
              "src": "contracts\\Contract.sol:50"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            },
            "t_array(t_struct(Notify)52_storage)dyn_storage": {
              "label": "struct MainCleanContract.Notify[]",
              "numberOfBytes": "32"
            },
            "t_array(t_uint256)dyn_storage": {
              "label": "uint256[]",
              "numberOfBytes": "32"
            },
            "t_bool": {
              "label": "bool",
              "numberOfBytes": "1"
            },
            "t_mapping(t_address,t_array(t_struct(Notify)52_storage)dyn_storage)": {
              "label": "mapping(address => struct MainCleanContract.Notify[])",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_array(t_uint256)dyn_storage)": {
              "label": "mapping(address => uint256[])",
              "numberOfBytes": "32"
            },
            "t_mapping(t_uint256,t_struct(CleanContract)39_storage)": {
              "label": "mapping(uint256 => struct MainCleanContract.CleanContract)",
              "numberOfBytes": "32"
            },
            "t_string_storage": {
              "label": "string",
              "numberOfBytes": "32"
            },
            "t_struct(CleanContract)39_storage": {
              "label": "struct MainCleanContract.CleanContract",
              "members": [
                {
                  "label": "contractId",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "0"
                },
                {
                  "label": "companyName",
                  "type": "t_string_storage",
                  "offset": 0,
                  "slot": "1"
                },
                {
                  "label": "contractType",
                  "type": "t_string_storage",
                  "offset": 0,
                  "slot": "2"
                },
                {
                  "label": "contractURI",
                  "type": "t_string_storage",
                  "offset": 0,
                  "slot": "3"
                },
                {
                  "label": "dateFrom",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "4"
                },
                {
                  "label": "dateTo",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "5"
                },
                {
                  "label": "agreedPrice",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "6"
                },
                {
                  "label": "currency",
                  "type": "t_string_storage",
                  "offset": 0,
                  "slot": "7"
                },
                {
                  "label": "creator",
                  "type": "t_address",
                  "offset": 0,
                  "slot": "8"
                },
                {
                  "label": "owner",
                  "type": "t_address",
                  "offset": 0,
                  "slot": "9"
                },
                {
                  "label": "creatorApproval",
                  "type": "t_bool",
                  "offset": 20,
                  "slot": "9"
                },
                {
                  "label": "creatorSignDate",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "10"
                },
                {
                  "label": "contractSigner",
                  "type": "t_address",
                  "offset": 0,
                  "slot": "11"
                },
                {
                  "label": "signerApproval",
                  "type": "t_bool",
                  "offset": 20,
                  "slot": "11"
                },
                {
                  "label": "signerSignDate",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "12"
                },
                {
                  "label": "status",
                  "type": "t_string_storage",
                  "offset": 0,
                  "slot": "13"
                }
              ],
              "numberOfBytes": "448"
            },
            "t_struct(Notify)52_storage": {
              "label": "struct MainCleanContract.Notify",
              "members": [
                {
                  "label": "nSender",
                  "type": "t_address",
                  "offset": 0,
                  "slot": "0"
                },
                {
                  "label": "nReceiver",
                  "type": "t_address",
                  "offset": 0,
                  "slot": "1"
                },
                {
                  "label": "ccID",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "2"
                },
                {
                  "label": "notifySentTime",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "3"
                },
                {
                  "label": "notifyContent",
                  "type": "t_string_storage",
                  "offset": 0,
                  "slot": "4"
                },
                {
                  "label": "status",
                  "type": "t_bool",
                  "offset": 0,
                  "slot": "5"
                }
              ],
              "numberOfBytes": "192"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            }
          },
          "layoutVersion": "1.1",
          "flat": true
        }
      }
    },
    {
      "IERC20": {
        "src": "@openzeppelin\\contracts\\token\\ERC20\\IERC20.sol:9",
        "inherit": [],
        "libraries": [],
        "methods": [
          "totalSupply()",
          "balanceOf(address)",
          "transfer(address,uint256)",
          "allowance(address,address)",
          "approve(address,uint256)",
          "transferFrom(address,address,uint256)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "ERC721": {
        "src": "@openzeppelin\\contracts\\token\\ERC721\\ERC721.sol:19",
        "version": {
          "withMetadata": "311027b738fb50ea92c84baf68eacb931adf05de03da13635a661dc9c5b03f73",
          "withoutMetadata": "9ec7f439077c3b762bc3aa6a17c55aba7a78d240190c9c7814df896455a0f780",
          "linkedWithoutMetadata": "9ec7f439077c3b762bc3aa6a17c55aba7a78d240190c9c7814df896455a0f780"
        },
        "inherit": [
          "IERC721Metadata",
          "IERC721",
          "ERC165",
          "IERC165",
          "Context"
        ],
        "libraries": [
          "Address",
          "Strings"
        ],
        "methods": [
          "(string,string)",
          "supportsInterface(bytes4)",
          "balanceOf(address)",
          "ownerOf(uint256)",
          "name()",
          "symbol()",
          "tokenURI(uint256)",
          "approve(address,uint256)",
          "getApproved(uint256)",
          "setApprovalForAll(address,bool)",
          "isApprovedForAll(address,address)",
          "transferFrom(address,address,uint256)",
          "safeTransferFrom(address,address,uint256)",
          "safeTransferFrom(address,address,uint256,bytes)"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "ERC721",
            "src": "@openzeppelin\\contracts\\token\\ERC721\\ERC721.sol:44"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "_name",
              "offset": 0,
              "slot": "0",
              "type": "t_string_storage",
              "contract": "ERC721",
              "src": "@openzeppelin\\contracts\\token\\ERC721\\ERC721.sol:24"
            },
            {
              "label": "_symbol",
              "offset": 0,
              "slot": "1",
              "type": "t_string_storage",
              "contract": "ERC721",
              "src": "@openzeppelin\\contracts\\token\\ERC721\\ERC721.sol:27"
            },
            {
              "label": "_owners",
              "offset": 0,
              "slot": "2",
              "type": "t_mapping(t_uint256,t_address)",
              "contract": "ERC721",
              "src": "@openzeppelin\\contracts\\token\\ERC721\\ERC721.sol:30"
            },
            {
              "label": "_balances",
              "offset": 0,
              "slot": "3",
              "type": "t_mapping(t_address,t_uint256)",
              "contract": "ERC721",
              "src": "@openzeppelin\\contracts\\token\\ERC721\\ERC721.sol:33"
            },
            {
              "label": "_tokenApprovals",
              "offset": 0,
              "slot": "4",
              "type": "t_mapping(t_uint256,t_address)",
              "contract": "ERC721",
              "src": "@openzeppelin\\contracts\\token\\ERC721\\ERC721.sol:36"
            },
            {
              "label": "_operatorApprovals",
              "offset": 0,
              "slot": "5",
              "type": "t_mapping(t_address,t_mapping(t_address,t_bool))",
              "contract": "ERC721",
              "src": "@openzeppelin\\contracts\\token\\ERC721\\ERC721.sol:39"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            },
            "t_bool": {
              "label": "bool",
              "numberOfBytes": "1"
            },
            "t_mapping(t_address,t_bool)": {
              "label": "mapping(address => bool)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_mapping(t_address,t_bool))": {
              "label": "mapping(address => mapping(address => bool))",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_uint256)": {
              "label": "mapping(address => uint256)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_uint256,t_address)": {
              "label": "mapping(uint256 => address)",
              "numberOfBytes": "32"
            },
            "t_string_storage": {
              "label": "string",
              "numberOfBytes": "32"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            }
          },
          "layoutVersion": "1.1",
          "flat": true
        }
      },
      "IERC721": {
        "src": "@openzeppelin\\contracts\\token\\ERC721\\IERC721.sol:11",
        "inherit": [
          "IERC165"
        ],
        "libraries": [],
        "methods": [
          "balanceOf(address)",
          "ownerOf(uint256)",
          "safeTransferFrom(address,address,uint256,bytes)",
          "safeTransferFrom(address,address,uint256)",
          "transferFrom(address,address,uint256)",
          "approve(address,uint256)",
          "setApprovalForAll(address,bool)",
          "getApproved(uint256)",
          "isApprovedForAll(address,address)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "IERC721Receiver": {
        "src": "@openzeppelin\\contracts\\token\\ERC721\\IERC721Receiver.sol:11",
        "inherit": [],
        "libraries": [],
        "methods": [
          "onERC721Received(address,address,uint256,bytes)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "ERC721URIStorage": {
        "src": "@openzeppelin\\contracts\\token\\ERC721\\extensions\\ERC721URIStorage.sol:11",
        "inherit": [
          "ERC721",
          "IERC721Metadata",
          "IERC721",
          "ERC165",
          "IERC165",
          "Context"
        ],
        "libraries": [
          "Strings"
        ],
        "methods": [
          "tokenURI(uint256)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [
            {
              "label": "_name",
              "offset": 0,
              "slot": "0",
              "type": "t_string_storage",
              "contract": "ERC721",
              "src": "@openzeppelin\\contracts\\token\\ERC721\\ERC721.sol:24"
            },
            {
              "label": "_symbol",
              "offset": 0,
              "slot": "1",
              "type": "t_string_storage",
              "contract": "ERC721",
              "src": "@openzeppelin\\contracts\\token\\ERC721\\ERC721.sol:27"
            },
            {
              "label": "_owners",
              "offset": 0,
              "slot": "2",
              "type": "t_mapping(t_uint256,t_address)",
              "contract": "ERC721",
              "src": "@openzeppelin\\contracts\\token\\ERC721\\ERC721.sol:30"
            },
            {
              "label": "_balances",
              "offset": 0,
              "slot": "3",
              "type": "t_mapping(t_address,t_uint256)",
              "contract": "ERC721",
              "src": "@openzeppelin\\contracts\\token\\ERC721\\ERC721.sol:33"
            },
            {
              "label": "_tokenApprovals",
              "offset": 0,
              "slot": "4",
              "type": "t_mapping(t_uint256,t_address)",
              "contract": "ERC721",
              "src": "@openzeppelin\\contracts\\token\\ERC721\\ERC721.sol:36"
            },
            {
              "label": "_operatorApprovals",
              "offset": 0,
              "slot": "5",
              "type": "t_mapping(t_address,t_mapping(t_address,t_bool))",
              "contract": "ERC721",
              "src": "@openzeppelin\\contracts\\token\\ERC721\\ERC721.sol:39"
            },
            {
              "label": "_tokenURIs",
              "offset": 0,
              "slot": "6",
              "type": "t_mapping(t_uint256,t_string_storage)",
              "contract": "ERC721URIStorage",
              "src": "@openzeppelin\\contracts\\token\\ERC721\\extensions\\ERC721URIStorage.sol:15"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            },
            "t_bool": {
              "label": "bool",
              "numberOfBytes": "1"
            },
            "t_mapping(t_address,t_bool)": {
              "label": "mapping(address => bool)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_mapping(t_address,t_bool))": {
              "label": "mapping(address => mapping(address => bool))",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_uint256)": {
              "label": "mapping(address => uint256)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_uint256,t_address)": {
              "label": "mapping(uint256 => address)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_uint256,t_string_storage)": {
              "label": "mapping(uint256 => string)",
              "numberOfBytes": "32"
            },
            "t_string_storage": {
              "label": "string",
              "numberOfBytes": "32"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            }
          },
          "layoutVersion": "1.1",
          "flat": true
        }
      },
      "IERC721Metadata": {
        "src": "@openzeppelin\\contracts\\token\\ERC721\\extensions\\IERC721Metadata.sol:12",
        "inherit": [
          "IERC721",
          "IERC165"
        ],
        "libraries": [],
        "methods": [
          "name()",
          "symbol()",
          "tokenURI(uint256)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "Address": {
        "src": "@openzeppelin\\contracts\\utils\\Address.sol:9",
        "version": {
          "withMetadata": "a0500f265408d7c0dbf75da3f9e44a5c2ee85e18bb1b58fe491ffcfa4ea7fd9b",
          "withoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db",
          "linkedWithoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db"
        },
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [
          {
            "kind": "delegatecall",
            "src": "@openzeppelin\\contracts\\utils\\Address.sol:185"
          }
        ],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "Context": {
        "src": "@openzeppelin\\contracts\\utils\\Context.sol:16",
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "Strings": {
        "src": "@openzeppelin\\contracts\\utils\\Strings.sol:11",
        "version": {
          "withMetadata": "c385b5200dd723f945d28b88358d79ca1b5c0f71c28cbbab9acf6d6f3fd15593",
          "withoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db",
          "linkedWithoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db"
        },
        "inherit": [],
        "libraries": [
          "Math"
        ],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "ERC165": {
        "src": "@openzeppelin\\contracts\\utils\\introspection\\ERC165.sol:22",
        "inherit": [
          "IERC165"
        ],
        "libraries": [],
        "methods": [
          "supportsInterface(bytes4)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "IERC165": {
        "src": "@openzeppelin\\contracts\\utils\\introspection\\IERC165.sol:15",
        "inherit": [],
        "libraries": [],
        "methods": [
          "supportsInterface(bytes4)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "Math": {
        "src": "@openzeppelin\\contracts\\utils\\math\\Math.sol:9",
        "version": {
          "withMetadata": "fcaf39e5e702f2902d6ef00c1def75c9800e8d2a0a78a87cf542096cafc7a4b0",
          "withoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db",
          "linkedWithoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db"
        },
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "HouseBusiness": {
        "src": "contracts\\HouseBusiness.sol:11",
        "version": {
          "withMetadata": "50bc7a3f9b8a66c9dfdd534fef50057e5a211d396a52b4261fe695df18fb7966",
          "withoutMetadata": "17492be3b30c7dab000c4e5c7f7992fdbc6ddbc57eb6d82d1628d7a9ca876b5b",
          "linkedWithoutMetadata": "17492be3b30c7dab000c4e5c7f7992fdbc6ddbc57eb6d82d1628d7a9ca876b5b"
        },
        "inherit": [
          "ERC721URIStorage",
          "ERC721",
          "IERC721Metadata",
          "IERC721",
          "ERC165",
          "IERC165",
          "Context"
        ],
        "libraries": [],
        "methods": [
          "(address)",
          "setMinMaxHousePrice(uint256,uint256)",
          "setConfigToken(address)",
          "isMember()",
          "addMember(address)",
          "removeMember(address)",
          "tokenURI(uint256)",
          "setCContractAddress(address)",
          "setPayable(uint256,address,bool)",
          "mintHouse(string,string,string,string,uint256)",
          "addAllowList(uint256,address)",
          "removeAllowList(uint256,address)",
          "checkAllowedList(uint256,address)",
          "addHistory(uint256,uint256,uint256,string,string,string,string,string,uint256)",
          "getHistory(uint256)",
          "editHistory(uint256,uint256,string,string,string,string,string,uint256)",
          "getHistoryType()",
          "addOrEditHType(uint256,string,bool,bool,bool,bool,bool,bool,bool)",
          "removeHistoryType(uint256)",
          "getMinMaxNFT()",
          "getTokenOwner(uint256)",
          "buyHouseNft(uint256)",
          "sendToken(address,uint256)",
          "changeTokenPrice(uint256,uint256)",
          "getAllHouses()",
          "getAllPayableHouses()",
          "getAllMyHouses()",
          "withdrawToken(uint256)",
          "withdrawETH(uint256)",
          "calcDiv(uint256,uint256)",
          "setAPYConfig(uint256,uint256)",
          "getAllAPYTypes()",
          "getAllMyStakedNFTs()",
          "getTotalInfo()",
          "getAllAPYs()",
          "getPenalty()",
          "setPenalty(uint256)",
          "getRoyalty()",
          "setRoyalty(uint256)"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "HouseBusiness",
            "src": "contracts\\HouseBusiness.sol:106"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "_name",
              "offset": 0,
              "slot": "0",
              "type": "t_string_storage",
              "contract": "ERC721",
              "src": "@openzeppelin\\contracts\\token\\ERC721\\ERC721.sol:24"
            },
            {
              "label": "_symbol",
              "offset": 0,
              "slot": "1",
              "type": "t_string_storage",
              "contract": "ERC721",
              "src": "@openzeppelin\\contracts\\token\\ERC721\\ERC721.sol:27"
            },
            {
              "label": "_owners",
              "offset": 0,
              "slot": "2",
              "type": "t_mapping(t_uint256,t_address)",
              "contract": "ERC721",
              "src": "@openzeppelin\\contracts\\token\\ERC721\\ERC721.sol:30"
            },
            {
              "label": "_balances",
              "offset": 0,
              "slot": "3",
              "type": "t_mapping(t_address,t_uint256)",
              "contract": "ERC721",
              "src": "@openzeppelin\\contracts\\token\\ERC721\\ERC721.sol:33"
            },
            {
              "label": "_tokenApprovals",
              "offset": 0,
              "slot": "4",
              "type": "t_mapping(t_uint256,t_address)",
              "contract": "ERC721",
              "src": "@openzeppelin\\contracts\\token\\ERC721\\ERC721.sol:36"
            },
            {
              "label": "_operatorApprovals",
              "offset": 0,
              "slot": "5",
              "type": "t_mapping(t_address,t_mapping(t_address,t_bool))",
              "contract": "ERC721",
              "src": "@openzeppelin\\contracts\\token\\ERC721\\ERC721.sol:39"
            },
            {
              "label": "_tokenURIs",
              "offset": 0,
              "slot": "6",
              "type": "t_mapping(t_uint256,t_string_storage)",
              "contract": "ERC721URIStorage",
              "src": "@openzeppelin\\contracts\\token\\ERC721\\extensions\\ERC721URIStorage.sol:15"
            },
            {
              "label": "collectionName",
              "offset": 0,
              "slot": "7",
              "type": "t_string_storage",
              "contract": "HouseBusiness",
              "src": "contracts\\HouseBusiness.sol:13"
            },
            {
              "label": "collectionNameSymbol",
              "offset": 0,
              "slot": "8",
              "type": "t_string_storage",
              "contract": "HouseBusiness",
              "src": "contracts\\HouseBusiness.sol:15"
            },
            {
              "label": "houseCounter",
              "offset": 0,
              "slot": "9",
              "type": "t_uint256",
              "contract": "HouseBusiness",
              "src": "contracts\\HouseBusiness.sol:17"
            },
            {
              "label": "stakedCounter",
              "offset": 0,
              "slot": "10",
              "type": "t_uint256",
              "contract": "HouseBusiness",
              "src": "contracts\\HouseBusiness.sol:19"
            },
            {
              "label": "soldedCounter",
              "offset": 0,
              "slot": "11",
              "type": "t_uint256",
              "contract": "HouseBusiness",
              "src": "contracts\\HouseBusiness.sol:21"
            },
            {
              "label": "hTypeCounter",
              "offset": 0,
              "slot": "12",
              "type": "t_uint256",
              "contract": "HouseBusiness",
              "src": "contracts\\HouseBusiness.sol:23"
            },
            {
              "label": "_token",
              "offset": 0,
              "slot": "13",
              "type": "t_contract(IERC20)77",
              "contract": "HouseBusiness",
              "src": "contracts\\HouseBusiness.sol:25"
            },
            {
              "label": "minPrice",
              "offset": 0,
              "slot": "14",
              "type": "t_uint256",
              "contract": "HouseBusiness",
              "src": "contracts\\HouseBusiness.sol:27"
            },
            {
              "label": "maxPrice",
              "offset": 0,
              "slot": "15",
              "type": "t_uint256",
              "contract": "HouseBusiness",
              "src": "contracts\\HouseBusiness.sol:29"
            },
            {
              "label": "penalty",
              "offset": 0,
              "slot": "16",
              "type": "t_uint256",
              "contract": "HouseBusiness",
              "src": "contracts\\HouseBusiness.sol:31"
            },
            {
              "label": "royalty",
              "offset": 0,
              "slot": "17",
              "type": "t_uint256",
              "contract": "HouseBusiness",
              "src": "contracts\\HouseBusiness.sol:33"
            },
            {
              "label": "cContract",
              "offset": 0,
              "slot": "18",
              "type": "t_contract(IMainCleanContract)4818",
              "contract": "HouseBusiness",
              "src": "contracts\\HouseBusiness.sol:35"
            },
            {
              "label": "historyTypes",
              "offset": 0,
              "slot": "19",
              "type": "t_array(t_struct(HistoryType)2851_storage)dyn_storage",
              "contract": "HouseBusiness",
              "src": "contracts\\HouseBusiness.sol:86"
            },
            {
              "label": "houseHistories",
              "offset": 0,
              "slot": "20",
              "type": "t_mapping(t_uint256,t_array(t_struct(History)2832_storage)dyn_storage)",
              "contract": "HouseBusiness",
              "src": "contracts\\HouseBusiness.sol:88"
            },
            {
              "label": "APYtypes",
              "offset": 0,
              "slot": "21",
              "type": "t_array(t_uint256)dyn_storage",
              "contract": "HouseBusiness",
              "src": "contracts\\HouseBusiness.sol:90"
            },
            {
              "label": "APYConfig",
              "offset": 0,
              "slot": "22",
              "type": "t_mapping(t_uint256,t_uint256)",
              "contract": "HouseBusiness",
              "src": "contracts\\HouseBusiness.sol:92"
            },
            {
              "label": "allMembers",
              "offset": 0,
              "slot": "23",
              "type": "t_mapping(t_address,t_bool)",
              "contract": "HouseBusiness",
              "src": "contracts\\HouseBusiness.sol:94"
            },
            {
              "label": "allHouses",
              "offset": 0,
              "slot": "24",
              "type": "t_mapping(t_uint256,t_struct(House)2798_storage)",
              "contract": "HouseBusiness",
              "src": "contracts\\HouseBusiness.sol:96"
            },
            {
              "label": "allowedList",
              "offset": 0,
              "slot": "25",
              "type": "t_mapping(t_uint256,t_mapping(t_address,t_bool))",
              "contract": "HouseBusiness",
              "src": "contracts\\HouseBusiness.sol:98"
            },
            {
              "label": "stakedNfts",
              "offset": 0,
              "slot": "26",
              "type": "t_mapping(t_address,t_array(t_struct(StakedNft)2815_storage)dyn_storage)",
              "contract": "HouseBusiness",
              "src": "contracts\\HouseBusiness.sol:104"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            },
            "t_array(t_struct(History)2832_storage)dyn_storage": {
              "label": "struct HouseBusiness.History[]",
              "numberOfBytes": "32"
            },
            "t_array(t_struct(HistoryType)2851_storage)dyn_storage": {
              "label": "struct HouseBusiness.HistoryType[]",
              "numberOfBytes": "32"
            },
            "t_array(t_struct(StakedNft)2815_storage)dyn_storage": {
              "label": "struct HouseBusiness.StakedNft[]",
              "numberOfBytes": "32"
            },
            "t_array(t_uint256)dyn_storage": {
              "label": "uint256[]",
              "numberOfBytes": "32"
            },
            "t_bool": {
              "label": "bool",
              "numberOfBytes": "1"
            },
            "t_contract(IERC20)77": {
              "label": "contract IERC20",
              "numberOfBytes": "20"
            },
            "t_contract(IMainCleanContract)4818": {
              "label": "contract IMainCleanContract",
              "numberOfBytes": "20"
            },
            "t_mapping(t_address,t_array(t_struct(StakedNft)2815_storage)dyn_storage)": {
              "label": "mapping(address => struct HouseBusiness.StakedNft[])",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_bool)": {
              "label": "mapping(address => bool)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_mapping(t_address,t_bool))": {
              "label": "mapping(address => mapping(address => bool))",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_uint256)": {
              "label": "mapping(address => uint256)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_uint256,t_address)": {
              "label": "mapping(uint256 => address)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_uint256,t_array(t_struct(History)2832_storage)dyn_storage)": {
              "label": "mapping(uint256 => struct HouseBusiness.History[])",
              "numberOfBytes": "32"
            },
            "t_mapping(t_uint256,t_mapping(t_address,t_bool))": {
              "label": "mapping(uint256 => mapping(address => bool))",
              "numberOfBytes": "32"
            },
            "t_mapping(t_uint256,t_string_storage)": {
              "label": "mapping(uint256 => string)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_uint256,t_struct(House)2798_storage)": {
              "label": "mapping(uint256 => struct HouseBusiness.House)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_uint256,t_uint256)": {
              "label": "mapping(uint256 => uint256)",
              "numberOfBytes": "32"
            },
            "t_string_storage": {
              "label": "string",
              "numberOfBytes": "32"
            },
            "t_struct(History)2832_storage": {
              "label": "struct HouseBusiness.History",
              "members": [
                {
                  "label": "hID",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "0"
                },
                {
                  "label": "contractId",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "1"
                },
                {
                  "label": "houseImg",
                  "type": "t_string_storage",
                  "offset": 0,
                  "slot": "2"
                },
                {
                  "label": "houseBrand",
                  "type": "t_string_storage",
                  "offset": 0,
                  "slot": "3"
                },
                {
                  "label": "desc",
                  "type": "t_string_storage",
                  "offset": 0,
                  "slot": "4"
                },
                {
                  "label": "history",
                  "type": "t_string_storage",
                  "offset": 0,
                  "slot": "5"
                },
                {
                  "label": "brandType",
                  "type": "t_string_storage",
                  "offset": 0,
                  "slot": "6"
                },
                {
                  "label": "yearField",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "7"
                }
              ],
              "numberOfBytes": "256"
            },
            "t_struct(HistoryType)2851_storage": {
              "label": "struct HouseBusiness.HistoryType",
              "members": [
                {
                  "label": "hID",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "0"
                },
                {
                  "label": "hLabel",
                  "type": "t_string_storage",
                  "offset": 0,
                  "slot": "1"
                },
                {
                  "label": "connectContract",
                  "type": "t_bool",
                  "offset": 0,
                  "slot": "2"
                },
                {
                  "label": "imgNeed",
                  "type": "t_bool",
                  "offset": 1,
                  "slot": "2"
                },
                {
                  "label": "brandNeed",
                  "type": "t_bool",
                  "offset": 2,
                  "slot": "2"
                },
                {
                  "label": "descNeed",
                  "type": "t_bool",
                  "offset": 3,
                  "slot": "2"
                },
                {
                  "label": "brandTypeNeed",
                  "type": "t_bool",
                  "offset": 4,
                  "slot": "2"
                },
                {
                  "label": "yearNeed",
                  "type": "t_bool",
                  "offset": 5,
                  "slot": "2"
                },
                {
                  "label": "checkMark",
                  "type": "t_bool",
                  "offset": 6,
                  "slot": "2"
                }
              ],
              "numberOfBytes": "96"
            },
            "t_struct(House)2798_storage": {
              "label": "struct HouseBusiness.House",
              "members": [
                {
                  "label": "tokenId",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "0"
                },
                {
                  "label": "tokenName",
                  "type": "t_string_storage",
                  "offset": 0,
                  "slot": "1"
                },
                {
                  "label": "tokenURI",
                  "type": "t_string_storage",
                  "offset": 0,
                  "slot": "2"
                },
                {
                  "label": "tokenType",
                  "type": "t_string_storage",
                  "offset": 0,
                  "slot": "3"
                },
                {
                  "label": "currentOwner",
                  "type": "t_address",
                  "offset": 0,
                  "slot": "4"
                },
                {
                  "label": "previousOwner",
                  "type": "t_address",
                  "offset": 0,
                  "slot": "5"
                },
                {
                  "label": "buyer",
                  "type": "t_address",
                  "offset": 0,
                  "slot": "6"
                },
                {
                  "label": "price",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "7"
                },
                {
                  "label": "numberOfTransfers",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "8"
                },
                {
                  "label": "nftPayable",
                  "type": "t_bool",
                  "offset": 0,
                  "slot": "9"
                },
                {
                  "label": "staked",
                  "type": "t_bool",
                  "offset": 1,
                  "slot": "9"
                },
                {
                  "label": "soldstatus",
                  "type": "t_bool",
                  "offset": 2,
                  "slot": "9"
                }
              ],
              "numberOfBytes": "320"
            },
            "t_struct(StakedNft)2815_storage": {
              "label": "struct HouseBusiness.StakedNft",
              "members": [
                {
                  "label": "owner",
                  "type": "t_address",
                  "offset": 0,
                  "slot": "0"
                },
                {
                  "label": "tokenId",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "1"
                },
                {
                  "label": "startedDate",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "2"
                },
                {
                  "label": "endDate",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "3"
                },
                {
                  "label": "claimDate",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "4"
                },
                {
                  "label": "stakingType",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "5"
                },
                {
                  "label": "perSecRewards",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "6"
                },
                {
                  "label": "stakingStatus",
                  "type": "t_bool",
                  "offset": 0,
                  "slot": "7"
                }
              ],
              "numberOfBytes": "256"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            }
          },
          "layoutVersion": "1.1",
          "flat": true
        }
      },
      "IMainCleanContract": {
        "src": "contracts\\interfaces\\IContract.sol:6",
        "inherit": [],
        "libraries": [],
        "methods": [
          "getContractById(uint256)",
          "transferContractOwnership(uint256,address,address)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      }
    },
    {
      "MainCleanContract": {
        "src": "contracts\\Contract.sol:6",
        "version": {
          "withMetadata": "6421e940ca2c08cec604e64c4e3802894c030e3491305b8df865d9e1c9e89aac",
          "withoutMetadata": "4b8cbb4879901533fe49280ca430f3230d2cf4cb717e76bb4a9404845cd178f8",
          "linkedWithoutMetadata": "4b8cbb4879901533fe49280ca430f3230d2cf4cb717e76bb4a9404845cd178f8"
        },
        "inherit": [],
        "libraries": [],
        "methods": [
          "(address)",
          "ccCreation(string,string,address,string,uint256,uint256,uint256,string)",
          "getAllContractsByOwner()",
          "getAllContractsBySigner()",
          "getContractById(uint256)",
          "addContractSigner(uint256,address)",
          "signContract(uint256)",
          "sendNotify(address,string,uint256)",
          "getUploadedCounter()",
          "getAllNotifies()",
          "calcDiv(uint256,uint256)",
          "toString(bytes)",
          "addressToString(address)",
          "uintToString(uint256)",
          "bytesToString(bytes32)",
          "transferContractOwnership(uint256,address,address)"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "MainCleanContract",
            "src": "contracts\\Contract.sol:52"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "ccCounter",
              "offset": 0,
              "slot": "0",
              "type": "t_uint256",
              "contract": "MainCleanContract",
              "src": "contracts\\Contract.sol:8"
            },
            {
              "label": "houseNFTAddress",
              "offset": 0,
              "slot": "1",
              "type": "t_address",
              "contract": "MainCleanContract",
              "src": "contracts\\Contract.sol:11"
            },
            {
              "label": "allCleanContracts",
              "offset": 0,
              "slot": "2",
              "type": "t_mapping(t_uint256,t_struct(CleanContract)39_storage)",
              "contract": "MainCleanContract",
              "src": "contracts\\Contract.sol:44"
            },
            {
              "label": "allContractsByOwner",
              "offset": 0,
              "slot": "3",
              "type": "t_mapping(t_address,t_array(t_uint256)dyn_storage)",
              "contract": "MainCleanContract",
              "src": "contracts\\Contract.sol:46"
            },
            {
              "label": "allContractsBySigner",
              "offset": 0,
              "slot": "4",
              "type": "t_mapping(t_address,t_array(t_uint256)dyn_storage)",
              "contract": "MainCleanContract",
              "src": "contracts\\Contract.sol:48"
            },
            {
              "label": "allNotifies",
              "offset": 0,
              "slot": "5",
              "type": "t_mapping(t_address,t_array(t_struct(Notify)52_storage)dyn_storage)",
              "contract": "MainCleanContract",
              "src": "contracts\\Contract.sol:50"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            },
            "t_array(t_struct(Notify)52_storage)dyn_storage": {
              "label": "struct MainCleanContract.Notify[]",
              "numberOfBytes": "32"
            },
            "t_array(t_uint256)dyn_storage": {
              "label": "uint256[]",
              "numberOfBytes": "32"
            },
            "t_bool": {
              "label": "bool",
              "numberOfBytes": "1"
            },
            "t_mapping(t_address,t_array(t_struct(Notify)52_storage)dyn_storage)": {
              "label": "mapping(address => struct MainCleanContract.Notify[])",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_array(t_uint256)dyn_storage)": {
              "label": "mapping(address => uint256[])",
              "numberOfBytes": "32"
            },
            "t_mapping(t_uint256,t_struct(CleanContract)39_storage)": {
              "label": "mapping(uint256 => struct MainCleanContract.CleanContract)",
              "numberOfBytes": "32"
            },
            "t_string_storage": {
              "label": "string",
              "numberOfBytes": "32"
            },
            "t_struct(CleanContract)39_storage": {
              "label": "struct MainCleanContract.CleanContract",
              "members": [
                {
                  "label": "contractId",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "0"
                },
                {
                  "label": "companyName",
                  "type": "t_string_storage",
                  "offset": 0,
                  "slot": "1"
                },
                {
                  "label": "contractType",
                  "type": "t_string_storage",
                  "offset": 0,
                  "slot": "2"
                },
                {
                  "label": "contractURI",
                  "type": "t_string_storage",
                  "offset": 0,
                  "slot": "3"
                },
                {
                  "label": "dateFrom",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "4"
                },
                {
                  "label": "dateTo",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "5"
                },
                {
                  "label": "agreedPrice",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "6"
                },
                {
                  "label": "currency",
                  "type": "t_string_storage",
                  "offset": 0,
                  "slot": "7"
                },
                {
                  "label": "creator",
                  "type": "t_address",
                  "offset": 0,
                  "slot": "8"
                },
                {
                  "label": "owner",
                  "type": "t_address",
                  "offset": 0,
                  "slot": "9"
                },
                {
                  "label": "creatorApproval",
                  "type": "t_bool",
                  "offset": 20,
                  "slot": "9"
                },
                {
                  "label": "creatorSignDate",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "10"
                },
                {
                  "label": "contractSigner",
                  "type": "t_address",
                  "offset": 0,
                  "slot": "11"
                },
                {
                  "label": "signerApproval",
                  "type": "t_bool",
                  "offset": 20,
                  "slot": "11"
                },
                {
                  "label": "signerSignDate",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "12"
                },
                {
                  "label": "status",
                  "type": "t_string_storage",
                  "offset": 0,
                  "slot": "13"
                }
              ],
              "numberOfBytes": "448"
            },
            "t_struct(Notify)52_storage": {
              "label": "struct MainCleanContract.Notify",
              "members": [
                {
                  "label": "nSender",
                  "type": "t_address",
                  "offset": 0,
                  "slot": "0"
                },
                {
                  "label": "nReceiver",
                  "type": "t_address",
                  "offset": 0,
                  "slot": "1"
                },
                {
                  "label": "ccID",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "2"
                },
                {
                  "label": "notifySentTime",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "3"
                },
                {
                  "label": "notifyContent",
                  "type": "t_string_storage",
                  "offset": 0,
                  "slot": "4"
                },
                {
                  "label": "status",
                  "type": "t_bool",
                  "offset": 0,
                  "slot": "5"
                }
              ],
              "numberOfBytes": "192"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            }
          },
          "layoutVersion": "1.1",
          "flat": true
        }
      }
    },
    {
      "ThirdParty": {
        "src": "contracts\\ThirdParty.sol:5",
        "version": {
          "withMetadata": "cbf5b2fae6668ee45b86827e485cbed39526db15e39a77a193d607720ff0015c",
          "withoutMetadata": "c7f6b899dcbca6a360ab204550ba9b4fec9f4cae1bcd2f5879cfa3965e9d550f",
          "linkedWithoutMetadata": "c7f6b899dcbca6a360ab204550ba9b4fec9f4cae1bcd2f5879cfa3965e9d550f"
        },
        "inherit": [],
        "libraries": [],
        "methods": [
          "getAllCategories()",
          "addCategory(string,uint256[])",
          "editCategory(uint256,string,uint256[])",
          "deleteCategory(uint256)",
          "getAllProperties()",
          "addProperty(string)",
          "editProperty(uint256,string)",
          "deleteProperty(uint256)",
          "getPackagesByCategory(uint256)",
          "addPackage(uint256,string,uint256,uint256,uint256,bool[])",
          "editPackage(uint256,uint256,string,uint256,uint256,uint256,bool[])",
          "deletePackage(uint256,uint256)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [
            {
              "label": "categoryCounter",
              "offset": 0,
              "slot": "0",
              "type": "t_uint256",
              "contract": "ThirdParty",
              "src": "contracts\\ThirdParty.sol:12"
            },
            {
              "label": "packageCounter",
              "offset": 0,
              "slot": "1",
              "type": "t_uint256",
              "contract": "ThirdParty",
              "src": "contracts\\ThirdParty.sol:23"
            },
            {
              "label": "propertyCounter",
              "offset": 0,
              "slot": "2",
              "type": "t_uint256",
              "contract": "ThirdParty",
              "src": "contracts\\ThirdParty.sol:29"
            },
            {
              "label": "allCategories",
              "offset": 0,
              "slot": "3",
              "type": "t_array(t_struct(Category)11_storage)dyn_storage",
              "contract": "ThirdParty",
              "src": "contracts\\ThirdParty.sol:31"
            },
            {
              "label": "allPackages",
              "offset": 0,
              "slot": "4",
              "type": "t_mapping(t_uint256,t_array(t_struct(Package)29_storage)dyn_storage)",
              "contract": "ThirdParty",
              "src": "contracts\\ThirdParty.sol:34"
            },
            {
              "label": "allProperties",
              "offset": 0,
              "slot": "5",
              "type": "t_array(t_struct(Property)36_storage)dyn_storage",
              "contract": "ThirdParty",
              "src": "contracts\\ThirdParty.sol:37"
            }
          ],
          "types": {
            "t_array(t_bool)dyn_storage": {
              "label": "bool[]",
              "numberOfBytes": "32"
            },
            "t_array(t_struct(Category)11_storage)dyn_storage": {
              "label": "struct ThirdParty.Category[]",
              "numberOfBytes": "32"
            },
            "t_array(t_struct(Package)29_storage)dyn_storage": {
              "label": "struct ThirdParty.Package[]",
              "numberOfBytes": "32"
            },
            "t_array(t_struct(Property)36_storage)dyn_storage": {
              "label": "struct ThirdParty.Property[]",
              "numberOfBytes": "32"
            },
            "t_array(t_uint256)dyn_storage": {
              "label": "uint256[]",
              "numberOfBytes": "32"
            },
            "t_bool": {
              "label": "bool",
              "numberOfBytes": "1"
            },
            "t_mapping(t_uint256,t_array(t_struct(Package)29_storage)dyn_storage)": {
              "label": "mapping(uint256 => struct ThirdParty.Package[])",
              "numberOfBytes": "32"
            },
            "t_string_storage": {
              "label": "string",
              "numberOfBytes": "32"
            },
            "t_struct(Category)11_storage": {
              "label": "struct ThirdParty.Category",
              "members": [
                {
                  "label": "categoryID",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "0"
                },
                {
                  "label": "cartegoryName",
                  "type": "t_string_storage",
                  "offset": 0,
                  "slot": "1"
                },
                {
                  "label": "properties",
                  "type": "t_array(t_uint256)dyn_storage",
                  "offset": 0,
                  "slot": "2"
                },
                {
                  "label": "visible",
                  "type": "t_bool",
                  "offset": 0,
                  "slot": "3"
                }
              ],
              "numberOfBytes": "128"
            },
            "t_struct(Package)29_storage": {
              "label": "struct ThirdParty.Package",
              "members": [
                {
                  "label": "categoryID",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "0"
                },
                {
                  "label": "packageID",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "1"
                },
                {
                  "label": "packageName",
                  "type": "t_string_storage",
                  "offset": 0,
                  "slot": "2"
                },
                {
                  "label": "price",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "3"
                },
                {
                  "label": "period",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "4"
                },
                {
                  "label": "dataLimit",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "5"
                },
                {
                  "label": "propertyVisible",
                  "type": "t_array(t_bool)dyn_storage",
                  "offset": 0,
                  "slot": "6"
                }
              ],
              "numberOfBytes": "224"
            },
            "t_struct(Property)36_storage": {
              "label": "struct ThirdParty.Property",
              "members": [
                {
                  "label": "propertyID",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "0"
                },
                {
                  "label": "propertyName",
                  "type": "t_string_storage",
                  "offset": 0,
                  "slot": "1"
                }
              ],
              "numberOfBytes": "64"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            }
          },
          "layoutVersion": "1.1",
          "flat": true
        }
      }
    },
    {
      "Context": {
        "src": "contracts\\TokenContract.sol:22",
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "HouseBusinessToken": {
        "src": "contracts\\TokenContract.sol:33",
        "version": {
          "withMetadata": "e53f4b9234e67266e4442dec09d084a17cbe6b1b4fb90d62776f0d6f370f0570",
          "withoutMetadata": "f5d2b294cac19c78c593798b4a1bae04c45c82839cbcffe3cc910bb441f21259",
          "linkedWithoutMetadata": "f5d2b294cac19c78c593798b4a1bae04c45c82839cbcffe3cc910bb441f21259"
        },
        "inherit": [
          "IERC20Metadata",
          "IERC20",
          "Context"
        ],
        "libraries": [],
        "methods": [
          "()",
          "name()",
          "symbol()",
          "decimals()",
          "totalSupply()",
          "balanceOf(address)",
          "transfer(address,uint256)",
          "allowance(address,address)",
          "approve(address,uint256)",
          "transferFrom(address,address,uint256)",
          "increaseAllowance(address,uint256)",
          "decreaseAllowance(address,uint256)",
          "_mint(address,uint256)"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "HouseBusinessToken",
            "src": "contracts\\TokenContract.sol:42"
          },
          {
            "kind": "state-variable-assignment",
            "name": "_name",
            "src": "contracts\\TokenContract.sol:37"
          },
          {
            "kind": "state-variable-assignment",
            "name": "_symbol",
            "src": "contracts\\TokenContract.sol:38"
          },
          {
            "kind": "state-variable-assignment",
            "name": "_decimals",
            "src": "contracts\\TokenContract.sol:39"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "_balances",
              "offset": 0,
              "slot": "0",
              "type": "t_mapping(t_address,t_uint256)",
              "contract": "HouseBusinessToken",
              "src": "contracts\\TokenContract.sol:34"
            },
            {
              "label": "_allowances",
              "offset": 0,
              "slot": "1",
              "type": "t_mapping(t_address,t_mapping(t_address,t_uint256))",
              "contract": "HouseBusinessToken",
              "src": "contracts\\TokenContract.sol:35"
            },
            {
              "label": "_totalSupply",
              "offset": 0,
              "slot": "2",
              "type": "t_uint256",
              "contract": "HouseBusinessToken",
              "src": "contracts\\TokenContract.sol:36"
            },
            {
              "label": "_name",
              "offset": 0,
              "slot": "3",
              "type": "t_string_storage",
              "contract": "HouseBusinessToken",
              "src": "contracts\\TokenContract.sol:37"
            },
            {
              "label": "_symbol",
              "offset": 0,
              "slot": "4",
              "type": "t_string_storage",
              "contract": "HouseBusinessToken",
              "src": "contracts\\TokenContract.sol:38"
            },
            {
              "label": "_decimals",
              "offset": 0,
              "slot": "5",
              "type": "t_uint8",
              "contract": "HouseBusinessToken",
              "src": "contracts\\TokenContract.sol:39"
            },
            {
              "label": "_owner",
              "offset": 1,
              "slot": "5",
              "type": "t_address",
              "contract": "HouseBusinessToken",
              "src": "contracts\\TokenContract.sol:40"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            },
            "t_mapping(t_address,t_mapping(t_address,t_uint256))": {
              "label": "mapping(address => mapping(address => uint256))",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_uint256)": {
              "label": "mapping(address => uint256)",
              "numberOfBytes": "32"
            },
            "t_string_storage": {
              "label": "string",
              "numberOfBytes": "32"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            },
            "t_uint8": {
              "label": "uint8",
              "numberOfBytes": "1"
            }
          },
          "layoutVersion": "1.1",
          "flat": true
        }
      },
      "IERC20": {
        "src": "contracts\\TokenContract.sol:5",
        "inherit": [],
        "libraries": [],
        "methods": [
          "totalSupply()",
          "balanceOf(address)",
          "transfer(address,uint256)",
          "allowance(address,address)",
          "approve(address,uint256)",
          "transferFrom(address,address,uint256)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "IERC20Metadata": {
        "src": "contracts\\TokenContract.sol:16",
        "inherit": [
          "IERC20"
        ],
        "libraries": [],
        "methods": [
          "name()",
          "symbol()",
          "decimals()"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      }
    },
    {
      "IHouseBusiness": {
        "src": "contracts\\interfaces\\IHouseBusiness.sol:5",
        "inherit": [],
        "libraries": [],
        "methods": [
          "collectionName()",
          "collectionNameSymbol()",
          "houseCounter()",
          "stakedCounter()",
          "soldedCounter()",
          "hTypeCounter()",
          "minPrice()",
          "maxPrice()",
          "penalty()",
          "royalty()",
          "historyTypes(uint256)",
          "houseHistories(uint256)",
          "APYtypes(uint256)",
          "APYConfig(uint256)",
          "allMembers(address)",
          "allMembers(uint256)",
          "allowedList(uint256,address)",
          "stakedNfts(address)",
          "setMinMaxHousePrice(uint256,uint256)",
          "setConfigToken(address)",
          "isMember()",
          "addMember(address)",
          "removeMember(address)",
          "tokenURI(uint256)",
          "setPayable(uint256,address,bool)",
          "mintHouse(string,string,string,string,uint256)",
          "addAllowList(uint256,address)",
          "removeAllowList(uint256,address)",
          "checkAllowedList(uint256,address)",
          "addHistory(uint256,uint256,string,string,string,string,string,uint256)",
          "getHistory(uint256)",
          "editHistory(uint256,uint256,string,string,string,string,string,uint256)",
          "getHistoryType()",
          "addOrEditHType(uint256,string,bool,bool,bool,bool,bool,bool,bool)",
          "removeHistoryType(uint256)",
          "getMinMaxNFT()",
          "getTokenOwner(uint256)",
          "buyHouseNft(uint256)",
          "sendToken(address,uint256)",
          "changeTokenPrice(uint256,uint256)",
          "getAllHouses()",
          "getAllPayableHouses()",
          "getAllMyHouses()",
          "withdrawToken(uint256)",
          "withdrawETH(uint256)",
          "setAPYConfig(uint256,uint256)",
          "getAllAPYTypes()",
          "stake(uint256,uint256)",
          "unstake(uint256)",
          "stakingFinished(uint256)",
          "totalRewards(address)",
          "claimRewards(address)",
          "getAllMyStakedNFTs()",
          "getTotalInfo()",
          "getAllAPYs()",
          "getPenalty()",
          "setPenalty(uint256)",
          "getRoyalty()",
          "setRoyalty(uint256)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      }
    },
    {
      "IPRC20": {
        "src": "contracts\\interfaces\\IPRC20.sol:4",
        "inherit": [],
        "libraries": [],
        "methods": [
          "totalSupply()",
          "balanceOf(address)",
          "transfer(address,uint256)",
          "allowance(address,address)",
          "approve(address,uint256)",
          "transferFrom(address,address,uint256)",
          "decimals()"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      }
    },
    {
      "IERC20": {
        "src": "@openzeppelin\\contracts\\token\\ERC20\\IERC20.sol:9",
        "inherit": [],
        "libraries": [],
        "methods": [
          "totalSupply()",
          "balanceOf(address)",
          "transfer(address,uint256)",
          "allowance(address,address)",
          "approve(address,uint256)",
          "transferFrom(address,address,uint256)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "ERC721": {
        "src": "@openzeppelin\\contracts\\token\\ERC721\\ERC721.sol:19",
        "version": {
          "withMetadata": "311027b738fb50ea92c84baf68eacb931adf05de03da13635a661dc9c5b03f73",
          "withoutMetadata": "9ec7f439077c3b762bc3aa6a17c55aba7a78d240190c9c7814df896455a0f780",
          "linkedWithoutMetadata": "9ec7f439077c3b762bc3aa6a17c55aba7a78d240190c9c7814df896455a0f780"
        },
        "inherit": [
          "IERC721Metadata",
          "IERC721",
          "ERC165",
          "IERC165",
          "Context"
        ],
        "libraries": [
          "Address",
          "Strings"
        ],
        "methods": [
          "(string,string)",
          "supportsInterface(bytes4)",
          "balanceOf(address)",
          "ownerOf(uint256)",
          "name()",
          "symbol()",
          "tokenURI(uint256)",
          "approve(address,uint256)",
          "getApproved(uint256)",
          "setApprovalForAll(address,bool)",
          "isApprovedForAll(address,address)",
          "transferFrom(address,address,uint256)",
          "safeTransferFrom(address,address,uint256)",
          "safeTransferFrom(address,address,uint256,bytes)"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "ERC721",
            "src": "@openzeppelin\\contracts\\token\\ERC721\\ERC721.sol:44"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "_name",
              "offset": 0,
              "slot": "0",
              "type": "t_string_storage",
              "contract": "ERC721",
              "src": "@openzeppelin\\contracts\\token\\ERC721\\ERC721.sol:24"
            },
            {
              "label": "_symbol",
              "offset": 0,
              "slot": "1",
              "type": "t_string_storage",
              "contract": "ERC721",
              "src": "@openzeppelin\\contracts\\token\\ERC721\\ERC721.sol:27"
            },
            {
              "label": "_owners",
              "offset": 0,
              "slot": "2",
              "type": "t_mapping(t_uint256,t_address)",
              "contract": "ERC721",
              "src": "@openzeppelin\\contracts\\token\\ERC721\\ERC721.sol:30"
            },
            {
              "label": "_balances",
              "offset": 0,
              "slot": "3",
              "type": "t_mapping(t_address,t_uint256)",
              "contract": "ERC721",
              "src": "@openzeppelin\\contracts\\token\\ERC721\\ERC721.sol:33"
            },
            {
              "label": "_tokenApprovals",
              "offset": 0,
              "slot": "4",
              "type": "t_mapping(t_uint256,t_address)",
              "contract": "ERC721",
              "src": "@openzeppelin\\contracts\\token\\ERC721\\ERC721.sol:36"
            },
            {
              "label": "_operatorApprovals",
              "offset": 0,
              "slot": "5",
              "type": "t_mapping(t_address,t_mapping(t_address,t_bool))",
              "contract": "ERC721",
              "src": "@openzeppelin\\contracts\\token\\ERC721\\ERC721.sol:39"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            },
            "t_bool": {
              "label": "bool",
              "numberOfBytes": "1"
            },
            "t_mapping(t_address,t_bool)": {
              "label": "mapping(address => bool)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_mapping(t_address,t_bool))": {
              "label": "mapping(address => mapping(address => bool))",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_uint256)": {
              "label": "mapping(address => uint256)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_uint256,t_address)": {
              "label": "mapping(uint256 => address)",
              "numberOfBytes": "32"
            },
            "t_string_storage": {
              "label": "string",
              "numberOfBytes": "32"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            }
          },
          "layoutVersion": "1.1",
          "flat": true
        }
      },
      "IERC721": {
        "src": "@openzeppelin\\contracts\\token\\ERC721\\IERC721.sol:11",
        "inherit": [
          "IERC165"
        ],
        "libraries": [],
        "methods": [
          "balanceOf(address)",
          "ownerOf(uint256)",
          "safeTransferFrom(address,address,uint256,bytes)",
          "safeTransferFrom(address,address,uint256)",
          "transferFrom(address,address,uint256)",
          "approve(address,uint256)",
          "setApprovalForAll(address,bool)",
          "getApproved(uint256)",
          "isApprovedForAll(address,address)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "IERC721Receiver": {
        "src": "@openzeppelin\\contracts\\token\\ERC721\\IERC721Receiver.sol:11",
        "inherit": [],
        "libraries": [],
        "methods": [
          "onERC721Received(address,address,uint256,bytes)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "ERC721URIStorage": {
        "src": "@openzeppelin\\contracts\\token\\ERC721\\extensions\\ERC721URIStorage.sol:11",
        "inherit": [
          "ERC721",
          "IERC721Metadata",
          "IERC721",
          "ERC165",
          "IERC165",
          "Context"
        ],
        "libraries": [
          "Strings"
        ],
        "methods": [
          "tokenURI(uint256)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [
            {
              "label": "_name",
              "offset": 0,
              "slot": "0",
              "type": "t_string_storage",
              "contract": "ERC721",
              "src": "@openzeppelin\\contracts\\token\\ERC721\\ERC721.sol:24"
            },
            {
              "label": "_symbol",
              "offset": 0,
              "slot": "1",
              "type": "t_string_storage",
              "contract": "ERC721",
              "src": "@openzeppelin\\contracts\\token\\ERC721\\ERC721.sol:27"
            },
            {
              "label": "_owners",
              "offset": 0,
              "slot": "2",
              "type": "t_mapping(t_uint256,t_address)",
              "contract": "ERC721",
              "src": "@openzeppelin\\contracts\\token\\ERC721\\ERC721.sol:30"
            },
            {
              "label": "_balances",
              "offset": 0,
              "slot": "3",
              "type": "t_mapping(t_address,t_uint256)",
              "contract": "ERC721",
              "src": "@openzeppelin\\contracts\\token\\ERC721\\ERC721.sol:33"
            },
            {
              "label": "_tokenApprovals",
              "offset": 0,
              "slot": "4",
              "type": "t_mapping(t_uint256,t_address)",
              "contract": "ERC721",
              "src": "@openzeppelin\\contracts\\token\\ERC721\\ERC721.sol:36"
            },
            {
              "label": "_operatorApprovals",
              "offset": 0,
              "slot": "5",
              "type": "t_mapping(t_address,t_mapping(t_address,t_bool))",
              "contract": "ERC721",
              "src": "@openzeppelin\\contracts\\token\\ERC721\\ERC721.sol:39"
            },
            {
              "label": "_tokenURIs",
              "offset": 0,
              "slot": "6",
              "type": "t_mapping(t_uint256,t_string_storage)",
              "contract": "ERC721URIStorage",
              "src": "@openzeppelin\\contracts\\token\\ERC721\\extensions\\ERC721URIStorage.sol:15"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            },
            "t_bool": {
              "label": "bool",
              "numberOfBytes": "1"
            },
            "t_mapping(t_address,t_bool)": {
              "label": "mapping(address => bool)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_mapping(t_address,t_bool))": {
              "label": "mapping(address => mapping(address => bool))",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_uint256)": {
              "label": "mapping(address => uint256)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_uint256,t_address)": {
              "label": "mapping(uint256 => address)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_uint256,t_string_storage)": {
              "label": "mapping(uint256 => string)",
              "numberOfBytes": "32"
            },
            "t_string_storage": {
              "label": "string",
              "numberOfBytes": "32"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            }
          },
          "layoutVersion": "1.1",
          "flat": true
        }
      },
      "IERC721Metadata": {
        "src": "@openzeppelin\\contracts\\token\\ERC721\\extensions\\IERC721Metadata.sol:12",
        "inherit": [
          "IERC721",
          "IERC165"
        ],
        "libraries": [],
        "methods": [
          "name()",
          "symbol()",
          "tokenURI(uint256)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "Address": {
        "src": "@openzeppelin\\contracts\\utils\\Address.sol:9",
        "version": {
          "withMetadata": "a0500f265408d7c0dbf75da3f9e44a5c2ee85e18bb1b58fe491ffcfa4ea7fd9b",
          "withoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db",
          "linkedWithoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db"
        },
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [
          {
            "kind": "delegatecall",
            "src": "@openzeppelin\\contracts\\utils\\Address.sol:185"
          }
        ],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "Context": {
        "src": "@openzeppelin\\contracts\\utils\\Context.sol:16",
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "Strings": {
        "src": "@openzeppelin\\contracts\\utils\\Strings.sol:11",
        "version": {
          "withMetadata": "c385b5200dd723f945d28b88358d79ca1b5c0f71c28cbbab9acf6d6f3fd15593",
          "withoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db",
          "linkedWithoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db"
        },
        "inherit": [],
        "libraries": [
          "Math"
        ],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "ERC165": {
        "src": "@openzeppelin\\contracts\\utils\\introspection\\ERC165.sol:22",
        "inherit": [
          "IERC165"
        ],
        "libraries": [],
        "methods": [
          "supportsInterface(bytes4)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "IERC165": {
        "src": "@openzeppelin\\contracts\\utils\\introspection\\IERC165.sol:15",
        "inherit": [],
        "libraries": [],
        "methods": [
          "supportsInterface(bytes4)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "Math": {
        "src": "@openzeppelin\\contracts\\utils\\math\\Math.sol:9",
        "version": {
          "withMetadata": "fcaf39e5e702f2902d6ef00c1def75c9800e8d2a0a78a87cf542096cafc7a4b0",
          "withoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db",
          "linkedWithoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db"
        },
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "HouseBusiness": {
        "src": "contracts\\HouseBusiness.sol:11",
        "version": {
          "withMetadata": "50bc7a3f9b8a66c9dfdd534fef50057e5a211d396a52b4261fe695df18fb7966",
          "withoutMetadata": "17492be3b30c7dab000c4e5c7f7992fdbc6ddbc57eb6d82d1628d7a9ca876b5b",
          "linkedWithoutMetadata": "17492be3b30c7dab000c4e5c7f7992fdbc6ddbc57eb6d82d1628d7a9ca876b5b"
        },
        "inherit": [
          "ERC721URIStorage",
          "ERC721",
          "IERC721Metadata",
          "IERC721",
          "ERC165",
          "IERC165",
          "Context"
        ],
        "libraries": [],
        "methods": [
          "(address)",
          "setMinMaxHousePrice(uint256,uint256)",
          "setConfigToken(address)",
          "isMember()",
          "addMember(address)",
          "removeMember(address)",
          "tokenURI(uint256)",
          "setCContractAddress(address)",
          "setPayable(uint256,address,bool)",
          "mintHouse(string,string,string,string,uint256)",
          "addAllowList(uint256,address)",
          "removeAllowList(uint256,address)",
          "checkAllowedList(uint256,address)",
          "addHistory(uint256,uint256,uint256,string,string,string,string,string,uint256)",
          "getHistory(uint256)",
          "editHistory(uint256,uint256,string,string,string,string,string,uint256)",
          "getHistoryType()",
          "addOrEditHType(uint256,string,bool,bool,bool,bool,bool,bool,bool)",
          "removeHistoryType(uint256)",
          "getMinMaxNFT()",
          "getTokenOwner(uint256)",
          "buyHouseNft(uint256)",
          "sendToken(address,uint256)",
          "changeTokenPrice(uint256,uint256)",
          "getAllHouses()",
          "getAllPayableHouses()",
          "getAllMyHouses()",
          "withdrawToken(uint256)",
          "withdrawETH(uint256)",
          "calcDiv(uint256,uint256)",
          "setAPYConfig(uint256,uint256)",
          "getAllAPYTypes()",
          "getAllMyStakedNFTs()",
          "getTotalInfo()",
          "getAllAPYs()",
          "getPenalty()",
          "setPenalty(uint256)",
          "getRoyalty()",
          "setRoyalty(uint256)"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "HouseBusiness",
            "src": "contracts\\HouseBusiness.sol:106"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "_name",
              "offset": 0,
              "slot": "0",
              "type": "t_string_storage",
              "contract": "ERC721",
              "src": "@openzeppelin\\contracts\\token\\ERC721\\ERC721.sol:24"
            },
            {
              "label": "_symbol",
              "offset": 0,
              "slot": "1",
              "type": "t_string_storage",
              "contract": "ERC721",
              "src": "@openzeppelin\\contracts\\token\\ERC721\\ERC721.sol:27"
            },
            {
              "label": "_owners",
              "offset": 0,
              "slot": "2",
              "type": "t_mapping(t_uint256,t_address)",
              "contract": "ERC721",
              "src": "@openzeppelin\\contracts\\token\\ERC721\\ERC721.sol:30"
            },
            {
              "label": "_balances",
              "offset": 0,
              "slot": "3",
              "type": "t_mapping(t_address,t_uint256)",
              "contract": "ERC721",
              "src": "@openzeppelin\\contracts\\token\\ERC721\\ERC721.sol:33"
            },
            {
              "label": "_tokenApprovals",
              "offset": 0,
              "slot": "4",
              "type": "t_mapping(t_uint256,t_address)",
              "contract": "ERC721",
              "src": "@openzeppelin\\contracts\\token\\ERC721\\ERC721.sol:36"
            },
            {
              "label": "_operatorApprovals",
              "offset": 0,
              "slot": "5",
              "type": "t_mapping(t_address,t_mapping(t_address,t_bool))",
              "contract": "ERC721",
              "src": "@openzeppelin\\contracts\\token\\ERC721\\ERC721.sol:39"
            },
            {
              "label": "_tokenURIs",
              "offset": 0,
              "slot": "6",
              "type": "t_mapping(t_uint256,t_string_storage)",
              "contract": "ERC721URIStorage",
              "src": "@openzeppelin\\contracts\\token\\ERC721\\extensions\\ERC721URIStorage.sol:15"
            },
            {
              "label": "collectionName",
              "offset": 0,
              "slot": "7",
              "type": "t_string_storage",
              "contract": "HouseBusiness",
              "src": "contracts\\HouseBusiness.sol:13"
            },
            {
              "label": "collectionNameSymbol",
              "offset": 0,
              "slot": "8",
              "type": "t_string_storage",
              "contract": "HouseBusiness",
              "src": "contracts\\HouseBusiness.sol:15"
            },
            {
              "label": "houseCounter",
              "offset": 0,
              "slot": "9",
              "type": "t_uint256",
              "contract": "HouseBusiness",
              "src": "contracts\\HouseBusiness.sol:17"
            },
            {
              "label": "stakedCounter",
              "offset": 0,
              "slot": "10",
              "type": "t_uint256",
              "contract": "HouseBusiness",
              "src": "contracts\\HouseBusiness.sol:19"
            },
            {
              "label": "soldedCounter",
              "offset": 0,
              "slot": "11",
              "type": "t_uint256",
              "contract": "HouseBusiness",
              "src": "contracts\\HouseBusiness.sol:21"
            },
            {
              "label": "hTypeCounter",
              "offset": 0,
              "slot": "12",
              "type": "t_uint256",
              "contract": "HouseBusiness",
              "src": "contracts\\HouseBusiness.sol:23"
            },
            {
              "label": "_token",
              "offset": 0,
              "slot": "13",
              "type": "t_contract(IERC20)77",
              "contract": "HouseBusiness",
              "src": "contracts\\HouseBusiness.sol:25"
            },
            {
              "label": "minPrice",
              "offset": 0,
              "slot": "14",
              "type": "t_uint256",
              "contract": "HouseBusiness",
              "src": "contracts\\HouseBusiness.sol:27"
            },
            {
              "label": "maxPrice",
              "offset": 0,
              "slot": "15",
              "type": "t_uint256",
              "contract": "HouseBusiness",
              "src": "contracts\\HouseBusiness.sol:29"
            },
            {
              "label": "penalty",
              "offset": 0,
              "slot": "16",
              "type": "t_uint256",
              "contract": "HouseBusiness",
              "src": "contracts\\HouseBusiness.sol:31"
            },
            {
              "label": "royalty",
              "offset": 0,
              "slot": "17",
              "type": "t_uint256",
              "contract": "HouseBusiness",
              "src": "contracts\\HouseBusiness.sol:33"
            },
            {
              "label": "cContract",
              "offset": 0,
              "slot": "18",
              "type": "t_contract(IMainCleanContract)4818",
              "contract": "HouseBusiness",
              "src": "contracts\\HouseBusiness.sol:35"
            },
            {
              "label": "historyTypes",
              "offset": 0,
              "slot": "19",
              "type": "t_array(t_struct(HistoryType)2851_storage)dyn_storage",
              "contract": "HouseBusiness",
              "src": "contracts\\HouseBusiness.sol:86"
            },
            {
              "label": "houseHistories",
              "offset": 0,
              "slot": "20",
              "type": "t_mapping(t_uint256,t_array(t_struct(History)2832_storage)dyn_storage)",
              "contract": "HouseBusiness",
              "src": "contracts\\HouseBusiness.sol:88"
            },
            {
              "label": "APYtypes",
              "offset": 0,
              "slot": "21",
              "type": "t_array(t_uint256)dyn_storage",
              "contract": "HouseBusiness",
              "src": "contracts\\HouseBusiness.sol:90"
            },
            {
              "label": "APYConfig",
              "offset": 0,
              "slot": "22",
              "type": "t_mapping(t_uint256,t_uint256)",
              "contract": "HouseBusiness",
              "src": "contracts\\HouseBusiness.sol:92"
            },
            {
              "label": "allMembers",
              "offset": 0,
              "slot": "23",
              "type": "t_mapping(t_address,t_bool)",
              "contract": "HouseBusiness",
              "src": "contracts\\HouseBusiness.sol:94"
            },
            {
              "label": "allHouses",
              "offset": 0,
              "slot": "24",
              "type": "t_mapping(t_uint256,t_struct(House)2798_storage)",
              "contract": "HouseBusiness",
              "src": "contracts\\HouseBusiness.sol:96"
            },
            {
              "label": "allowedList",
              "offset": 0,
              "slot": "25",
              "type": "t_mapping(t_uint256,t_mapping(t_address,t_bool))",
              "contract": "HouseBusiness",
              "src": "contracts\\HouseBusiness.sol:98"
            },
            {
              "label": "stakedNfts",
              "offset": 0,
              "slot": "26",
              "type": "t_mapping(t_address,t_array(t_struct(StakedNft)2815_storage)dyn_storage)",
              "contract": "HouseBusiness",
              "src": "contracts\\HouseBusiness.sol:104"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            },
            "t_array(t_struct(History)2832_storage)dyn_storage": {
              "label": "struct HouseBusiness.History[]",
              "numberOfBytes": "32"
            },
            "t_array(t_struct(HistoryType)2851_storage)dyn_storage": {
              "label": "struct HouseBusiness.HistoryType[]",
              "numberOfBytes": "32"
            },
            "t_array(t_struct(StakedNft)2815_storage)dyn_storage": {
              "label": "struct HouseBusiness.StakedNft[]",
              "numberOfBytes": "32"
            },
            "t_array(t_uint256)dyn_storage": {
              "label": "uint256[]",
              "numberOfBytes": "32"
            },
            "t_bool": {
              "label": "bool",
              "numberOfBytes": "1"
            },
            "t_contract(IERC20)77": {
              "label": "contract IERC20",
              "numberOfBytes": "20"
            },
            "t_contract(IMainCleanContract)4818": {
              "label": "contract IMainCleanContract",
              "numberOfBytes": "20"
            },
            "t_mapping(t_address,t_array(t_struct(StakedNft)2815_storage)dyn_storage)": {
              "label": "mapping(address => struct HouseBusiness.StakedNft[])",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_bool)": {
              "label": "mapping(address => bool)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_mapping(t_address,t_bool))": {
              "label": "mapping(address => mapping(address => bool))",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_uint256)": {
              "label": "mapping(address => uint256)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_uint256,t_address)": {
              "label": "mapping(uint256 => address)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_uint256,t_array(t_struct(History)2832_storage)dyn_storage)": {
              "label": "mapping(uint256 => struct HouseBusiness.History[])",
              "numberOfBytes": "32"
            },
            "t_mapping(t_uint256,t_mapping(t_address,t_bool))": {
              "label": "mapping(uint256 => mapping(address => bool))",
              "numberOfBytes": "32"
            },
            "t_mapping(t_uint256,t_string_storage)": {
              "label": "mapping(uint256 => string)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_uint256,t_struct(House)2798_storage)": {
              "label": "mapping(uint256 => struct HouseBusiness.House)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_uint256,t_uint256)": {
              "label": "mapping(uint256 => uint256)",
              "numberOfBytes": "32"
            },
            "t_string_storage": {
              "label": "string",
              "numberOfBytes": "32"
            },
            "t_struct(History)2832_storage": {
              "label": "struct HouseBusiness.History",
              "members": [
                {
                  "label": "hID",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "0"
                },
                {
                  "label": "contractId",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "1"
                },
                {
                  "label": "houseImg",
                  "type": "t_string_storage",
                  "offset": 0,
                  "slot": "2"
                },
                {
                  "label": "houseBrand",
                  "type": "t_string_storage",
                  "offset": 0,
                  "slot": "3"
                },
                {
                  "label": "desc",
                  "type": "t_string_storage",
                  "offset": 0,
                  "slot": "4"
                },
                {
                  "label": "history",
                  "type": "t_string_storage",
                  "offset": 0,
                  "slot": "5"
                },
                {
                  "label": "brandType",
                  "type": "t_string_storage",
                  "offset": 0,
                  "slot": "6"
                },
                {
                  "label": "yearField",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "7"
                }
              ],
              "numberOfBytes": "256"
            },
            "t_struct(HistoryType)2851_storage": {
              "label": "struct HouseBusiness.HistoryType",
              "members": [
                {
                  "label": "hID",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "0"
                },
                {
                  "label": "hLabel",
                  "type": "t_string_storage",
                  "offset": 0,
                  "slot": "1"
                },
                {
                  "label": "connectContract",
                  "type": "t_bool",
                  "offset": 0,
                  "slot": "2"
                },
                {
                  "label": "imgNeed",
                  "type": "t_bool",
                  "offset": 1,
                  "slot": "2"
                },
                {
                  "label": "brandNeed",
                  "type": "t_bool",
                  "offset": 2,
                  "slot": "2"
                },
                {
                  "label": "descNeed",
                  "type": "t_bool",
                  "offset": 3,
                  "slot": "2"
                },
                {
                  "label": "brandTypeNeed",
                  "type": "t_bool",
                  "offset": 4,
                  "slot": "2"
                },
                {
                  "label": "yearNeed",
                  "type": "t_bool",
                  "offset": 5,
                  "slot": "2"
                },
                {
                  "label": "checkMark",
                  "type": "t_bool",
                  "offset": 6,
                  "slot": "2"
                }
              ],
              "numberOfBytes": "96"
            },
            "t_struct(House)2798_storage": {
              "label": "struct HouseBusiness.House",
              "members": [
                {
                  "label": "tokenId",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "0"
                },
                {
                  "label": "tokenName",
                  "type": "t_string_storage",
                  "offset": 0,
                  "slot": "1"
                },
                {
                  "label": "tokenURI",
                  "type": "t_string_storage",
                  "offset": 0,
                  "slot": "2"
                },
                {
                  "label": "tokenType",
                  "type": "t_string_storage",
                  "offset": 0,
                  "slot": "3"
                },
                {
                  "label": "currentOwner",
                  "type": "t_address",
                  "offset": 0,
                  "slot": "4"
                },
                {
                  "label": "previousOwner",
                  "type": "t_address",
                  "offset": 0,
                  "slot": "5"
                },
                {
                  "label": "buyer",
                  "type": "t_address",
                  "offset": 0,
                  "slot": "6"
                },
                {
                  "label": "price",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "7"
                },
                {
                  "label": "numberOfTransfers",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "8"
                },
                {
                  "label": "nftPayable",
                  "type": "t_bool",
                  "offset": 0,
                  "slot": "9"
                },
                {
                  "label": "staked",
                  "type": "t_bool",
                  "offset": 1,
                  "slot": "9"
                },
                {
                  "label": "soldstatus",
                  "type": "t_bool",
                  "offset": 2,
                  "slot": "9"
                }
              ],
              "numberOfBytes": "320"
            },
            "t_struct(StakedNft)2815_storage": {
              "label": "struct HouseBusiness.StakedNft",
              "members": [
                {
                  "label": "owner",
                  "type": "t_address",
                  "offset": 0,
                  "slot": "0"
                },
                {
                  "label": "tokenId",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "1"
                },
                {
                  "label": "startedDate",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "2"
                },
                {
                  "label": "endDate",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "3"
                },
                {
                  "label": "claimDate",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "4"
                },
                {
                  "label": "stakingType",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "5"
                },
                {
                  "label": "perSecRewards",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "6"
                },
                {
                  "label": "stakingStatus",
                  "type": "t_bool",
                  "offset": 0,
                  "slot": "7"
                }
              ],
              "numberOfBytes": "256"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            }
          },
          "layoutVersion": "1.1",
          "flat": true
        }
      },
      "IMainCleanContract": {
        "src": "contracts\\interfaces\\IContract.sol:6",
        "inherit": [],
        "libraries": [],
        "methods": [
          "getContractById(uint256)",
          "transferContractOwnership(uint256,address,address)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      }
    },
    {
      "IERC20": {
        "src": "@openzeppelin\\contracts\\token\\ERC20\\IERC20.sol:9",
        "inherit": [],
        "libraries": [],
        "methods": [
          "totalSupply()",
          "balanceOf(address)",
          "transfer(address,uint256)",
          "allowance(address,address)",
          "approve(address,uint256)",
          "transferFrom(address,address,uint256)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "ERC721": {
        "src": "@openzeppelin\\contracts\\token\\ERC721\\ERC721.sol:19",
        "version": {
          "withMetadata": "311027b738fb50ea92c84baf68eacb931adf05de03da13635a661dc9c5b03f73",
          "withoutMetadata": "9ec7f439077c3b762bc3aa6a17c55aba7a78d240190c9c7814df896455a0f780",
          "linkedWithoutMetadata": "9ec7f439077c3b762bc3aa6a17c55aba7a78d240190c9c7814df896455a0f780"
        },
        "inherit": [
          "IERC721Metadata",
          "IERC721",
          "ERC165",
          "IERC165",
          "Context"
        ],
        "libraries": [
          "Address",
          "Strings"
        ],
        "methods": [
          "(string,string)",
          "supportsInterface(bytes4)",
          "balanceOf(address)",
          "ownerOf(uint256)",
          "name()",
          "symbol()",
          "tokenURI(uint256)",
          "approve(address,uint256)",
          "getApproved(uint256)",
          "setApprovalForAll(address,bool)",
          "isApprovedForAll(address,address)",
          "transferFrom(address,address,uint256)",
          "safeTransferFrom(address,address,uint256)",
          "safeTransferFrom(address,address,uint256,bytes)"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "ERC721",
            "src": "@openzeppelin\\contracts\\token\\ERC721\\ERC721.sol:44"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "_name",
              "offset": 0,
              "slot": "0",
              "type": "t_string_storage",
              "contract": "ERC721",
              "src": "@openzeppelin\\contracts\\token\\ERC721\\ERC721.sol:24"
            },
            {
              "label": "_symbol",
              "offset": 0,
              "slot": "1",
              "type": "t_string_storage",
              "contract": "ERC721",
              "src": "@openzeppelin\\contracts\\token\\ERC721\\ERC721.sol:27"
            },
            {
              "label": "_owners",
              "offset": 0,
              "slot": "2",
              "type": "t_mapping(t_uint256,t_address)",
              "contract": "ERC721",
              "src": "@openzeppelin\\contracts\\token\\ERC721\\ERC721.sol:30"
            },
            {
              "label": "_balances",
              "offset": 0,
              "slot": "3",
              "type": "t_mapping(t_address,t_uint256)",
              "contract": "ERC721",
              "src": "@openzeppelin\\contracts\\token\\ERC721\\ERC721.sol:33"
            },
            {
              "label": "_tokenApprovals",
              "offset": 0,
              "slot": "4",
              "type": "t_mapping(t_uint256,t_address)",
              "contract": "ERC721",
              "src": "@openzeppelin\\contracts\\token\\ERC721\\ERC721.sol:36"
            },
            {
              "label": "_operatorApprovals",
              "offset": 0,
              "slot": "5",
              "type": "t_mapping(t_address,t_mapping(t_address,t_bool))",
              "contract": "ERC721",
              "src": "@openzeppelin\\contracts\\token\\ERC721\\ERC721.sol:39"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            },
            "t_bool": {
              "label": "bool",
              "numberOfBytes": "1"
            },
            "t_mapping(t_address,t_bool)": {
              "label": "mapping(address => bool)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_mapping(t_address,t_bool))": {
              "label": "mapping(address => mapping(address => bool))",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_uint256)": {
              "label": "mapping(address => uint256)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_uint256,t_address)": {
              "label": "mapping(uint256 => address)",
              "numberOfBytes": "32"
            },
            "t_string_storage": {
              "label": "string",
              "numberOfBytes": "32"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            }
          },
          "layoutVersion": "1.1",
          "flat": true
        }
      },
      "IERC721": {
        "src": "@openzeppelin\\contracts\\token\\ERC721\\IERC721.sol:11",
        "inherit": [
          "IERC165"
        ],
        "libraries": [],
        "methods": [
          "balanceOf(address)",
          "ownerOf(uint256)",
          "safeTransferFrom(address,address,uint256,bytes)",
          "safeTransferFrom(address,address,uint256)",
          "transferFrom(address,address,uint256)",
          "approve(address,uint256)",
          "setApprovalForAll(address,bool)",
          "getApproved(uint256)",
          "isApprovedForAll(address,address)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "IERC721Receiver": {
        "src": "@openzeppelin\\contracts\\token\\ERC721\\IERC721Receiver.sol:11",
        "inherit": [],
        "libraries": [],
        "methods": [
          "onERC721Received(address,address,uint256,bytes)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "ERC721URIStorage": {
        "src": "@openzeppelin\\contracts\\token\\ERC721\\extensions\\ERC721URIStorage.sol:11",
        "inherit": [
          "ERC721",
          "IERC721Metadata",
          "IERC721",
          "ERC165",
          "IERC165",
          "Context"
        ],
        "libraries": [
          "Strings"
        ],
        "methods": [
          "tokenURI(uint256)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [
            {
              "label": "_name",
              "offset": 0,
              "slot": "0",
              "type": "t_string_storage",
              "contract": "ERC721",
              "src": "@openzeppelin\\contracts\\token\\ERC721\\ERC721.sol:24"
            },
            {
              "label": "_symbol",
              "offset": 0,
              "slot": "1",
              "type": "t_string_storage",
              "contract": "ERC721",
              "src": "@openzeppelin\\contracts\\token\\ERC721\\ERC721.sol:27"
            },
            {
              "label": "_owners",
              "offset": 0,
              "slot": "2",
              "type": "t_mapping(t_uint256,t_address)",
              "contract": "ERC721",
              "src": "@openzeppelin\\contracts\\token\\ERC721\\ERC721.sol:30"
            },
            {
              "label": "_balances",
              "offset": 0,
              "slot": "3",
              "type": "t_mapping(t_address,t_uint256)",
              "contract": "ERC721",
              "src": "@openzeppelin\\contracts\\token\\ERC721\\ERC721.sol:33"
            },
            {
              "label": "_tokenApprovals",
              "offset": 0,
              "slot": "4",
              "type": "t_mapping(t_uint256,t_address)",
              "contract": "ERC721",
              "src": "@openzeppelin\\contracts\\token\\ERC721\\ERC721.sol:36"
            },
            {
              "label": "_operatorApprovals",
              "offset": 0,
              "slot": "5",
              "type": "t_mapping(t_address,t_mapping(t_address,t_bool))",
              "contract": "ERC721",
              "src": "@openzeppelin\\contracts\\token\\ERC721\\ERC721.sol:39"
            },
            {
              "label": "_tokenURIs",
              "offset": 0,
              "slot": "6",
              "type": "t_mapping(t_uint256,t_string_storage)",
              "contract": "ERC721URIStorage",
              "src": "@openzeppelin\\contracts\\token\\ERC721\\extensions\\ERC721URIStorage.sol:15"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            },
            "t_bool": {
              "label": "bool",
              "numberOfBytes": "1"
            },
            "t_mapping(t_address,t_bool)": {
              "label": "mapping(address => bool)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_mapping(t_address,t_bool))": {
              "label": "mapping(address => mapping(address => bool))",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_uint256)": {
              "label": "mapping(address => uint256)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_uint256,t_address)": {
              "label": "mapping(uint256 => address)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_uint256,t_string_storage)": {
              "label": "mapping(uint256 => string)",
              "numberOfBytes": "32"
            },
            "t_string_storage": {
              "label": "string",
              "numberOfBytes": "32"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            }
          },
          "layoutVersion": "1.1",
          "flat": true
        }
      },
      "IERC721Metadata": {
        "src": "@openzeppelin\\contracts\\token\\ERC721\\extensions\\IERC721Metadata.sol:12",
        "inherit": [
          "IERC721",
          "IERC165"
        ],
        "libraries": [],
        "methods": [
          "name()",
          "symbol()",
          "tokenURI(uint256)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "Address": {
        "src": "@openzeppelin\\contracts\\utils\\Address.sol:9",
        "version": {
          "withMetadata": "a0500f265408d7c0dbf75da3f9e44a5c2ee85e18bb1b58fe491ffcfa4ea7fd9b",
          "withoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db",
          "linkedWithoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db"
        },
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [
          {
            "kind": "delegatecall",
            "src": "@openzeppelin\\contracts\\utils\\Address.sol:185"
          }
        ],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "Context": {
        "src": "@openzeppelin\\contracts\\utils\\Context.sol:16",
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "Strings": {
        "src": "@openzeppelin\\contracts\\utils\\Strings.sol:11",
        "version": {
          "withMetadata": "c385b5200dd723f945d28b88358d79ca1b5c0f71c28cbbab9acf6d6f3fd15593",
          "withoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db",
          "linkedWithoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db"
        },
        "inherit": [],
        "libraries": [
          "Math"
        ],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "ERC165": {
        "src": "@openzeppelin\\contracts\\utils\\introspection\\ERC165.sol:22",
        "inherit": [
          "IERC165"
        ],
        "libraries": [],
        "methods": [
          "supportsInterface(bytes4)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "IERC165": {
        "src": "@openzeppelin\\contracts\\utils\\introspection\\IERC165.sol:15",
        "inherit": [],
        "libraries": [],
        "methods": [
          "supportsInterface(bytes4)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "Math": {
        "src": "@openzeppelin\\contracts\\utils\\math\\Math.sol:9",
        "version": {
          "withMetadata": "fcaf39e5e702f2902d6ef00c1def75c9800e8d2a0a78a87cf542096cafc7a4b0",
          "withoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db",
          "linkedWithoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db"
        },
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "HouseBusiness": {
        "src": "contracts\\HouseBusiness.sol:11",
        "version": {
          "withMetadata": "50bc7a3f9b8a66c9dfdd534fef50057e5a211d396a52b4261fe695df18fb7966",
          "withoutMetadata": "17492be3b30c7dab000c4e5c7f7992fdbc6ddbc57eb6d82d1628d7a9ca876b5b",
          "linkedWithoutMetadata": "17492be3b30c7dab000c4e5c7f7992fdbc6ddbc57eb6d82d1628d7a9ca876b5b"
        },
        "inherit": [
          "ERC721URIStorage",
          "ERC721",
          "IERC721Metadata",
          "IERC721",
          "ERC165",
          "IERC165",
          "Context"
        ],
        "libraries": [],
        "methods": [
          "(address)",
          "setMinMaxHousePrice(uint256,uint256)",
          "setConfigToken(address)",
          "isMember()",
          "addMember(address)",
          "removeMember(address)",
          "tokenURI(uint256)",
          "setCContractAddress(address)",
          "setPayable(uint256,address,bool)",
          "mintHouse(string,string,string,string,uint256)",
          "addAllowList(uint256,address)",
          "removeAllowList(uint256,address)",
          "checkAllowedList(uint256,address)",
          "addHistory(uint256,uint256,uint256,string,string,string,string,string,uint256)",
          "getHistory(uint256)",
          "editHistory(uint256,uint256,string,string,string,string,string,uint256)",
          "getHistoryType()",
          "addOrEditHType(uint256,string,bool,bool,bool,bool,bool,bool,bool)",
          "removeHistoryType(uint256)",
          "getMinMaxNFT()",
          "getTokenOwner(uint256)",
          "buyHouseNft(uint256)",
          "sendToken(address,uint256)",
          "changeTokenPrice(uint256,uint256)",
          "getAllHouses()",
          "getAllPayableHouses()",
          "getAllMyHouses()",
          "withdrawToken(uint256)",
          "withdrawETH(uint256)",
          "calcDiv(uint256,uint256)",
          "setAPYConfig(uint256,uint256)",
          "getAllAPYTypes()",
          "getAllMyStakedNFTs()",
          "getTotalInfo()",
          "getAllAPYs()",
          "getPenalty()",
          "setPenalty(uint256)",
          "getRoyalty()",
          "setRoyalty(uint256)"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "HouseBusiness",
            "src": "contracts\\HouseBusiness.sol:106"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "_name",
              "offset": 0,
              "slot": "0",
              "type": "t_string_storage",
              "contract": "ERC721",
              "src": "@openzeppelin\\contracts\\token\\ERC721\\ERC721.sol:24"
            },
            {
              "label": "_symbol",
              "offset": 0,
              "slot": "1",
              "type": "t_string_storage",
              "contract": "ERC721",
              "src": "@openzeppelin\\contracts\\token\\ERC721\\ERC721.sol:27"
            },
            {
              "label": "_owners",
              "offset": 0,
              "slot": "2",
              "type": "t_mapping(t_uint256,t_address)",
              "contract": "ERC721",
              "src": "@openzeppelin\\contracts\\token\\ERC721\\ERC721.sol:30"
            },
            {
              "label": "_balances",
              "offset": 0,
              "slot": "3",
              "type": "t_mapping(t_address,t_uint256)",
              "contract": "ERC721",
              "src": "@openzeppelin\\contracts\\token\\ERC721\\ERC721.sol:33"
            },
            {
              "label": "_tokenApprovals",
              "offset": 0,
              "slot": "4",
              "type": "t_mapping(t_uint256,t_address)",
              "contract": "ERC721",
              "src": "@openzeppelin\\contracts\\token\\ERC721\\ERC721.sol:36"
            },
            {
              "label": "_operatorApprovals",
              "offset": 0,
              "slot": "5",
              "type": "t_mapping(t_address,t_mapping(t_address,t_bool))",
              "contract": "ERC721",
              "src": "@openzeppelin\\contracts\\token\\ERC721\\ERC721.sol:39"
            },
            {
              "label": "_tokenURIs",
              "offset": 0,
              "slot": "6",
              "type": "t_mapping(t_uint256,t_string_storage)",
              "contract": "ERC721URIStorage",
              "src": "@openzeppelin\\contracts\\token\\ERC721\\extensions\\ERC721URIStorage.sol:15"
            },
            {
              "label": "collectionName",
              "offset": 0,
              "slot": "7",
              "type": "t_string_storage",
              "contract": "HouseBusiness",
              "src": "contracts\\HouseBusiness.sol:13"
            },
            {
              "label": "collectionNameSymbol",
              "offset": 0,
              "slot": "8",
              "type": "t_string_storage",
              "contract": "HouseBusiness",
              "src": "contracts\\HouseBusiness.sol:15"
            },
            {
              "label": "houseCounter",
              "offset": 0,
              "slot": "9",
              "type": "t_uint256",
              "contract": "HouseBusiness",
              "src": "contracts\\HouseBusiness.sol:17"
            },
            {
              "label": "stakedCounter",
              "offset": 0,
              "slot": "10",
              "type": "t_uint256",
              "contract": "HouseBusiness",
              "src": "contracts\\HouseBusiness.sol:19"
            },
            {
              "label": "soldedCounter",
              "offset": 0,
              "slot": "11",
              "type": "t_uint256",
              "contract": "HouseBusiness",
              "src": "contracts\\HouseBusiness.sol:21"
            },
            {
              "label": "hTypeCounter",
              "offset": 0,
              "slot": "12",
              "type": "t_uint256",
              "contract": "HouseBusiness",
              "src": "contracts\\HouseBusiness.sol:23"
            },
            {
              "label": "_token",
              "offset": 0,
              "slot": "13",
              "type": "t_contract(IERC20)77",
              "contract": "HouseBusiness",
              "src": "contracts\\HouseBusiness.sol:25"
            },
            {
              "label": "minPrice",
              "offset": 0,
              "slot": "14",
              "type": "t_uint256",
              "contract": "HouseBusiness",
              "src": "contracts\\HouseBusiness.sol:27"
            },
            {
              "label": "maxPrice",
              "offset": 0,
              "slot": "15",
              "type": "t_uint256",
              "contract": "HouseBusiness",
              "src": "contracts\\HouseBusiness.sol:29"
            },
            {
              "label": "penalty",
              "offset": 0,
              "slot": "16",
              "type": "t_uint256",
              "contract": "HouseBusiness",
              "src": "contracts\\HouseBusiness.sol:31"
            },
            {
              "label": "royalty",
              "offset": 0,
              "slot": "17",
              "type": "t_uint256",
              "contract": "HouseBusiness",
              "src": "contracts\\HouseBusiness.sol:33"
            },
            {
              "label": "cContract",
              "offset": 0,
              "slot": "18",
              "type": "t_contract(IMainCleanContract)4818",
              "contract": "HouseBusiness",
              "src": "contracts\\HouseBusiness.sol:35"
            },
            {
              "label": "historyTypes",
              "offset": 0,
              "slot": "19",
              "type": "t_array(t_struct(HistoryType)2851_storage)dyn_storage",
              "contract": "HouseBusiness",
              "src": "contracts\\HouseBusiness.sol:86"
            },
            {
              "label": "houseHistories",
              "offset": 0,
              "slot": "20",
              "type": "t_mapping(t_uint256,t_array(t_struct(History)2832_storage)dyn_storage)",
              "contract": "HouseBusiness",
              "src": "contracts\\HouseBusiness.sol:88"
            },
            {
              "label": "APYtypes",
              "offset": 0,
              "slot": "21",
              "type": "t_array(t_uint256)dyn_storage",
              "contract": "HouseBusiness",
              "src": "contracts\\HouseBusiness.sol:90"
            },
            {
              "label": "APYConfig",
              "offset": 0,
              "slot": "22",
              "type": "t_mapping(t_uint256,t_uint256)",
              "contract": "HouseBusiness",
              "src": "contracts\\HouseBusiness.sol:92"
            },
            {
              "label": "allMembers",
              "offset": 0,
              "slot": "23",
              "type": "t_mapping(t_address,t_bool)",
              "contract": "HouseBusiness",
              "src": "contracts\\HouseBusiness.sol:94"
            },
            {
              "label": "allHouses",
              "offset": 0,
              "slot": "24",
              "type": "t_mapping(t_uint256,t_struct(House)2798_storage)",
              "contract": "HouseBusiness",
              "src": "contracts\\HouseBusiness.sol:96"
            },
            {
              "label": "allowedList",
              "offset": 0,
              "slot": "25",
              "type": "t_mapping(t_uint256,t_mapping(t_address,t_bool))",
              "contract": "HouseBusiness",
              "src": "contracts\\HouseBusiness.sol:98"
            },
            {
              "label": "stakedNfts",
              "offset": 0,
              "slot": "26",
              "type": "t_mapping(t_address,t_array(t_struct(StakedNft)2815_storage)dyn_storage)",
              "contract": "HouseBusiness",
              "src": "contracts\\HouseBusiness.sol:104"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            },
            "t_array(t_struct(History)2832_storage)dyn_storage": {
              "label": "struct HouseBusiness.History[]",
              "numberOfBytes": "32"
            },
            "t_array(t_struct(HistoryType)2851_storage)dyn_storage": {
              "label": "struct HouseBusiness.HistoryType[]",
              "numberOfBytes": "32"
            },
            "t_array(t_struct(StakedNft)2815_storage)dyn_storage": {
              "label": "struct HouseBusiness.StakedNft[]",
              "numberOfBytes": "32"
            },
            "t_array(t_uint256)dyn_storage": {
              "label": "uint256[]",
              "numberOfBytes": "32"
            },
            "t_bool": {
              "label": "bool",
              "numberOfBytes": "1"
            },
            "t_contract(IERC20)77": {
              "label": "contract IERC20",
              "numberOfBytes": "20"
            },
            "t_contract(IMainCleanContract)4818": {
              "label": "contract IMainCleanContract",
              "numberOfBytes": "20"
            },
            "t_mapping(t_address,t_array(t_struct(StakedNft)2815_storage)dyn_storage)": {
              "label": "mapping(address => struct HouseBusiness.StakedNft[])",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_bool)": {
              "label": "mapping(address => bool)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_mapping(t_address,t_bool))": {
              "label": "mapping(address => mapping(address => bool))",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_uint256)": {
              "label": "mapping(address => uint256)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_uint256,t_address)": {
              "label": "mapping(uint256 => address)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_uint256,t_array(t_struct(History)2832_storage)dyn_storage)": {
              "label": "mapping(uint256 => struct HouseBusiness.History[])",
              "numberOfBytes": "32"
            },
            "t_mapping(t_uint256,t_mapping(t_address,t_bool))": {
              "label": "mapping(uint256 => mapping(address => bool))",
              "numberOfBytes": "32"
            },
            "t_mapping(t_uint256,t_string_storage)": {
              "label": "mapping(uint256 => string)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_uint256,t_struct(House)2798_storage)": {
              "label": "mapping(uint256 => struct HouseBusiness.House)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_uint256,t_uint256)": {
              "label": "mapping(uint256 => uint256)",
              "numberOfBytes": "32"
            },
            "t_string_storage": {
              "label": "string",
              "numberOfBytes": "32"
            },
            "t_struct(History)2832_storage": {
              "label": "struct HouseBusiness.History",
              "members": [
                {
                  "label": "hID",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "0"
                },
                {
                  "label": "contractId",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "1"
                },
                {
                  "label": "houseImg",
                  "type": "t_string_storage",
                  "offset": 0,
                  "slot": "2"
                },
                {
                  "label": "houseBrand",
                  "type": "t_string_storage",
                  "offset": 0,
                  "slot": "3"
                },
                {
                  "label": "desc",
                  "type": "t_string_storage",
                  "offset": 0,
                  "slot": "4"
                },
                {
                  "label": "history",
                  "type": "t_string_storage",
                  "offset": 0,
                  "slot": "5"
                },
                {
                  "label": "brandType",
                  "type": "t_string_storage",
                  "offset": 0,
                  "slot": "6"
                },
                {
                  "label": "yearField",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "7"
                }
              ],
              "numberOfBytes": "256"
            },
            "t_struct(HistoryType)2851_storage": {
              "label": "struct HouseBusiness.HistoryType",
              "members": [
                {
                  "label": "hID",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "0"
                },
                {
                  "label": "hLabel",
                  "type": "t_string_storage",
                  "offset": 0,
                  "slot": "1"
                },
                {
                  "label": "connectContract",
                  "type": "t_bool",
                  "offset": 0,
                  "slot": "2"
                },
                {
                  "label": "imgNeed",
                  "type": "t_bool",
                  "offset": 1,
                  "slot": "2"
                },
                {
                  "label": "brandNeed",
                  "type": "t_bool",
                  "offset": 2,
                  "slot": "2"
                },
                {
                  "label": "descNeed",
                  "type": "t_bool",
                  "offset": 3,
                  "slot": "2"
                },
                {
                  "label": "brandTypeNeed",
                  "type": "t_bool",
                  "offset": 4,
                  "slot": "2"
                },
                {
                  "label": "yearNeed",
                  "type": "t_bool",
                  "offset": 5,
                  "slot": "2"
                },
                {
                  "label": "checkMark",
                  "type": "t_bool",
                  "offset": 6,
                  "slot": "2"
                }
              ],
              "numberOfBytes": "96"
            },
            "t_struct(House)2798_storage": {
              "label": "struct HouseBusiness.House",
              "members": [
                {
                  "label": "tokenId",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "0"
                },
                {
                  "label": "tokenName",
                  "type": "t_string_storage",
                  "offset": 0,
                  "slot": "1"
                },
                {
                  "label": "tokenURI",
                  "type": "t_string_storage",
                  "offset": 0,
                  "slot": "2"
                },
                {
                  "label": "tokenType",
                  "type": "t_string_storage",
                  "offset": 0,
                  "slot": "3"
                },
                {
                  "label": "currentOwner",
                  "type": "t_address",
                  "offset": 0,
                  "slot": "4"
                },
                {
                  "label": "previousOwner",
                  "type": "t_address",
                  "offset": 0,
                  "slot": "5"
                },
                {
                  "label": "buyer",
                  "type": "t_address",
                  "offset": 0,
                  "slot": "6"
                },
                {
                  "label": "price",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "7"
                },
                {
                  "label": "numberOfTransfers",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "8"
                },
                {
                  "label": "nftPayable",
                  "type": "t_bool",
                  "offset": 0,
                  "slot": "9"
                },
                {
                  "label": "staked",
                  "type": "t_bool",
                  "offset": 1,
                  "slot": "9"
                },
                {
                  "label": "soldstatus",
                  "type": "t_bool",
                  "offset": 2,
                  "slot": "9"
                }
              ],
              "numberOfBytes": "320"
            },
            "t_struct(StakedNft)2815_storage": {
              "label": "struct HouseBusiness.StakedNft",
              "members": [
                {
                  "label": "owner",
                  "type": "t_address",
                  "offset": 0,
                  "slot": "0"
                },
                {
                  "label": "tokenId",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "1"
                },
                {
                  "label": "startedDate",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "2"
                },
                {
                  "label": "endDate",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "3"
                },
                {
                  "label": "claimDate",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "4"
                },
                {
                  "label": "stakingType",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "5"
                },
                {
                  "label": "perSecRewards",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "6"
                },
                {
                  "label": "stakingStatus",
                  "type": "t_bool",
                  "offset": 0,
                  "slot": "7"
                }
              ],
              "numberOfBytes": "256"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            }
          },
          "layoutVersion": "1.1",
          "flat": true
        }
      },
      "IMainCleanContract": {
        "src": "contracts\\interfaces\\IContract.sol:6",
        "inherit": [],
        "libraries": [],
        "methods": [
          "getContractById(uint256)",
          "transferContractOwnership(uint256,address,address)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      }
    },
    {
      "MainCleanContract": {
        "src": "contracts\\Contract.sol:6",
        "version": {
          "withMetadata": "6421e940ca2c08cec604e64c4e3802894c030e3491305b8df865d9e1c9e89aac",
          "withoutMetadata": "4b8cbb4879901533fe49280ca430f3230d2cf4cb717e76bb4a9404845cd178f8",
          "linkedWithoutMetadata": "4b8cbb4879901533fe49280ca430f3230d2cf4cb717e76bb4a9404845cd178f8"
        },
        "inherit": [],
        "libraries": [],
        "methods": [
          "(address)",
          "ccCreation(string,string,address,string,uint256,uint256,uint256,string)",
          "getAllContractsByOwner()",
          "getAllContractsBySigner()",
          "getContractById(uint256)",
          "addContractSigner(uint256,address)",
          "signContract(uint256)",
          "sendNotify(address,string,uint256)",
          "getUploadedCounter()",
          "getAllNotifies()",
          "calcDiv(uint256,uint256)",
          "toString(bytes)",
          "addressToString(address)",
          "uintToString(uint256)",
          "bytesToString(bytes32)",
          "transferContractOwnership(uint256,address,address)"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "MainCleanContract",
            "src": "contracts\\Contract.sol:52"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "ccCounter",
              "offset": 0,
              "slot": "0",
              "type": "t_uint256",
              "contract": "MainCleanContract",
              "src": "contracts\\Contract.sol:8"
            },
            {
              "label": "houseNFTAddress",
              "offset": 0,
              "slot": "1",
              "type": "t_address",
              "contract": "MainCleanContract",
              "src": "contracts\\Contract.sol:11"
            },
            {
              "label": "allCleanContracts",
              "offset": 0,
              "slot": "2",
              "type": "t_mapping(t_uint256,t_struct(CleanContract)39_storage)",
              "contract": "MainCleanContract",
              "src": "contracts\\Contract.sol:44"
            },
            {
              "label": "allContractsByOwner",
              "offset": 0,
              "slot": "3",
              "type": "t_mapping(t_address,t_array(t_uint256)dyn_storage)",
              "contract": "MainCleanContract",
              "src": "contracts\\Contract.sol:46"
            },
            {
              "label": "allContractsBySigner",
              "offset": 0,
              "slot": "4",
              "type": "t_mapping(t_address,t_array(t_uint256)dyn_storage)",
              "contract": "MainCleanContract",
              "src": "contracts\\Contract.sol:48"
            },
            {
              "label": "allNotifies",
              "offset": 0,
              "slot": "5",
              "type": "t_mapping(t_address,t_array(t_struct(Notify)52_storage)dyn_storage)",
              "contract": "MainCleanContract",
              "src": "contracts\\Contract.sol:50"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            },
            "t_array(t_struct(Notify)52_storage)dyn_storage": {
              "label": "struct MainCleanContract.Notify[]",
              "numberOfBytes": "32"
            },
            "t_array(t_uint256)dyn_storage": {
              "label": "uint256[]",
              "numberOfBytes": "32"
            },
            "t_bool": {
              "label": "bool",
              "numberOfBytes": "1"
            },
            "t_mapping(t_address,t_array(t_struct(Notify)52_storage)dyn_storage)": {
              "label": "mapping(address => struct MainCleanContract.Notify[])",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_array(t_uint256)dyn_storage)": {
              "label": "mapping(address => uint256[])",
              "numberOfBytes": "32"
            },
            "t_mapping(t_uint256,t_struct(CleanContract)39_storage)": {
              "label": "mapping(uint256 => struct MainCleanContract.CleanContract)",
              "numberOfBytes": "32"
            },
            "t_string_storage": {
              "label": "string",
              "numberOfBytes": "32"
            },
            "t_struct(CleanContract)39_storage": {
              "label": "struct MainCleanContract.CleanContract",
              "members": [
                {
                  "label": "contractId",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "0"
                },
                {
                  "label": "companyName",
                  "type": "t_string_storage",
                  "offset": 0,
                  "slot": "1"
                },
                {
                  "label": "contractType",
                  "type": "t_string_storage",
                  "offset": 0,
                  "slot": "2"
                },
                {
                  "label": "contractURI",
                  "type": "t_string_storage",
                  "offset": 0,
                  "slot": "3"
                },
                {
                  "label": "dateFrom",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "4"
                },
                {
                  "label": "dateTo",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "5"
                },
                {
                  "label": "agreedPrice",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "6"
                },
                {
                  "label": "currency",
                  "type": "t_string_storage",
                  "offset": 0,
                  "slot": "7"
                },
                {
                  "label": "creator",
                  "type": "t_address",
                  "offset": 0,
                  "slot": "8"
                },
                {
                  "label": "owner",
                  "type": "t_address",
                  "offset": 0,
                  "slot": "9"
                },
                {
                  "label": "creatorApproval",
                  "type": "t_bool",
                  "offset": 20,
                  "slot": "9"
                },
                {
                  "label": "creatorSignDate",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "10"
                },
                {
                  "label": "contractSigner",
                  "type": "t_address",
                  "offset": 0,
                  "slot": "11"
                },
                {
                  "label": "signerApproval",
                  "type": "t_bool",
                  "offset": 20,
                  "slot": "11"
                },
                {
                  "label": "signerSignDate",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "12"
                },
                {
                  "label": "status",
                  "type": "t_string_storage",
                  "offset": 0,
                  "slot": "13"
                }
              ],
              "numberOfBytes": "448"
            },
            "t_struct(Notify)52_storage": {
              "label": "struct MainCleanContract.Notify",
              "members": [
                {
                  "label": "nSender",
                  "type": "t_address",
                  "offset": 0,
                  "slot": "0"
                },
                {
                  "label": "nReceiver",
                  "type": "t_address",
                  "offset": 0,
                  "slot": "1"
                },
                {
                  "label": "ccID",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "2"
                },
                {
                  "label": "notifySentTime",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "3"
                },
                {
                  "label": "notifyContent",
                  "type": "t_string_storage",
                  "offset": 0,
                  "slot": "4"
                },
                {
                  "label": "status",
                  "type": "t_bool",
                  "offset": 0,
                  "slot": "5"
                }
              ],
              "numberOfBytes": "192"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            }
          },
          "layoutVersion": "1.1",
          "flat": true
        }
      }
    },
    {
      "ThirdParty": {
        "src": "contracts\\ThirdParty.sol:5",
        "version": {
          "withMetadata": "cbf5b2fae6668ee45b86827e485cbed39526db15e39a77a193d607720ff0015c",
          "withoutMetadata": "c7f6b899dcbca6a360ab204550ba9b4fec9f4cae1bcd2f5879cfa3965e9d550f",
          "linkedWithoutMetadata": "c7f6b899dcbca6a360ab204550ba9b4fec9f4cae1bcd2f5879cfa3965e9d550f"
        },
        "inherit": [],
        "libraries": [],
        "methods": [
          "getAllCategories()",
          "addCategory(string,uint256[])",
          "editCategory(uint256,string,uint256[])",
          "deleteCategory(uint256)",
          "getAllProperties()",
          "addProperty(string)",
          "editProperty(uint256,string)",
          "deleteProperty(uint256)",
          "getPackagesByCategory(uint256)",
          "addPackage(uint256,string,uint256,uint256,uint256,bool[])",
          "editPackage(uint256,uint256,string,uint256,uint256,uint256,bool[])",
          "deletePackage(uint256,uint256)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [
            {
              "label": "categoryCounter",
              "offset": 0,
              "slot": "0",
              "type": "t_uint256",
              "contract": "ThirdParty",
              "src": "contracts\\ThirdParty.sol:12"
            },
            {
              "label": "packageCounter",
              "offset": 0,
              "slot": "1",
              "type": "t_uint256",
              "contract": "ThirdParty",
              "src": "contracts\\ThirdParty.sol:23"
            },
            {
              "label": "propertyCounter",
              "offset": 0,
              "slot": "2",
              "type": "t_uint256",
              "contract": "ThirdParty",
              "src": "contracts\\ThirdParty.sol:29"
            },
            {
              "label": "allCategories",
              "offset": 0,
              "slot": "3",
              "type": "t_array(t_struct(Category)11_storage)dyn_storage",
              "contract": "ThirdParty",
              "src": "contracts\\ThirdParty.sol:31"
            },
            {
              "label": "allPackages",
              "offset": 0,
              "slot": "4",
              "type": "t_mapping(t_uint256,t_array(t_struct(Package)29_storage)dyn_storage)",
              "contract": "ThirdParty",
              "src": "contracts\\ThirdParty.sol:34"
            },
            {
              "label": "allProperties",
              "offset": 0,
              "slot": "5",
              "type": "t_array(t_struct(Property)36_storage)dyn_storage",
              "contract": "ThirdParty",
              "src": "contracts\\ThirdParty.sol:37"
            }
          ],
          "types": {
            "t_array(t_bool)dyn_storage": {
              "label": "bool[]",
              "numberOfBytes": "32"
            },
            "t_array(t_struct(Category)11_storage)dyn_storage": {
              "label": "struct ThirdParty.Category[]",
              "numberOfBytes": "32"
            },
            "t_array(t_struct(Package)29_storage)dyn_storage": {
              "label": "struct ThirdParty.Package[]",
              "numberOfBytes": "32"
            },
            "t_array(t_struct(Property)36_storage)dyn_storage": {
              "label": "struct ThirdParty.Property[]",
              "numberOfBytes": "32"
            },
            "t_array(t_uint256)dyn_storage": {
              "label": "uint256[]",
              "numberOfBytes": "32"
            },
            "t_bool": {
              "label": "bool",
              "numberOfBytes": "1"
            },
            "t_mapping(t_uint256,t_array(t_struct(Package)29_storage)dyn_storage)": {
              "label": "mapping(uint256 => struct ThirdParty.Package[])",
              "numberOfBytes": "32"
            },
            "t_string_storage": {
              "label": "string",
              "numberOfBytes": "32"
            },
            "t_struct(Category)11_storage": {
              "label": "struct ThirdParty.Category",
              "members": [
                {
                  "label": "categoryID",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "0"
                },
                {
                  "label": "cartegoryName",
                  "type": "t_string_storage",
                  "offset": 0,
                  "slot": "1"
                },
                {
                  "label": "properties",
                  "type": "t_array(t_uint256)dyn_storage",
                  "offset": 0,
                  "slot": "2"
                },
                {
                  "label": "visible",
                  "type": "t_bool",
                  "offset": 0,
                  "slot": "3"
                }
              ],
              "numberOfBytes": "128"
            },
            "t_struct(Package)29_storage": {
              "label": "struct ThirdParty.Package",
              "members": [
                {
                  "label": "categoryID",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "0"
                },
                {
                  "label": "packageID",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "1"
                },
                {
                  "label": "packageName",
                  "type": "t_string_storage",
                  "offset": 0,
                  "slot": "2"
                },
                {
                  "label": "price",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "3"
                },
                {
                  "label": "period",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "4"
                },
                {
                  "label": "dataLimit",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "5"
                },
                {
                  "label": "propertyVisible",
                  "type": "t_array(t_bool)dyn_storage",
                  "offset": 0,
                  "slot": "6"
                }
              ],
              "numberOfBytes": "224"
            },
            "t_struct(Property)36_storage": {
              "label": "struct ThirdParty.Property",
              "members": [
                {
                  "label": "propertyID",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "0"
                },
                {
                  "label": "propertyName",
                  "type": "t_string_storage",
                  "offset": 0,
                  "slot": "1"
                }
              ],
              "numberOfBytes": "64"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            }
          },
          "layoutVersion": "1.1",
          "flat": true
        }
      }
    },
    {
      "Context": {
        "src": "contracts\\TokenContract.sol:22",
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "HouseBusinessToken": {
        "src": "contracts\\TokenContract.sol:33",
        "version": {
          "withMetadata": "e53f4b9234e67266e4442dec09d084a17cbe6b1b4fb90d62776f0d6f370f0570",
          "withoutMetadata": "f5d2b294cac19c78c593798b4a1bae04c45c82839cbcffe3cc910bb441f21259",
          "linkedWithoutMetadata": "f5d2b294cac19c78c593798b4a1bae04c45c82839cbcffe3cc910bb441f21259"
        },
        "inherit": [
          "IERC20Metadata",
          "IERC20",
          "Context"
        ],
        "libraries": [],
        "methods": [
          "()",
          "name()",
          "symbol()",
          "decimals()",
          "totalSupply()",
          "balanceOf(address)",
          "transfer(address,uint256)",
          "allowance(address,address)",
          "approve(address,uint256)",
          "transferFrom(address,address,uint256)",
          "increaseAllowance(address,uint256)",
          "decreaseAllowance(address,uint256)",
          "_mint(address,uint256)"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "HouseBusinessToken",
            "src": "contracts\\TokenContract.sol:42"
          },
          {
            "kind": "state-variable-assignment",
            "name": "_name",
            "src": "contracts\\TokenContract.sol:37"
          },
          {
            "kind": "state-variable-assignment",
            "name": "_symbol",
            "src": "contracts\\TokenContract.sol:38"
          },
          {
            "kind": "state-variable-assignment",
            "name": "_decimals",
            "src": "contracts\\TokenContract.sol:39"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "_balances",
              "offset": 0,
              "slot": "0",
              "type": "t_mapping(t_address,t_uint256)",
              "contract": "HouseBusinessToken",
              "src": "contracts\\TokenContract.sol:34"
            },
            {
              "label": "_allowances",
              "offset": 0,
              "slot": "1",
              "type": "t_mapping(t_address,t_mapping(t_address,t_uint256))",
              "contract": "HouseBusinessToken",
              "src": "contracts\\TokenContract.sol:35"
            },
            {
              "label": "_totalSupply",
              "offset": 0,
              "slot": "2",
              "type": "t_uint256",
              "contract": "HouseBusinessToken",
              "src": "contracts\\TokenContract.sol:36"
            },
            {
              "label": "_name",
              "offset": 0,
              "slot": "3",
              "type": "t_string_storage",
              "contract": "HouseBusinessToken",
              "src": "contracts\\TokenContract.sol:37"
            },
            {
              "label": "_symbol",
              "offset": 0,
              "slot": "4",
              "type": "t_string_storage",
              "contract": "HouseBusinessToken",
              "src": "contracts\\TokenContract.sol:38"
            },
            {
              "label": "_decimals",
              "offset": 0,
              "slot": "5",
              "type": "t_uint8",
              "contract": "HouseBusinessToken",
              "src": "contracts\\TokenContract.sol:39"
            },
            {
              "label": "_owner",
              "offset": 1,
              "slot": "5",
              "type": "t_address",
              "contract": "HouseBusinessToken",
              "src": "contracts\\TokenContract.sol:40"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            },
            "t_mapping(t_address,t_mapping(t_address,t_uint256))": {
              "label": "mapping(address => mapping(address => uint256))",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_uint256)": {
              "label": "mapping(address => uint256)",
              "numberOfBytes": "32"
            },
            "t_string_storage": {
              "label": "string",
              "numberOfBytes": "32"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            },
            "t_uint8": {
              "label": "uint8",
              "numberOfBytes": "1"
            }
          },
          "layoutVersion": "1.1",
          "flat": true
        }
      },
      "IERC20": {
        "src": "contracts\\TokenContract.sol:5",
        "inherit": [],
        "libraries": [],
        "methods": [
          "totalSupply()",
          "balanceOf(address)",
          "transfer(address,uint256)",
          "allowance(address,address)",
          "approve(address,uint256)",
          "transferFrom(address,address,uint256)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "IERC20Metadata": {
        "src": "contracts\\TokenContract.sol:16",
        "inherit": [
          "IERC20"
        ],
        "libraries": [],
        "methods": [
          "name()",
          "symbol()",
          "decimals()"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      }
    },
    {
      "IHouseBusiness": {
        "src": "contracts\\interfaces\\IHouseBusiness.sol:5",
        "inherit": [],
        "libraries": [],
        "methods": [
          "collectionName()",
          "collectionNameSymbol()",
          "houseCounter()",
          "stakedCounter()",
          "soldedCounter()",
          "hTypeCounter()",
          "minPrice()",
          "maxPrice()",
          "penalty()",
          "royalty()",
          "historyTypes(uint256)",
          "houseHistories(uint256)",
          "APYtypes(uint256)",
          "APYConfig(uint256)",
          "allMembers(address)",
          "allMembers(uint256)",
          "allowedList(uint256,address)",
          "stakedNfts(address)",
          "setMinMaxHousePrice(uint256,uint256)",
          "setConfigToken(address)",
          "isMember()",
          "addMember(address)",
          "removeMember(address)",
          "tokenURI(uint256)",
          "setPayable(uint256,address,bool)",
          "mintHouse(string,string,string,string,uint256)",
          "addAllowList(uint256,address)",
          "removeAllowList(uint256,address)",
          "checkAllowedList(uint256,address)",
          "addHistory(uint256,uint256,string,string,string,string,string,uint256)",
          "getHistory(uint256)",
          "editHistory(uint256,uint256,string,string,string,string,string,uint256)",
          "getHistoryType()",
          "addOrEditHType(uint256,string,bool,bool,bool,bool,bool,bool,bool)",
          "removeHistoryType(uint256)",
          "getMinMaxNFT()",
          "getTokenOwner(uint256)",
          "buyHouseNft(uint256)",
          "sendToken(address,uint256)",
          "changeTokenPrice(uint256,uint256)",
          "getAllHouses()",
          "getAllPayableHouses()",
          "getAllMyHouses()",
          "withdrawToken(uint256)",
          "withdrawETH(uint256)",
          "setAPYConfig(uint256,uint256)",
          "getAllAPYTypes()",
          "stake(uint256,uint256)",
          "unstake(uint256)",
          "stakingFinished(uint256)",
          "totalRewards(address)",
          "claimRewards(address)",
          "getAllMyStakedNFTs()",
          "getTotalInfo()",
          "getAllAPYs()",
          "getPenalty()",
          "setPenalty(uint256)",
          "getRoyalty()",
          "setRoyalty(uint256)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      }
    },
    {
      "IPRC20": {
        "src": "contracts\\interfaces\\IPRC20.sol:4",
        "inherit": [],
        "libraries": [],
        "methods": [
          "totalSupply()",
          "balanceOf(address)",
          "transfer(address,uint256)",
          "allowance(address,address)",
          "approve(address,uint256)",
          "transferFrom(address,address,uint256)",
          "decimals()"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      }
    },
    {
      "MainCleanContract": {
        "src": "contracts\\Contract.sol:6",
        "version": {
          "withMetadata": "3ecaca4d3a46abcb1e47a72bf95aee01e232c46fc3b61f0eb73812856de846ee",
          "withoutMetadata": "bf3a337067446ab9636e3933eae421115dcaeac061c92d2287f5e3c88aaf7fb0",
          "linkedWithoutMetadata": "bf3a337067446ab9636e3933eae421115dcaeac061c92d2287f5e3c88aaf7fb0"
        },
        "inherit": [],
        "libraries": [],
        "methods": [
          "(address)",
          "ccCreation(string,string,address,string,uint256,uint256,uint256,string)",
          "getAllContractsByOwner()",
          "getAllContractsBySigner()",
          "addContractSigner(uint256,address)",
          "signContract(uint256)",
          "sendNotify(address,string,uint256)",
          "getUploadedCounter()",
          "getAllNotifies()",
          "calcDiv(uint256,uint256)",
          "toString(bytes)",
          "addressToString(address)",
          "uintToString(uint256)",
          "bytesToString(bytes32)",
          "transferContractOwnership(uint256,address,address)"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "MainCleanContract",
            "src": "contracts\\Contract.sol:52"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "ccCounter",
              "offset": 0,
              "slot": "0",
              "type": "t_uint256",
              "contract": "MainCleanContract",
              "src": "contracts\\Contract.sol:8"
            },
            {
              "label": "houseNFTAddress",
              "offset": 0,
              "slot": "1",
              "type": "t_address",
              "contract": "MainCleanContract",
              "src": "contracts\\Contract.sol:11"
            },
            {
              "label": "allCleanContracts",
              "offset": 0,
              "slot": "2",
              "type": "t_mapping(t_uint256,t_struct(CleanContract)39_storage)",
              "contract": "MainCleanContract",
              "src": "contracts\\Contract.sol:44"
            },
            {
              "label": "allContractsByOwner",
              "offset": 0,
              "slot": "3",
              "type": "t_mapping(t_address,t_array(t_uint256)dyn_storage)",
              "contract": "MainCleanContract",
              "src": "contracts\\Contract.sol:46"
            },
            {
              "label": "allContractsBySigner",
              "offset": 0,
              "slot": "4",
              "type": "t_mapping(t_address,t_array(t_uint256)dyn_storage)",
              "contract": "MainCleanContract",
              "src": "contracts\\Contract.sol:48"
            },
            {
              "label": "allNotifies",
              "offset": 0,
              "slot": "5",
              "type": "t_mapping(t_address,t_array(t_struct(Notify)52_storage)dyn_storage)",
              "contract": "MainCleanContract",
              "src": "contracts\\Contract.sol:50"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            },
            "t_array(t_struct(Notify)52_storage)dyn_storage": {
              "label": "struct MainCleanContract.Notify[]",
              "numberOfBytes": "32"
            },
            "t_array(t_uint256)dyn_storage": {
              "label": "uint256[]",
              "numberOfBytes": "32"
            },
            "t_bool": {
              "label": "bool",
              "numberOfBytes": "1"
            },
            "t_mapping(t_address,t_array(t_struct(Notify)52_storage)dyn_storage)": {
              "label": "mapping(address => struct MainCleanContract.Notify[])",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_array(t_uint256)dyn_storage)": {
              "label": "mapping(address => uint256[])",
              "numberOfBytes": "32"
            },
            "t_mapping(t_uint256,t_struct(CleanContract)39_storage)": {
              "label": "mapping(uint256 => struct MainCleanContract.CleanContract)",
              "numberOfBytes": "32"
            },
            "t_string_storage": {
              "label": "string",
              "numberOfBytes": "32"
            },
            "t_struct(CleanContract)39_storage": {
              "label": "struct MainCleanContract.CleanContract",
              "members": [
                {
                  "label": "contractId",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "0"
                },
                {
                  "label": "companyName",
                  "type": "t_string_storage",
                  "offset": 0,
                  "slot": "1"
                },
                {
                  "label": "contractType",
                  "type": "t_string_storage",
                  "offset": 0,
                  "slot": "2"
                },
                {
                  "label": "contractURI",
                  "type": "t_string_storage",
                  "offset": 0,
                  "slot": "3"
                },
                {
                  "label": "dateFrom",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "4"
                },
                {
                  "label": "dateTo",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "5"
                },
                {
                  "label": "agreedPrice",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "6"
                },
                {
                  "label": "currency",
                  "type": "t_string_storage",
                  "offset": 0,
                  "slot": "7"
                },
                {
                  "label": "creator",
                  "type": "t_address",
                  "offset": 0,
                  "slot": "8"
                },
                {
                  "label": "owner",
                  "type": "t_address",
                  "offset": 0,
                  "slot": "9"
                },
                {
                  "label": "creatorApproval",
                  "type": "t_bool",
                  "offset": 20,
                  "slot": "9"
                },
                {
                  "label": "creatorSignDate",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "10"
                },
                {
                  "label": "contractSigner",
                  "type": "t_address",
                  "offset": 0,
                  "slot": "11"
                },
                {
                  "label": "signerApproval",
                  "type": "t_bool",
                  "offset": 20,
                  "slot": "11"
                },
                {
                  "label": "signerSignDate",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "12"
                },
                {
                  "label": "status",
                  "type": "t_string_storage",
                  "offset": 0,
                  "slot": "13"
                }
              ],
              "numberOfBytes": "448"
            },
            "t_struct(Notify)52_storage": {
              "label": "struct MainCleanContract.Notify",
              "members": [
                {
                  "label": "nSender",
                  "type": "t_address",
                  "offset": 0,
                  "slot": "0"
                },
                {
                  "label": "nReceiver",
                  "type": "t_address",
                  "offset": 0,
                  "slot": "1"
                },
                {
                  "label": "ccID",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "2"
                },
                {
                  "label": "notifySentTime",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "3"
                },
                {
                  "label": "notifyContent",
                  "type": "t_string_storage",
                  "offset": 0,
                  "slot": "4"
                },
                {
                  "label": "status",
                  "type": "t_bool",
                  "offset": 0,
                  "slot": "5"
                }
              ],
              "numberOfBytes": "192"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            }
          },
          "layoutVersion": "1.1",
          "flat": true
        }
      }
    },
    {
      "IERC20": {
        "src": "@openzeppelin\\contracts\\token\\ERC20\\IERC20.sol:9",
        "inherit": [],
        "libraries": [],
        "methods": [
          "totalSupply()",
          "balanceOf(address)",
          "transfer(address,uint256)",
          "allowance(address,address)",
          "approve(address,uint256)",
          "transferFrom(address,address,uint256)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "ERC721": {
        "src": "@openzeppelin\\contracts\\token\\ERC721\\ERC721.sol:19",
        "version": {
          "withMetadata": "311027b738fb50ea92c84baf68eacb931adf05de03da13635a661dc9c5b03f73",
          "withoutMetadata": "9ec7f439077c3b762bc3aa6a17c55aba7a78d240190c9c7814df896455a0f780",
          "linkedWithoutMetadata": "9ec7f439077c3b762bc3aa6a17c55aba7a78d240190c9c7814df896455a0f780"
        },
        "inherit": [
          "IERC721Metadata",
          "IERC721",
          "ERC165",
          "IERC165",
          "Context"
        ],
        "libraries": [
          "Address",
          "Strings"
        ],
        "methods": [
          "(string,string)",
          "supportsInterface(bytes4)",
          "balanceOf(address)",
          "ownerOf(uint256)",
          "name()",
          "symbol()",
          "tokenURI(uint256)",
          "approve(address,uint256)",
          "getApproved(uint256)",
          "setApprovalForAll(address,bool)",
          "isApprovedForAll(address,address)",
          "transferFrom(address,address,uint256)",
          "safeTransferFrom(address,address,uint256)",
          "safeTransferFrom(address,address,uint256,bytes)"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "ERC721",
            "src": "@openzeppelin\\contracts\\token\\ERC721\\ERC721.sol:44"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "_name",
              "offset": 0,
              "slot": "0",
              "type": "t_string_storage",
              "contract": "ERC721",
              "src": "@openzeppelin\\contracts\\token\\ERC721\\ERC721.sol:24"
            },
            {
              "label": "_symbol",
              "offset": 0,
              "slot": "1",
              "type": "t_string_storage",
              "contract": "ERC721",
              "src": "@openzeppelin\\contracts\\token\\ERC721\\ERC721.sol:27"
            },
            {
              "label": "_owners",
              "offset": 0,
              "slot": "2",
              "type": "t_mapping(t_uint256,t_address)",
              "contract": "ERC721",
              "src": "@openzeppelin\\contracts\\token\\ERC721\\ERC721.sol:30"
            },
            {
              "label": "_balances",
              "offset": 0,
              "slot": "3",
              "type": "t_mapping(t_address,t_uint256)",
              "contract": "ERC721",
              "src": "@openzeppelin\\contracts\\token\\ERC721\\ERC721.sol:33"
            },
            {
              "label": "_tokenApprovals",
              "offset": 0,
              "slot": "4",
              "type": "t_mapping(t_uint256,t_address)",
              "contract": "ERC721",
              "src": "@openzeppelin\\contracts\\token\\ERC721\\ERC721.sol:36"
            },
            {
              "label": "_operatorApprovals",
              "offset": 0,
              "slot": "5",
              "type": "t_mapping(t_address,t_mapping(t_address,t_bool))",
              "contract": "ERC721",
              "src": "@openzeppelin\\contracts\\token\\ERC721\\ERC721.sol:39"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            },
            "t_bool": {
              "label": "bool",
              "numberOfBytes": "1"
            },
            "t_mapping(t_address,t_bool)": {
              "label": "mapping(address => bool)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_mapping(t_address,t_bool))": {
              "label": "mapping(address => mapping(address => bool))",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_uint256)": {
              "label": "mapping(address => uint256)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_uint256,t_address)": {
              "label": "mapping(uint256 => address)",
              "numberOfBytes": "32"
            },
            "t_string_storage": {
              "label": "string",
              "numberOfBytes": "32"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            }
          },
          "layoutVersion": "1.1",
          "flat": true
        }
      },
      "IERC721": {
        "src": "@openzeppelin\\contracts\\token\\ERC721\\IERC721.sol:11",
        "inherit": [
          "IERC165"
        ],
        "libraries": [],
        "methods": [
          "balanceOf(address)",
          "ownerOf(uint256)",
          "safeTransferFrom(address,address,uint256,bytes)",
          "safeTransferFrom(address,address,uint256)",
          "transferFrom(address,address,uint256)",
          "approve(address,uint256)",
          "setApprovalForAll(address,bool)",
          "getApproved(uint256)",
          "isApprovedForAll(address,address)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "IERC721Receiver": {
        "src": "@openzeppelin\\contracts\\token\\ERC721\\IERC721Receiver.sol:11",
        "inherit": [],
        "libraries": [],
        "methods": [
          "onERC721Received(address,address,uint256,bytes)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "ERC721URIStorage": {
        "src": "@openzeppelin\\contracts\\token\\ERC721\\extensions\\ERC721URIStorage.sol:11",
        "inherit": [
          "ERC721",
          "IERC721Metadata",
          "IERC721",
          "ERC165",
          "IERC165",
          "Context"
        ],
        "libraries": [
          "Strings"
        ],
        "methods": [
          "tokenURI(uint256)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [
            {
              "label": "_name",
              "offset": 0,
              "slot": "0",
              "type": "t_string_storage",
              "contract": "ERC721",
              "src": "@openzeppelin\\contracts\\token\\ERC721\\ERC721.sol:24"
            },
            {
              "label": "_symbol",
              "offset": 0,
              "slot": "1",
              "type": "t_string_storage",
              "contract": "ERC721",
              "src": "@openzeppelin\\contracts\\token\\ERC721\\ERC721.sol:27"
            },
            {
              "label": "_owners",
              "offset": 0,
              "slot": "2",
              "type": "t_mapping(t_uint256,t_address)",
              "contract": "ERC721",
              "src": "@openzeppelin\\contracts\\token\\ERC721\\ERC721.sol:30"
            },
            {
              "label": "_balances",
              "offset": 0,
              "slot": "3",
              "type": "t_mapping(t_address,t_uint256)",
              "contract": "ERC721",
              "src": "@openzeppelin\\contracts\\token\\ERC721\\ERC721.sol:33"
            },
            {
              "label": "_tokenApprovals",
              "offset": 0,
              "slot": "4",
              "type": "t_mapping(t_uint256,t_address)",
              "contract": "ERC721",
              "src": "@openzeppelin\\contracts\\token\\ERC721\\ERC721.sol:36"
            },
            {
              "label": "_operatorApprovals",
              "offset": 0,
              "slot": "5",
              "type": "t_mapping(t_address,t_mapping(t_address,t_bool))",
              "contract": "ERC721",
              "src": "@openzeppelin\\contracts\\token\\ERC721\\ERC721.sol:39"
            },
            {
              "label": "_tokenURIs",
              "offset": 0,
              "slot": "6",
              "type": "t_mapping(t_uint256,t_string_storage)",
              "contract": "ERC721URIStorage",
              "src": "@openzeppelin\\contracts\\token\\ERC721\\extensions\\ERC721URIStorage.sol:15"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            },
            "t_bool": {
              "label": "bool",
              "numberOfBytes": "1"
            },
            "t_mapping(t_address,t_bool)": {
              "label": "mapping(address => bool)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_mapping(t_address,t_bool))": {
              "label": "mapping(address => mapping(address => bool))",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_uint256)": {
              "label": "mapping(address => uint256)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_uint256,t_address)": {
              "label": "mapping(uint256 => address)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_uint256,t_string_storage)": {
              "label": "mapping(uint256 => string)",
              "numberOfBytes": "32"
            },
            "t_string_storage": {
              "label": "string",
              "numberOfBytes": "32"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            }
          },
          "layoutVersion": "1.1",
          "flat": true
        }
      },
      "IERC721Metadata": {
        "src": "@openzeppelin\\contracts\\token\\ERC721\\extensions\\IERC721Metadata.sol:12",
        "inherit": [
          "IERC721",
          "IERC165"
        ],
        "libraries": [],
        "methods": [
          "name()",
          "symbol()",
          "tokenURI(uint256)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "Address": {
        "src": "@openzeppelin\\contracts\\utils\\Address.sol:9",
        "version": {
          "withMetadata": "a0500f265408d7c0dbf75da3f9e44a5c2ee85e18bb1b58fe491ffcfa4ea7fd9b",
          "withoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db",
          "linkedWithoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db"
        },
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [
          {
            "kind": "delegatecall",
            "src": "@openzeppelin\\contracts\\utils\\Address.sol:185"
          }
        ],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "Context": {
        "src": "@openzeppelin\\contracts\\utils\\Context.sol:16",
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "Strings": {
        "src": "@openzeppelin\\contracts\\utils\\Strings.sol:11",
        "version": {
          "withMetadata": "c385b5200dd723f945d28b88358d79ca1b5c0f71c28cbbab9acf6d6f3fd15593",
          "withoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db",
          "linkedWithoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db"
        },
        "inherit": [],
        "libraries": [
          "Math"
        ],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "ERC165": {
        "src": "@openzeppelin\\contracts\\utils\\introspection\\ERC165.sol:22",
        "inherit": [
          "IERC165"
        ],
        "libraries": [],
        "methods": [
          "supportsInterface(bytes4)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "IERC165": {
        "src": "@openzeppelin\\contracts\\utils\\introspection\\IERC165.sol:15",
        "inherit": [],
        "libraries": [],
        "methods": [
          "supportsInterface(bytes4)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "Math": {
        "src": "@openzeppelin\\contracts\\utils\\math\\Math.sol:9",
        "version": {
          "withMetadata": "fcaf39e5e702f2902d6ef00c1def75c9800e8d2a0a78a87cf542096cafc7a4b0",
          "withoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db",
          "linkedWithoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db"
        },
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "HouseBusiness": {
        "src": "contracts\\HouseBusiness.sol:11",
        "version": {
          "withMetadata": "5622414cb2e40a3b7ea78f0086f8389e2d5a0827805d3cb1b2c8d3a3efb9d794",
          "withoutMetadata": "c220ec01efe625ab93e1158492e4e853e6256833ade636ebcf870cd4a6cd50e5",
          "linkedWithoutMetadata": "c220ec01efe625ab93e1158492e4e853e6256833ade636ebcf870cd4a6cd50e5"
        },
        "inherit": [
          "ERC721URIStorage",
          "ERC721",
          "IERC721Metadata",
          "IERC721",
          "ERC165",
          "IERC165",
          "Context"
        ],
        "libraries": [],
        "methods": [
          "(address)",
          "setMinMaxHousePrice(uint256,uint256)",
          "setConfigToken(address)",
          "isMember()",
          "addMember(address)",
          "removeMember(address)",
          "tokenURI(uint256)",
          "setCContractAddress(address)",
          "setPayable(uint256,address,bool)",
          "mintHouse(string,string,string,string,uint256)",
          "addAllowList(uint256,address)",
          "removeAllowList(uint256,address)",
          "checkAllowedList(uint256,address)",
          "addHistory(uint256,uint256,uint256,string,string,string,string,string,uint256)",
          "getHistory(uint256)",
          "editHistory(uint256,uint256,string,string,string,string,string,uint256)",
          "getHistoryType()",
          "addOrEditHType(uint256,string,bool,bool,bool,bool,bool,bool,bool)",
          "removeHistoryType(uint256)",
          "getMinMaxNFT()",
          "getTokenOwner(uint256)",
          "buyHouseNft(uint256)",
          "sendToken(address,uint256)",
          "changeTokenPrice(uint256,uint256)",
          "getAllHouses()",
          "getAllPayableHouses()",
          "getAllMyHouses()",
          "withdrawToken(uint256)",
          "withdrawETH(uint256)",
          "calcDiv(uint256,uint256)",
          "setAPYConfig(uint256,uint256)",
          "getAllAPYTypes()",
          "getAllMyStakedNFTs()",
          "getTotalInfo()",
          "getAllAPYs()",
          "getPenalty()",
          "setPenalty(uint256)",
          "getRoyalty()",
          "setRoyalty(uint256)"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "HouseBusiness",
            "src": "contracts\\HouseBusiness.sol:106"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "_name",
              "offset": 0,
              "slot": "0",
              "type": "t_string_storage",
              "contract": "ERC721",
              "src": "@openzeppelin\\contracts\\token\\ERC721\\ERC721.sol:24"
            },
            {
              "label": "_symbol",
              "offset": 0,
              "slot": "1",
              "type": "t_string_storage",
              "contract": "ERC721",
              "src": "@openzeppelin\\contracts\\token\\ERC721\\ERC721.sol:27"
            },
            {
              "label": "_owners",
              "offset": 0,
              "slot": "2",
              "type": "t_mapping(t_uint256,t_address)",
              "contract": "ERC721",
              "src": "@openzeppelin\\contracts\\token\\ERC721\\ERC721.sol:30"
            },
            {
              "label": "_balances",
              "offset": 0,
              "slot": "3",
              "type": "t_mapping(t_address,t_uint256)",
              "contract": "ERC721",
              "src": "@openzeppelin\\contracts\\token\\ERC721\\ERC721.sol:33"
            },
            {
              "label": "_tokenApprovals",
              "offset": 0,
              "slot": "4",
              "type": "t_mapping(t_uint256,t_address)",
              "contract": "ERC721",
              "src": "@openzeppelin\\contracts\\token\\ERC721\\ERC721.sol:36"
            },
            {
              "label": "_operatorApprovals",
              "offset": 0,
              "slot": "5",
              "type": "t_mapping(t_address,t_mapping(t_address,t_bool))",
              "contract": "ERC721",
              "src": "@openzeppelin\\contracts\\token\\ERC721\\ERC721.sol:39"
            },
            {
              "label": "_tokenURIs",
              "offset": 0,
              "slot": "6",
              "type": "t_mapping(t_uint256,t_string_storage)",
              "contract": "ERC721URIStorage",
              "src": "@openzeppelin\\contracts\\token\\ERC721\\extensions\\ERC721URIStorage.sol:15"
            },
            {
              "label": "collectionName",
              "offset": 0,
              "slot": "7",
              "type": "t_string_storage",
              "contract": "HouseBusiness",
              "src": "contracts\\HouseBusiness.sol:13"
            },
            {
              "label": "collectionNameSymbol",
              "offset": 0,
              "slot": "8",
              "type": "t_string_storage",
              "contract": "HouseBusiness",
              "src": "contracts\\HouseBusiness.sol:15"
            },
            {
              "label": "houseCounter",
              "offset": 0,
              "slot": "9",
              "type": "t_uint256",
              "contract": "HouseBusiness",
              "src": "contracts\\HouseBusiness.sol:17"
            },
            {
              "label": "stakedCounter",
              "offset": 0,
              "slot": "10",
              "type": "t_uint256",
              "contract": "HouseBusiness",
              "src": "contracts\\HouseBusiness.sol:19"
            },
            {
              "label": "soldedCounter",
              "offset": 0,
              "slot": "11",
              "type": "t_uint256",
              "contract": "HouseBusiness",
              "src": "contracts\\HouseBusiness.sol:21"
            },
            {
              "label": "hTypeCounter",
              "offset": 0,
              "slot": "12",
              "type": "t_uint256",
              "contract": "HouseBusiness",
              "src": "contracts\\HouseBusiness.sol:23"
            },
            {
              "label": "_token",
              "offset": 0,
              "slot": "13",
              "type": "t_contract(IERC20)77",
              "contract": "HouseBusiness",
              "src": "contracts\\HouseBusiness.sol:25"
            },
            {
              "label": "minPrice",
              "offset": 0,
              "slot": "14",
              "type": "t_uint256",
              "contract": "HouseBusiness",
              "src": "contracts\\HouseBusiness.sol:27"
            },
            {
              "label": "maxPrice",
              "offset": 0,
              "slot": "15",
              "type": "t_uint256",
              "contract": "HouseBusiness",
              "src": "contracts\\HouseBusiness.sol:29"
            },
            {
              "label": "penalty",
              "offset": 0,
              "slot": "16",
              "type": "t_uint256",
              "contract": "HouseBusiness",
              "src": "contracts\\HouseBusiness.sol:31"
            },
            {
              "label": "royalty",
              "offset": 0,
              "slot": "17",
              "type": "t_uint256",
              "contract": "HouseBusiness",
              "src": "contracts\\HouseBusiness.sol:33"
            },
            {
              "label": "cContract",
              "offset": 0,
              "slot": "18",
              "type": "t_contract(IMainCleanContract)4818",
              "contract": "HouseBusiness",
              "src": "contracts\\HouseBusiness.sol:35"
            },
            {
              "label": "historyTypes",
              "offset": 0,
              "slot": "19",
              "type": "t_array(t_struct(HistoryType)2851_storage)dyn_storage",
              "contract": "HouseBusiness",
              "src": "contracts\\HouseBusiness.sol:86"
            },
            {
              "label": "houseHistories",
              "offset": 0,
              "slot": "20",
              "type": "t_mapping(t_uint256,t_array(t_struct(History)2832_storage)dyn_storage)",
              "contract": "HouseBusiness",
              "src": "contracts\\HouseBusiness.sol:88"
            },
            {
              "label": "APYtypes",
              "offset": 0,
              "slot": "21",
              "type": "t_array(t_uint256)dyn_storage",
              "contract": "HouseBusiness",
              "src": "contracts\\HouseBusiness.sol:90"
            },
            {
              "label": "APYConfig",
              "offset": 0,
              "slot": "22",
              "type": "t_mapping(t_uint256,t_uint256)",
              "contract": "HouseBusiness",
              "src": "contracts\\HouseBusiness.sol:92"
            },
            {
              "label": "allMembers",
              "offset": 0,
              "slot": "23",
              "type": "t_mapping(t_address,t_bool)",
              "contract": "HouseBusiness",
              "src": "contracts\\HouseBusiness.sol:94"
            },
            {
              "label": "allHouses",
              "offset": 0,
              "slot": "24",
              "type": "t_mapping(t_uint256,t_struct(House)2798_storage)",
              "contract": "HouseBusiness",
              "src": "contracts\\HouseBusiness.sol:96"
            },
            {
              "label": "allowedList",
              "offset": 0,
              "slot": "25",
              "type": "t_mapping(t_uint256,t_mapping(t_address,t_bool))",
              "contract": "HouseBusiness",
              "src": "contracts\\HouseBusiness.sol:98"
            },
            {
              "label": "stakedNfts",
              "offset": 0,
              "slot": "26",
              "type": "t_mapping(t_address,t_array(t_struct(StakedNft)2815_storage)dyn_storage)",
              "contract": "HouseBusiness",
              "src": "contracts\\HouseBusiness.sol:104"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            },
            "t_array(t_struct(History)2832_storage)dyn_storage": {
              "label": "struct HouseBusiness.History[]",
              "numberOfBytes": "32"
            },
            "t_array(t_struct(HistoryType)2851_storage)dyn_storage": {
              "label": "struct HouseBusiness.HistoryType[]",
              "numberOfBytes": "32"
            },
            "t_array(t_struct(StakedNft)2815_storage)dyn_storage": {
              "label": "struct HouseBusiness.StakedNft[]",
              "numberOfBytes": "32"
            },
            "t_array(t_uint256)dyn_storage": {
              "label": "uint256[]",
              "numberOfBytes": "32"
            },
            "t_bool": {
              "label": "bool",
              "numberOfBytes": "1"
            },
            "t_contract(IERC20)77": {
              "label": "contract IERC20",
              "numberOfBytes": "20"
            },
            "t_contract(IMainCleanContract)4818": {
              "label": "contract IMainCleanContract",
              "numberOfBytes": "20"
            },
            "t_mapping(t_address,t_array(t_struct(StakedNft)2815_storage)dyn_storage)": {
              "label": "mapping(address => struct HouseBusiness.StakedNft[])",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_bool)": {
              "label": "mapping(address => bool)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_mapping(t_address,t_bool))": {
              "label": "mapping(address => mapping(address => bool))",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_uint256)": {
              "label": "mapping(address => uint256)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_uint256,t_address)": {
              "label": "mapping(uint256 => address)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_uint256,t_array(t_struct(History)2832_storage)dyn_storage)": {
              "label": "mapping(uint256 => struct HouseBusiness.History[])",
              "numberOfBytes": "32"
            },
            "t_mapping(t_uint256,t_mapping(t_address,t_bool))": {
              "label": "mapping(uint256 => mapping(address => bool))",
              "numberOfBytes": "32"
            },
            "t_mapping(t_uint256,t_string_storage)": {
              "label": "mapping(uint256 => string)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_uint256,t_struct(House)2798_storage)": {
              "label": "mapping(uint256 => struct HouseBusiness.House)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_uint256,t_uint256)": {
              "label": "mapping(uint256 => uint256)",
              "numberOfBytes": "32"
            },
            "t_string_storage": {
              "label": "string",
              "numberOfBytes": "32"
            },
            "t_struct(History)2832_storage": {
              "label": "struct HouseBusiness.History",
              "members": [
                {
                  "label": "hID",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "0"
                },
                {
                  "label": "contractId",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "1"
                },
                {
                  "label": "houseImg",
                  "type": "t_string_storage",
                  "offset": 0,
                  "slot": "2"
                },
                {
                  "label": "houseBrand",
                  "type": "t_string_storage",
                  "offset": 0,
                  "slot": "3"
                },
                {
                  "label": "desc",
                  "type": "t_string_storage",
                  "offset": 0,
                  "slot": "4"
                },
                {
                  "label": "history",
                  "type": "t_string_storage",
                  "offset": 0,
                  "slot": "5"
                },
                {
                  "label": "brandType",
                  "type": "t_string_storage",
                  "offset": 0,
                  "slot": "6"
                },
                {
                  "label": "yearField",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "7"
                }
              ],
              "numberOfBytes": "256"
            },
            "t_struct(HistoryType)2851_storage": {
              "label": "struct HouseBusiness.HistoryType",
              "members": [
                {
                  "label": "hID",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "0"
                },
                {
                  "label": "hLabel",
                  "type": "t_string_storage",
                  "offset": 0,
                  "slot": "1"
                },
                {
                  "label": "connectContract",
                  "type": "t_bool",
                  "offset": 0,
                  "slot": "2"
                },
                {
                  "label": "imgNeed",
                  "type": "t_bool",
                  "offset": 1,
                  "slot": "2"
                },
                {
                  "label": "brandNeed",
                  "type": "t_bool",
                  "offset": 2,
                  "slot": "2"
                },
                {
                  "label": "descNeed",
                  "type": "t_bool",
                  "offset": 3,
                  "slot": "2"
                },
                {
                  "label": "brandTypeNeed",
                  "type": "t_bool",
                  "offset": 4,
                  "slot": "2"
                },
                {
                  "label": "yearNeed",
                  "type": "t_bool",
                  "offset": 5,
                  "slot": "2"
                },
                {
                  "label": "checkMark",
                  "type": "t_bool",
                  "offset": 6,
                  "slot": "2"
                }
              ],
              "numberOfBytes": "96"
            },
            "t_struct(House)2798_storage": {
              "label": "struct HouseBusiness.House",
              "members": [
                {
                  "label": "tokenId",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "0"
                },
                {
                  "label": "tokenName",
                  "type": "t_string_storage",
                  "offset": 0,
                  "slot": "1"
                },
                {
                  "label": "tokenURI",
                  "type": "t_string_storage",
                  "offset": 0,
                  "slot": "2"
                },
                {
                  "label": "tokenType",
                  "type": "t_string_storage",
                  "offset": 0,
                  "slot": "3"
                },
                {
                  "label": "currentOwner",
                  "type": "t_address",
                  "offset": 0,
                  "slot": "4"
                },
                {
                  "label": "previousOwner",
                  "type": "t_address",
                  "offset": 0,
                  "slot": "5"
                },
                {
                  "label": "buyer",
                  "type": "t_address",
                  "offset": 0,
                  "slot": "6"
                },
                {
                  "label": "price",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "7"
                },
                {
                  "label": "numberOfTransfers",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "8"
                },
                {
                  "label": "nftPayable",
                  "type": "t_bool",
                  "offset": 0,
                  "slot": "9"
                },
                {
                  "label": "staked",
                  "type": "t_bool",
                  "offset": 1,
                  "slot": "9"
                },
                {
                  "label": "soldstatus",
                  "type": "t_bool",
                  "offset": 2,
                  "slot": "9"
                }
              ],
              "numberOfBytes": "320"
            },
            "t_struct(StakedNft)2815_storage": {
              "label": "struct HouseBusiness.StakedNft",
              "members": [
                {
                  "label": "owner",
                  "type": "t_address",
                  "offset": 0,
                  "slot": "0"
                },
                {
                  "label": "tokenId",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "1"
                },
                {
                  "label": "startedDate",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "2"
                },
                {
                  "label": "endDate",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "3"
                },
                {
                  "label": "claimDate",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "4"
                },
                {
                  "label": "stakingType",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "5"
                },
                {
                  "label": "perSecRewards",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "6"
                },
                {
                  "label": "stakingStatus",
                  "type": "t_bool",
                  "offset": 0,
                  "slot": "7"
                }
              ],
              "numberOfBytes": "256"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            }
          },
          "layoutVersion": "1.1",
          "flat": true
        }
      },
      "IMainCleanContract": {
        "src": "contracts\\interfaces\\IContract.sol:6",
        "inherit": [],
        "libraries": [],
        "methods": [
          "allCleanContracts(uint256)",
          "transferContractOwnership(uint256,address,address)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      }
    },
    {
      "MainCleanContract": {
        "src": "contracts\\Contract.sol:6",
        "version": {
          "withMetadata": "3ecaca4d3a46abcb1e47a72bf95aee01e232c46fc3b61f0eb73812856de846ee",
          "withoutMetadata": "bf3a337067446ab9636e3933eae421115dcaeac061c92d2287f5e3c88aaf7fb0",
          "linkedWithoutMetadata": "bf3a337067446ab9636e3933eae421115dcaeac061c92d2287f5e3c88aaf7fb0"
        },
        "inherit": [],
        "libraries": [],
        "methods": [
          "(address)",
          "ccCreation(string,string,address,string,uint256,uint256,uint256,string)",
          "getAllContractsByOwner()",
          "getAllContractsBySigner()",
          "addContractSigner(uint256,address)",
          "signContract(uint256)",
          "sendNotify(address,string,uint256)",
          "getUploadedCounter()",
          "getAllNotifies()",
          "calcDiv(uint256,uint256)",
          "toString(bytes)",
          "addressToString(address)",
          "uintToString(uint256)",
          "bytesToString(bytes32)",
          "transferContractOwnership(uint256,address,address)"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "MainCleanContract",
            "src": "contracts\\Contract.sol:52"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "ccCounter",
              "offset": 0,
              "slot": "0",
              "type": "t_uint256",
              "contract": "MainCleanContract",
              "src": "contracts\\Contract.sol:8"
            },
            {
              "label": "houseNFTAddress",
              "offset": 0,
              "slot": "1",
              "type": "t_address",
              "contract": "MainCleanContract",
              "src": "contracts\\Contract.sol:11"
            },
            {
              "label": "allCleanContracts",
              "offset": 0,
              "slot": "2",
              "type": "t_mapping(t_uint256,t_struct(CleanContract)39_storage)",
              "contract": "MainCleanContract",
              "src": "contracts\\Contract.sol:44"
            },
            {
              "label": "allContractsByOwner",
              "offset": 0,
              "slot": "3",
              "type": "t_mapping(t_address,t_array(t_uint256)dyn_storage)",
              "contract": "MainCleanContract",
              "src": "contracts\\Contract.sol:46"
            },
            {
              "label": "allContractsBySigner",
              "offset": 0,
              "slot": "4",
              "type": "t_mapping(t_address,t_array(t_uint256)dyn_storage)",
              "contract": "MainCleanContract",
              "src": "contracts\\Contract.sol:48"
            },
            {
              "label": "allNotifies",
              "offset": 0,
              "slot": "5",
              "type": "t_mapping(t_address,t_array(t_struct(Notify)52_storage)dyn_storage)",
              "contract": "MainCleanContract",
              "src": "contracts\\Contract.sol:50"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            },
            "t_array(t_struct(Notify)52_storage)dyn_storage": {
              "label": "struct MainCleanContract.Notify[]",
              "numberOfBytes": "32"
            },
            "t_array(t_uint256)dyn_storage": {
              "label": "uint256[]",
              "numberOfBytes": "32"
            },
            "t_bool": {
              "label": "bool",
              "numberOfBytes": "1"
            },
            "t_mapping(t_address,t_array(t_struct(Notify)52_storage)dyn_storage)": {
              "label": "mapping(address => struct MainCleanContract.Notify[])",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_array(t_uint256)dyn_storage)": {
              "label": "mapping(address => uint256[])",
              "numberOfBytes": "32"
            },
            "t_mapping(t_uint256,t_struct(CleanContract)39_storage)": {
              "label": "mapping(uint256 => struct MainCleanContract.CleanContract)",
              "numberOfBytes": "32"
            },
            "t_string_storage": {
              "label": "string",
              "numberOfBytes": "32"
            },
            "t_struct(CleanContract)39_storage": {
              "label": "struct MainCleanContract.CleanContract",
              "members": [
                {
                  "label": "contractId",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "0"
                },
                {
                  "label": "companyName",
                  "type": "t_string_storage",
                  "offset": 0,
                  "slot": "1"
                },
                {
                  "label": "contractType",
                  "type": "t_string_storage",
                  "offset": 0,
                  "slot": "2"
                },
                {
                  "label": "contractURI",
                  "type": "t_string_storage",
                  "offset": 0,
                  "slot": "3"
                },
                {
                  "label": "dateFrom",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "4"
                },
                {
                  "label": "dateTo",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "5"
                },
                {
                  "label": "agreedPrice",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "6"
                },
                {
                  "label": "currency",
                  "type": "t_string_storage",
                  "offset": 0,
                  "slot": "7"
                },
                {
                  "label": "creator",
                  "type": "t_address",
                  "offset": 0,
                  "slot": "8"
                },
                {
                  "label": "owner",
                  "type": "t_address",
                  "offset": 0,
                  "slot": "9"
                },
                {
                  "label": "creatorApproval",
                  "type": "t_bool",
                  "offset": 20,
                  "slot": "9"
                },
                {
                  "label": "creatorSignDate",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "10"
                },
                {
                  "label": "contractSigner",
                  "type": "t_address",
                  "offset": 0,
                  "slot": "11"
                },
                {
                  "label": "signerApproval",
                  "type": "t_bool",
                  "offset": 20,
                  "slot": "11"
                },
                {
                  "label": "signerSignDate",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "12"
                },
                {
                  "label": "status",
                  "type": "t_string_storage",
                  "offset": 0,
                  "slot": "13"
                }
              ],
              "numberOfBytes": "448"
            },
            "t_struct(Notify)52_storage": {
              "label": "struct MainCleanContract.Notify",
              "members": [
                {
                  "label": "nSender",
                  "type": "t_address",
                  "offset": 0,
                  "slot": "0"
                },
                {
                  "label": "nReceiver",
                  "type": "t_address",
                  "offset": 0,
                  "slot": "1"
                },
                {
                  "label": "ccID",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "2"
                },
                {
                  "label": "notifySentTime",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "3"
                },
                {
                  "label": "notifyContent",
                  "type": "t_string_storage",
                  "offset": 0,
                  "slot": "4"
                },
                {
                  "label": "status",
                  "type": "t_bool",
                  "offset": 0,
                  "slot": "5"
                }
              ],
              "numberOfBytes": "192"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            }
          },
          "layoutVersion": "1.1",
          "flat": true
        }
      }
    },
    {
      "ThirdParty": {
        "src": "contracts\\ThirdParty.sol:5",
        "version": {
          "withMetadata": "cbf5b2fae6668ee45b86827e485cbed39526db15e39a77a193d607720ff0015c",
          "withoutMetadata": "c7f6b899dcbca6a360ab204550ba9b4fec9f4cae1bcd2f5879cfa3965e9d550f",
          "linkedWithoutMetadata": "c7f6b899dcbca6a360ab204550ba9b4fec9f4cae1bcd2f5879cfa3965e9d550f"
        },
        "inherit": [],
        "libraries": [],
        "methods": [
          "getAllCategories()",
          "addCategory(string,uint256[])",
          "editCategory(uint256,string,uint256[])",
          "deleteCategory(uint256)",
          "getAllProperties()",
          "addProperty(string)",
          "editProperty(uint256,string)",
          "deleteProperty(uint256)",
          "getPackagesByCategory(uint256)",
          "addPackage(uint256,string,uint256,uint256,uint256,bool[])",
          "editPackage(uint256,uint256,string,uint256,uint256,uint256,bool[])",
          "deletePackage(uint256,uint256)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [
            {
              "label": "categoryCounter",
              "offset": 0,
              "slot": "0",
              "type": "t_uint256",
              "contract": "ThirdParty",
              "src": "contracts\\ThirdParty.sol:12"
            },
            {
              "label": "packageCounter",
              "offset": 0,
              "slot": "1",
              "type": "t_uint256",
              "contract": "ThirdParty",
              "src": "contracts\\ThirdParty.sol:23"
            },
            {
              "label": "propertyCounter",
              "offset": 0,
              "slot": "2",
              "type": "t_uint256",
              "contract": "ThirdParty",
              "src": "contracts\\ThirdParty.sol:29"
            },
            {
              "label": "allCategories",
              "offset": 0,
              "slot": "3",
              "type": "t_array(t_struct(Category)11_storage)dyn_storage",
              "contract": "ThirdParty",
              "src": "contracts\\ThirdParty.sol:31"
            },
            {
              "label": "allPackages",
              "offset": 0,
              "slot": "4",
              "type": "t_mapping(t_uint256,t_array(t_struct(Package)29_storage)dyn_storage)",
              "contract": "ThirdParty",
              "src": "contracts\\ThirdParty.sol:34"
            },
            {
              "label": "allProperties",
              "offset": 0,
              "slot": "5",
              "type": "t_array(t_struct(Property)36_storage)dyn_storage",
              "contract": "ThirdParty",
              "src": "contracts\\ThirdParty.sol:37"
            }
          ],
          "types": {
            "t_array(t_bool)dyn_storage": {
              "label": "bool[]",
              "numberOfBytes": "32"
            },
            "t_array(t_struct(Category)11_storage)dyn_storage": {
              "label": "struct ThirdParty.Category[]",
              "numberOfBytes": "32"
            },
            "t_array(t_struct(Package)29_storage)dyn_storage": {
              "label": "struct ThirdParty.Package[]",
              "numberOfBytes": "32"
            },
            "t_array(t_struct(Property)36_storage)dyn_storage": {
              "label": "struct ThirdParty.Property[]",
              "numberOfBytes": "32"
            },
            "t_array(t_uint256)dyn_storage": {
              "label": "uint256[]",
              "numberOfBytes": "32"
            },
            "t_bool": {
              "label": "bool",
              "numberOfBytes": "1"
            },
            "t_mapping(t_uint256,t_array(t_struct(Package)29_storage)dyn_storage)": {
              "label": "mapping(uint256 => struct ThirdParty.Package[])",
              "numberOfBytes": "32"
            },
            "t_string_storage": {
              "label": "string",
              "numberOfBytes": "32"
            },
            "t_struct(Category)11_storage": {
              "label": "struct ThirdParty.Category",
              "members": [
                {
                  "label": "categoryID",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "0"
                },
                {
                  "label": "cartegoryName",
                  "type": "t_string_storage",
                  "offset": 0,
                  "slot": "1"
                },
                {
                  "label": "properties",
                  "type": "t_array(t_uint256)dyn_storage",
                  "offset": 0,
                  "slot": "2"
                },
                {
                  "label": "visible",
                  "type": "t_bool",
                  "offset": 0,
                  "slot": "3"
                }
              ],
              "numberOfBytes": "128"
            },
            "t_struct(Package)29_storage": {
              "label": "struct ThirdParty.Package",
              "members": [
                {
                  "label": "categoryID",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "0"
                },
                {
                  "label": "packageID",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "1"
                },
                {
                  "label": "packageName",
                  "type": "t_string_storage",
                  "offset": 0,
                  "slot": "2"
                },
                {
                  "label": "price",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "3"
                },
                {
                  "label": "period",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "4"
                },
                {
                  "label": "dataLimit",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "5"
                },
                {
                  "label": "propertyVisible",
                  "type": "t_array(t_bool)dyn_storage",
                  "offset": 0,
                  "slot": "6"
                }
              ],
              "numberOfBytes": "224"
            },
            "t_struct(Property)36_storage": {
              "label": "struct ThirdParty.Property",
              "members": [
                {
                  "label": "propertyID",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "0"
                },
                {
                  "label": "propertyName",
                  "type": "t_string_storage",
                  "offset": 0,
                  "slot": "1"
                }
              ],
              "numberOfBytes": "64"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            }
          },
          "layoutVersion": "1.1",
          "flat": true
        }
      }
    },
    {
      "Context": {
        "src": "contracts\\TokenContract.sol:22",
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "HouseBusinessToken": {
        "src": "contracts\\TokenContract.sol:33",
        "version": {
          "withMetadata": "e53f4b9234e67266e4442dec09d084a17cbe6b1b4fb90d62776f0d6f370f0570",
          "withoutMetadata": "f5d2b294cac19c78c593798b4a1bae04c45c82839cbcffe3cc910bb441f21259",
          "linkedWithoutMetadata": "f5d2b294cac19c78c593798b4a1bae04c45c82839cbcffe3cc910bb441f21259"
        },
        "inherit": [
          "IERC20Metadata",
          "IERC20",
          "Context"
        ],
        "libraries": [],
        "methods": [
          "()",
          "name()",
          "symbol()",
          "decimals()",
          "totalSupply()",
          "balanceOf(address)",
          "transfer(address,uint256)",
          "allowance(address,address)",
          "approve(address,uint256)",
          "transferFrom(address,address,uint256)",
          "increaseAllowance(address,uint256)",
          "decreaseAllowance(address,uint256)",
          "_mint(address,uint256)"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "HouseBusinessToken",
            "src": "contracts\\TokenContract.sol:42"
          },
          {
            "kind": "state-variable-assignment",
            "name": "_name",
            "src": "contracts\\TokenContract.sol:37"
          },
          {
            "kind": "state-variable-assignment",
            "name": "_symbol",
            "src": "contracts\\TokenContract.sol:38"
          },
          {
            "kind": "state-variable-assignment",
            "name": "_decimals",
            "src": "contracts\\TokenContract.sol:39"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "_balances",
              "offset": 0,
              "slot": "0",
              "type": "t_mapping(t_address,t_uint256)",
              "contract": "HouseBusinessToken",
              "src": "contracts\\TokenContract.sol:34"
            },
            {
              "label": "_allowances",
              "offset": 0,
              "slot": "1",
              "type": "t_mapping(t_address,t_mapping(t_address,t_uint256))",
              "contract": "HouseBusinessToken",
              "src": "contracts\\TokenContract.sol:35"
            },
            {
              "label": "_totalSupply",
              "offset": 0,
              "slot": "2",
              "type": "t_uint256",
              "contract": "HouseBusinessToken",
              "src": "contracts\\TokenContract.sol:36"
            },
            {
              "label": "_name",
              "offset": 0,
              "slot": "3",
              "type": "t_string_storage",
              "contract": "HouseBusinessToken",
              "src": "contracts\\TokenContract.sol:37"
            },
            {
              "label": "_symbol",
              "offset": 0,
              "slot": "4",
              "type": "t_string_storage",
              "contract": "HouseBusinessToken",
              "src": "contracts\\TokenContract.sol:38"
            },
            {
              "label": "_decimals",
              "offset": 0,
              "slot": "5",
              "type": "t_uint8",
              "contract": "HouseBusinessToken",
              "src": "contracts\\TokenContract.sol:39"
            },
            {
              "label": "_owner",
              "offset": 1,
              "slot": "5",
              "type": "t_address",
              "contract": "HouseBusinessToken",
              "src": "contracts\\TokenContract.sol:40"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            },
            "t_mapping(t_address,t_mapping(t_address,t_uint256))": {
              "label": "mapping(address => mapping(address => uint256))",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_uint256)": {
              "label": "mapping(address => uint256)",
              "numberOfBytes": "32"
            },
            "t_string_storage": {
              "label": "string",
              "numberOfBytes": "32"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            },
            "t_uint8": {
              "label": "uint8",
              "numberOfBytes": "1"
            }
          },
          "layoutVersion": "1.1",
          "flat": true
        }
      },
      "IERC20": {
        "src": "contracts\\TokenContract.sol:5",
        "inherit": [],
        "libraries": [],
        "methods": [
          "totalSupply()",
          "balanceOf(address)",
          "transfer(address,uint256)",
          "allowance(address,address)",
          "approve(address,uint256)",
          "transferFrom(address,address,uint256)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "IERC20Metadata": {
        "src": "contracts\\TokenContract.sol:16",
        "inherit": [
          "IERC20"
        ],
        "libraries": [],
        "methods": [
          "name()",
          "symbol()",
          "decimals()"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      }
    },
    {
      "IPRC20": {
        "src": "contracts\\interfaces\\IPRC20.sol:4",
        "inherit": [],
        "libraries": [],
        "methods": [
          "totalSupply()",
          "balanceOf(address)",
          "transfer(address,uint256)",
          "allowance(address,address)",
          "approve(address,uint256)",
          "transferFrom(address,address,uint256)",
          "decimals()"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      }
    },
    {
      "IHouseBusiness": {
        "src": "contracts\\interfaces\\IHouseBusiness.sol:5",
        "inherit": [],
        "libraries": [],
        "methods": [
          "collectionName()",
          "collectionNameSymbol()",
          "houseCounter()",
          "stakedCounter()",
          "soldedCounter()",
          "hTypeCounter()",
          "minPrice()",
          "maxPrice()",
          "penalty()",
          "royalty()",
          "historyTypes(uint256)",
          "houseHistories(uint256)",
          "APYtypes(uint256)",
          "APYConfig(uint256)",
          "allMembers(address)",
          "allMembers(uint256)",
          "allowedList(uint256,address)",
          "stakedNfts(address)",
          "setMinMaxHousePrice(uint256,uint256)",
          "setConfigToken(address)",
          "isMember()",
          "addMember(address)",
          "removeMember(address)",
          "tokenURI(uint256)",
          "setPayable(uint256,address,bool)",
          "mintHouse(string,string,string,string,uint256)",
          "addAllowList(uint256,address)",
          "removeAllowList(uint256,address)",
          "checkAllowedList(uint256,address)",
          "addHistory(uint256,uint256,string,string,string,string,string,uint256)",
          "getHistory(uint256)",
          "editHistory(uint256,uint256,string,string,string,string,string,uint256)",
          "getHistoryType()",
          "addOrEditHType(uint256,string,bool,bool,bool,bool,bool,bool,bool)",
          "removeHistoryType(uint256)",
          "getMinMaxNFT()",
          "getTokenOwner(uint256)",
          "buyHouseNft(uint256)",
          "sendToken(address,uint256)",
          "changeTokenPrice(uint256,uint256)",
          "getAllHouses()",
          "getAllPayableHouses()",
          "getAllMyHouses()",
          "withdrawToken(uint256)",
          "withdrawETH(uint256)",
          "setAPYConfig(uint256,uint256)",
          "getAllAPYTypes()",
          "stake(uint256,uint256)",
          "unstake(uint256)",
          "stakingFinished(uint256)",
          "totalRewards(address)",
          "claimRewards(address)",
          "getAllMyStakedNFTs()",
          "getTotalInfo()",
          "getAllAPYs()",
          "getPenalty()",
          "setPenalty(uint256)",
          "getRoyalty()",
          "setRoyalty(uint256)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      }
    },
    {
      "IERC20": {
        "src": "@openzeppelin\\contracts\\token\\ERC20\\IERC20.sol:9",
        "inherit": [],
        "libraries": [],
        "methods": [
          "totalSupply()",
          "balanceOf(address)",
          "transfer(address,uint256)",
          "allowance(address,address)",
          "approve(address,uint256)",
          "transferFrom(address,address,uint256)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "ERC721": {
        "src": "@openzeppelin\\contracts\\token\\ERC721\\ERC721.sol:19",
        "version": {
          "withMetadata": "311027b738fb50ea92c84baf68eacb931adf05de03da13635a661dc9c5b03f73",
          "withoutMetadata": "9ec7f439077c3b762bc3aa6a17c55aba7a78d240190c9c7814df896455a0f780",
          "linkedWithoutMetadata": "9ec7f439077c3b762bc3aa6a17c55aba7a78d240190c9c7814df896455a0f780"
        },
        "inherit": [
          "IERC721Metadata",
          "IERC721",
          "ERC165",
          "IERC165",
          "Context"
        ],
        "libraries": [
          "Address",
          "Strings"
        ],
        "methods": [
          "(string,string)",
          "supportsInterface(bytes4)",
          "balanceOf(address)",
          "ownerOf(uint256)",
          "name()",
          "symbol()",
          "tokenURI(uint256)",
          "approve(address,uint256)",
          "getApproved(uint256)",
          "setApprovalForAll(address,bool)",
          "isApprovedForAll(address,address)",
          "transferFrom(address,address,uint256)",
          "safeTransferFrom(address,address,uint256)",
          "safeTransferFrom(address,address,uint256,bytes)"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "ERC721",
            "src": "@openzeppelin\\contracts\\token\\ERC721\\ERC721.sol:44"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "_name",
              "offset": 0,
              "slot": "0",
              "type": "t_string_storage",
              "contract": "ERC721",
              "src": "@openzeppelin\\contracts\\token\\ERC721\\ERC721.sol:24"
            },
            {
              "label": "_symbol",
              "offset": 0,
              "slot": "1",
              "type": "t_string_storage",
              "contract": "ERC721",
              "src": "@openzeppelin\\contracts\\token\\ERC721\\ERC721.sol:27"
            },
            {
              "label": "_owners",
              "offset": 0,
              "slot": "2",
              "type": "t_mapping(t_uint256,t_address)",
              "contract": "ERC721",
              "src": "@openzeppelin\\contracts\\token\\ERC721\\ERC721.sol:30"
            },
            {
              "label": "_balances",
              "offset": 0,
              "slot": "3",
              "type": "t_mapping(t_address,t_uint256)",
              "contract": "ERC721",
              "src": "@openzeppelin\\contracts\\token\\ERC721\\ERC721.sol:33"
            },
            {
              "label": "_tokenApprovals",
              "offset": 0,
              "slot": "4",
              "type": "t_mapping(t_uint256,t_address)",
              "contract": "ERC721",
              "src": "@openzeppelin\\contracts\\token\\ERC721\\ERC721.sol:36"
            },
            {
              "label": "_operatorApprovals",
              "offset": 0,
              "slot": "5",
              "type": "t_mapping(t_address,t_mapping(t_address,t_bool))",
              "contract": "ERC721",
              "src": "@openzeppelin\\contracts\\token\\ERC721\\ERC721.sol:39"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            },
            "t_bool": {
              "label": "bool",
              "numberOfBytes": "1"
            },
            "t_mapping(t_address,t_bool)": {
              "label": "mapping(address => bool)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_mapping(t_address,t_bool))": {
              "label": "mapping(address => mapping(address => bool))",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_uint256)": {
              "label": "mapping(address => uint256)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_uint256,t_address)": {
              "label": "mapping(uint256 => address)",
              "numberOfBytes": "32"
            },
            "t_string_storage": {
              "label": "string",
              "numberOfBytes": "32"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            }
          },
          "layoutVersion": "1.1",
          "flat": true
        }
      },
      "IERC721": {
        "src": "@openzeppelin\\contracts\\token\\ERC721\\IERC721.sol:11",
        "inherit": [
          "IERC165"
        ],
        "libraries": [],
        "methods": [
          "balanceOf(address)",
          "ownerOf(uint256)",
          "safeTransferFrom(address,address,uint256,bytes)",
          "safeTransferFrom(address,address,uint256)",
          "transferFrom(address,address,uint256)",
          "approve(address,uint256)",
          "setApprovalForAll(address,bool)",
          "getApproved(uint256)",
          "isApprovedForAll(address,address)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "IERC721Receiver": {
        "src": "@openzeppelin\\contracts\\token\\ERC721\\IERC721Receiver.sol:11",
        "inherit": [],
        "libraries": [],
        "methods": [
          "onERC721Received(address,address,uint256,bytes)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "ERC721URIStorage": {
        "src": "@openzeppelin\\contracts\\token\\ERC721\\extensions\\ERC721URIStorage.sol:11",
        "inherit": [
          "ERC721",
          "IERC721Metadata",
          "IERC721",
          "ERC165",
          "IERC165",
          "Context"
        ],
        "libraries": [
          "Strings"
        ],
        "methods": [
          "tokenURI(uint256)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [
            {
              "label": "_name",
              "offset": 0,
              "slot": "0",
              "type": "t_string_storage",
              "contract": "ERC721",
              "src": "@openzeppelin\\contracts\\token\\ERC721\\ERC721.sol:24"
            },
            {
              "label": "_symbol",
              "offset": 0,
              "slot": "1",
              "type": "t_string_storage",
              "contract": "ERC721",
              "src": "@openzeppelin\\contracts\\token\\ERC721\\ERC721.sol:27"
            },
            {
              "label": "_owners",
              "offset": 0,
              "slot": "2",
              "type": "t_mapping(t_uint256,t_address)",
              "contract": "ERC721",
              "src": "@openzeppelin\\contracts\\token\\ERC721\\ERC721.sol:30"
            },
            {
              "label": "_balances",
              "offset": 0,
              "slot": "3",
              "type": "t_mapping(t_address,t_uint256)",
              "contract": "ERC721",
              "src": "@openzeppelin\\contracts\\token\\ERC721\\ERC721.sol:33"
            },
            {
              "label": "_tokenApprovals",
              "offset": 0,
              "slot": "4",
              "type": "t_mapping(t_uint256,t_address)",
              "contract": "ERC721",
              "src": "@openzeppelin\\contracts\\token\\ERC721\\ERC721.sol:36"
            },
            {
              "label": "_operatorApprovals",
              "offset": 0,
              "slot": "5",
              "type": "t_mapping(t_address,t_mapping(t_address,t_bool))",
              "contract": "ERC721",
              "src": "@openzeppelin\\contracts\\token\\ERC721\\ERC721.sol:39"
            },
            {
              "label": "_tokenURIs",
              "offset": 0,
              "slot": "6",
              "type": "t_mapping(t_uint256,t_string_storage)",
              "contract": "ERC721URIStorage",
              "src": "@openzeppelin\\contracts\\token\\ERC721\\extensions\\ERC721URIStorage.sol:15"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            },
            "t_bool": {
              "label": "bool",
              "numberOfBytes": "1"
            },
            "t_mapping(t_address,t_bool)": {
              "label": "mapping(address => bool)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_mapping(t_address,t_bool))": {
              "label": "mapping(address => mapping(address => bool))",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_uint256)": {
              "label": "mapping(address => uint256)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_uint256,t_address)": {
              "label": "mapping(uint256 => address)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_uint256,t_string_storage)": {
              "label": "mapping(uint256 => string)",
              "numberOfBytes": "32"
            },
            "t_string_storage": {
              "label": "string",
              "numberOfBytes": "32"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            }
          },
          "layoutVersion": "1.1",
          "flat": true
        }
      },
      "IERC721Metadata": {
        "src": "@openzeppelin\\contracts\\token\\ERC721\\extensions\\IERC721Metadata.sol:12",
        "inherit": [
          "IERC721",
          "IERC165"
        ],
        "libraries": [],
        "methods": [
          "name()",
          "symbol()",
          "tokenURI(uint256)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "Address": {
        "src": "@openzeppelin\\contracts\\utils\\Address.sol:9",
        "version": {
          "withMetadata": "a0500f265408d7c0dbf75da3f9e44a5c2ee85e18bb1b58fe491ffcfa4ea7fd9b",
          "withoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db",
          "linkedWithoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db"
        },
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [
          {
            "kind": "delegatecall",
            "src": "@openzeppelin\\contracts\\utils\\Address.sol:185"
          }
        ],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "Context": {
        "src": "@openzeppelin\\contracts\\utils\\Context.sol:16",
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "Strings": {
        "src": "@openzeppelin\\contracts\\utils\\Strings.sol:11",
        "version": {
          "withMetadata": "c385b5200dd723f945d28b88358d79ca1b5c0f71c28cbbab9acf6d6f3fd15593",
          "withoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db",
          "linkedWithoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db"
        },
        "inherit": [],
        "libraries": [
          "Math"
        ],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "ERC165": {
        "src": "@openzeppelin\\contracts\\utils\\introspection\\ERC165.sol:22",
        "inherit": [
          "IERC165"
        ],
        "libraries": [],
        "methods": [
          "supportsInterface(bytes4)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "IERC165": {
        "src": "@openzeppelin\\contracts\\utils\\introspection\\IERC165.sol:15",
        "inherit": [],
        "libraries": [],
        "methods": [
          "supportsInterface(bytes4)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "Math": {
        "src": "@openzeppelin\\contracts\\utils\\math\\Math.sol:9",
        "version": {
          "withMetadata": "fcaf39e5e702f2902d6ef00c1def75c9800e8d2a0a78a87cf542096cafc7a4b0",
          "withoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db",
          "linkedWithoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db"
        },
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "HouseBusiness": {
        "src": "contracts\\HouseBusiness.sol:11",
        "version": {
          "withMetadata": "5622414cb2e40a3b7ea78f0086f8389e2d5a0827805d3cb1b2c8d3a3efb9d794",
          "withoutMetadata": "c220ec01efe625ab93e1158492e4e853e6256833ade636ebcf870cd4a6cd50e5",
          "linkedWithoutMetadata": "c220ec01efe625ab93e1158492e4e853e6256833ade636ebcf870cd4a6cd50e5"
        },
        "inherit": [
          "ERC721URIStorage",
          "ERC721",
          "IERC721Metadata",
          "IERC721",
          "ERC165",
          "IERC165",
          "Context"
        ],
        "libraries": [],
        "methods": [
          "(address)",
          "setMinMaxHousePrice(uint256,uint256)",
          "setConfigToken(address)",
          "isMember()",
          "addMember(address)",
          "removeMember(address)",
          "tokenURI(uint256)",
          "setCContractAddress(address)",
          "setPayable(uint256,address,bool)",
          "mintHouse(string,string,string,string,uint256)",
          "addAllowList(uint256,address)",
          "removeAllowList(uint256,address)",
          "checkAllowedList(uint256,address)",
          "addHistory(uint256,uint256,uint256,string,string,string,string,string,uint256)",
          "getHistory(uint256)",
          "editHistory(uint256,uint256,string,string,string,string,string,uint256)",
          "getHistoryType()",
          "addOrEditHType(uint256,string,bool,bool,bool,bool,bool,bool,bool)",
          "removeHistoryType(uint256)",
          "getMinMaxNFT()",
          "getTokenOwner(uint256)",
          "buyHouseNft(uint256)",
          "sendToken(address,uint256)",
          "changeTokenPrice(uint256,uint256)",
          "getAllHouses()",
          "getAllPayableHouses()",
          "getAllMyHouses()",
          "withdrawToken(uint256)",
          "withdrawETH(uint256)",
          "calcDiv(uint256,uint256)",
          "setAPYConfig(uint256,uint256)",
          "getAllAPYTypes()",
          "getAllMyStakedNFTs()",
          "getTotalInfo()",
          "getAllAPYs()",
          "getPenalty()",
          "setPenalty(uint256)",
          "getRoyalty()",
          "setRoyalty(uint256)"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "HouseBusiness",
            "src": "contracts\\HouseBusiness.sol:106"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "_name",
              "offset": 0,
              "slot": "0",
              "type": "t_string_storage",
              "contract": "ERC721",
              "src": "@openzeppelin\\contracts\\token\\ERC721\\ERC721.sol:24"
            },
            {
              "label": "_symbol",
              "offset": 0,
              "slot": "1",
              "type": "t_string_storage",
              "contract": "ERC721",
              "src": "@openzeppelin\\contracts\\token\\ERC721\\ERC721.sol:27"
            },
            {
              "label": "_owners",
              "offset": 0,
              "slot": "2",
              "type": "t_mapping(t_uint256,t_address)",
              "contract": "ERC721",
              "src": "@openzeppelin\\contracts\\token\\ERC721\\ERC721.sol:30"
            },
            {
              "label": "_balances",
              "offset": 0,
              "slot": "3",
              "type": "t_mapping(t_address,t_uint256)",
              "contract": "ERC721",
              "src": "@openzeppelin\\contracts\\token\\ERC721\\ERC721.sol:33"
            },
            {
              "label": "_tokenApprovals",
              "offset": 0,
              "slot": "4",
              "type": "t_mapping(t_uint256,t_address)",
              "contract": "ERC721",
              "src": "@openzeppelin\\contracts\\token\\ERC721\\ERC721.sol:36"
            },
            {
              "label": "_operatorApprovals",
              "offset": 0,
              "slot": "5",
              "type": "t_mapping(t_address,t_mapping(t_address,t_bool))",
              "contract": "ERC721",
              "src": "@openzeppelin\\contracts\\token\\ERC721\\ERC721.sol:39"
            },
            {
              "label": "_tokenURIs",
              "offset": 0,
              "slot": "6",
              "type": "t_mapping(t_uint256,t_string_storage)",
              "contract": "ERC721URIStorage",
              "src": "@openzeppelin\\contracts\\token\\ERC721\\extensions\\ERC721URIStorage.sol:15"
            },
            {
              "label": "collectionName",
              "offset": 0,
              "slot": "7",
              "type": "t_string_storage",
              "contract": "HouseBusiness",
              "src": "contracts\\HouseBusiness.sol:13"
            },
            {
              "label": "collectionNameSymbol",
              "offset": 0,
              "slot": "8",
              "type": "t_string_storage",
              "contract": "HouseBusiness",
              "src": "contracts\\HouseBusiness.sol:15"
            },
            {
              "label": "houseCounter",
              "offset": 0,
              "slot": "9",
              "type": "t_uint256",
              "contract": "HouseBusiness",
              "src": "contracts\\HouseBusiness.sol:17"
            },
            {
              "label": "stakedCounter",
              "offset": 0,
              "slot": "10",
              "type": "t_uint256",
              "contract": "HouseBusiness",
              "src": "contracts\\HouseBusiness.sol:19"
            },
            {
              "label": "soldedCounter",
              "offset": 0,
              "slot": "11",
              "type": "t_uint256",
              "contract": "HouseBusiness",
              "src": "contracts\\HouseBusiness.sol:21"
            },
            {
              "label": "hTypeCounter",
              "offset": 0,
              "slot": "12",
              "type": "t_uint256",
              "contract": "HouseBusiness",
              "src": "contracts\\HouseBusiness.sol:23"
            },
            {
              "label": "_token",
              "offset": 0,
              "slot": "13",
              "type": "t_contract(IERC20)77",
              "contract": "HouseBusiness",
              "src": "contracts\\HouseBusiness.sol:25"
            },
            {
              "label": "minPrice",
              "offset": 0,
              "slot": "14",
              "type": "t_uint256",
              "contract": "HouseBusiness",
              "src": "contracts\\HouseBusiness.sol:27"
            },
            {
              "label": "maxPrice",
              "offset": 0,
              "slot": "15",
              "type": "t_uint256",
              "contract": "HouseBusiness",
              "src": "contracts\\HouseBusiness.sol:29"
            },
            {
              "label": "penalty",
              "offset": 0,
              "slot": "16",
              "type": "t_uint256",
              "contract": "HouseBusiness",
              "src": "contracts\\HouseBusiness.sol:31"
            },
            {
              "label": "royalty",
              "offset": 0,
              "slot": "17",
              "type": "t_uint256",
              "contract": "HouseBusiness",
              "src": "contracts\\HouseBusiness.sol:33"
            },
            {
              "label": "cContract",
              "offset": 0,
              "slot": "18",
              "type": "t_contract(IMainCleanContract)4818",
              "contract": "HouseBusiness",
              "src": "contracts\\HouseBusiness.sol:35"
            },
            {
              "label": "historyTypes",
              "offset": 0,
              "slot": "19",
              "type": "t_array(t_struct(HistoryType)2851_storage)dyn_storage",
              "contract": "HouseBusiness",
              "src": "contracts\\HouseBusiness.sol:86"
            },
            {
              "label": "houseHistories",
              "offset": 0,
              "slot": "20",
              "type": "t_mapping(t_uint256,t_array(t_struct(History)2832_storage)dyn_storage)",
              "contract": "HouseBusiness",
              "src": "contracts\\HouseBusiness.sol:88"
            },
            {
              "label": "APYtypes",
              "offset": 0,
              "slot": "21",
              "type": "t_array(t_uint256)dyn_storage",
              "contract": "HouseBusiness",
              "src": "contracts\\HouseBusiness.sol:90"
            },
            {
              "label": "APYConfig",
              "offset": 0,
              "slot": "22",
              "type": "t_mapping(t_uint256,t_uint256)",
              "contract": "HouseBusiness",
              "src": "contracts\\HouseBusiness.sol:92"
            },
            {
              "label": "allMembers",
              "offset": 0,
              "slot": "23",
              "type": "t_mapping(t_address,t_bool)",
              "contract": "HouseBusiness",
              "src": "contracts\\HouseBusiness.sol:94"
            },
            {
              "label": "allHouses",
              "offset": 0,
              "slot": "24",
              "type": "t_mapping(t_uint256,t_struct(House)2798_storage)",
              "contract": "HouseBusiness",
              "src": "contracts\\HouseBusiness.sol:96"
            },
            {
              "label": "allowedList",
              "offset": 0,
              "slot": "25",
              "type": "t_mapping(t_uint256,t_mapping(t_address,t_bool))",
              "contract": "HouseBusiness",
              "src": "contracts\\HouseBusiness.sol:98"
            },
            {
              "label": "stakedNfts",
              "offset": 0,
              "slot": "26",
              "type": "t_mapping(t_address,t_array(t_struct(StakedNft)2815_storage)dyn_storage)",
              "contract": "HouseBusiness",
              "src": "contracts\\HouseBusiness.sol:104"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            },
            "t_array(t_struct(History)2832_storage)dyn_storage": {
              "label": "struct HouseBusiness.History[]",
              "numberOfBytes": "32"
            },
            "t_array(t_struct(HistoryType)2851_storage)dyn_storage": {
              "label": "struct HouseBusiness.HistoryType[]",
              "numberOfBytes": "32"
            },
            "t_array(t_struct(StakedNft)2815_storage)dyn_storage": {
              "label": "struct HouseBusiness.StakedNft[]",
              "numberOfBytes": "32"
            },
            "t_array(t_uint256)dyn_storage": {
              "label": "uint256[]",
              "numberOfBytes": "32"
            },
            "t_bool": {
              "label": "bool",
              "numberOfBytes": "1"
            },
            "t_contract(IERC20)77": {
              "label": "contract IERC20",
              "numberOfBytes": "20"
            },
            "t_contract(IMainCleanContract)4818": {
              "label": "contract IMainCleanContract",
              "numberOfBytes": "20"
            },
            "t_mapping(t_address,t_array(t_struct(StakedNft)2815_storage)dyn_storage)": {
              "label": "mapping(address => struct HouseBusiness.StakedNft[])",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_bool)": {
              "label": "mapping(address => bool)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_mapping(t_address,t_bool))": {
              "label": "mapping(address => mapping(address => bool))",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_uint256)": {
              "label": "mapping(address => uint256)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_uint256,t_address)": {
              "label": "mapping(uint256 => address)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_uint256,t_array(t_struct(History)2832_storage)dyn_storage)": {
              "label": "mapping(uint256 => struct HouseBusiness.History[])",
              "numberOfBytes": "32"
            },
            "t_mapping(t_uint256,t_mapping(t_address,t_bool))": {
              "label": "mapping(uint256 => mapping(address => bool))",
              "numberOfBytes": "32"
            },
            "t_mapping(t_uint256,t_string_storage)": {
              "label": "mapping(uint256 => string)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_uint256,t_struct(House)2798_storage)": {
              "label": "mapping(uint256 => struct HouseBusiness.House)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_uint256,t_uint256)": {
              "label": "mapping(uint256 => uint256)",
              "numberOfBytes": "32"
            },
            "t_string_storage": {
              "label": "string",
              "numberOfBytes": "32"
            },
            "t_struct(History)2832_storage": {
              "label": "struct HouseBusiness.History",
              "members": [
                {
                  "label": "hID",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "0"
                },
                {
                  "label": "contractId",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "1"
                },
                {
                  "label": "houseImg",
                  "type": "t_string_storage",
                  "offset": 0,
                  "slot": "2"
                },
                {
                  "label": "houseBrand",
                  "type": "t_string_storage",
                  "offset": 0,
                  "slot": "3"
                },
                {
                  "label": "desc",
                  "type": "t_string_storage",
                  "offset": 0,
                  "slot": "4"
                },
                {
                  "label": "history",
                  "type": "t_string_storage",
                  "offset": 0,
                  "slot": "5"
                },
                {
                  "label": "brandType",
                  "type": "t_string_storage",
                  "offset": 0,
                  "slot": "6"
                },
                {
                  "label": "yearField",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "7"
                }
              ],
              "numberOfBytes": "256"
            },
            "t_struct(HistoryType)2851_storage": {
              "label": "struct HouseBusiness.HistoryType",
              "members": [
                {
                  "label": "hID",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "0"
                },
                {
                  "label": "hLabel",
                  "type": "t_string_storage",
                  "offset": 0,
                  "slot": "1"
                },
                {
                  "label": "connectContract",
                  "type": "t_bool",
                  "offset": 0,
                  "slot": "2"
                },
                {
                  "label": "imgNeed",
                  "type": "t_bool",
                  "offset": 1,
                  "slot": "2"
                },
                {
                  "label": "brandNeed",
                  "type": "t_bool",
                  "offset": 2,
                  "slot": "2"
                },
                {
                  "label": "descNeed",
                  "type": "t_bool",
                  "offset": 3,
                  "slot": "2"
                },
                {
                  "label": "brandTypeNeed",
                  "type": "t_bool",
                  "offset": 4,
                  "slot": "2"
                },
                {
                  "label": "yearNeed",
                  "type": "t_bool",
                  "offset": 5,
                  "slot": "2"
                },
                {
                  "label": "checkMark",
                  "type": "t_bool",
                  "offset": 6,
                  "slot": "2"
                }
              ],
              "numberOfBytes": "96"
            },
            "t_struct(House)2798_storage": {
              "label": "struct HouseBusiness.House",
              "members": [
                {
                  "label": "tokenId",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "0"
                },
                {
                  "label": "tokenName",
                  "type": "t_string_storage",
                  "offset": 0,
                  "slot": "1"
                },
                {
                  "label": "tokenURI",
                  "type": "t_string_storage",
                  "offset": 0,
                  "slot": "2"
                },
                {
                  "label": "tokenType",
                  "type": "t_string_storage",
                  "offset": 0,
                  "slot": "3"
                },
                {
                  "label": "currentOwner",
                  "type": "t_address",
                  "offset": 0,
                  "slot": "4"
                },
                {
                  "label": "previousOwner",
                  "type": "t_address",
                  "offset": 0,
                  "slot": "5"
                },
                {
                  "label": "buyer",
                  "type": "t_address",
                  "offset": 0,
                  "slot": "6"
                },
                {
                  "label": "price",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "7"
                },
                {
                  "label": "numberOfTransfers",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "8"
                },
                {
                  "label": "nftPayable",
                  "type": "t_bool",
                  "offset": 0,
                  "slot": "9"
                },
                {
                  "label": "staked",
                  "type": "t_bool",
                  "offset": 1,
                  "slot": "9"
                },
                {
                  "label": "soldstatus",
                  "type": "t_bool",
                  "offset": 2,
                  "slot": "9"
                }
              ],
              "numberOfBytes": "320"
            },
            "t_struct(StakedNft)2815_storage": {
              "label": "struct HouseBusiness.StakedNft",
              "members": [
                {
                  "label": "owner",
                  "type": "t_address",
                  "offset": 0,
                  "slot": "0"
                },
                {
                  "label": "tokenId",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "1"
                },
                {
                  "label": "startedDate",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "2"
                },
                {
                  "label": "endDate",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "3"
                },
                {
                  "label": "claimDate",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "4"
                },
                {
                  "label": "stakingType",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "5"
                },
                {
                  "label": "perSecRewards",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "6"
                },
                {
                  "label": "stakingStatus",
                  "type": "t_bool",
                  "offset": 0,
                  "slot": "7"
                }
              ],
              "numberOfBytes": "256"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            }
          },
          "layoutVersion": "1.1",
          "flat": true
        }
      },
      "IMainCleanContract": {
        "src": "contracts\\interfaces\\IContract.sol:6",
        "inherit": [],
        "libraries": [],
        "methods": [
          "allCleanContracts(uint256)",
          "transferContractOwnership(uint256,address,address)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      }
    },
    {
      "IERC20": {
        "src": "@openzeppelin\\contracts\\token\\ERC20\\IERC20.sol:9",
        "inherit": [],
        "libraries": [],
        "methods": [
          "totalSupply()",
          "balanceOf(address)",
          "transfer(address,uint256)",
          "allowance(address,address)",
          "approve(address,uint256)",
          "transferFrom(address,address,uint256)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "ERC721": {
        "src": "@openzeppelin\\contracts\\token\\ERC721\\ERC721.sol:19",
        "version": {
          "withMetadata": "311027b738fb50ea92c84baf68eacb931adf05de03da13635a661dc9c5b03f73",
          "withoutMetadata": "9ec7f439077c3b762bc3aa6a17c55aba7a78d240190c9c7814df896455a0f780",
          "linkedWithoutMetadata": "9ec7f439077c3b762bc3aa6a17c55aba7a78d240190c9c7814df896455a0f780"
        },
        "inherit": [
          "IERC721Metadata",
          "IERC721",
          "ERC165",
          "IERC165",
          "Context"
        ],
        "libraries": [
          "Address",
          "Strings"
        ],
        "methods": [
          "(string,string)",
          "supportsInterface(bytes4)",
          "balanceOf(address)",
          "ownerOf(uint256)",
          "name()",
          "symbol()",
          "tokenURI(uint256)",
          "approve(address,uint256)",
          "getApproved(uint256)",
          "setApprovalForAll(address,bool)",
          "isApprovedForAll(address,address)",
          "transferFrom(address,address,uint256)",
          "safeTransferFrom(address,address,uint256)",
          "safeTransferFrom(address,address,uint256,bytes)"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "ERC721",
            "src": "@openzeppelin\\contracts\\token\\ERC721\\ERC721.sol:44"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "_name",
              "offset": 0,
              "slot": "0",
              "type": "t_string_storage",
              "contract": "ERC721",
              "src": "@openzeppelin\\contracts\\token\\ERC721\\ERC721.sol:24"
            },
            {
              "label": "_symbol",
              "offset": 0,
              "slot": "1",
              "type": "t_string_storage",
              "contract": "ERC721",
              "src": "@openzeppelin\\contracts\\token\\ERC721\\ERC721.sol:27"
            },
            {
              "label": "_owners",
              "offset": 0,
              "slot": "2",
              "type": "t_mapping(t_uint256,t_address)",
              "contract": "ERC721",
              "src": "@openzeppelin\\contracts\\token\\ERC721\\ERC721.sol:30"
            },
            {
              "label": "_balances",
              "offset": 0,
              "slot": "3",
              "type": "t_mapping(t_address,t_uint256)",
              "contract": "ERC721",
              "src": "@openzeppelin\\contracts\\token\\ERC721\\ERC721.sol:33"
            },
            {
              "label": "_tokenApprovals",
              "offset": 0,
              "slot": "4",
              "type": "t_mapping(t_uint256,t_address)",
              "contract": "ERC721",
              "src": "@openzeppelin\\contracts\\token\\ERC721\\ERC721.sol:36"
            },
            {
              "label": "_operatorApprovals",
              "offset": 0,
              "slot": "5",
              "type": "t_mapping(t_address,t_mapping(t_address,t_bool))",
              "contract": "ERC721",
              "src": "@openzeppelin\\contracts\\token\\ERC721\\ERC721.sol:39"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            },
            "t_bool": {
              "label": "bool",
              "numberOfBytes": "1"
            },
            "t_mapping(t_address,t_bool)": {
              "label": "mapping(address => bool)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_mapping(t_address,t_bool))": {
              "label": "mapping(address => mapping(address => bool))",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_uint256)": {
              "label": "mapping(address => uint256)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_uint256,t_address)": {
              "label": "mapping(uint256 => address)",
              "numberOfBytes": "32"
            },
            "t_string_storage": {
              "label": "string",
              "numberOfBytes": "32"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            }
          },
          "layoutVersion": "1.1",
          "flat": true
        }
      },
      "IERC721": {
        "src": "@openzeppelin\\contracts\\token\\ERC721\\IERC721.sol:11",
        "inherit": [
          "IERC165"
        ],
        "libraries": [],
        "methods": [
          "balanceOf(address)",
          "ownerOf(uint256)",
          "safeTransferFrom(address,address,uint256,bytes)",
          "safeTransferFrom(address,address,uint256)",
          "transferFrom(address,address,uint256)",
          "approve(address,uint256)",
          "setApprovalForAll(address,bool)",
          "getApproved(uint256)",
          "isApprovedForAll(address,address)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "IERC721Receiver": {
        "src": "@openzeppelin\\contracts\\token\\ERC721\\IERC721Receiver.sol:11",
        "inherit": [],
        "libraries": [],
        "methods": [
          "onERC721Received(address,address,uint256,bytes)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "ERC721URIStorage": {
        "src": "@openzeppelin\\contracts\\token\\ERC721\\extensions\\ERC721URIStorage.sol:11",
        "inherit": [
          "ERC721",
          "IERC721Metadata",
          "IERC721",
          "ERC165",
          "IERC165",
          "Context"
        ],
        "libraries": [
          "Strings"
        ],
        "methods": [
          "tokenURI(uint256)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [
            {
              "label": "_name",
              "offset": 0,
              "slot": "0",
              "type": "t_string_storage",
              "contract": "ERC721",
              "src": "@openzeppelin\\contracts\\token\\ERC721\\ERC721.sol:24"
            },
            {
              "label": "_symbol",
              "offset": 0,
              "slot": "1",
              "type": "t_string_storage",
              "contract": "ERC721",
              "src": "@openzeppelin\\contracts\\token\\ERC721\\ERC721.sol:27"
            },
            {
              "label": "_owners",
              "offset": 0,
              "slot": "2",
              "type": "t_mapping(t_uint256,t_address)",
              "contract": "ERC721",
              "src": "@openzeppelin\\contracts\\token\\ERC721\\ERC721.sol:30"
            },
            {
              "label": "_balances",
              "offset": 0,
              "slot": "3",
              "type": "t_mapping(t_address,t_uint256)",
              "contract": "ERC721",
              "src": "@openzeppelin\\contracts\\token\\ERC721\\ERC721.sol:33"
            },
            {
              "label": "_tokenApprovals",
              "offset": 0,
              "slot": "4",
              "type": "t_mapping(t_uint256,t_address)",
              "contract": "ERC721",
              "src": "@openzeppelin\\contracts\\token\\ERC721\\ERC721.sol:36"
            },
            {
              "label": "_operatorApprovals",
              "offset": 0,
              "slot": "5",
              "type": "t_mapping(t_address,t_mapping(t_address,t_bool))",
              "contract": "ERC721",
              "src": "@openzeppelin\\contracts\\token\\ERC721\\ERC721.sol:39"
            },
            {
              "label": "_tokenURIs",
              "offset": 0,
              "slot": "6",
              "type": "t_mapping(t_uint256,t_string_storage)",
              "contract": "ERC721URIStorage",
              "src": "@openzeppelin\\contracts\\token\\ERC721\\extensions\\ERC721URIStorage.sol:15"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            },
            "t_bool": {
              "label": "bool",
              "numberOfBytes": "1"
            },
            "t_mapping(t_address,t_bool)": {
              "label": "mapping(address => bool)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_mapping(t_address,t_bool))": {
              "label": "mapping(address => mapping(address => bool))",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_uint256)": {
              "label": "mapping(address => uint256)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_uint256,t_address)": {
              "label": "mapping(uint256 => address)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_uint256,t_string_storage)": {
              "label": "mapping(uint256 => string)",
              "numberOfBytes": "32"
            },
            "t_string_storage": {
              "label": "string",
              "numberOfBytes": "32"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            }
          },
          "layoutVersion": "1.1",
          "flat": true
        }
      },
      "IERC721Metadata": {
        "src": "@openzeppelin\\contracts\\token\\ERC721\\extensions\\IERC721Metadata.sol:12",
        "inherit": [
          "IERC721",
          "IERC165"
        ],
        "libraries": [],
        "methods": [
          "name()",
          "symbol()",
          "tokenURI(uint256)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "Address": {
        "src": "@openzeppelin\\contracts\\utils\\Address.sol:9",
        "version": {
          "withMetadata": "a0500f265408d7c0dbf75da3f9e44a5c2ee85e18bb1b58fe491ffcfa4ea7fd9b",
          "withoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db",
          "linkedWithoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db"
        },
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [
          {
            "kind": "delegatecall",
            "src": "@openzeppelin\\contracts\\utils\\Address.sol:185"
          }
        ],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "Context": {
        "src": "@openzeppelin\\contracts\\utils\\Context.sol:16",
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "Strings": {
        "src": "@openzeppelin\\contracts\\utils\\Strings.sol:11",
        "version": {
          "withMetadata": "c385b5200dd723f945d28b88358d79ca1b5c0f71c28cbbab9acf6d6f3fd15593",
          "withoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db",
          "linkedWithoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db"
        },
        "inherit": [],
        "libraries": [
          "Math"
        ],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "ERC165": {
        "src": "@openzeppelin\\contracts\\utils\\introspection\\ERC165.sol:22",
        "inherit": [
          "IERC165"
        ],
        "libraries": [],
        "methods": [
          "supportsInterface(bytes4)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "IERC165": {
        "src": "@openzeppelin\\contracts\\utils\\introspection\\IERC165.sol:15",
        "inherit": [],
        "libraries": [],
        "methods": [
          "supportsInterface(bytes4)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "Math": {
        "src": "@openzeppelin\\contracts\\utils\\math\\Math.sol:9",
        "version": {
          "withMetadata": "fcaf39e5e702f2902d6ef00c1def75c9800e8d2a0a78a87cf542096cafc7a4b0",
          "withoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db",
          "linkedWithoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db"
        },
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "HouseBusiness": {
        "src": "contracts\\HouseBusiness.sol:11",
        "version": {
          "withMetadata": "5622414cb2e40a3b7ea78f0086f8389e2d5a0827805d3cb1b2c8d3a3efb9d794",
          "withoutMetadata": "c220ec01efe625ab93e1158492e4e853e6256833ade636ebcf870cd4a6cd50e5",
          "linkedWithoutMetadata": "c220ec01efe625ab93e1158492e4e853e6256833ade636ebcf870cd4a6cd50e5"
        },
        "inherit": [
          "ERC721URIStorage",
          "ERC721",
          "IERC721Metadata",
          "IERC721",
          "ERC165",
          "IERC165",
          "Context"
        ],
        "libraries": [],
        "methods": [
          "(address)",
          "setMinMaxHousePrice(uint256,uint256)",
          "setConfigToken(address)",
          "isMember()",
          "addMember(address)",
          "removeMember(address)",
          "tokenURI(uint256)",
          "setCContractAddress(address)",
          "setPayable(uint256,address,bool)",
          "mintHouse(string,string,string,string,uint256)",
          "addAllowList(uint256,address)",
          "removeAllowList(uint256,address)",
          "checkAllowedList(uint256,address)",
          "addHistory(uint256,uint256,uint256,string,string,string,string,string,uint256)",
          "getHistory(uint256)",
          "editHistory(uint256,uint256,string,string,string,string,string,uint256)",
          "getHistoryType()",
          "addOrEditHType(uint256,string,bool,bool,bool,bool,bool,bool,bool)",
          "removeHistoryType(uint256)",
          "getMinMaxNFT()",
          "getTokenOwner(uint256)",
          "buyHouseNft(uint256)",
          "sendToken(address,uint256)",
          "changeTokenPrice(uint256,uint256)",
          "getAllHouses()",
          "getAllPayableHouses()",
          "getAllMyHouses()",
          "withdrawToken(uint256)",
          "withdrawETH(uint256)",
          "calcDiv(uint256,uint256)",
          "setAPYConfig(uint256,uint256)",
          "getAllAPYTypes()",
          "getAllMyStakedNFTs()",
          "getTotalInfo()",
          "getAllAPYs()",
          "getPenalty()",
          "setPenalty(uint256)",
          "getRoyalty()",
          "setRoyalty(uint256)"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "HouseBusiness",
            "src": "contracts\\HouseBusiness.sol:106"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "_name",
              "offset": 0,
              "slot": "0",
              "type": "t_string_storage",
              "contract": "ERC721",
              "src": "@openzeppelin\\contracts\\token\\ERC721\\ERC721.sol:24"
            },
            {
              "label": "_symbol",
              "offset": 0,
              "slot": "1",
              "type": "t_string_storage",
              "contract": "ERC721",
              "src": "@openzeppelin\\contracts\\token\\ERC721\\ERC721.sol:27"
            },
            {
              "label": "_owners",
              "offset": 0,
              "slot": "2",
              "type": "t_mapping(t_uint256,t_address)",
              "contract": "ERC721",
              "src": "@openzeppelin\\contracts\\token\\ERC721\\ERC721.sol:30"
            },
            {
              "label": "_balances",
              "offset": 0,
              "slot": "3",
              "type": "t_mapping(t_address,t_uint256)",
              "contract": "ERC721",
              "src": "@openzeppelin\\contracts\\token\\ERC721\\ERC721.sol:33"
            },
            {
              "label": "_tokenApprovals",
              "offset": 0,
              "slot": "4",
              "type": "t_mapping(t_uint256,t_address)",
              "contract": "ERC721",
              "src": "@openzeppelin\\contracts\\token\\ERC721\\ERC721.sol:36"
            },
            {
              "label": "_operatorApprovals",
              "offset": 0,
              "slot": "5",
              "type": "t_mapping(t_address,t_mapping(t_address,t_bool))",
              "contract": "ERC721",
              "src": "@openzeppelin\\contracts\\token\\ERC721\\ERC721.sol:39"
            },
            {
              "label": "_tokenURIs",
              "offset": 0,
              "slot": "6",
              "type": "t_mapping(t_uint256,t_string_storage)",
              "contract": "ERC721URIStorage",
              "src": "@openzeppelin\\contracts\\token\\ERC721\\extensions\\ERC721URIStorage.sol:15"
            },
            {
              "label": "collectionName",
              "offset": 0,
              "slot": "7",
              "type": "t_string_storage",
              "contract": "HouseBusiness",
              "src": "contracts\\HouseBusiness.sol:13"
            },
            {
              "label": "collectionNameSymbol",
              "offset": 0,
              "slot": "8",
              "type": "t_string_storage",
              "contract": "HouseBusiness",
              "src": "contracts\\HouseBusiness.sol:15"
            },
            {
              "label": "houseCounter",
              "offset": 0,
              "slot": "9",
              "type": "t_uint256",
              "contract": "HouseBusiness",
              "src": "contracts\\HouseBusiness.sol:17"
            },
            {
              "label": "stakedCounter",
              "offset": 0,
              "slot": "10",
              "type": "t_uint256",
              "contract": "HouseBusiness",
              "src": "contracts\\HouseBusiness.sol:19"
            },
            {
              "label": "soldedCounter",
              "offset": 0,
              "slot": "11",
              "type": "t_uint256",
              "contract": "HouseBusiness",
              "src": "contracts\\HouseBusiness.sol:21"
            },
            {
              "label": "hTypeCounter",
              "offset": 0,
              "slot": "12",
              "type": "t_uint256",
              "contract": "HouseBusiness",
              "src": "contracts\\HouseBusiness.sol:23"
            },
            {
              "label": "_token",
              "offset": 0,
              "slot": "13",
              "type": "t_contract(IERC20)77",
              "contract": "HouseBusiness",
              "src": "contracts\\HouseBusiness.sol:25"
            },
            {
              "label": "minPrice",
              "offset": 0,
              "slot": "14",
              "type": "t_uint256",
              "contract": "HouseBusiness",
              "src": "contracts\\HouseBusiness.sol:27"
            },
            {
              "label": "maxPrice",
              "offset": 0,
              "slot": "15",
              "type": "t_uint256",
              "contract": "HouseBusiness",
              "src": "contracts\\HouseBusiness.sol:29"
            },
            {
              "label": "penalty",
              "offset": 0,
              "slot": "16",
              "type": "t_uint256",
              "contract": "HouseBusiness",
              "src": "contracts\\HouseBusiness.sol:31"
            },
            {
              "label": "royalty",
              "offset": 0,
              "slot": "17",
              "type": "t_uint256",
              "contract": "HouseBusiness",
              "src": "contracts\\HouseBusiness.sol:33"
            },
            {
              "label": "cContract",
              "offset": 0,
              "slot": "18",
              "type": "t_contract(IMainCleanContract)4818",
              "contract": "HouseBusiness",
              "src": "contracts\\HouseBusiness.sol:35"
            },
            {
              "label": "historyTypes",
              "offset": 0,
              "slot": "19",
              "type": "t_array(t_struct(HistoryType)2851_storage)dyn_storage",
              "contract": "HouseBusiness",
              "src": "contracts\\HouseBusiness.sol:86"
            },
            {
              "label": "houseHistories",
              "offset": 0,
              "slot": "20",
              "type": "t_mapping(t_uint256,t_array(t_struct(History)2832_storage)dyn_storage)",
              "contract": "HouseBusiness",
              "src": "contracts\\HouseBusiness.sol:88"
            },
            {
              "label": "APYtypes",
              "offset": 0,
              "slot": "21",
              "type": "t_array(t_uint256)dyn_storage",
              "contract": "HouseBusiness",
              "src": "contracts\\HouseBusiness.sol:90"
            },
            {
              "label": "APYConfig",
              "offset": 0,
              "slot": "22",
              "type": "t_mapping(t_uint256,t_uint256)",
              "contract": "HouseBusiness",
              "src": "contracts\\HouseBusiness.sol:92"
            },
            {
              "label": "allMembers",
              "offset": 0,
              "slot": "23",
              "type": "t_mapping(t_address,t_bool)",
              "contract": "HouseBusiness",
              "src": "contracts\\HouseBusiness.sol:94"
            },
            {
              "label": "allHouses",
              "offset": 0,
              "slot": "24",
              "type": "t_mapping(t_uint256,t_struct(House)2798_storage)",
              "contract": "HouseBusiness",
              "src": "contracts\\HouseBusiness.sol:96"
            },
            {
              "label": "allowedList",
              "offset": 0,
              "slot": "25",
              "type": "t_mapping(t_uint256,t_mapping(t_address,t_bool))",
              "contract": "HouseBusiness",
              "src": "contracts\\HouseBusiness.sol:98"
            },
            {
              "label": "stakedNfts",
              "offset": 0,
              "slot": "26",
              "type": "t_mapping(t_address,t_array(t_struct(StakedNft)2815_storage)dyn_storage)",
              "contract": "HouseBusiness",
              "src": "contracts\\HouseBusiness.sol:104"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            },
            "t_array(t_struct(History)2832_storage)dyn_storage": {
              "label": "struct HouseBusiness.History[]",
              "numberOfBytes": "32"
            },
            "t_array(t_struct(HistoryType)2851_storage)dyn_storage": {
              "label": "struct HouseBusiness.HistoryType[]",
              "numberOfBytes": "32"
            },
            "t_array(t_struct(StakedNft)2815_storage)dyn_storage": {
              "label": "struct HouseBusiness.StakedNft[]",
              "numberOfBytes": "32"
            },
            "t_array(t_uint256)dyn_storage": {
              "label": "uint256[]",
              "numberOfBytes": "32"
            },
            "t_bool": {
              "label": "bool",
              "numberOfBytes": "1"
            },
            "t_contract(IERC20)77": {
              "label": "contract IERC20",
              "numberOfBytes": "20"
            },
            "t_contract(IMainCleanContract)4818": {
              "label": "contract IMainCleanContract",
              "numberOfBytes": "20"
            },
            "t_mapping(t_address,t_array(t_struct(StakedNft)2815_storage)dyn_storage)": {
              "label": "mapping(address => struct HouseBusiness.StakedNft[])",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_bool)": {
              "label": "mapping(address => bool)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_mapping(t_address,t_bool))": {
              "label": "mapping(address => mapping(address => bool))",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_uint256)": {
              "label": "mapping(address => uint256)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_uint256,t_address)": {
              "label": "mapping(uint256 => address)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_uint256,t_array(t_struct(History)2832_storage)dyn_storage)": {
              "label": "mapping(uint256 => struct HouseBusiness.History[])",
              "numberOfBytes": "32"
            },
            "t_mapping(t_uint256,t_mapping(t_address,t_bool))": {
              "label": "mapping(uint256 => mapping(address => bool))",
              "numberOfBytes": "32"
            },
            "t_mapping(t_uint256,t_string_storage)": {
              "label": "mapping(uint256 => string)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_uint256,t_struct(House)2798_storage)": {
              "label": "mapping(uint256 => struct HouseBusiness.House)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_uint256,t_uint256)": {
              "label": "mapping(uint256 => uint256)",
              "numberOfBytes": "32"
            },
            "t_string_storage": {
              "label": "string",
              "numberOfBytes": "32"
            },
            "t_struct(History)2832_storage": {
              "label": "struct HouseBusiness.History",
              "members": [
                {
                  "label": "hID",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "0"
                },
                {
                  "label": "contractId",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "1"
                },
                {
                  "label": "houseImg",
                  "type": "t_string_storage",
                  "offset": 0,
                  "slot": "2"
                },
                {
                  "label": "houseBrand",
                  "type": "t_string_storage",
                  "offset": 0,
                  "slot": "3"
                },
                {
                  "label": "desc",
                  "type": "t_string_storage",
                  "offset": 0,
                  "slot": "4"
                },
                {
                  "label": "history",
                  "type": "t_string_storage",
                  "offset": 0,
                  "slot": "5"
                },
                {
                  "label": "brandType",
                  "type": "t_string_storage",
                  "offset": 0,
                  "slot": "6"
                },
                {
                  "label": "yearField",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "7"
                }
              ],
              "numberOfBytes": "256"
            },
            "t_struct(HistoryType)2851_storage": {
              "label": "struct HouseBusiness.HistoryType",
              "members": [
                {
                  "label": "hID",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "0"
                },
                {
                  "label": "hLabel",
                  "type": "t_string_storage",
                  "offset": 0,
                  "slot": "1"
                },
                {
                  "label": "connectContract",
                  "type": "t_bool",
                  "offset": 0,
                  "slot": "2"
                },
                {
                  "label": "imgNeed",
                  "type": "t_bool",
                  "offset": 1,
                  "slot": "2"
                },
                {
                  "label": "brandNeed",
                  "type": "t_bool",
                  "offset": 2,
                  "slot": "2"
                },
                {
                  "label": "descNeed",
                  "type": "t_bool",
                  "offset": 3,
                  "slot": "2"
                },
                {
                  "label": "brandTypeNeed",
                  "type": "t_bool",
                  "offset": 4,
                  "slot": "2"
                },
                {
                  "label": "yearNeed",
                  "type": "t_bool",
                  "offset": 5,
                  "slot": "2"
                },
                {
                  "label": "checkMark",
                  "type": "t_bool",
                  "offset": 6,
                  "slot": "2"
                }
              ],
              "numberOfBytes": "96"
            },
            "t_struct(House)2798_storage": {
              "label": "struct HouseBusiness.House",
              "members": [
                {
                  "label": "tokenId",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "0"
                },
                {
                  "label": "tokenName",
                  "type": "t_string_storage",
                  "offset": 0,
                  "slot": "1"
                },
                {
                  "label": "tokenURI",
                  "type": "t_string_storage",
                  "offset": 0,
                  "slot": "2"
                },
                {
                  "label": "tokenType",
                  "type": "t_string_storage",
                  "offset": 0,
                  "slot": "3"
                },
                {
                  "label": "currentOwner",
                  "type": "t_address",
                  "offset": 0,
                  "slot": "4"
                },
                {
                  "label": "previousOwner",
                  "type": "t_address",
                  "offset": 0,
                  "slot": "5"
                },
                {
                  "label": "buyer",
                  "type": "t_address",
                  "offset": 0,
                  "slot": "6"
                },
                {
                  "label": "price",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "7"
                },
                {
                  "label": "numberOfTransfers",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "8"
                },
                {
                  "label": "nftPayable",
                  "type": "t_bool",
                  "offset": 0,
                  "slot": "9"
                },
                {
                  "label": "staked",
                  "type": "t_bool",
                  "offset": 1,
                  "slot": "9"
                },
                {
                  "label": "soldstatus",
                  "type": "t_bool",
                  "offset": 2,
                  "slot": "9"
                }
              ],
              "numberOfBytes": "320"
            },
            "t_struct(StakedNft)2815_storage": {
              "label": "struct HouseBusiness.StakedNft",
              "members": [
                {
                  "label": "owner",
                  "type": "t_address",
                  "offset": 0,
                  "slot": "0"
                },
                {
                  "label": "tokenId",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "1"
                },
                {
                  "label": "startedDate",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "2"
                },
                {
                  "label": "endDate",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "3"
                },
                {
                  "label": "claimDate",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "4"
                },
                {
                  "label": "stakingType",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "5"
                },
                {
                  "label": "perSecRewards",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "6"
                },
                {
                  "label": "stakingStatus",
                  "type": "t_bool",
                  "offset": 0,
                  "slot": "7"
                }
              ],
              "numberOfBytes": "256"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            }
          },
          "layoutVersion": "1.1",
          "flat": true
        }
      },
      "IMainCleanContract": {
        "src": "contracts\\interfaces\\IContract.sol:6",
        "inherit": [],
        "libraries": [],
        "methods": [
          "allCleanContracts(uint256)",
          "transferContractOwnership(uint256,address,address)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      }
    },
    {
      "IERC20": {
        "src": "@openzeppelin\\contracts\\token\\ERC20\\IERC20.sol:9",
        "inherit": [],
        "libraries": [],
        "methods": [
          "totalSupply()",
          "balanceOf(address)",
          "transfer(address,uint256)",
          "allowance(address,address)",
          "approve(address,uint256)",
          "transferFrom(address,address,uint256)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "ERC721": {
        "src": "@openzeppelin\\contracts\\token\\ERC721\\ERC721.sol:19",
        "version": {
          "withMetadata": "311027b738fb50ea92c84baf68eacb931adf05de03da13635a661dc9c5b03f73",
          "withoutMetadata": "9ec7f439077c3b762bc3aa6a17c55aba7a78d240190c9c7814df896455a0f780",
          "linkedWithoutMetadata": "9ec7f439077c3b762bc3aa6a17c55aba7a78d240190c9c7814df896455a0f780"
        },
        "inherit": [
          "IERC721Metadata",
          "IERC721",
          "ERC165",
          "IERC165",
          "Context"
        ],
        "libraries": [
          "Address",
          "Strings"
        ],
        "methods": [
          "(string,string)",
          "supportsInterface(bytes4)",
          "balanceOf(address)",
          "ownerOf(uint256)",
          "name()",
          "symbol()",
          "tokenURI(uint256)",
          "approve(address,uint256)",
          "getApproved(uint256)",
          "setApprovalForAll(address,bool)",
          "isApprovedForAll(address,address)",
          "transferFrom(address,address,uint256)",
          "safeTransferFrom(address,address,uint256)",
          "safeTransferFrom(address,address,uint256,bytes)"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "ERC721",
            "src": "@openzeppelin\\contracts\\token\\ERC721\\ERC721.sol:44"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "_name",
              "offset": 0,
              "slot": "0",
              "type": "t_string_storage",
              "contract": "ERC721",
              "src": "@openzeppelin\\contracts\\token\\ERC721\\ERC721.sol:24"
            },
            {
              "label": "_symbol",
              "offset": 0,
              "slot": "1",
              "type": "t_string_storage",
              "contract": "ERC721",
              "src": "@openzeppelin\\contracts\\token\\ERC721\\ERC721.sol:27"
            },
            {
              "label": "_owners",
              "offset": 0,
              "slot": "2",
              "type": "t_mapping(t_uint256,t_address)",
              "contract": "ERC721",
              "src": "@openzeppelin\\contracts\\token\\ERC721\\ERC721.sol:30"
            },
            {
              "label": "_balances",
              "offset": 0,
              "slot": "3",
              "type": "t_mapping(t_address,t_uint256)",
              "contract": "ERC721",
              "src": "@openzeppelin\\contracts\\token\\ERC721\\ERC721.sol:33"
            },
            {
              "label": "_tokenApprovals",
              "offset": 0,
              "slot": "4",
              "type": "t_mapping(t_uint256,t_address)",
              "contract": "ERC721",
              "src": "@openzeppelin\\contracts\\token\\ERC721\\ERC721.sol:36"
            },
            {
              "label": "_operatorApprovals",
              "offset": 0,
              "slot": "5",
              "type": "t_mapping(t_address,t_mapping(t_address,t_bool))",
              "contract": "ERC721",
              "src": "@openzeppelin\\contracts\\token\\ERC721\\ERC721.sol:39"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            },
            "t_bool": {
              "label": "bool",
              "numberOfBytes": "1"
            },
            "t_mapping(t_address,t_bool)": {
              "label": "mapping(address => bool)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_mapping(t_address,t_bool))": {
              "label": "mapping(address => mapping(address => bool))",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_uint256)": {
              "label": "mapping(address => uint256)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_uint256,t_address)": {
              "label": "mapping(uint256 => address)",
              "numberOfBytes": "32"
            },
            "t_string_storage": {
              "label": "string",
              "numberOfBytes": "32"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            }
          },
          "layoutVersion": "1.1",
          "flat": true
        }
      },
      "IERC721": {
        "src": "@openzeppelin\\contracts\\token\\ERC721\\IERC721.sol:11",
        "inherit": [
          "IERC165"
        ],
        "libraries": [],
        "methods": [
          "balanceOf(address)",
          "ownerOf(uint256)",
          "safeTransferFrom(address,address,uint256,bytes)",
          "safeTransferFrom(address,address,uint256)",
          "transferFrom(address,address,uint256)",
          "approve(address,uint256)",
          "setApprovalForAll(address,bool)",
          "getApproved(uint256)",
          "isApprovedForAll(address,address)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "IERC721Receiver": {
        "src": "@openzeppelin\\contracts\\token\\ERC721\\IERC721Receiver.sol:11",
        "inherit": [],
        "libraries": [],
        "methods": [
          "onERC721Received(address,address,uint256,bytes)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "ERC721URIStorage": {
        "src": "@openzeppelin\\contracts\\token\\ERC721\\extensions\\ERC721URIStorage.sol:11",
        "inherit": [
          "ERC721",
          "IERC721Metadata",
          "IERC721",
          "ERC165",
          "IERC165",
          "Context"
        ],
        "libraries": [
          "Strings"
        ],
        "methods": [
          "tokenURI(uint256)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [
            {
              "label": "_name",
              "offset": 0,
              "slot": "0",
              "type": "t_string_storage",
              "contract": "ERC721",
              "src": "@openzeppelin\\contracts\\token\\ERC721\\ERC721.sol:24"
            },
            {
              "label": "_symbol",
              "offset": 0,
              "slot": "1",
              "type": "t_string_storage",
              "contract": "ERC721",
              "src": "@openzeppelin\\contracts\\token\\ERC721\\ERC721.sol:27"
            },
            {
              "label": "_owners",
              "offset": 0,
              "slot": "2",
              "type": "t_mapping(t_uint256,t_address)",
              "contract": "ERC721",
              "src": "@openzeppelin\\contracts\\token\\ERC721\\ERC721.sol:30"
            },
            {
              "label": "_balances",
              "offset": 0,
              "slot": "3",
              "type": "t_mapping(t_address,t_uint256)",
              "contract": "ERC721",
              "src": "@openzeppelin\\contracts\\token\\ERC721\\ERC721.sol:33"
            },
            {
              "label": "_tokenApprovals",
              "offset": 0,
              "slot": "4",
              "type": "t_mapping(t_uint256,t_address)",
              "contract": "ERC721",
              "src": "@openzeppelin\\contracts\\token\\ERC721\\ERC721.sol:36"
            },
            {
              "label": "_operatorApprovals",
              "offset": 0,
              "slot": "5",
              "type": "t_mapping(t_address,t_mapping(t_address,t_bool))",
              "contract": "ERC721",
              "src": "@openzeppelin\\contracts\\token\\ERC721\\ERC721.sol:39"
            },
            {
              "label": "_tokenURIs",
              "offset": 0,
              "slot": "6",
              "type": "t_mapping(t_uint256,t_string_storage)",
              "contract": "ERC721URIStorage",
              "src": "@openzeppelin\\contracts\\token\\ERC721\\extensions\\ERC721URIStorage.sol:15"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            },
            "t_bool": {
              "label": "bool",
              "numberOfBytes": "1"
            },
            "t_mapping(t_address,t_bool)": {
              "label": "mapping(address => bool)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_mapping(t_address,t_bool))": {
              "label": "mapping(address => mapping(address => bool))",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_uint256)": {
              "label": "mapping(address => uint256)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_uint256,t_address)": {
              "label": "mapping(uint256 => address)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_uint256,t_string_storage)": {
              "label": "mapping(uint256 => string)",
              "numberOfBytes": "32"
            },
            "t_string_storage": {
              "label": "string",
              "numberOfBytes": "32"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            }
          },
          "layoutVersion": "1.1",
          "flat": true
        }
      },
      "IERC721Metadata": {
        "src": "@openzeppelin\\contracts\\token\\ERC721\\extensions\\IERC721Metadata.sol:12",
        "inherit": [
          "IERC721",
          "IERC165"
        ],
        "libraries": [],
        "methods": [
          "name()",
          "symbol()",
          "tokenURI(uint256)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "Address": {
        "src": "@openzeppelin\\contracts\\utils\\Address.sol:9",
        "version": {
          "withMetadata": "a0500f265408d7c0dbf75da3f9e44a5c2ee85e18bb1b58fe491ffcfa4ea7fd9b",
          "withoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db",
          "linkedWithoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db"
        },
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [
          {
            "kind": "delegatecall",
            "src": "@openzeppelin\\contracts\\utils\\Address.sol:185"
          }
        ],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "Context": {
        "src": "@openzeppelin\\contracts\\utils\\Context.sol:16",
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "Strings": {
        "src": "@openzeppelin\\contracts\\utils\\Strings.sol:11",
        "version": {
          "withMetadata": "c385b5200dd723f945d28b88358d79ca1b5c0f71c28cbbab9acf6d6f3fd15593",
          "withoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db",
          "linkedWithoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db"
        },
        "inherit": [],
        "libraries": [
          "Math"
        ],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "ERC165": {
        "src": "@openzeppelin\\contracts\\utils\\introspection\\ERC165.sol:22",
        "inherit": [
          "IERC165"
        ],
        "libraries": [],
        "methods": [
          "supportsInterface(bytes4)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "IERC165": {
        "src": "@openzeppelin\\contracts\\utils\\introspection\\IERC165.sol:15",
        "inherit": [],
        "libraries": [],
        "methods": [
          "supportsInterface(bytes4)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "Math": {
        "src": "@openzeppelin\\contracts\\utils\\math\\Math.sol:9",
        "version": {
          "withMetadata": "fcaf39e5e702f2902d6ef00c1def75c9800e8d2a0a78a87cf542096cafc7a4b0",
          "withoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db",
          "linkedWithoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db"
        },
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "HouseBusiness": {
        "src": "contracts\\HouseBusiness.sol:11",
        "version": {
          "withMetadata": "5622414cb2e40a3b7ea78f0086f8389e2d5a0827805d3cb1b2c8d3a3efb9d794",
          "withoutMetadata": "c220ec01efe625ab93e1158492e4e853e6256833ade636ebcf870cd4a6cd50e5",
          "linkedWithoutMetadata": "c220ec01efe625ab93e1158492e4e853e6256833ade636ebcf870cd4a6cd50e5"
        },
        "inherit": [
          "ERC721URIStorage",
          "ERC721",
          "IERC721Metadata",
          "IERC721",
          "ERC165",
          "IERC165",
          "Context"
        ],
        "libraries": [],
        "methods": [
          "(address)",
          "setMinMaxHousePrice(uint256,uint256)",
          "setConfigToken(address)",
          "isMember()",
          "addMember(address)",
          "removeMember(address)",
          "tokenURI(uint256)",
          "setCContractAddress(address)",
          "setPayable(uint256,address,bool)",
          "mintHouse(string,string,string,string,uint256)",
          "addAllowList(uint256,address)",
          "removeAllowList(uint256,address)",
          "checkAllowedList(uint256,address)",
          "addHistory(uint256,uint256,uint256,string,string,string,string,string,uint256)",
          "getHistory(uint256)",
          "editHistory(uint256,uint256,string,string,string,string,string,uint256)",
          "getHistoryType()",
          "addOrEditHType(uint256,string,bool,bool,bool,bool,bool,bool,bool)",
          "removeHistoryType(uint256)",
          "getMinMaxNFT()",
          "getTokenOwner(uint256)",
          "buyHouseNft(uint256)",
          "sendToken(address,uint256)",
          "changeTokenPrice(uint256,uint256)",
          "getAllHouses()",
          "getAllPayableHouses()",
          "getAllMyHouses()",
          "withdrawToken(uint256)",
          "withdrawETH(uint256)",
          "calcDiv(uint256,uint256)",
          "setAPYConfig(uint256,uint256)",
          "getAllAPYTypes()",
          "getAllMyStakedNFTs()",
          "getTotalInfo()",
          "getAllAPYs()",
          "getPenalty()",
          "setPenalty(uint256)",
          "getRoyalty()",
          "setRoyalty(uint256)"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "HouseBusiness",
            "src": "contracts\\HouseBusiness.sol:106"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "_name",
              "offset": 0,
              "slot": "0",
              "type": "t_string_storage",
              "contract": "ERC721",
              "src": "@openzeppelin\\contracts\\token\\ERC721\\ERC721.sol:24"
            },
            {
              "label": "_symbol",
              "offset": 0,
              "slot": "1",
              "type": "t_string_storage",
              "contract": "ERC721",
              "src": "@openzeppelin\\contracts\\token\\ERC721\\ERC721.sol:27"
            },
            {
              "label": "_owners",
              "offset": 0,
              "slot": "2",
              "type": "t_mapping(t_uint256,t_address)",
              "contract": "ERC721",
              "src": "@openzeppelin\\contracts\\token\\ERC721\\ERC721.sol:30"
            },
            {
              "label": "_balances",
              "offset": 0,
              "slot": "3",
              "type": "t_mapping(t_address,t_uint256)",
              "contract": "ERC721",
              "src": "@openzeppelin\\contracts\\token\\ERC721\\ERC721.sol:33"
            },
            {
              "label": "_tokenApprovals",
              "offset": 0,
              "slot": "4",
              "type": "t_mapping(t_uint256,t_address)",
              "contract": "ERC721",
              "src": "@openzeppelin\\contracts\\token\\ERC721\\ERC721.sol:36"
            },
            {
              "label": "_operatorApprovals",
              "offset": 0,
              "slot": "5",
              "type": "t_mapping(t_address,t_mapping(t_address,t_bool))",
              "contract": "ERC721",
              "src": "@openzeppelin\\contracts\\token\\ERC721\\ERC721.sol:39"
            },
            {
              "label": "_tokenURIs",
              "offset": 0,
              "slot": "6",
              "type": "t_mapping(t_uint256,t_string_storage)",
              "contract": "ERC721URIStorage",
              "src": "@openzeppelin\\contracts\\token\\ERC721\\extensions\\ERC721URIStorage.sol:15"
            },
            {
              "label": "collectionName",
              "offset": 0,
              "slot": "7",
              "type": "t_string_storage",
              "contract": "HouseBusiness",
              "src": "contracts\\HouseBusiness.sol:13"
            },
            {
              "label": "collectionNameSymbol",
              "offset": 0,
              "slot": "8",
              "type": "t_string_storage",
              "contract": "HouseBusiness",
              "src": "contracts\\HouseBusiness.sol:15"
            },
            {
              "label": "houseCounter",
              "offset": 0,
              "slot": "9",
              "type": "t_uint256",
              "contract": "HouseBusiness",
              "src": "contracts\\HouseBusiness.sol:17"
            },
            {
              "label": "stakedCounter",
              "offset": 0,
              "slot": "10",
              "type": "t_uint256",
              "contract": "HouseBusiness",
              "src": "contracts\\HouseBusiness.sol:19"
            },
            {
              "label": "soldedCounter",
              "offset": 0,
              "slot": "11",
              "type": "t_uint256",
              "contract": "HouseBusiness",
              "src": "contracts\\HouseBusiness.sol:21"
            },
            {
              "label": "hTypeCounter",
              "offset": 0,
              "slot": "12",
              "type": "t_uint256",
              "contract": "HouseBusiness",
              "src": "contracts\\HouseBusiness.sol:23"
            },
            {
              "label": "_token",
              "offset": 0,
              "slot": "13",
              "type": "t_contract(IERC20)77",
              "contract": "HouseBusiness",
              "src": "contracts\\HouseBusiness.sol:25"
            },
            {
              "label": "minPrice",
              "offset": 0,
              "slot": "14",
              "type": "t_uint256",
              "contract": "HouseBusiness",
              "src": "contracts\\HouseBusiness.sol:27"
            },
            {
              "label": "maxPrice",
              "offset": 0,
              "slot": "15",
              "type": "t_uint256",
              "contract": "HouseBusiness",
              "src": "contracts\\HouseBusiness.sol:29"
            },
            {
              "label": "penalty",
              "offset": 0,
              "slot": "16",
              "type": "t_uint256",
              "contract": "HouseBusiness",
              "src": "contracts\\HouseBusiness.sol:31"
            },
            {
              "label": "royalty",
              "offset": 0,
              "slot": "17",
              "type": "t_uint256",
              "contract": "HouseBusiness",
              "src": "contracts\\HouseBusiness.sol:33"
            },
            {
              "label": "cContract",
              "offset": 0,
              "slot": "18",
              "type": "t_contract(IMainCleanContract)4818",
              "contract": "HouseBusiness",
              "src": "contracts\\HouseBusiness.sol:35"
            },
            {
              "label": "historyTypes",
              "offset": 0,
              "slot": "19",
              "type": "t_array(t_struct(HistoryType)2851_storage)dyn_storage",
              "contract": "HouseBusiness",
              "src": "contracts\\HouseBusiness.sol:86"
            },
            {
              "label": "houseHistories",
              "offset": 0,
              "slot": "20",
              "type": "t_mapping(t_uint256,t_array(t_struct(History)2832_storage)dyn_storage)",
              "contract": "HouseBusiness",
              "src": "contracts\\HouseBusiness.sol:88"
            },
            {
              "label": "APYtypes",
              "offset": 0,
              "slot": "21",
              "type": "t_array(t_uint256)dyn_storage",
              "contract": "HouseBusiness",
              "src": "contracts\\HouseBusiness.sol:90"
            },
            {
              "label": "APYConfig",
              "offset": 0,
              "slot": "22",
              "type": "t_mapping(t_uint256,t_uint256)",
              "contract": "HouseBusiness",
              "src": "contracts\\HouseBusiness.sol:92"
            },
            {
              "label": "allMembers",
              "offset": 0,
              "slot": "23",
              "type": "t_mapping(t_address,t_bool)",
              "contract": "HouseBusiness",
              "src": "contracts\\HouseBusiness.sol:94"
            },
            {
              "label": "allHouses",
              "offset": 0,
              "slot": "24",
              "type": "t_mapping(t_uint256,t_struct(House)2798_storage)",
              "contract": "HouseBusiness",
              "src": "contracts\\HouseBusiness.sol:96"
            },
            {
              "label": "allowedList",
              "offset": 0,
              "slot": "25",
              "type": "t_mapping(t_uint256,t_mapping(t_address,t_bool))",
              "contract": "HouseBusiness",
              "src": "contracts\\HouseBusiness.sol:98"
            },
            {
              "label": "stakedNfts",
              "offset": 0,
              "slot": "26",
              "type": "t_mapping(t_address,t_array(t_struct(StakedNft)2815_storage)dyn_storage)",
              "contract": "HouseBusiness",
              "src": "contracts\\HouseBusiness.sol:104"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            },
            "t_array(t_struct(History)2832_storage)dyn_storage": {
              "label": "struct HouseBusiness.History[]",
              "numberOfBytes": "32"
            },
            "t_array(t_struct(HistoryType)2851_storage)dyn_storage": {
              "label": "struct HouseBusiness.HistoryType[]",
              "numberOfBytes": "32"
            },
            "t_array(t_struct(StakedNft)2815_storage)dyn_storage": {
              "label": "struct HouseBusiness.StakedNft[]",
              "numberOfBytes": "32"
            },
            "t_array(t_uint256)dyn_storage": {
              "label": "uint256[]",
              "numberOfBytes": "32"
            },
            "t_bool": {
              "label": "bool",
              "numberOfBytes": "1"
            },
            "t_contract(IERC20)77": {
              "label": "contract IERC20",
              "numberOfBytes": "20"
            },
            "t_contract(IMainCleanContract)4818": {
              "label": "contract IMainCleanContract",
              "numberOfBytes": "20"
            },
            "t_mapping(t_address,t_array(t_struct(StakedNft)2815_storage)dyn_storage)": {
              "label": "mapping(address => struct HouseBusiness.StakedNft[])",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_bool)": {
              "label": "mapping(address => bool)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_mapping(t_address,t_bool))": {
              "label": "mapping(address => mapping(address => bool))",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_uint256)": {
              "label": "mapping(address => uint256)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_uint256,t_address)": {
              "label": "mapping(uint256 => address)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_uint256,t_array(t_struct(History)2832_storage)dyn_storage)": {
              "label": "mapping(uint256 => struct HouseBusiness.History[])",
              "numberOfBytes": "32"
            },
            "t_mapping(t_uint256,t_mapping(t_address,t_bool))": {
              "label": "mapping(uint256 => mapping(address => bool))",
              "numberOfBytes": "32"
            },
            "t_mapping(t_uint256,t_string_storage)": {
              "label": "mapping(uint256 => string)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_uint256,t_struct(House)2798_storage)": {
              "label": "mapping(uint256 => struct HouseBusiness.House)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_uint256,t_uint256)": {
              "label": "mapping(uint256 => uint256)",
              "numberOfBytes": "32"
            },
            "t_string_storage": {
              "label": "string",
              "numberOfBytes": "32"
            },
            "t_struct(History)2832_storage": {
              "label": "struct HouseBusiness.History",
              "members": [
                {
                  "label": "hID",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "0"
                },
                {
                  "label": "contractId",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "1"
                },
                {
                  "label": "houseImg",
                  "type": "t_string_storage",
                  "offset": 0,
                  "slot": "2"
                },
                {
                  "label": "houseBrand",
                  "type": "t_string_storage",
                  "offset": 0,
                  "slot": "3"
                },
                {
                  "label": "desc",
                  "type": "t_string_storage",
                  "offset": 0,
                  "slot": "4"
                },
                {
                  "label": "history",
                  "type": "t_string_storage",
                  "offset": 0,
                  "slot": "5"
                },
                {
                  "label": "brandType",
                  "type": "t_string_storage",
                  "offset": 0,
                  "slot": "6"
                },
                {
                  "label": "yearField",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "7"
                }
              ],
              "numberOfBytes": "256"
            },
            "t_struct(HistoryType)2851_storage": {
              "label": "struct HouseBusiness.HistoryType",
              "members": [
                {
                  "label": "hID",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "0"
                },
                {
                  "label": "hLabel",
                  "type": "t_string_storage",
                  "offset": 0,
                  "slot": "1"
                },
                {
                  "label": "connectContract",
                  "type": "t_bool",
                  "offset": 0,
                  "slot": "2"
                },
                {
                  "label": "imgNeed",
                  "type": "t_bool",
                  "offset": 1,
                  "slot": "2"
                },
                {
                  "label": "brandNeed",
                  "type": "t_bool",
                  "offset": 2,
                  "slot": "2"
                },
                {
                  "label": "descNeed",
                  "type": "t_bool",
                  "offset": 3,
                  "slot": "2"
                },
                {
                  "label": "brandTypeNeed",
                  "type": "t_bool",
                  "offset": 4,
                  "slot": "2"
                },
                {
                  "label": "yearNeed",
                  "type": "t_bool",
                  "offset": 5,
                  "slot": "2"
                },
                {
                  "label": "checkMark",
                  "type": "t_bool",
                  "offset": 6,
                  "slot": "2"
                }
              ],
              "numberOfBytes": "96"
            },
            "t_struct(House)2798_storage": {
              "label": "struct HouseBusiness.House",
              "members": [
                {
                  "label": "tokenId",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "0"
                },
                {
                  "label": "tokenName",
                  "type": "t_string_storage",
                  "offset": 0,
                  "slot": "1"
                },
                {
                  "label": "tokenURI",
                  "type": "t_string_storage",
                  "offset": 0,
                  "slot": "2"
                },
                {
                  "label": "tokenType",
                  "type": "t_string_storage",
                  "offset": 0,
                  "slot": "3"
                },
                {
                  "label": "currentOwner",
                  "type": "t_address",
                  "offset": 0,
                  "slot": "4"
                },
                {
                  "label": "previousOwner",
                  "type": "t_address",
                  "offset": 0,
                  "slot": "5"
                },
                {
                  "label": "buyer",
                  "type": "t_address",
                  "offset": 0,
                  "slot": "6"
                },
                {
                  "label": "price",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "7"
                },
                {
                  "label": "numberOfTransfers",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "8"
                },
                {
                  "label": "nftPayable",
                  "type": "t_bool",
                  "offset": 0,
                  "slot": "9"
                },
                {
                  "label": "staked",
                  "type": "t_bool",
                  "offset": 1,
                  "slot": "9"
                },
                {
                  "label": "soldstatus",
                  "type": "t_bool",
                  "offset": 2,
                  "slot": "9"
                }
              ],
              "numberOfBytes": "320"
            },
            "t_struct(StakedNft)2815_storage": {
              "label": "struct HouseBusiness.StakedNft",
              "members": [
                {
                  "label": "owner",
                  "type": "t_address",
                  "offset": 0,
                  "slot": "0"
                },
                {
                  "label": "tokenId",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "1"
                },
                {
                  "label": "startedDate",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "2"
                },
                {
                  "label": "endDate",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "3"
                },
                {
                  "label": "claimDate",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "4"
                },
                {
                  "label": "stakingType",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "5"
                },
                {
                  "label": "perSecRewards",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "6"
                },
                {
                  "label": "stakingStatus",
                  "type": "t_bool",
                  "offset": 0,
                  "slot": "7"
                }
              ],
              "numberOfBytes": "256"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            }
          },
          "layoutVersion": "1.1",
          "flat": true
        }
      },
      "IMainCleanContract": {
        "src": "contracts\\interfaces\\IContract.sol:6",
        "inherit": [],
        "libraries": [],
        "methods": [
          "allCleanContracts(uint256)",
          "transferContractOwnership(uint256,address,address)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      }
    },
    {
      "IERC20": {
        "src": "@openzeppelin\\contracts\\token\\ERC20\\IERC20.sol:9",
        "inherit": [],
        "libraries": [],
        "methods": [
          "totalSupply()",
          "balanceOf(address)",
          "transfer(address,uint256)",
          "allowance(address,address)",
          "approve(address,uint256)",
          "transferFrom(address,address,uint256)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "ERC721": {
        "src": "@openzeppelin\\contracts\\token\\ERC721\\ERC721.sol:19",
        "version": {
          "withMetadata": "311027b738fb50ea92c84baf68eacb931adf05de03da13635a661dc9c5b03f73",
          "withoutMetadata": "9ec7f439077c3b762bc3aa6a17c55aba7a78d240190c9c7814df896455a0f780",
          "linkedWithoutMetadata": "9ec7f439077c3b762bc3aa6a17c55aba7a78d240190c9c7814df896455a0f780"
        },
        "inherit": [
          "IERC721Metadata",
          "IERC721",
          "ERC165",
          "IERC165",
          "Context"
        ],
        "libraries": [
          "Address",
          "Strings"
        ],
        "methods": [
          "(string,string)",
          "supportsInterface(bytes4)",
          "balanceOf(address)",
          "ownerOf(uint256)",
          "name()",
          "symbol()",
          "tokenURI(uint256)",
          "approve(address,uint256)",
          "getApproved(uint256)",
          "setApprovalForAll(address,bool)",
          "isApprovedForAll(address,address)",
          "transferFrom(address,address,uint256)",
          "safeTransferFrom(address,address,uint256)",
          "safeTransferFrom(address,address,uint256,bytes)"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "ERC721",
            "src": "@openzeppelin\\contracts\\token\\ERC721\\ERC721.sol:44"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "_name",
              "offset": 0,
              "slot": "0",
              "type": "t_string_storage",
              "contract": "ERC721",
              "src": "@openzeppelin\\contracts\\token\\ERC721\\ERC721.sol:24"
            },
            {
              "label": "_symbol",
              "offset": 0,
              "slot": "1",
              "type": "t_string_storage",
              "contract": "ERC721",
              "src": "@openzeppelin\\contracts\\token\\ERC721\\ERC721.sol:27"
            },
            {
              "label": "_owners",
              "offset": 0,
              "slot": "2",
              "type": "t_mapping(t_uint256,t_address)",
              "contract": "ERC721",
              "src": "@openzeppelin\\contracts\\token\\ERC721\\ERC721.sol:30"
            },
            {
              "label": "_balances",
              "offset": 0,
              "slot": "3",
              "type": "t_mapping(t_address,t_uint256)",
              "contract": "ERC721",
              "src": "@openzeppelin\\contracts\\token\\ERC721\\ERC721.sol:33"
            },
            {
              "label": "_tokenApprovals",
              "offset": 0,
              "slot": "4",
              "type": "t_mapping(t_uint256,t_address)",
              "contract": "ERC721",
              "src": "@openzeppelin\\contracts\\token\\ERC721\\ERC721.sol:36"
            },
            {
              "label": "_operatorApprovals",
              "offset": 0,
              "slot": "5",
              "type": "t_mapping(t_address,t_mapping(t_address,t_bool))",
              "contract": "ERC721",
              "src": "@openzeppelin\\contracts\\token\\ERC721\\ERC721.sol:39"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            },
            "t_bool": {
              "label": "bool",
              "numberOfBytes": "1"
            },
            "t_mapping(t_address,t_bool)": {
              "label": "mapping(address => bool)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_mapping(t_address,t_bool))": {
              "label": "mapping(address => mapping(address => bool))",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_uint256)": {
              "label": "mapping(address => uint256)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_uint256,t_address)": {
              "label": "mapping(uint256 => address)",
              "numberOfBytes": "32"
            },
            "t_string_storage": {
              "label": "string",
              "numberOfBytes": "32"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            }
          },
          "layoutVersion": "1.1",
          "flat": true
        }
      },
      "IERC721": {
        "src": "@openzeppelin\\contracts\\token\\ERC721\\IERC721.sol:11",
        "inherit": [
          "IERC165"
        ],
        "libraries": [],
        "methods": [
          "balanceOf(address)",
          "ownerOf(uint256)",
          "safeTransferFrom(address,address,uint256,bytes)",
          "safeTransferFrom(address,address,uint256)",
          "transferFrom(address,address,uint256)",
          "approve(address,uint256)",
          "setApprovalForAll(address,bool)",
          "getApproved(uint256)",
          "isApprovedForAll(address,address)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "IERC721Receiver": {
        "src": "@openzeppelin\\contracts\\token\\ERC721\\IERC721Receiver.sol:11",
        "inherit": [],
        "libraries": [],
        "methods": [
          "onERC721Received(address,address,uint256,bytes)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "ERC721URIStorage": {
        "src": "@openzeppelin\\contracts\\token\\ERC721\\extensions\\ERC721URIStorage.sol:11",
        "inherit": [
          "ERC721",
          "IERC721Metadata",
          "IERC721",
          "ERC165",
          "IERC165",
          "Context"
        ],
        "libraries": [
          "Strings"
        ],
        "methods": [
          "tokenURI(uint256)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [
            {
              "label": "_name",
              "offset": 0,
              "slot": "0",
              "type": "t_string_storage",
              "contract": "ERC721",
              "src": "@openzeppelin\\contracts\\token\\ERC721\\ERC721.sol:24"
            },
            {
              "label": "_symbol",
              "offset": 0,
              "slot": "1",
              "type": "t_string_storage",
              "contract": "ERC721",
              "src": "@openzeppelin\\contracts\\token\\ERC721\\ERC721.sol:27"
            },
            {
              "label": "_owners",
              "offset": 0,
              "slot": "2",
              "type": "t_mapping(t_uint256,t_address)",
              "contract": "ERC721",
              "src": "@openzeppelin\\contracts\\token\\ERC721\\ERC721.sol:30"
            },
            {
              "label": "_balances",
              "offset": 0,
              "slot": "3",
              "type": "t_mapping(t_address,t_uint256)",
              "contract": "ERC721",
              "src": "@openzeppelin\\contracts\\token\\ERC721\\ERC721.sol:33"
            },
            {
              "label": "_tokenApprovals",
              "offset": 0,
              "slot": "4",
              "type": "t_mapping(t_uint256,t_address)",
              "contract": "ERC721",
              "src": "@openzeppelin\\contracts\\token\\ERC721\\ERC721.sol:36"
            },
            {
              "label": "_operatorApprovals",
              "offset": 0,
              "slot": "5",
              "type": "t_mapping(t_address,t_mapping(t_address,t_bool))",
              "contract": "ERC721",
              "src": "@openzeppelin\\contracts\\token\\ERC721\\ERC721.sol:39"
            },
            {
              "label": "_tokenURIs",
              "offset": 0,
              "slot": "6",
              "type": "t_mapping(t_uint256,t_string_storage)",
              "contract": "ERC721URIStorage",
              "src": "@openzeppelin\\contracts\\token\\ERC721\\extensions\\ERC721URIStorage.sol:15"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            },
            "t_bool": {
              "label": "bool",
              "numberOfBytes": "1"
            },
            "t_mapping(t_address,t_bool)": {
              "label": "mapping(address => bool)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_mapping(t_address,t_bool))": {
              "label": "mapping(address => mapping(address => bool))",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_uint256)": {
              "label": "mapping(address => uint256)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_uint256,t_address)": {
              "label": "mapping(uint256 => address)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_uint256,t_string_storage)": {
              "label": "mapping(uint256 => string)",
              "numberOfBytes": "32"
            },
            "t_string_storage": {
              "label": "string",
              "numberOfBytes": "32"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            }
          },
          "layoutVersion": "1.1",
          "flat": true
        }
      },
      "IERC721Metadata": {
        "src": "@openzeppelin\\contracts\\token\\ERC721\\extensions\\IERC721Metadata.sol:12",
        "inherit": [
          "IERC721",
          "IERC165"
        ],
        "libraries": [],
        "methods": [
          "name()",
          "symbol()",
          "tokenURI(uint256)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "Address": {
        "src": "@openzeppelin\\contracts\\utils\\Address.sol:9",
        "version": {
          "withMetadata": "a0500f265408d7c0dbf75da3f9e44a5c2ee85e18bb1b58fe491ffcfa4ea7fd9b",
          "withoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db",
          "linkedWithoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db"
        },
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [
          {
            "kind": "delegatecall",
            "src": "@openzeppelin\\contracts\\utils\\Address.sol:185"
          }
        ],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "Context": {
        "src": "@openzeppelin\\contracts\\utils\\Context.sol:16",
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "Strings": {
        "src": "@openzeppelin\\contracts\\utils\\Strings.sol:11",
        "version": {
          "withMetadata": "c385b5200dd723f945d28b88358d79ca1b5c0f71c28cbbab9acf6d6f3fd15593",
          "withoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db",
          "linkedWithoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db"
        },
        "inherit": [],
        "libraries": [
          "Math"
        ],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "ERC165": {
        "src": "@openzeppelin\\contracts\\utils\\introspection\\ERC165.sol:22",
        "inherit": [
          "IERC165"
        ],
        "libraries": [],
        "methods": [
          "supportsInterface(bytes4)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "IERC165": {
        "src": "@openzeppelin\\contracts\\utils\\introspection\\IERC165.sol:15",
        "inherit": [],
        "libraries": [],
        "methods": [
          "supportsInterface(bytes4)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "Math": {
        "src": "@openzeppelin\\contracts\\utils\\math\\Math.sol:9",
        "version": {
          "withMetadata": "fcaf39e5e702f2902d6ef00c1def75c9800e8d2a0a78a87cf542096cafc7a4b0",
          "withoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db",
          "linkedWithoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db"
        },
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "HouseBusiness": {
        "src": "contracts\\HouseBusiness.sol:11",
        "version": {
          "withMetadata": "5622414cb2e40a3b7ea78f0086f8389e2d5a0827805d3cb1b2c8d3a3efb9d794",
          "withoutMetadata": "c220ec01efe625ab93e1158492e4e853e6256833ade636ebcf870cd4a6cd50e5",
          "linkedWithoutMetadata": "c220ec01efe625ab93e1158492e4e853e6256833ade636ebcf870cd4a6cd50e5"
        },
        "inherit": [
          "ERC721URIStorage",
          "ERC721",
          "IERC721Metadata",
          "IERC721",
          "ERC165",
          "IERC165",
          "Context"
        ],
        "libraries": [],
        "methods": [
          "(address)",
          "setMinMaxHousePrice(uint256,uint256)",
          "setConfigToken(address)",
          "isMember()",
          "addMember(address)",
          "removeMember(address)",
          "tokenURI(uint256)",
          "setCContractAddress(address)",
          "setPayable(uint256,address,bool)",
          "mintHouse(string,string,string,string,uint256)",
          "addAllowList(uint256,address)",
          "removeAllowList(uint256,address)",
          "checkAllowedList(uint256,address)",
          "addHistory(uint256,uint256,uint256,string,string,string,string,string,uint256)",
          "getHistory(uint256)",
          "editHistory(uint256,uint256,string,string,string,string,string,uint256)",
          "getHistoryType()",
          "addOrEditHType(uint256,string,bool,bool,bool,bool,bool,bool,bool)",
          "removeHistoryType(uint256)",
          "getMinMaxNFT()",
          "getTokenOwner(uint256)",
          "buyHouseNft(uint256)",
          "sendToken(address,uint256)",
          "changeTokenPrice(uint256,uint256)",
          "getAllHouses()",
          "getAllPayableHouses()",
          "getAllMyHouses()",
          "withdrawToken(uint256)",
          "withdrawETH(uint256)",
          "calcDiv(uint256,uint256)",
          "setAPYConfig(uint256,uint256)",
          "getAllAPYTypes()",
          "getAllMyStakedNFTs()",
          "getTotalInfo()",
          "getAllAPYs()",
          "getPenalty()",
          "setPenalty(uint256)",
          "getRoyalty()",
          "setRoyalty(uint256)"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "HouseBusiness",
            "src": "contracts\\HouseBusiness.sol:106"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "_name",
              "offset": 0,
              "slot": "0",
              "type": "t_string_storage",
              "contract": "ERC721",
              "src": "@openzeppelin\\contracts\\token\\ERC721\\ERC721.sol:24"
            },
            {
              "label": "_symbol",
              "offset": 0,
              "slot": "1",
              "type": "t_string_storage",
              "contract": "ERC721",
              "src": "@openzeppelin\\contracts\\token\\ERC721\\ERC721.sol:27"
            },
            {
              "label": "_owners",
              "offset": 0,
              "slot": "2",
              "type": "t_mapping(t_uint256,t_address)",
              "contract": "ERC721",
              "src": "@openzeppelin\\contracts\\token\\ERC721\\ERC721.sol:30"
            },
            {
              "label": "_balances",
              "offset": 0,
              "slot": "3",
              "type": "t_mapping(t_address,t_uint256)",
              "contract": "ERC721",
              "src": "@openzeppelin\\contracts\\token\\ERC721\\ERC721.sol:33"
            },
            {
              "label": "_tokenApprovals",
              "offset": 0,
              "slot": "4",
              "type": "t_mapping(t_uint256,t_address)",
              "contract": "ERC721",
              "src": "@openzeppelin\\contracts\\token\\ERC721\\ERC721.sol:36"
            },
            {
              "label": "_operatorApprovals",
              "offset": 0,
              "slot": "5",
              "type": "t_mapping(t_address,t_mapping(t_address,t_bool))",
              "contract": "ERC721",
              "src": "@openzeppelin\\contracts\\token\\ERC721\\ERC721.sol:39"
            },
            {
              "label": "_tokenURIs",
              "offset": 0,
              "slot": "6",
              "type": "t_mapping(t_uint256,t_string_storage)",
              "contract": "ERC721URIStorage",
              "src": "@openzeppelin\\contracts\\token\\ERC721\\extensions\\ERC721URIStorage.sol:15"
            },
            {
              "label": "collectionName",
              "offset": 0,
              "slot": "7",
              "type": "t_string_storage",
              "contract": "HouseBusiness",
              "src": "contracts\\HouseBusiness.sol:13"
            },
            {
              "label": "collectionNameSymbol",
              "offset": 0,
              "slot": "8",
              "type": "t_string_storage",
              "contract": "HouseBusiness",
              "src": "contracts\\HouseBusiness.sol:15"
            },
            {
              "label": "houseCounter",
              "offset": 0,
              "slot": "9",
              "type": "t_uint256",
              "contract": "HouseBusiness",
              "src": "contracts\\HouseBusiness.sol:17"
            },
            {
              "label": "stakedCounter",
              "offset": 0,
              "slot": "10",
              "type": "t_uint256",
              "contract": "HouseBusiness",
              "src": "contracts\\HouseBusiness.sol:19"
            },
            {
              "label": "soldedCounter",
              "offset": 0,
              "slot": "11",
              "type": "t_uint256",
              "contract": "HouseBusiness",
              "src": "contracts\\HouseBusiness.sol:21"
            },
            {
              "label": "hTypeCounter",
              "offset": 0,
              "slot": "12",
              "type": "t_uint256",
              "contract": "HouseBusiness",
              "src": "contracts\\HouseBusiness.sol:23"
            },
            {
              "label": "_token",
              "offset": 0,
              "slot": "13",
              "type": "t_contract(IERC20)77",
              "contract": "HouseBusiness",
              "src": "contracts\\HouseBusiness.sol:25"
            },
            {
              "label": "minPrice",
              "offset": 0,
              "slot": "14",
              "type": "t_uint256",
              "contract": "HouseBusiness",
              "src": "contracts\\HouseBusiness.sol:27"
            },
            {
              "label": "maxPrice",
              "offset": 0,
              "slot": "15",
              "type": "t_uint256",
              "contract": "HouseBusiness",
              "src": "contracts\\HouseBusiness.sol:29"
            },
            {
              "label": "penalty",
              "offset": 0,
              "slot": "16",
              "type": "t_uint256",
              "contract": "HouseBusiness",
              "src": "contracts\\HouseBusiness.sol:31"
            },
            {
              "label": "royalty",
              "offset": 0,
              "slot": "17",
              "type": "t_uint256",
              "contract": "HouseBusiness",
              "src": "contracts\\HouseBusiness.sol:33"
            },
            {
              "label": "cContract",
              "offset": 0,
              "slot": "18",
              "type": "t_contract(IMainCleanContract)4818",
              "contract": "HouseBusiness",
              "src": "contracts\\HouseBusiness.sol:35"
            },
            {
              "label": "historyTypes",
              "offset": 0,
              "slot": "19",
              "type": "t_array(t_struct(HistoryType)2851_storage)dyn_storage",
              "contract": "HouseBusiness",
              "src": "contracts\\HouseBusiness.sol:86"
            },
            {
              "label": "houseHistories",
              "offset": 0,
              "slot": "20",
              "type": "t_mapping(t_uint256,t_array(t_struct(History)2832_storage)dyn_storage)",
              "contract": "HouseBusiness",
              "src": "contracts\\HouseBusiness.sol:88"
            },
            {
              "label": "APYtypes",
              "offset": 0,
              "slot": "21",
              "type": "t_array(t_uint256)dyn_storage",
              "contract": "HouseBusiness",
              "src": "contracts\\HouseBusiness.sol:90"
            },
            {
              "label": "APYConfig",
              "offset": 0,
              "slot": "22",
              "type": "t_mapping(t_uint256,t_uint256)",
              "contract": "HouseBusiness",
              "src": "contracts\\HouseBusiness.sol:92"
            },
            {
              "label": "allMembers",
              "offset": 0,
              "slot": "23",
              "type": "t_mapping(t_address,t_bool)",
              "contract": "HouseBusiness",
              "src": "contracts\\HouseBusiness.sol:94"
            },
            {
              "label": "allHouses",
              "offset": 0,
              "slot": "24",
              "type": "t_mapping(t_uint256,t_struct(House)2798_storage)",
              "contract": "HouseBusiness",
              "src": "contracts\\HouseBusiness.sol:96"
            },
            {
              "label": "allowedList",
              "offset": 0,
              "slot": "25",
              "type": "t_mapping(t_uint256,t_mapping(t_address,t_bool))",
              "contract": "HouseBusiness",
              "src": "contracts\\HouseBusiness.sol:98"
            },
            {
              "label": "stakedNfts",
              "offset": 0,
              "slot": "26",
              "type": "t_mapping(t_address,t_array(t_struct(StakedNft)2815_storage)dyn_storage)",
              "contract": "HouseBusiness",
              "src": "contracts\\HouseBusiness.sol:104"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            },
            "t_array(t_struct(History)2832_storage)dyn_storage": {
              "label": "struct HouseBusiness.History[]",
              "numberOfBytes": "32"
            },
            "t_array(t_struct(HistoryType)2851_storage)dyn_storage": {
              "label": "struct HouseBusiness.HistoryType[]",
              "numberOfBytes": "32"
            },
            "t_array(t_struct(StakedNft)2815_storage)dyn_storage": {
              "label": "struct HouseBusiness.StakedNft[]",
              "numberOfBytes": "32"
            },
            "t_array(t_uint256)dyn_storage": {
              "label": "uint256[]",
              "numberOfBytes": "32"
            },
            "t_bool": {
              "label": "bool",
              "numberOfBytes": "1"
            },
            "t_contract(IERC20)77": {
              "label": "contract IERC20",
              "numberOfBytes": "20"
            },
            "t_contract(IMainCleanContract)4818": {
              "label": "contract IMainCleanContract",
              "numberOfBytes": "20"
            },
            "t_mapping(t_address,t_array(t_struct(StakedNft)2815_storage)dyn_storage)": {
              "label": "mapping(address => struct HouseBusiness.StakedNft[])",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_bool)": {
              "label": "mapping(address => bool)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_mapping(t_address,t_bool))": {
              "label": "mapping(address => mapping(address => bool))",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_uint256)": {
              "label": "mapping(address => uint256)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_uint256,t_address)": {
              "label": "mapping(uint256 => address)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_uint256,t_array(t_struct(History)2832_storage)dyn_storage)": {
              "label": "mapping(uint256 => struct HouseBusiness.History[])",
              "numberOfBytes": "32"
            },
            "t_mapping(t_uint256,t_mapping(t_address,t_bool))": {
              "label": "mapping(uint256 => mapping(address => bool))",
              "numberOfBytes": "32"
            },
            "t_mapping(t_uint256,t_string_storage)": {
              "label": "mapping(uint256 => string)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_uint256,t_struct(House)2798_storage)": {
              "label": "mapping(uint256 => struct HouseBusiness.House)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_uint256,t_uint256)": {
              "label": "mapping(uint256 => uint256)",
              "numberOfBytes": "32"
            },
            "t_string_storage": {
              "label": "string",
              "numberOfBytes": "32"
            },
            "t_struct(History)2832_storage": {
              "label": "struct HouseBusiness.History",
              "members": [
                {
                  "label": "hID",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "0"
                },
                {
                  "label": "contractId",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "1"
                },
                {
                  "label": "houseImg",
                  "type": "t_string_storage",
                  "offset": 0,
                  "slot": "2"
                },
                {
                  "label": "houseBrand",
                  "type": "t_string_storage",
                  "offset": 0,
                  "slot": "3"
                },
                {
                  "label": "desc",
                  "type": "t_string_storage",
                  "offset": 0,
                  "slot": "4"
                },
                {
                  "label": "history",
                  "type": "t_string_storage",
                  "offset": 0,
                  "slot": "5"
                },
                {
                  "label": "brandType",
                  "type": "t_string_storage",
                  "offset": 0,
                  "slot": "6"
                },
                {
                  "label": "yearField",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "7"
                }
              ],
              "numberOfBytes": "256"
            },
            "t_struct(HistoryType)2851_storage": {
              "label": "struct HouseBusiness.HistoryType",
              "members": [
                {
                  "label": "hID",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "0"
                },
                {
                  "label": "hLabel",
                  "type": "t_string_storage",
                  "offset": 0,
                  "slot": "1"
                },
                {
                  "label": "connectContract",
                  "type": "t_bool",
                  "offset": 0,
                  "slot": "2"
                },
                {
                  "label": "imgNeed",
                  "type": "t_bool",
                  "offset": 1,
                  "slot": "2"
                },
                {
                  "label": "brandNeed",
                  "type": "t_bool",
                  "offset": 2,
                  "slot": "2"
                },
                {
                  "label": "descNeed",
                  "type": "t_bool",
                  "offset": 3,
                  "slot": "2"
                },
                {
                  "label": "brandTypeNeed",
                  "type": "t_bool",
                  "offset": 4,
                  "slot": "2"
                },
                {
                  "label": "yearNeed",
                  "type": "t_bool",
                  "offset": 5,
                  "slot": "2"
                },
                {
                  "label": "checkMark",
                  "type": "t_bool",
                  "offset": 6,
                  "slot": "2"
                }
              ],
              "numberOfBytes": "96"
            },
            "t_struct(House)2798_storage": {
              "label": "struct HouseBusiness.House",
              "members": [
                {
                  "label": "tokenId",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "0"
                },
                {
                  "label": "tokenName",
                  "type": "t_string_storage",
                  "offset": 0,
                  "slot": "1"
                },
                {
                  "label": "tokenURI",
                  "type": "t_string_storage",
                  "offset": 0,
                  "slot": "2"
                },
                {
                  "label": "tokenType",
                  "type": "t_string_storage",
                  "offset": 0,
                  "slot": "3"
                },
                {
                  "label": "currentOwner",
                  "type": "t_address",
                  "offset": 0,
                  "slot": "4"
                },
                {
                  "label": "previousOwner",
                  "type": "t_address",
                  "offset": 0,
                  "slot": "5"
                },
                {
                  "label": "buyer",
                  "type": "t_address",
                  "offset": 0,
                  "slot": "6"
                },
                {
                  "label": "price",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "7"
                },
                {
                  "label": "numberOfTransfers",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "8"
                },
                {
                  "label": "nftPayable",
                  "type": "t_bool",
                  "offset": 0,
                  "slot": "9"
                },
                {
                  "label": "staked",
                  "type": "t_bool",
                  "offset": 1,
                  "slot": "9"
                },
                {
                  "label": "soldstatus",
                  "type": "t_bool",
                  "offset": 2,
                  "slot": "9"
                }
              ],
              "numberOfBytes": "320"
            },
            "t_struct(StakedNft)2815_storage": {
              "label": "struct HouseBusiness.StakedNft",
              "members": [
                {
                  "label": "owner",
                  "type": "t_address",
                  "offset": 0,
                  "slot": "0"
                },
                {
                  "label": "tokenId",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "1"
                },
                {
                  "label": "startedDate",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "2"
                },
                {
                  "label": "endDate",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "3"
                },
                {
                  "label": "claimDate",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "4"
                },
                {
                  "label": "stakingType",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "5"
                },
                {
                  "label": "perSecRewards",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "6"
                },
                {
                  "label": "stakingStatus",
                  "type": "t_bool",
                  "offset": 0,
                  "slot": "7"
                }
              ],
              "numberOfBytes": "256"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            }
          },
          "layoutVersion": "1.1",
          "flat": true
        }
      },
      "IMainCleanContract": {
        "src": "contracts\\interfaces\\IContract.sol:6",
        "inherit": [],
        "libraries": [],
        "methods": [
          "allCleanContracts(uint256)",
          "transferContractOwnership(uint256,address,address)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      }
    },
    {
      "IERC20": {
        "src": "@openzeppelin\\contracts\\token\\ERC20\\IERC20.sol:9",
        "inherit": [],
        "libraries": [],
        "methods": [
          "totalSupply()",
          "balanceOf(address)",
          "transfer(address,uint256)",
          "allowance(address,address)",
          "approve(address,uint256)",
          "transferFrom(address,address,uint256)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "ERC721": {
        "src": "@openzeppelin\\contracts\\token\\ERC721\\ERC721.sol:19",
        "version": {
          "withMetadata": "311027b738fb50ea92c84baf68eacb931adf05de03da13635a661dc9c5b03f73",
          "withoutMetadata": "9ec7f439077c3b762bc3aa6a17c55aba7a78d240190c9c7814df896455a0f780",
          "linkedWithoutMetadata": "9ec7f439077c3b762bc3aa6a17c55aba7a78d240190c9c7814df896455a0f780"
        },
        "inherit": [
          "IERC721Metadata",
          "IERC721",
          "ERC165",
          "IERC165",
          "Context"
        ],
        "libraries": [
          "Address",
          "Strings"
        ],
        "methods": [
          "(string,string)",
          "supportsInterface(bytes4)",
          "balanceOf(address)",
          "ownerOf(uint256)",
          "name()",
          "symbol()",
          "tokenURI(uint256)",
          "approve(address,uint256)",
          "getApproved(uint256)",
          "setApprovalForAll(address,bool)",
          "isApprovedForAll(address,address)",
          "transferFrom(address,address,uint256)",
          "safeTransferFrom(address,address,uint256)",
          "safeTransferFrom(address,address,uint256,bytes)"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "ERC721",
            "src": "@openzeppelin\\contracts\\token\\ERC721\\ERC721.sol:44"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "_name",
              "offset": 0,
              "slot": "0",
              "type": "t_string_storage",
              "contract": "ERC721",
              "src": "@openzeppelin\\contracts\\token\\ERC721\\ERC721.sol:24"
            },
            {
              "label": "_symbol",
              "offset": 0,
              "slot": "1",
              "type": "t_string_storage",
              "contract": "ERC721",
              "src": "@openzeppelin\\contracts\\token\\ERC721\\ERC721.sol:27"
            },
            {
              "label": "_owners",
              "offset": 0,
              "slot": "2",
              "type": "t_mapping(t_uint256,t_address)",
              "contract": "ERC721",
              "src": "@openzeppelin\\contracts\\token\\ERC721\\ERC721.sol:30"
            },
            {
              "label": "_balances",
              "offset": 0,
              "slot": "3",
              "type": "t_mapping(t_address,t_uint256)",
              "contract": "ERC721",
              "src": "@openzeppelin\\contracts\\token\\ERC721\\ERC721.sol:33"
            },
            {
              "label": "_tokenApprovals",
              "offset": 0,
              "slot": "4",
              "type": "t_mapping(t_uint256,t_address)",
              "contract": "ERC721",
              "src": "@openzeppelin\\contracts\\token\\ERC721\\ERC721.sol:36"
            },
            {
              "label": "_operatorApprovals",
              "offset": 0,
              "slot": "5",
              "type": "t_mapping(t_address,t_mapping(t_address,t_bool))",
              "contract": "ERC721",
              "src": "@openzeppelin\\contracts\\token\\ERC721\\ERC721.sol:39"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            },
            "t_bool": {
              "label": "bool",
              "numberOfBytes": "1"
            },
            "t_mapping(t_address,t_bool)": {
              "label": "mapping(address => bool)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_mapping(t_address,t_bool))": {
              "label": "mapping(address => mapping(address => bool))",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_uint256)": {
              "label": "mapping(address => uint256)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_uint256,t_address)": {
              "label": "mapping(uint256 => address)",
              "numberOfBytes": "32"
            },
            "t_string_storage": {
              "label": "string",
              "numberOfBytes": "32"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            }
          },
          "layoutVersion": "1.1",
          "flat": true
        }
      },
      "IERC721": {
        "src": "@openzeppelin\\contracts\\token\\ERC721\\IERC721.sol:11",
        "inherit": [
          "IERC165"
        ],
        "libraries": [],
        "methods": [
          "balanceOf(address)",
          "ownerOf(uint256)",
          "safeTransferFrom(address,address,uint256,bytes)",
          "safeTransferFrom(address,address,uint256)",
          "transferFrom(address,address,uint256)",
          "approve(address,uint256)",
          "setApprovalForAll(address,bool)",
          "getApproved(uint256)",
          "isApprovedForAll(address,address)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "IERC721Receiver": {
        "src": "@openzeppelin\\contracts\\token\\ERC721\\IERC721Receiver.sol:11",
        "inherit": [],
        "libraries": [],
        "methods": [
          "onERC721Received(address,address,uint256,bytes)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "ERC721URIStorage": {
        "src": "@openzeppelin\\contracts\\token\\ERC721\\extensions\\ERC721URIStorage.sol:11",
        "inherit": [
          "ERC721",
          "IERC721Metadata",
          "IERC721",
          "ERC165",
          "IERC165",
          "Context"
        ],
        "libraries": [
          "Strings"
        ],
        "methods": [
          "tokenURI(uint256)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [
            {
              "label": "_name",
              "offset": 0,
              "slot": "0",
              "type": "t_string_storage",
              "contract": "ERC721",
              "src": "@openzeppelin\\contracts\\token\\ERC721\\ERC721.sol:24"
            },
            {
              "label": "_symbol",
              "offset": 0,
              "slot": "1",
              "type": "t_string_storage",
              "contract": "ERC721",
              "src": "@openzeppelin\\contracts\\token\\ERC721\\ERC721.sol:27"
            },
            {
              "label": "_owners",
              "offset": 0,
              "slot": "2",
              "type": "t_mapping(t_uint256,t_address)",
              "contract": "ERC721",
              "src": "@openzeppelin\\contracts\\token\\ERC721\\ERC721.sol:30"
            },
            {
              "label": "_balances",
              "offset": 0,
              "slot": "3",
              "type": "t_mapping(t_address,t_uint256)",
              "contract": "ERC721",
              "src": "@openzeppelin\\contracts\\token\\ERC721\\ERC721.sol:33"
            },
            {
              "label": "_tokenApprovals",
              "offset": 0,
              "slot": "4",
              "type": "t_mapping(t_uint256,t_address)",
              "contract": "ERC721",
              "src": "@openzeppelin\\contracts\\token\\ERC721\\ERC721.sol:36"
            },
            {
              "label": "_operatorApprovals",
              "offset": 0,
              "slot": "5",
              "type": "t_mapping(t_address,t_mapping(t_address,t_bool))",
              "contract": "ERC721",
              "src": "@openzeppelin\\contracts\\token\\ERC721\\ERC721.sol:39"
            },
            {
              "label": "_tokenURIs",
              "offset": 0,
              "slot": "6",
              "type": "t_mapping(t_uint256,t_string_storage)",
              "contract": "ERC721URIStorage",
              "src": "@openzeppelin\\contracts\\token\\ERC721\\extensions\\ERC721URIStorage.sol:15"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            },
            "t_bool": {
              "label": "bool",
              "numberOfBytes": "1"
            },
            "t_mapping(t_address,t_bool)": {
              "label": "mapping(address => bool)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_mapping(t_address,t_bool))": {
              "label": "mapping(address => mapping(address => bool))",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_uint256)": {
              "label": "mapping(address => uint256)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_uint256,t_address)": {
              "label": "mapping(uint256 => address)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_uint256,t_string_storage)": {
              "label": "mapping(uint256 => string)",
              "numberOfBytes": "32"
            },
            "t_string_storage": {
              "label": "string",
              "numberOfBytes": "32"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            }
          },
          "layoutVersion": "1.1",
          "flat": true
        }
      },
      "IERC721Metadata": {
        "src": "@openzeppelin\\contracts\\token\\ERC721\\extensions\\IERC721Metadata.sol:12",
        "inherit": [
          "IERC721",
          "IERC165"
        ],
        "libraries": [],
        "methods": [
          "name()",
          "symbol()",
          "tokenURI(uint256)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "Address": {
        "src": "@openzeppelin\\contracts\\utils\\Address.sol:9",
        "version": {
          "withMetadata": "a0500f265408d7c0dbf75da3f9e44a5c2ee85e18bb1b58fe491ffcfa4ea7fd9b",
          "withoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db",
          "linkedWithoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db"
        },
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [
          {
            "kind": "delegatecall",
            "src": "@openzeppelin\\contracts\\utils\\Address.sol:185"
          }
        ],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "Context": {
        "src": "@openzeppelin\\contracts\\utils\\Context.sol:16",
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "Strings": {
        "src": "@openzeppelin\\contracts\\utils\\Strings.sol:11",
        "version": {
          "withMetadata": "c385b5200dd723f945d28b88358d79ca1b5c0f71c28cbbab9acf6d6f3fd15593",
          "withoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db",
          "linkedWithoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db"
        },
        "inherit": [],
        "libraries": [
          "Math"
        ],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "ERC165": {
        "src": "@openzeppelin\\contracts\\utils\\introspection\\ERC165.sol:22",
        "inherit": [
          "IERC165"
        ],
        "libraries": [],
        "methods": [
          "supportsInterface(bytes4)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "IERC165": {
        "src": "@openzeppelin\\contracts\\utils\\introspection\\IERC165.sol:15",
        "inherit": [],
        "libraries": [],
        "methods": [
          "supportsInterface(bytes4)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "Math": {
        "src": "@openzeppelin\\contracts\\utils\\math\\Math.sol:9",
        "version": {
          "withMetadata": "fcaf39e5e702f2902d6ef00c1def75c9800e8d2a0a78a87cf542096cafc7a4b0",
          "withoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db",
          "linkedWithoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db"
        },
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "HouseBusiness": {
        "src": "contracts\\HouseBusiness.sol:11",
        "version": {
          "withMetadata": "e7de8856e4b80330f57aefb296f4b29abc9cbad6e3e437c70c069debd0d8a961",
          "withoutMetadata": "f1dcccf3ef42a5229a0d9d86afb4183cbce1c1ecfccae2d984afa3d54fd3b504",
          "linkedWithoutMetadata": "f1dcccf3ef42a5229a0d9d86afb4183cbce1c1ecfccae2d984afa3d54fd3b504"
        },
        "inherit": [
          "ERC721URIStorage",
          "ERC721",
          "IERC721Metadata",
          "IERC721",
          "ERC165",
          "IERC165",
          "Context"
        ],
        "libraries": [],
        "methods": [
          "(address)",
          "setMinMaxHousePrice(uint256,uint256)",
          "setConfigToken(address)",
          "isMember()",
          "addMember(address)",
          "removeMember(address)",
          "tokenURI(uint256)",
          "setCContractAddress(address)",
          "setPayable(uint256,address,bool)",
          "mintHouse(string,string,string,string,uint256)",
          "addAllowList(uint256,address)",
          "removeAllowList(uint256,address)",
          "checkAllowedList(uint256,address)",
          "addHistory(uint256,uint256,uint256,string,string,string,string,string,uint256)",
          "getHistory(uint256)",
          "editHistory(uint256,uint256,string,string,string,string,string,uint256)",
          "getHistoryType()",
          "addOrEditHType(uint256,string,bool,bool,bool,bool,bool,bool,bool)",
          "removeHistoryType(uint256)",
          "getMinMaxNFT()",
          "getTokenOwner(uint256)",
          "buyHouseNft(uint256)",
          "sendToken(address,uint256)",
          "changeTokenPrice(uint256,uint256)",
          "getAllHouses()",
          "getAllPayableHouses()",
          "getAllMyHouses()",
          "withdrawToken(uint256)",
          "withdrawETH(uint256)",
          "calcDiv(uint256,uint256)",
          "setAPYConfig(uint256,uint256)",
          "getAllAPYTypes()",
          "stake(uint256,uint256)",
          "unstake(uint256)",
          "stakingFinished(uint256)",
          "totalRewards(address)",
          "claimRewards(address)",
          "getAllMyStakedNFTs()",
          "getTotalInfo()",
          "getAllAPYs()",
          "getPenalty()",
          "setPenalty(uint256)",
          "getRoyalty()",
          "setRoyalty(uint256)"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "HouseBusiness",
            "src": "contracts\\HouseBusiness.sol:106"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "_name",
              "offset": 0,
              "slot": "0",
              "type": "t_string_storage",
              "contract": "ERC721",
              "src": "@openzeppelin\\contracts\\token\\ERC721\\ERC721.sol:24"
            },
            {
              "label": "_symbol",
              "offset": 0,
              "slot": "1",
              "type": "t_string_storage",
              "contract": "ERC721",
              "src": "@openzeppelin\\contracts\\token\\ERC721\\ERC721.sol:27"
            },
            {
              "label": "_owners",
              "offset": 0,
              "slot": "2",
              "type": "t_mapping(t_uint256,t_address)",
              "contract": "ERC721",
              "src": "@openzeppelin\\contracts\\token\\ERC721\\ERC721.sol:30"
            },
            {
              "label": "_balances",
              "offset": 0,
              "slot": "3",
              "type": "t_mapping(t_address,t_uint256)",
              "contract": "ERC721",
              "src": "@openzeppelin\\contracts\\token\\ERC721\\ERC721.sol:33"
            },
            {
              "label": "_tokenApprovals",
              "offset": 0,
              "slot": "4",
              "type": "t_mapping(t_uint256,t_address)",
              "contract": "ERC721",
              "src": "@openzeppelin\\contracts\\token\\ERC721\\ERC721.sol:36"
            },
            {
              "label": "_operatorApprovals",
              "offset": 0,
              "slot": "5",
              "type": "t_mapping(t_address,t_mapping(t_address,t_bool))",
              "contract": "ERC721",
              "src": "@openzeppelin\\contracts\\token\\ERC721\\ERC721.sol:39"
            },
            {
              "label": "_tokenURIs",
              "offset": 0,
              "slot": "6",
              "type": "t_mapping(t_uint256,t_string_storage)",
              "contract": "ERC721URIStorage",
              "src": "@openzeppelin\\contracts\\token\\ERC721\\extensions\\ERC721URIStorage.sol:15"
            },
            {
              "label": "collectionName",
              "offset": 0,
              "slot": "7",
              "type": "t_string_storage",
              "contract": "HouseBusiness",
              "src": "contracts\\HouseBusiness.sol:13"
            },
            {
              "label": "collectionNameSymbol",
              "offset": 0,
              "slot": "8",
              "type": "t_string_storage",
              "contract": "HouseBusiness",
              "src": "contracts\\HouseBusiness.sol:15"
            },
            {
              "label": "houseCounter",
              "offset": 0,
              "slot": "9",
              "type": "t_uint256",
              "contract": "HouseBusiness",
              "src": "contracts\\HouseBusiness.sol:17"
            },
            {
              "label": "stakedCounter",
              "offset": 0,
              "slot": "10",
              "type": "t_uint256",
              "contract": "HouseBusiness",
              "src": "contracts\\HouseBusiness.sol:19"
            },
            {
              "label": "soldedCounter",
              "offset": 0,
              "slot": "11",
              "type": "t_uint256",
              "contract": "HouseBusiness",
              "src": "contracts\\HouseBusiness.sol:21"
            },
            {
              "label": "hTypeCounter",
              "offset": 0,
              "slot": "12",
              "type": "t_uint256",
              "contract": "HouseBusiness",
              "src": "contracts\\HouseBusiness.sol:23"
            },
            {
              "label": "_token",
              "offset": 0,
              "slot": "13",
              "type": "t_contract(IERC20)77",
              "contract": "HouseBusiness",
              "src": "contracts\\HouseBusiness.sol:25"
            },
            {
              "label": "minPrice",
              "offset": 0,
              "slot": "14",
              "type": "t_uint256",
              "contract": "HouseBusiness",
              "src": "contracts\\HouseBusiness.sol:27"
            },
            {
              "label": "maxPrice",
              "offset": 0,
              "slot": "15",
              "type": "t_uint256",
              "contract": "HouseBusiness",
              "src": "contracts\\HouseBusiness.sol:29"
            },
            {
              "label": "penalty",
              "offset": 0,
              "slot": "16",
              "type": "t_uint256",
              "contract": "HouseBusiness",
              "src": "contracts\\HouseBusiness.sol:31"
            },
            {
              "label": "royalty",
              "offset": 0,
              "slot": "17",
              "type": "t_uint256",
              "contract": "HouseBusiness",
              "src": "contracts\\HouseBusiness.sol:33"
            },
            {
              "label": "cContract",
              "offset": 0,
              "slot": "18",
              "type": "t_contract(IMainCleanContract)5549",
              "contract": "HouseBusiness",
              "src": "contracts\\HouseBusiness.sol:35"
            },
            {
              "label": "historyTypes",
              "offset": 0,
              "slot": "19",
              "type": "t_array(t_struct(HistoryType)2851_storage)dyn_storage",
              "contract": "HouseBusiness",
              "src": "contracts\\HouseBusiness.sol:86"
            },
            {
              "label": "houseHistories",
              "offset": 0,
              "slot": "20",
              "type": "t_mapping(t_uint256,t_array(t_struct(History)2832_storage)dyn_storage)",
              "contract": "HouseBusiness",
              "src": "contracts\\HouseBusiness.sol:88"
            },
            {
              "label": "APYtypes",
              "offset": 0,
              "slot": "21",
              "type": "t_array(t_uint256)dyn_storage",
              "contract": "HouseBusiness",
              "src": "contracts\\HouseBusiness.sol:90"
            },
            {
              "label": "APYConfig",
              "offset": 0,
              "slot": "22",
              "type": "t_mapping(t_uint256,t_uint256)",
              "contract": "HouseBusiness",
              "src": "contracts\\HouseBusiness.sol:92"
            },
            {
              "label": "allMembers",
              "offset": 0,
              "slot": "23",
              "type": "t_mapping(t_address,t_bool)",
              "contract": "HouseBusiness",
              "src": "contracts\\HouseBusiness.sol:94"
            },
            {
              "label": "allHouses",
              "offset": 0,
              "slot": "24",
              "type": "t_mapping(t_uint256,t_struct(House)2798_storage)",
              "contract": "HouseBusiness",
              "src": "contracts\\HouseBusiness.sol:96"
            },
            {
              "label": "allowedList",
              "offset": 0,
              "slot": "25",
              "type": "t_mapping(t_uint256,t_mapping(t_address,t_bool))",
              "contract": "HouseBusiness",
              "src": "contracts\\HouseBusiness.sol:98"
            },
            {
              "label": "stakedNfts",
              "offset": 0,
              "slot": "26",
              "type": "t_mapping(t_address,t_array(t_struct(StakedNft)2815_storage)dyn_storage)",
              "contract": "HouseBusiness",
              "src": "contracts\\HouseBusiness.sol:104"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            },
            "t_array(t_struct(History)2832_storage)dyn_storage": {
              "label": "struct HouseBusiness.History[]",
              "numberOfBytes": "32"
            },
            "t_array(t_struct(HistoryType)2851_storage)dyn_storage": {
              "label": "struct HouseBusiness.HistoryType[]",
              "numberOfBytes": "32"
            },
            "t_array(t_struct(StakedNft)2815_storage)dyn_storage": {
              "label": "struct HouseBusiness.StakedNft[]",
              "numberOfBytes": "32"
            },
            "t_array(t_uint256)dyn_storage": {
              "label": "uint256[]",
              "numberOfBytes": "32"
            },
            "t_bool": {
              "label": "bool",
              "numberOfBytes": "1"
            },
            "t_contract(IERC20)77": {
              "label": "contract IERC20",
              "numberOfBytes": "20"
            },
            "t_contract(IMainCleanContract)5549": {
              "label": "contract IMainCleanContract",
              "numberOfBytes": "20"
            },
            "t_mapping(t_address,t_array(t_struct(StakedNft)2815_storage)dyn_storage)": {
              "label": "mapping(address => struct HouseBusiness.StakedNft[])",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_bool)": {
              "label": "mapping(address => bool)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_mapping(t_address,t_bool))": {
              "label": "mapping(address => mapping(address => bool))",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_uint256)": {
              "label": "mapping(address => uint256)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_uint256,t_address)": {
              "label": "mapping(uint256 => address)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_uint256,t_array(t_struct(History)2832_storage)dyn_storage)": {
              "label": "mapping(uint256 => struct HouseBusiness.History[])",
              "numberOfBytes": "32"
            },
            "t_mapping(t_uint256,t_mapping(t_address,t_bool))": {
              "label": "mapping(uint256 => mapping(address => bool))",
              "numberOfBytes": "32"
            },
            "t_mapping(t_uint256,t_string_storage)": {
              "label": "mapping(uint256 => string)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_uint256,t_struct(House)2798_storage)": {
              "label": "mapping(uint256 => struct HouseBusiness.House)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_uint256,t_uint256)": {
              "label": "mapping(uint256 => uint256)",
              "numberOfBytes": "32"
            },
            "t_string_storage": {
              "label": "string",
              "numberOfBytes": "32"
            },
            "t_struct(History)2832_storage": {
              "label": "struct HouseBusiness.History",
              "members": [
                {
                  "label": "hID",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "0"
                },
                {
                  "label": "contractId",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "1"
                },
                {
                  "label": "houseImg",
                  "type": "t_string_storage",
                  "offset": 0,
                  "slot": "2"
                },
                {
                  "label": "houseBrand",
                  "type": "t_string_storage",
                  "offset": 0,
                  "slot": "3"
                },
                {
                  "label": "desc",
                  "type": "t_string_storage",
                  "offset": 0,
                  "slot": "4"
                },
                {
                  "label": "history",
                  "type": "t_string_storage",
                  "offset": 0,
                  "slot": "5"
                },
                {
                  "label": "brandType",
                  "type": "t_string_storage",
                  "offset": 0,
                  "slot": "6"
                },
                {
                  "label": "yearField",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "7"
                }
              ],
              "numberOfBytes": "256"
            },
            "t_struct(HistoryType)2851_storage": {
              "label": "struct HouseBusiness.HistoryType",
              "members": [
                {
                  "label": "hID",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "0"
                },
                {
                  "label": "hLabel",
                  "type": "t_string_storage",
                  "offset": 0,
                  "slot": "1"
                },
                {
                  "label": "connectContract",
                  "type": "t_bool",
                  "offset": 0,
                  "slot": "2"
                },
                {
                  "label": "imgNeed",
                  "type": "t_bool",
                  "offset": 1,
                  "slot": "2"
                },
                {
                  "label": "brandNeed",
                  "type": "t_bool",
                  "offset": 2,
                  "slot": "2"
                },
                {
                  "label": "descNeed",
                  "type": "t_bool",
                  "offset": 3,
                  "slot": "2"
                },
                {
                  "label": "brandTypeNeed",
                  "type": "t_bool",
                  "offset": 4,
                  "slot": "2"
                },
                {
                  "label": "yearNeed",
                  "type": "t_bool",
                  "offset": 5,
                  "slot": "2"
                },
                {
                  "label": "checkMark",
                  "type": "t_bool",
                  "offset": 6,
                  "slot": "2"
                }
              ],
              "numberOfBytes": "96"
            },
            "t_struct(House)2798_storage": {
              "label": "struct HouseBusiness.House",
              "members": [
                {
                  "label": "tokenId",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "0"
                },
                {
                  "label": "tokenName",
                  "type": "t_string_storage",
                  "offset": 0,
                  "slot": "1"
                },
                {
                  "label": "tokenURI",
                  "type": "t_string_storage",
                  "offset": 0,
                  "slot": "2"
                },
                {
                  "label": "tokenType",
                  "type": "t_string_storage",
                  "offset": 0,
                  "slot": "3"
                },
                {
                  "label": "currentOwner",
                  "type": "t_address",
                  "offset": 0,
                  "slot": "4"
                },
                {
                  "label": "previousOwner",
                  "type": "t_address",
                  "offset": 0,
                  "slot": "5"
                },
                {
                  "label": "buyer",
                  "type": "t_address",
                  "offset": 0,
                  "slot": "6"
                },
                {
                  "label": "price",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "7"
                },
                {
                  "label": "numberOfTransfers",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "8"
                },
                {
                  "label": "nftPayable",
                  "type": "t_bool",
                  "offset": 0,
                  "slot": "9"
                },
                {
                  "label": "staked",
                  "type": "t_bool",
                  "offset": 1,
                  "slot": "9"
                },
                {
                  "label": "soldstatus",
                  "type": "t_bool",
                  "offset": 2,
                  "slot": "9"
                }
              ],
              "numberOfBytes": "320"
            },
            "t_struct(StakedNft)2815_storage": {
              "label": "struct HouseBusiness.StakedNft",
              "members": [
                {
                  "label": "owner",
                  "type": "t_address",
                  "offset": 0,
                  "slot": "0"
                },
                {
                  "label": "tokenId",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "1"
                },
                {
                  "label": "startedDate",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "2"
                },
                {
                  "label": "endDate",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "3"
                },
                {
                  "label": "claimDate",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "4"
                },
                {
                  "label": "stakingType",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "5"
                },
                {
                  "label": "perSecRewards",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "6"
                },
                {
                  "label": "stakingStatus",
                  "type": "t_bool",
                  "offset": 0,
                  "slot": "7"
                }
              ],
              "numberOfBytes": "256"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            }
          },
          "layoutVersion": "1.1",
          "flat": true
        }
      },
      "IMainCleanContract": {
        "src": "contracts\\interfaces\\IContract.sol:6",
        "inherit": [],
        "libraries": [],
        "methods": [
          "allCleanContracts(uint256)",
          "transferContractOwnership(uint256,address,address)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      }
    },
    {
      "IERC20": {
        "src": "@openzeppelin\\contracts\\token\\ERC20\\IERC20.sol:9",
        "inherit": [],
        "libraries": [],
        "methods": [
          "totalSupply()",
          "balanceOf(address)",
          "transfer(address,uint256)",
          "allowance(address,address)",
          "approve(address,uint256)",
          "transferFrom(address,address,uint256)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "ERC721": {
        "src": "@openzeppelin\\contracts\\token\\ERC721\\ERC721.sol:19",
        "version": {
          "withMetadata": "311027b738fb50ea92c84baf68eacb931adf05de03da13635a661dc9c5b03f73",
          "withoutMetadata": "9ec7f439077c3b762bc3aa6a17c55aba7a78d240190c9c7814df896455a0f780",
          "linkedWithoutMetadata": "9ec7f439077c3b762bc3aa6a17c55aba7a78d240190c9c7814df896455a0f780"
        },
        "inherit": [
          "IERC721Metadata",
          "IERC721",
          "ERC165",
          "IERC165",
          "Context"
        ],
        "libraries": [
          "Address",
          "Strings"
        ],
        "methods": [
          "(string,string)",
          "supportsInterface(bytes4)",
          "balanceOf(address)",
          "ownerOf(uint256)",
          "name()",
          "symbol()",
          "tokenURI(uint256)",
          "approve(address,uint256)",
          "getApproved(uint256)",
          "setApprovalForAll(address,bool)",
          "isApprovedForAll(address,address)",
          "transferFrom(address,address,uint256)",
          "safeTransferFrom(address,address,uint256)",
          "safeTransferFrom(address,address,uint256,bytes)"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "ERC721",
            "src": "@openzeppelin\\contracts\\token\\ERC721\\ERC721.sol:44"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "_name",
              "offset": 0,
              "slot": "0",
              "type": "t_string_storage",
              "contract": "ERC721",
              "src": "@openzeppelin\\contracts\\token\\ERC721\\ERC721.sol:24"
            },
            {
              "label": "_symbol",
              "offset": 0,
              "slot": "1",
              "type": "t_string_storage",
              "contract": "ERC721",
              "src": "@openzeppelin\\contracts\\token\\ERC721\\ERC721.sol:27"
            },
            {
              "label": "_owners",
              "offset": 0,
              "slot": "2",
              "type": "t_mapping(t_uint256,t_address)",
              "contract": "ERC721",
              "src": "@openzeppelin\\contracts\\token\\ERC721\\ERC721.sol:30"
            },
            {
              "label": "_balances",
              "offset": 0,
              "slot": "3",
              "type": "t_mapping(t_address,t_uint256)",
              "contract": "ERC721",
              "src": "@openzeppelin\\contracts\\token\\ERC721\\ERC721.sol:33"
            },
            {
              "label": "_tokenApprovals",
              "offset": 0,
              "slot": "4",
              "type": "t_mapping(t_uint256,t_address)",
              "contract": "ERC721",
              "src": "@openzeppelin\\contracts\\token\\ERC721\\ERC721.sol:36"
            },
            {
              "label": "_operatorApprovals",
              "offset": 0,
              "slot": "5",
              "type": "t_mapping(t_address,t_mapping(t_address,t_bool))",
              "contract": "ERC721",
              "src": "@openzeppelin\\contracts\\token\\ERC721\\ERC721.sol:39"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            },
            "t_bool": {
              "label": "bool",
              "numberOfBytes": "1"
            },
            "t_mapping(t_address,t_bool)": {
              "label": "mapping(address => bool)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_mapping(t_address,t_bool))": {
              "label": "mapping(address => mapping(address => bool))",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_uint256)": {
              "label": "mapping(address => uint256)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_uint256,t_address)": {
              "label": "mapping(uint256 => address)",
              "numberOfBytes": "32"
            },
            "t_string_storage": {
              "label": "string",
              "numberOfBytes": "32"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            }
          },
          "layoutVersion": "1.1",
          "flat": true
        }
      },
      "IERC721": {
        "src": "@openzeppelin\\contracts\\token\\ERC721\\IERC721.sol:11",
        "inherit": [
          "IERC165"
        ],
        "libraries": [],
        "methods": [
          "balanceOf(address)",
          "ownerOf(uint256)",
          "safeTransferFrom(address,address,uint256,bytes)",
          "safeTransferFrom(address,address,uint256)",
          "transferFrom(address,address,uint256)",
          "approve(address,uint256)",
          "setApprovalForAll(address,bool)",
          "getApproved(uint256)",
          "isApprovedForAll(address,address)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "IERC721Receiver": {
        "src": "@openzeppelin\\contracts\\token\\ERC721\\IERC721Receiver.sol:11",
        "inherit": [],
        "libraries": [],
        "methods": [
          "onERC721Received(address,address,uint256,bytes)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "ERC721URIStorage": {
        "src": "@openzeppelin\\contracts\\token\\ERC721\\extensions\\ERC721URIStorage.sol:11",
        "inherit": [
          "ERC721",
          "IERC721Metadata",
          "IERC721",
          "ERC165",
          "IERC165",
          "Context"
        ],
        "libraries": [
          "Strings"
        ],
        "methods": [
          "tokenURI(uint256)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [
            {
              "label": "_name",
              "offset": 0,
              "slot": "0",
              "type": "t_string_storage",
              "contract": "ERC721",
              "src": "@openzeppelin\\contracts\\token\\ERC721\\ERC721.sol:24"
            },
            {
              "label": "_symbol",
              "offset": 0,
              "slot": "1",
              "type": "t_string_storage",
              "contract": "ERC721",
              "src": "@openzeppelin\\contracts\\token\\ERC721\\ERC721.sol:27"
            },
            {
              "label": "_owners",
              "offset": 0,
              "slot": "2",
              "type": "t_mapping(t_uint256,t_address)",
              "contract": "ERC721",
              "src": "@openzeppelin\\contracts\\token\\ERC721\\ERC721.sol:30"
            },
            {
              "label": "_balances",
              "offset": 0,
              "slot": "3",
              "type": "t_mapping(t_address,t_uint256)",
              "contract": "ERC721",
              "src": "@openzeppelin\\contracts\\token\\ERC721\\ERC721.sol:33"
            },
            {
              "label": "_tokenApprovals",
              "offset": 0,
              "slot": "4",
              "type": "t_mapping(t_uint256,t_address)",
              "contract": "ERC721",
              "src": "@openzeppelin\\contracts\\token\\ERC721\\ERC721.sol:36"
            },
            {
              "label": "_operatorApprovals",
              "offset": 0,
              "slot": "5",
              "type": "t_mapping(t_address,t_mapping(t_address,t_bool))",
              "contract": "ERC721",
              "src": "@openzeppelin\\contracts\\token\\ERC721\\ERC721.sol:39"
            },
            {
              "label": "_tokenURIs",
              "offset": 0,
              "slot": "6",
              "type": "t_mapping(t_uint256,t_string_storage)",
              "contract": "ERC721URIStorage",
              "src": "@openzeppelin\\contracts\\token\\ERC721\\extensions\\ERC721URIStorage.sol:15"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            },
            "t_bool": {
              "label": "bool",
              "numberOfBytes": "1"
            },
            "t_mapping(t_address,t_bool)": {
              "label": "mapping(address => bool)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_mapping(t_address,t_bool))": {
              "label": "mapping(address => mapping(address => bool))",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_uint256)": {
              "label": "mapping(address => uint256)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_uint256,t_address)": {
              "label": "mapping(uint256 => address)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_uint256,t_string_storage)": {
              "label": "mapping(uint256 => string)",
              "numberOfBytes": "32"
            },
            "t_string_storage": {
              "label": "string",
              "numberOfBytes": "32"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            }
          },
          "layoutVersion": "1.1",
          "flat": true
        }
      },
      "IERC721Metadata": {
        "src": "@openzeppelin\\contracts\\token\\ERC721\\extensions\\IERC721Metadata.sol:12",
        "inherit": [
          "IERC721",
          "IERC165"
        ],
        "libraries": [],
        "methods": [
          "name()",
          "symbol()",
          "tokenURI(uint256)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "Address": {
        "src": "@openzeppelin\\contracts\\utils\\Address.sol:9",
        "version": {
          "withMetadata": "a0500f265408d7c0dbf75da3f9e44a5c2ee85e18bb1b58fe491ffcfa4ea7fd9b",
          "withoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db",
          "linkedWithoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db"
        },
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [
          {
            "kind": "delegatecall",
            "src": "@openzeppelin\\contracts\\utils\\Address.sol:185"
          }
        ],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "Context": {
        "src": "@openzeppelin\\contracts\\utils\\Context.sol:16",
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "Strings": {
        "src": "@openzeppelin\\contracts\\utils\\Strings.sol:11",
        "version": {
          "withMetadata": "c385b5200dd723f945d28b88358d79ca1b5c0f71c28cbbab9acf6d6f3fd15593",
          "withoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db",
          "linkedWithoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db"
        },
        "inherit": [],
        "libraries": [
          "Math"
        ],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "ERC165": {
        "src": "@openzeppelin\\contracts\\utils\\introspection\\ERC165.sol:22",
        "inherit": [
          "IERC165"
        ],
        "libraries": [],
        "methods": [
          "supportsInterface(bytes4)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "IERC165": {
        "src": "@openzeppelin\\contracts\\utils\\introspection\\IERC165.sol:15",
        "inherit": [],
        "libraries": [],
        "methods": [
          "supportsInterface(bytes4)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "Math": {
        "src": "@openzeppelin\\contracts\\utils\\math\\Math.sol:9",
        "version": {
          "withMetadata": "fcaf39e5e702f2902d6ef00c1def75c9800e8d2a0a78a87cf542096cafc7a4b0",
          "withoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db",
          "linkedWithoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db"
        },
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "HouseBusiness": {
        "src": "contracts\\HouseBusiness.sol:11",
        "version": {
          "withMetadata": "1906a7324952a5cfdf3b45d2a1d24bdd471aa9c914d19aefdbb7fb87ad9d5df3",
          "withoutMetadata": "f1dcccf3ef42a5229a0d9d86afb4183cbce1c1ecfccae2d984afa3d54fd3b504",
          "linkedWithoutMetadata": "f1dcccf3ef42a5229a0d9d86afb4183cbce1c1ecfccae2d984afa3d54fd3b504"
        },
        "inherit": [
          "ERC721URIStorage",
          "ERC721",
          "IERC721Metadata",
          "IERC721",
          "ERC165",
          "IERC165",
          "Context"
        ],
        "libraries": [],
        "methods": [
          "(address)",
          "setMinMaxHousePrice(uint256,uint256)",
          "setConfigToken(address)",
          "isMember()",
          "addMember(address)",
          "removeMember(address)",
          "tokenURI(uint256)",
          "setCContractAddress(address)",
          "setPayable(uint256,address,bool)",
          "mintHouse(string,string,string,string,uint256)",
          "addAllowList(uint256,address)",
          "removeAllowList(uint256,address)",
          "checkAllowedList(uint256,address)",
          "addHistory(uint256,uint256,uint256,string,string,string,string,string,uint256)",
          "getHistory(uint256)",
          "editHistory(uint256,uint256,string,string,string,string,string,uint256)",
          "getHistoryType()",
          "addOrEditHType(uint256,string,bool,bool,bool,bool,bool,bool,bool)",
          "removeHistoryType(uint256)",
          "getMinMaxNFT()",
          "getTokenOwner(uint256)",
          "buyHouseNft(uint256)",
          "sendToken(address,uint256)",
          "changeTokenPrice(uint256,uint256)",
          "getAllHouses()",
          "getAllPayableHouses()",
          "getAllMyHouses()",
          "withdrawToken(uint256)",
          "withdrawETH(uint256)",
          "calcDiv(uint256,uint256)",
          "setAPYConfig(uint256,uint256)",
          "getAllAPYTypes()",
          "stake(uint256,uint256)",
          "unstake(uint256)",
          "stakingFinished(uint256)",
          "totalRewards(address)",
          "claimRewards(address)",
          "getAllMyStakedNFTs()",
          "getTotalInfo()",
          "getAllAPYs()",
          "getPenalty()",
          "setPenalty(uint256)",
          "getRoyalty()",
          "setRoyalty(uint256)"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "HouseBusiness",
            "src": "contracts\\HouseBusiness.sol:106"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "_name",
              "offset": 0,
              "slot": "0",
              "type": "t_string_storage",
              "contract": "ERC721",
              "src": "@openzeppelin\\contracts\\token\\ERC721\\ERC721.sol:24"
            },
            {
              "label": "_symbol",
              "offset": 0,
              "slot": "1",
              "type": "t_string_storage",
              "contract": "ERC721",
              "src": "@openzeppelin\\contracts\\token\\ERC721\\ERC721.sol:27"
            },
            {
              "label": "_owners",
              "offset": 0,
              "slot": "2",
              "type": "t_mapping(t_uint256,t_address)",
              "contract": "ERC721",
              "src": "@openzeppelin\\contracts\\token\\ERC721\\ERC721.sol:30"
            },
            {
              "label": "_balances",
              "offset": 0,
              "slot": "3",
              "type": "t_mapping(t_address,t_uint256)",
              "contract": "ERC721",
              "src": "@openzeppelin\\contracts\\token\\ERC721\\ERC721.sol:33"
            },
            {
              "label": "_tokenApprovals",
              "offset": 0,
              "slot": "4",
              "type": "t_mapping(t_uint256,t_address)",
              "contract": "ERC721",
              "src": "@openzeppelin\\contracts\\token\\ERC721\\ERC721.sol:36"
            },
            {
              "label": "_operatorApprovals",
              "offset": 0,
              "slot": "5",
              "type": "t_mapping(t_address,t_mapping(t_address,t_bool))",
              "contract": "ERC721",
              "src": "@openzeppelin\\contracts\\token\\ERC721\\ERC721.sol:39"
            },
            {
              "label": "_tokenURIs",
              "offset": 0,
              "slot": "6",
              "type": "t_mapping(t_uint256,t_string_storage)",
              "contract": "ERC721URIStorage",
              "src": "@openzeppelin\\contracts\\token\\ERC721\\extensions\\ERC721URIStorage.sol:15"
            },
            {
              "label": "collectionName",
              "offset": 0,
              "slot": "7",
              "type": "t_string_storage",
              "contract": "HouseBusiness",
              "src": "contracts\\HouseBusiness.sol:13"
            },
            {
              "label": "collectionNameSymbol",
              "offset": 0,
              "slot": "8",
              "type": "t_string_storage",
              "contract": "HouseBusiness",
              "src": "contracts\\HouseBusiness.sol:15"
            },
            {
              "label": "houseCounter",
              "offset": 0,
              "slot": "9",
              "type": "t_uint256",
              "contract": "HouseBusiness",
              "src": "contracts\\HouseBusiness.sol:17"
            },
            {
              "label": "stakedCounter",
              "offset": 0,
              "slot": "10",
              "type": "t_uint256",
              "contract": "HouseBusiness",
              "src": "contracts\\HouseBusiness.sol:19"
            },
            {
              "label": "soldedCounter",
              "offset": 0,
              "slot": "11",
              "type": "t_uint256",
              "contract": "HouseBusiness",
              "src": "contracts\\HouseBusiness.sol:21"
            },
            {
              "label": "hTypeCounter",
              "offset": 0,
              "slot": "12",
              "type": "t_uint256",
              "contract": "HouseBusiness",
              "src": "contracts\\HouseBusiness.sol:23"
            },
            {
              "label": "_token",
              "offset": 0,
              "slot": "13",
              "type": "t_contract(IERC20)77",
              "contract": "HouseBusiness",
              "src": "contracts\\HouseBusiness.sol:25"
            },
            {
              "label": "minPrice",
              "offset": 0,
              "slot": "14",
              "type": "t_uint256",
              "contract": "HouseBusiness",
              "src": "contracts\\HouseBusiness.sol:27"
            },
            {
              "label": "maxPrice",
              "offset": 0,
              "slot": "15",
              "type": "t_uint256",
              "contract": "HouseBusiness",
              "src": "contracts\\HouseBusiness.sol:29"
            },
            {
              "label": "penalty",
              "offset": 0,
              "slot": "16",
              "type": "t_uint256",
              "contract": "HouseBusiness",
              "src": "contracts\\HouseBusiness.sol:31"
            },
            {
              "label": "royalty",
              "offset": 0,
              "slot": "17",
              "type": "t_uint256",
              "contract": "HouseBusiness",
              "src": "contracts\\HouseBusiness.sol:33"
            },
            {
              "label": "cContract",
              "offset": 0,
              "slot": "18",
              "type": "t_contract(IMainCleanContract)5549",
              "contract": "HouseBusiness",
              "src": "contracts\\HouseBusiness.sol:35"
            },
            {
              "label": "historyTypes",
              "offset": 0,
              "slot": "19",
              "type": "t_array(t_struct(HistoryType)2851_storage)dyn_storage",
              "contract": "HouseBusiness",
              "src": "contracts\\HouseBusiness.sol:86"
            },
            {
              "label": "houseHistories",
              "offset": 0,
              "slot": "20",
              "type": "t_mapping(t_uint256,t_array(t_struct(History)2832_storage)dyn_storage)",
              "contract": "HouseBusiness",
              "src": "contracts\\HouseBusiness.sol:88"
            },
            {
              "label": "APYtypes",
              "offset": 0,
              "slot": "21",
              "type": "t_array(t_uint256)dyn_storage",
              "contract": "HouseBusiness",
              "src": "contracts\\HouseBusiness.sol:90"
            },
            {
              "label": "APYConfig",
              "offset": 0,
              "slot": "22",
              "type": "t_mapping(t_uint256,t_uint256)",
              "contract": "HouseBusiness",
              "src": "contracts\\HouseBusiness.sol:92"
            },
            {
              "label": "allMembers",
              "offset": 0,
              "slot": "23",
              "type": "t_mapping(t_address,t_bool)",
              "contract": "HouseBusiness",
              "src": "contracts\\HouseBusiness.sol:94"
            },
            {
              "label": "allHouses",
              "offset": 0,
              "slot": "24",
              "type": "t_mapping(t_uint256,t_struct(House)2798_storage)",
              "contract": "HouseBusiness",
              "src": "contracts\\HouseBusiness.sol:96"
            },
            {
              "label": "allowedList",
              "offset": 0,
              "slot": "25",
              "type": "t_mapping(t_uint256,t_mapping(t_address,t_bool))",
              "contract": "HouseBusiness",
              "src": "contracts\\HouseBusiness.sol:98"
            },
            {
              "label": "stakedNfts",
              "offset": 0,
              "slot": "26",
              "type": "t_mapping(t_address,t_array(t_struct(StakedNft)2815_storage)dyn_storage)",
              "contract": "HouseBusiness",
              "src": "contracts\\HouseBusiness.sol:104"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            },
            "t_array(t_struct(History)2832_storage)dyn_storage": {
              "label": "struct HouseBusiness.History[]",
              "numberOfBytes": "32"
            },
            "t_array(t_struct(HistoryType)2851_storage)dyn_storage": {
              "label": "struct HouseBusiness.HistoryType[]",
              "numberOfBytes": "32"
            },
            "t_array(t_struct(StakedNft)2815_storage)dyn_storage": {
              "label": "struct HouseBusiness.StakedNft[]",
              "numberOfBytes": "32"
            },
            "t_array(t_uint256)dyn_storage": {
              "label": "uint256[]",
              "numberOfBytes": "32"
            },
            "t_bool": {
              "label": "bool",
              "numberOfBytes": "1"
            },
            "t_contract(IERC20)77": {
              "label": "contract IERC20",
              "numberOfBytes": "20"
            },
            "t_contract(IMainCleanContract)5549": {
              "label": "contract IMainCleanContract",
              "numberOfBytes": "20"
            },
            "t_mapping(t_address,t_array(t_struct(StakedNft)2815_storage)dyn_storage)": {
              "label": "mapping(address => struct HouseBusiness.StakedNft[])",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_bool)": {
              "label": "mapping(address => bool)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_mapping(t_address,t_bool))": {
              "label": "mapping(address => mapping(address => bool))",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_uint256)": {
              "label": "mapping(address => uint256)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_uint256,t_address)": {
              "label": "mapping(uint256 => address)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_uint256,t_array(t_struct(History)2832_storage)dyn_storage)": {
              "label": "mapping(uint256 => struct HouseBusiness.History[])",
              "numberOfBytes": "32"
            },
            "t_mapping(t_uint256,t_mapping(t_address,t_bool))": {
              "label": "mapping(uint256 => mapping(address => bool))",
              "numberOfBytes": "32"
            },
            "t_mapping(t_uint256,t_string_storage)": {
              "label": "mapping(uint256 => string)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_uint256,t_struct(House)2798_storage)": {
              "label": "mapping(uint256 => struct HouseBusiness.House)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_uint256,t_uint256)": {
              "label": "mapping(uint256 => uint256)",
              "numberOfBytes": "32"
            },
            "t_string_storage": {
              "label": "string",
              "numberOfBytes": "32"
            },
            "t_struct(History)2832_storage": {
              "label": "struct HouseBusiness.History",
              "members": [
                {
                  "label": "hID",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "0"
                },
                {
                  "label": "contractId",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "1"
                },
                {
                  "label": "houseImg",
                  "type": "t_string_storage",
                  "offset": 0,
                  "slot": "2"
                },
                {
                  "label": "houseBrand",
                  "type": "t_string_storage",
                  "offset": 0,
                  "slot": "3"
                },
                {
                  "label": "desc",
                  "type": "t_string_storage",
                  "offset": 0,
                  "slot": "4"
                },
                {
                  "label": "history",
                  "type": "t_string_storage",
                  "offset": 0,
                  "slot": "5"
                },
                {
                  "label": "brandType",
                  "type": "t_string_storage",
                  "offset": 0,
                  "slot": "6"
                },
                {
                  "label": "yearField",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "7"
                }
              ],
              "numberOfBytes": "256"
            },
            "t_struct(HistoryType)2851_storage": {
              "label": "struct HouseBusiness.HistoryType",
              "members": [
                {
                  "label": "hID",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "0"
                },
                {
                  "label": "hLabel",
                  "type": "t_string_storage",
                  "offset": 0,
                  "slot": "1"
                },
                {
                  "label": "connectContract",
                  "type": "t_bool",
                  "offset": 0,
                  "slot": "2"
                },
                {
                  "label": "imgNeed",
                  "type": "t_bool",
                  "offset": 1,
                  "slot": "2"
                },
                {
                  "label": "brandNeed",
                  "type": "t_bool",
                  "offset": 2,
                  "slot": "2"
                },
                {
                  "label": "descNeed",
                  "type": "t_bool",
                  "offset": 3,
                  "slot": "2"
                },
                {
                  "label": "brandTypeNeed",
                  "type": "t_bool",
                  "offset": 4,
                  "slot": "2"
                },
                {
                  "label": "yearNeed",
                  "type": "t_bool",
                  "offset": 5,
                  "slot": "2"
                },
                {
                  "label": "checkMark",
                  "type": "t_bool",
                  "offset": 6,
                  "slot": "2"
                }
              ],
              "numberOfBytes": "96"
            },
            "t_struct(House)2798_storage": {
              "label": "struct HouseBusiness.House",
              "members": [
                {
                  "label": "tokenId",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "0"
                },
                {
                  "label": "tokenName",
                  "type": "t_string_storage",
                  "offset": 0,
                  "slot": "1"
                },
                {
                  "label": "tokenURI",
                  "type": "t_string_storage",
                  "offset": 0,
                  "slot": "2"
                },
                {
                  "label": "tokenType",
                  "type": "t_string_storage",
                  "offset": 0,
                  "slot": "3"
                },
                {
                  "label": "currentOwner",
                  "type": "t_address",
                  "offset": 0,
                  "slot": "4"
                },
                {
                  "label": "previousOwner",
                  "type": "t_address",
                  "offset": 0,
                  "slot": "5"
                },
                {
                  "label": "buyer",
                  "type": "t_address",
                  "offset": 0,
                  "slot": "6"
                },
                {
                  "label": "price",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "7"
                },
                {
                  "label": "numberOfTransfers",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "8"
                },
                {
                  "label": "nftPayable",
                  "type": "t_bool",
                  "offset": 0,
                  "slot": "9"
                },
                {
                  "label": "staked",
                  "type": "t_bool",
                  "offset": 1,
                  "slot": "9"
                },
                {
                  "label": "soldstatus",
                  "type": "t_bool",
                  "offset": 2,
                  "slot": "9"
                }
              ],
              "numberOfBytes": "320"
            },
            "t_struct(StakedNft)2815_storage": {
              "label": "struct HouseBusiness.StakedNft",
              "members": [
                {
                  "label": "owner",
                  "type": "t_address",
                  "offset": 0,
                  "slot": "0"
                },
                {
                  "label": "tokenId",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "1"
                },
                {
                  "label": "startedDate",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "2"
                },
                {
                  "label": "endDate",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "3"
                },
                {
                  "label": "claimDate",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "4"
                },
                {
                  "label": "stakingType",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "5"
                },
                {
                  "label": "perSecRewards",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "6"
                },
                {
                  "label": "stakingStatus",
                  "type": "t_bool",
                  "offset": 0,
                  "slot": "7"
                }
              ],
              "numberOfBytes": "256"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            }
          },
          "layoutVersion": "1.1",
          "flat": true
        }
      },
      "IMainCleanContract": {
        "src": "contracts\\interfaces\\IContract.sol:6",
        "inherit": [],
        "libraries": [],
        "methods": [
          "allCleanContracts(uint256)",
          "transferContractOwnership(uint256,address,address)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      }
    },
    {
      "IERC20": {
        "src": "@openzeppelin\\contracts\\token\\ERC20\\IERC20.sol:9",
        "inherit": [],
        "libraries": [],
        "methods": [
          "totalSupply()",
          "balanceOf(address)",
          "transfer(address,uint256)",
          "allowance(address,address)",
          "approve(address,uint256)",
          "transferFrom(address,address,uint256)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "ERC721": {
        "src": "@openzeppelin\\contracts\\token\\ERC721\\ERC721.sol:19",
        "version": {
          "withMetadata": "311027b738fb50ea92c84baf68eacb931adf05de03da13635a661dc9c5b03f73",
          "withoutMetadata": "9ec7f439077c3b762bc3aa6a17c55aba7a78d240190c9c7814df896455a0f780",
          "linkedWithoutMetadata": "9ec7f439077c3b762bc3aa6a17c55aba7a78d240190c9c7814df896455a0f780"
        },
        "inherit": [
          "IERC721Metadata",
          "IERC721",
          "ERC165",
          "IERC165",
          "Context"
        ],
        "libraries": [
          "Address",
          "Strings"
        ],
        "methods": [
          "(string,string)",
          "supportsInterface(bytes4)",
          "balanceOf(address)",
          "ownerOf(uint256)",
          "name()",
          "symbol()",
          "tokenURI(uint256)",
          "approve(address,uint256)",
          "getApproved(uint256)",
          "setApprovalForAll(address,bool)",
          "isApprovedForAll(address,address)",
          "transferFrom(address,address,uint256)",
          "safeTransferFrom(address,address,uint256)",
          "safeTransferFrom(address,address,uint256,bytes)"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "ERC721",
            "src": "@openzeppelin\\contracts\\token\\ERC721\\ERC721.sol:44"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "_name",
              "offset": 0,
              "slot": "0",
              "type": "t_string_storage",
              "contract": "ERC721",
              "src": "@openzeppelin\\contracts\\token\\ERC721\\ERC721.sol:24"
            },
            {
              "label": "_symbol",
              "offset": 0,
              "slot": "1",
              "type": "t_string_storage",
              "contract": "ERC721",
              "src": "@openzeppelin\\contracts\\token\\ERC721\\ERC721.sol:27"
            },
            {
              "label": "_owners",
              "offset": 0,
              "slot": "2",
              "type": "t_mapping(t_uint256,t_address)",
              "contract": "ERC721",
              "src": "@openzeppelin\\contracts\\token\\ERC721\\ERC721.sol:30"
            },
            {
              "label": "_balances",
              "offset": 0,
              "slot": "3",
              "type": "t_mapping(t_address,t_uint256)",
              "contract": "ERC721",
              "src": "@openzeppelin\\contracts\\token\\ERC721\\ERC721.sol:33"
            },
            {
              "label": "_tokenApprovals",
              "offset": 0,
              "slot": "4",
              "type": "t_mapping(t_uint256,t_address)",
              "contract": "ERC721",
              "src": "@openzeppelin\\contracts\\token\\ERC721\\ERC721.sol:36"
            },
            {
              "label": "_operatorApprovals",
              "offset": 0,
              "slot": "5",
              "type": "t_mapping(t_address,t_mapping(t_address,t_bool))",
              "contract": "ERC721",
              "src": "@openzeppelin\\contracts\\token\\ERC721\\ERC721.sol:39"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            },
            "t_bool": {
              "label": "bool",
              "numberOfBytes": "1"
            },
            "t_mapping(t_address,t_bool)": {
              "label": "mapping(address => bool)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_mapping(t_address,t_bool))": {
              "label": "mapping(address => mapping(address => bool))",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_uint256)": {
              "label": "mapping(address => uint256)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_uint256,t_address)": {
              "label": "mapping(uint256 => address)",
              "numberOfBytes": "32"
            },
            "t_string_storage": {
              "label": "string",
              "numberOfBytes": "32"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            }
          },
          "layoutVersion": "1.1",
          "flat": true
        }
      },
      "IERC721": {
        "src": "@openzeppelin\\contracts\\token\\ERC721\\IERC721.sol:11",
        "inherit": [
          "IERC165"
        ],
        "libraries": [],
        "methods": [
          "balanceOf(address)",
          "ownerOf(uint256)",
          "safeTransferFrom(address,address,uint256,bytes)",
          "safeTransferFrom(address,address,uint256)",
          "transferFrom(address,address,uint256)",
          "approve(address,uint256)",
          "setApprovalForAll(address,bool)",
          "getApproved(uint256)",
          "isApprovedForAll(address,address)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "IERC721Receiver": {
        "src": "@openzeppelin\\contracts\\token\\ERC721\\IERC721Receiver.sol:11",
        "inherit": [],
        "libraries": [],
        "methods": [
          "onERC721Received(address,address,uint256,bytes)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "ERC721URIStorage": {
        "src": "@openzeppelin\\contracts\\token\\ERC721\\extensions\\ERC721URIStorage.sol:11",
        "inherit": [
          "ERC721",
          "IERC721Metadata",
          "IERC721",
          "ERC165",
          "IERC165",
          "Context"
        ],
        "libraries": [
          "Strings"
        ],
        "methods": [
          "tokenURI(uint256)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [
            {
              "label": "_name",
              "offset": 0,
              "slot": "0",
              "type": "t_string_storage",
              "contract": "ERC721",
              "src": "@openzeppelin\\contracts\\token\\ERC721\\ERC721.sol:24"
            },
            {
              "label": "_symbol",
              "offset": 0,
              "slot": "1",
              "type": "t_string_storage",
              "contract": "ERC721",
              "src": "@openzeppelin\\contracts\\token\\ERC721\\ERC721.sol:27"
            },
            {
              "label": "_owners",
              "offset": 0,
              "slot": "2",
              "type": "t_mapping(t_uint256,t_address)",
              "contract": "ERC721",
              "src": "@openzeppelin\\contracts\\token\\ERC721\\ERC721.sol:30"
            },
            {
              "label": "_balances",
              "offset": 0,
              "slot": "3",
              "type": "t_mapping(t_address,t_uint256)",
              "contract": "ERC721",
              "src": "@openzeppelin\\contracts\\token\\ERC721\\ERC721.sol:33"
            },
            {
              "label": "_tokenApprovals",
              "offset": 0,
              "slot": "4",
              "type": "t_mapping(t_uint256,t_address)",
              "contract": "ERC721",
              "src": "@openzeppelin\\contracts\\token\\ERC721\\ERC721.sol:36"
            },
            {
              "label": "_operatorApprovals",
              "offset": 0,
              "slot": "5",
              "type": "t_mapping(t_address,t_mapping(t_address,t_bool))",
              "contract": "ERC721",
              "src": "@openzeppelin\\contracts\\token\\ERC721\\ERC721.sol:39"
            },
            {
              "label": "_tokenURIs",
              "offset": 0,
              "slot": "6",
              "type": "t_mapping(t_uint256,t_string_storage)",
              "contract": "ERC721URIStorage",
              "src": "@openzeppelin\\contracts\\token\\ERC721\\extensions\\ERC721URIStorage.sol:15"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            },
            "t_bool": {
              "label": "bool",
              "numberOfBytes": "1"
            },
            "t_mapping(t_address,t_bool)": {
              "label": "mapping(address => bool)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_mapping(t_address,t_bool))": {
              "label": "mapping(address => mapping(address => bool))",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_uint256)": {
              "label": "mapping(address => uint256)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_uint256,t_address)": {
              "label": "mapping(uint256 => address)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_uint256,t_string_storage)": {
              "label": "mapping(uint256 => string)",
              "numberOfBytes": "32"
            },
            "t_string_storage": {
              "label": "string",
              "numberOfBytes": "32"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            }
          },
          "layoutVersion": "1.1",
          "flat": true
        }
      },
      "IERC721Metadata": {
        "src": "@openzeppelin\\contracts\\token\\ERC721\\extensions\\IERC721Metadata.sol:12",
        "inherit": [
          "IERC721",
          "IERC165"
        ],
        "libraries": [],
        "methods": [
          "name()",
          "symbol()",
          "tokenURI(uint256)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "Address": {
        "src": "@openzeppelin\\contracts\\utils\\Address.sol:9",
        "version": {
          "withMetadata": "a0500f265408d7c0dbf75da3f9e44a5c2ee85e18bb1b58fe491ffcfa4ea7fd9b",
          "withoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db",
          "linkedWithoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db"
        },
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [
          {
            "kind": "delegatecall",
            "src": "@openzeppelin\\contracts\\utils\\Address.sol:185"
          }
        ],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "Context": {
        "src": "@openzeppelin\\contracts\\utils\\Context.sol:16",
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "Strings": {
        "src": "@openzeppelin\\contracts\\utils\\Strings.sol:11",
        "version": {
          "withMetadata": "c385b5200dd723f945d28b88358d79ca1b5c0f71c28cbbab9acf6d6f3fd15593",
          "withoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db",
          "linkedWithoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db"
        },
        "inherit": [],
        "libraries": [
          "Math"
        ],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "ERC165": {
        "src": "@openzeppelin\\contracts\\utils\\introspection\\ERC165.sol:22",
        "inherit": [
          "IERC165"
        ],
        "libraries": [],
        "methods": [
          "supportsInterface(bytes4)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "IERC165": {
        "src": "@openzeppelin\\contracts\\utils\\introspection\\IERC165.sol:15",
        "inherit": [],
        "libraries": [],
        "methods": [
          "supportsInterface(bytes4)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "Math": {
        "src": "@openzeppelin\\contracts\\utils\\math\\Math.sol:9",
        "version": {
          "withMetadata": "fcaf39e5e702f2902d6ef00c1def75c9800e8d2a0a78a87cf542096cafc7a4b0",
          "withoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db",
          "linkedWithoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db"
        },
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "HouseBusiness": {
        "src": "contracts\\HouseBusiness.sol:11",
        "version": {
          "withMetadata": "20da01c22917ee74202e080ada1a54194129bffc996eac2295bbb1e9f3703926",
          "withoutMetadata": "604dc8fedc6f53c4e0bec05cb1549495f6635d3f045e2e3544d75b920b0c9730",
          "linkedWithoutMetadata": "604dc8fedc6f53c4e0bec05cb1549495f6635d3f045e2e3544d75b920b0c9730"
        },
        "inherit": [
          "ERC721URIStorage",
          "ERC721",
          "IERC721Metadata",
          "IERC721",
          "ERC165",
          "IERC165",
          "Context"
        ],
        "libraries": [],
        "methods": [
          "(address)",
          "setMinMaxHousePrice(uint256,uint256)",
          "setConfigToken(address)",
          "isMember()",
          "addMember(address)",
          "removeMember(address)",
          "tokenURI(uint256)",
          "setCContractAddress(address)",
          "setPayable(uint256,address,bool)",
          "mintHouse(string,string,string,string,uint256)",
          "addAllowList(uint256,address)",
          "removeAllowList(uint256,address)",
          "checkAllowedList(uint256,address)",
          "addHistory(uint256,uint256,uint256,string,string,string,string,string,uint256)",
          "getHistory(uint256)",
          "editHistory(uint256,uint256,string,string,string,string,string,uint256)",
          "getHistoryType()",
          "addOrEditHType(uint256,string,bool,bool,bool,bool,bool,bool,bool)",
          "removeHistoryType(uint256)",
          "getMinMaxNFT()",
          "getTokenOwner(uint256)",
          "buyHouseNft(uint256)",
          "sendToken(address,uint256)",
          "changeTokenPrice(uint256,uint256)",
          "getAllHouses()",
          "getAllPayableHouses()",
          "getAllMyHouses()",
          "withdrawToken(uint256)",
          "withdrawETH(uint256)",
          "calcDiv(uint256,uint256)",
          "setAPYConfig(uint256,uint256)",
          "getAllAPYTypes()",
          "stake(uint256,uint256)",
          "unstake(uint256)",
          "stakingFinished(uint256)",
          "totalRewards(address)",
          "claimRewards(address)",
          "getAllMyStakedNFTs()",
          "getTotalInfo()",
          "getAllAPYs()",
          "getPenalty()",
          "setPenalty(uint256)",
          "getRoyalty()",
          "setRoyalty(uint256)"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "HouseBusiness",
            "src": "contracts\\HouseBusiness.sol:106"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "_name",
              "offset": 0,
              "slot": "0",
              "type": "t_string_storage",
              "contract": "ERC721",
              "src": "@openzeppelin\\contracts\\token\\ERC721\\ERC721.sol:24"
            },
            {
              "label": "_symbol",
              "offset": 0,
              "slot": "1",
              "type": "t_string_storage",
              "contract": "ERC721",
              "src": "@openzeppelin\\contracts\\token\\ERC721\\ERC721.sol:27"
            },
            {
              "label": "_owners",
              "offset": 0,
              "slot": "2",
              "type": "t_mapping(t_uint256,t_address)",
              "contract": "ERC721",
              "src": "@openzeppelin\\contracts\\token\\ERC721\\ERC721.sol:30"
            },
            {
              "label": "_balances",
              "offset": 0,
              "slot": "3",
              "type": "t_mapping(t_address,t_uint256)",
              "contract": "ERC721",
              "src": "@openzeppelin\\contracts\\token\\ERC721\\ERC721.sol:33"
            },
            {
              "label": "_tokenApprovals",
              "offset": 0,
              "slot": "4",
              "type": "t_mapping(t_uint256,t_address)",
              "contract": "ERC721",
              "src": "@openzeppelin\\contracts\\token\\ERC721\\ERC721.sol:36"
            },
            {
              "label": "_operatorApprovals",
              "offset": 0,
              "slot": "5",
              "type": "t_mapping(t_address,t_mapping(t_address,t_bool))",
              "contract": "ERC721",
              "src": "@openzeppelin\\contracts\\token\\ERC721\\ERC721.sol:39"
            },
            {
              "label": "_tokenURIs",
              "offset": 0,
              "slot": "6",
              "type": "t_mapping(t_uint256,t_string_storage)",
              "contract": "ERC721URIStorage",
              "src": "@openzeppelin\\contracts\\token\\ERC721\\extensions\\ERC721URIStorage.sol:15"
            },
            {
              "label": "collectionName",
              "offset": 0,
              "slot": "7",
              "type": "t_string_storage",
              "contract": "HouseBusiness",
              "src": "contracts\\HouseBusiness.sol:13"
            },
            {
              "label": "collectionNameSymbol",
              "offset": 0,
              "slot": "8",
              "type": "t_string_storage",
              "contract": "HouseBusiness",
              "src": "contracts\\HouseBusiness.sol:15"
            },
            {
              "label": "houseCounter",
              "offset": 0,
              "slot": "9",
              "type": "t_uint256",
              "contract": "HouseBusiness",
              "src": "contracts\\HouseBusiness.sol:17"
            },
            {
              "label": "stakedCounter",
              "offset": 0,
              "slot": "10",
              "type": "t_uint256",
              "contract": "HouseBusiness",
              "src": "contracts\\HouseBusiness.sol:19"
            },
            {
              "label": "soldedCounter",
              "offset": 0,
              "slot": "11",
              "type": "t_uint256",
              "contract": "HouseBusiness",
              "src": "contracts\\HouseBusiness.sol:21"
            },
            {
              "label": "hTypeCounter",
              "offset": 0,
              "slot": "12",
              "type": "t_uint256",
              "contract": "HouseBusiness",
              "src": "contracts\\HouseBusiness.sol:23"
            },
            {
              "label": "_token",
              "offset": 0,
              "slot": "13",
              "type": "t_contract(IERC20)77",
              "contract": "HouseBusiness",
              "src": "contracts\\HouseBusiness.sol:25"
            },
            {
              "label": "minPrice",
              "offset": 0,
              "slot": "14",
              "type": "t_uint256",
              "contract": "HouseBusiness",
              "src": "contracts\\HouseBusiness.sol:27"
            },
            {
              "label": "maxPrice",
              "offset": 0,
              "slot": "15",
              "type": "t_uint256",
              "contract": "HouseBusiness",
              "src": "contracts\\HouseBusiness.sol:29"
            },
            {
              "label": "penalty",
              "offset": 0,
              "slot": "16",
              "type": "t_uint256",
              "contract": "HouseBusiness",
              "src": "contracts\\HouseBusiness.sol:31"
            },
            {
              "label": "royalty",
              "offset": 0,
              "slot": "17",
              "type": "t_uint256",
              "contract": "HouseBusiness",
              "src": "contracts\\HouseBusiness.sol:33"
            },
            {
              "label": "cContract",
              "offset": 0,
              "slot": "18",
              "type": "t_contract(IMainCleanContract)5477",
              "contract": "HouseBusiness",
              "src": "contracts\\HouseBusiness.sol:35"
            },
            {
              "label": "historyTypes",
              "offset": 0,
              "slot": "19",
              "type": "t_array(t_struct(HistoryType)2851_storage)dyn_storage",
              "contract": "HouseBusiness",
              "src": "contracts\\HouseBusiness.sol:86"
            },
            {
              "label": "houseHistories",
              "offset": 0,
              "slot": "20",
              "type": "t_mapping(t_uint256,t_array(t_struct(History)2832_storage)dyn_storage)",
              "contract": "HouseBusiness",
              "src": "contracts\\HouseBusiness.sol:88"
            },
            {
              "label": "APYtypes",
              "offset": 0,
              "slot": "21",
              "type": "t_array(t_uint256)dyn_storage",
              "contract": "HouseBusiness",
              "src": "contracts\\HouseBusiness.sol:90"
            },
            {
              "label": "APYConfig",
              "offset": 0,
              "slot": "22",
              "type": "t_mapping(t_uint256,t_uint256)",
              "contract": "HouseBusiness",
              "src": "contracts\\HouseBusiness.sol:92"
            },
            {
              "label": "allMembers",
              "offset": 0,
              "slot": "23",
              "type": "t_mapping(t_address,t_bool)",
              "contract": "HouseBusiness",
              "src": "contracts\\HouseBusiness.sol:94"
            },
            {
              "label": "allHouses",
              "offset": 0,
              "slot": "24",
              "type": "t_mapping(t_uint256,t_struct(House)2798_storage)",
              "contract": "HouseBusiness",
              "src": "contracts\\HouseBusiness.sol:96"
            },
            {
              "label": "allowedList",
              "offset": 0,
              "slot": "25",
              "type": "t_mapping(t_uint256,t_mapping(t_address,t_bool))",
              "contract": "HouseBusiness",
              "src": "contracts\\HouseBusiness.sol:98"
            },
            {
              "label": "stakedNfts",
              "offset": 0,
              "slot": "26",
              "type": "t_mapping(t_address,t_array(t_struct(StakedNft)2815_storage)dyn_storage)",
              "contract": "HouseBusiness",
              "src": "contracts\\HouseBusiness.sol:104"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            },
            "t_array(t_struct(History)2832_storage)dyn_storage": {
              "label": "struct HouseBusiness.History[]",
              "numberOfBytes": "32"
            },
            "t_array(t_struct(HistoryType)2851_storage)dyn_storage": {
              "label": "struct HouseBusiness.HistoryType[]",
              "numberOfBytes": "32"
            },
            "t_array(t_struct(StakedNft)2815_storage)dyn_storage": {
              "label": "struct HouseBusiness.StakedNft[]",
              "numberOfBytes": "32"
            },
            "t_array(t_uint256)dyn_storage": {
              "label": "uint256[]",
              "numberOfBytes": "32"
            },
            "t_bool": {
              "label": "bool",
              "numberOfBytes": "1"
            },
            "t_contract(IERC20)77": {
              "label": "contract IERC20",
              "numberOfBytes": "20"
            },
            "t_contract(IMainCleanContract)5477": {
              "label": "contract IMainCleanContract",
              "numberOfBytes": "20"
            },
            "t_mapping(t_address,t_array(t_struct(StakedNft)2815_storage)dyn_storage)": {
              "label": "mapping(address => struct HouseBusiness.StakedNft[])",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_bool)": {
              "label": "mapping(address => bool)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_mapping(t_address,t_bool))": {
              "label": "mapping(address => mapping(address => bool))",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_uint256)": {
              "label": "mapping(address => uint256)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_uint256,t_address)": {
              "label": "mapping(uint256 => address)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_uint256,t_array(t_struct(History)2832_storage)dyn_storage)": {
              "label": "mapping(uint256 => struct HouseBusiness.History[])",
              "numberOfBytes": "32"
            },
            "t_mapping(t_uint256,t_mapping(t_address,t_bool))": {
              "label": "mapping(uint256 => mapping(address => bool))",
              "numberOfBytes": "32"
            },
            "t_mapping(t_uint256,t_string_storage)": {
              "label": "mapping(uint256 => string)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_uint256,t_struct(House)2798_storage)": {
              "label": "mapping(uint256 => struct HouseBusiness.House)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_uint256,t_uint256)": {
              "label": "mapping(uint256 => uint256)",
              "numberOfBytes": "32"
            },
            "t_string_storage": {
              "label": "string",
              "numberOfBytes": "32"
            },
            "t_struct(History)2832_storage": {
              "label": "struct HouseBusiness.History",
              "members": [
                {
                  "label": "hID",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "0"
                },
                {
                  "label": "contractId",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "1"
                },
                {
                  "label": "houseImg",
                  "type": "t_string_storage",
                  "offset": 0,
                  "slot": "2"
                },
                {
                  "label": "houseBrand",
                  "type": "t_string_storage",
                  "offset": 0,
                  "slot": "3"
                },
                {
                  "label": "desc",
                  "type": "t_string_storage",
                  "offset": 0,
                  "slot": "4"
                },
                {
                  "label": "history",
                  "type": "t_string_storage",
                  "offset": 0,
                  "slot": "5"
                },
                {
                  "label": "brandType",
                  "type": "t_string_storage",
                  "offset": 0,
                  "slot": "6"
                },
                {
                  "label": "yearField",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "7"
                }
              ],
              "numberOfBytes": "256"
            },
            "t_struct(HistoryType)2851_storage": {
              "label": "struct HouseBusiness.HistoryType",
              "members": [
                {
                  "label": "hID",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "0"
                },
                {
                  "label": "hLabel",
                  "type": "t_string_storage",
                  "offset": 0,
                  "slot": "1"
                },
                {
                  "label": "connectContract",
                  "type": "t_bool",
                  "offset": 0,
                  "slot": "2"
                },
                {
                  "label": "imgNeed",
                  "type": "t_bool",
                  "offset": 1,
                  "slot": "2"
                },
                {
                  "label": "brandNeed",
                  "type": "t_bool",
                  "offset": 2,
                  "slot": "2"
                },
                {
                  "label": "descNeed",
                  "type": "t_bool",
                  "offset": 3,
                  "slot": "2"
                },
                {
                  "label": "brandTypeNeed",
                  "type": "t_bool",
                  "offset": 4,
                  "slot": "2"
                },
                {
                  "label": "yearNeed",
                  "type": "t_bool",
                  "offset": 5,
                  "slot": "2"
                },
                {
                  "label": "checkMark",
                  "type": "t_bool",
                  "offset": 6,
                  "slot": "2"
                }
              ],
              "numberOfBytes": "96"
            },
            "t_struct(House)2798_storage": {
              "label": "struct HouseBusiness.House",
              "members": [
                {
                  "label": "tokenId",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "0"
                },
                {
                  "label": "tokenName",
                  "type": "t_string_storage",
                  "offset": 0,
                  "slot": "1"
                },
                {
                  "label": "tokenURI",
                  "type": "t_string_storage",
                  "offset": 0,
                  "slot": "2"
                },
                {
                  "label": "tokenType",
                  "type": "t_string_storage",
                  "offset": 0,
                  "slot": "3"
                },
                {
                  "label": "currentOwner",
                  "type": "t_address",
                  "offset": 0,
                  "slot": "4"
                },
                {
                  "label": "previousOwner",
                  "type": "t_address",
                  "offset": 0,
                  "slot": "5"
                },
                {
                  "label": "buyer",
                  "type": "t_address",
                  "offset": 0,
                  "slot": "6"
                },
                {
                  "label": "price",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "7"
                },
                {
                  "label": "numberOfTransfers",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "8"
                },
                {
                  "label": "nftPayable",
                  "type": "t_bool",
                  "offset": 0,
                  "slot": "9"
                },
                {
                  "label": "staked",
                  "type": "t_bool",
                  "offset": 1,
                  "slot": "9"
                },
                {
                  "label": "soldstatus",
                  "type": "t_bool",
                  "offset": 2,
                  "slot": "9"
                }
              ],
              "numberOfBytes": "320"
            },
            "t_struct(StakedNft)2815_storage": {
              "label": "struct HouseBusiness.StakedNft",
              "members": [
                {
                  "label": "owner",
                  "type": "t_address",
                  "offset": 0,
                  "slot": "0"
                },
                {
                  "label": "tokenId",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "1"
                },
                {
                  "label": "startedDate",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "2"
                },
                {
                  "label": "endDate",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "3"
                },
                {
                  "label": "claimDate",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "4"
                },
                {
                  "label": "stakingType",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "5"
                },
                {
                  "label": "perSecRewards",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "6"
                },
                {
                  "label": "stakingStatus",
                  "type": "t_bool",
                  "offset": 0,
                  "slot": "7"
                }
              ],
              "numberOfBytes": "256"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            }
          },
          "layoutVersion": "1.1",
          "flat": true
        }
      },
      "IMainCleanContract": {
        "src": "contracts\\interfaces\\IContract.sol:6",
        "inherit": [],
        "libraries": [],
        "methods": [
          "allCleanContracts(uint256)",
          "transferContractOwnership(uint256,address,address)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      }
    },
    {
      "IERC20": {
        "src": "@openzeppelin\\contracts\\token\\ERC20\\IERC20.sol:9",
        "inherit": [],
        "libraries": [],
        "methods": [
          "totalSupply()",
          "balanceOf(address)",
          "transfer(address,uint256)",
          "allowance(address,address)",
          "approve(address,uint256)",
          "transferFrom(address,address,uint256)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "ERC721": {
        "src": "@openzeppelin\\contracts\\token\\ERC721\\ERC721.sol:19",
        "version": {
          "withMetadata": "311027b738fb50ea92c84baf68eacb931adf05de03da13635a661dc9c5b03f73",
          "withoutMetadata": "9ec7f439077c3b762bc3aa6a17c55aba7a78d240190c9c7814df896455a0f780",
          "linkedWithoutMetadata": "9ec7f439077c3b762bc3aa6a17c55aba7a78d240190c9c7814df896455a0f780"
        },
        "inherit": [
          "IERC721Metadata",
          "IERC721",
          "ERC165",
          "IERC165",
          "Context"
        ],
        "libraries": [
          "Address",
          "Strings"
        ],
        "methods": [
          "(string,string)",
          "supportsInterface(bytes4)",
          "balanceOf(address)",
          "ownerOf(uint256)",
          "name()",
          "symbol()",
          "tokenURI(uint256)",
          "approve(address,uint256)",
          "getApproved(uint256)",
          "setApprovalForAll(address,bool)",
          "isApprovedForAll(address,address)",
          "transferFrom(address,address,uint256)",
          "safeTransferFrom(address,address,uint256)",
          "safeTransferFrom(address,address,uint256,bytes)"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "ERC721",
            "src": "@openzeppelin\\contracts\\token\\ERC721\\ERC721.sol:44"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "_name",
              "offset": 0,
              "slot": "0",
              "type": "t_string_storage",
              "contract": "ERC721",
              "src": "@openzeppelin\\contracts\\token\\ERC721\\ERC721.sol:24"
            },
            {
              "label": "_symbol",
              "offset": 0,
              "slot": "1",
              "type": "t_string_storage",
              "contract": "ERC721",
              "src": "@openzeppelin\\contracts\\token\\ERC721\\ERC721.sol:27"
            },
            {
              "label": "_owners",
              "offset": 0,
              "slot": "2",
              "type": "t_mapping(t_uint256,t_address)",
              "contract": "ERC721",
              "src": "@openzeppelin\\contracts\\token\\ERC721\\ERC721.sol:30"
            },
            {
              "label": "_balances",
              "offset": 0,
              "slot": "3",
              "type": "t_mapping(t_address,t_uint256)",
              "contract": "ERC721",
              "src": "@openzeppelin\\contracts\\token\\ERC721\\ERC721.sol:33"
            },
            {
              "label": "_tokenApprovals",
              "offset": 0,
              "slot": "4",
              "type": "t_mapping(t_uint256,t_address)",
              "contract": "ERC721",
              "src": "@openzeppelin\\contracts\\token\\ERC721\\ERC721.sol:36"
            },
            {
              "label": "_operatorApprovals",
              "offset": 0,
              "slot": "5",
              "type": "t_mapping(t_address,t_mapping(t_address,t_bool))",
              "contract": "ERC721",
              "src": "@openzeppelin\\contracts\\token\\ERC721\\ERC721.sol:39"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            },
            "t_bool": {
              "label": "bool",
              "numberOfBytes": "1"
            },
            "t_mapping(t_address,t_bool)": {
              "label": "mapping(address => bool)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_mapping(t_address,t_bool))": {
              "label": "mapping(address => mapping(address => bool))",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_uint256)": {
              "label": "mapping(address => uint256)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_uint256,t_address)": {
              "label": "mapping(uint256 => address)",
              "numberOfBytes": "32"
            },
            "t_string_storage": {
              "label": "string",
              "numberOfBytes": "32"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            }
          },
          "layoutVersion": "1.1",
          "flat": true
        }
      },
      "IERC721": {
        "src": "@openzeppelin\\contracts\\token\\ERC721\\IERC721.sol:11",
        "inherit": [
          "IERC165"
        ],
        "libraries": [],
        "methods": [
          "balanceOf(address)",
          "ownerOf(uint256)",
          "safeTransferFrom(address,address,uint256,bytes)",
          "safeTransferFrom(address,address,uint256)",
          "transferFrom(address,address,uint256)",
          "approve(address,uint256)",
          "setApprovalForAll(address,bool)",
          "getApproved(uint256)",
          "isApprovedForAll(address,address)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "IERC721Receiver": {
        "src": "@openzeppelin\\contracts\\token\\ERC721\\IERC721Receiver.sol:11",
        "inherit": [],
        "libraries": [],
        "methods": [
          "onERC721Received(address,address,uint256,bytes)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "ERC721URIStorage": {
        "src": "@openzeppelin\\contracts\\token\\ERC721\\extensions\\ERC721URIStorage.sol:11",
        "inherit": [
          "ERC721",
          "IERC721Metadata",
          "IERC721",
          "ERC165",
          "IERC165",
          "Context"
        ],
        "libraries": [
          "Strings"
        ],
        "methods": [
          "tokenURI(uint256)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [
            {
              "label": "_name",
              "offset": 0,
              "slot": "0",
              "type": "t_string_storage",
              "contract": "ERC721",
              "src": "@openzeppelin\\contracts\\token\\ERC721\\ERC721.sol:24"
            },
            {
              "label": "_symbol",
              "offset": 0,
              "slot": "1",
              "type": "t_string_storage",
              "contract": "ERC721",
              "src": "@openzeppelin\\contracts\\token\\ERC721\\ERC721.sol:27"
            },
            {
              "label": "_owners",
              "offset": 0,
              "slot": "2",
              "type": "t_mapping(t_uint256,t_address)",
              "contract": "ERC721",
              "src": "@openzeppelin\\contracts\\token\\ERC721\\ERC721.sol:30"
            },
            {
              "label": "_balances",
              "offset": 0,
              "slot": "3",
              "type": "t_mapping(t_address,t_uint256)",
              "contract": "ERC721",
              "src": "@openzeppelin\\contracts\\token\\ERC721\\ERC721.sol:33"
            },
            {
              "label": "_tokenApprovals",
              "offset": 0,
              "slot": "4",
              "type": "t_mapping(t_uint256,t_address)",
              "contract": "ERC721",
              "src": "@openzeppelin\\contracts\\token\\ERC721\\ERC721.sol:36"
            },
            {
              "label": "_operatorApprovals",
              "offset": 0,
              "slot": "5",
              "type": "t_mapping(t_address,t_mapping(t_address,t_bool))",
              "contract": "ERC721",
              "src": "@openzeppelin\\contracts\\token\\ERC721\\ERC721.sol:39"
            },
            {
              "label": "_tokenURIs",
              "offset": 0,
              "slot": "6",
              "type": "t_mapping(t_uint256,t_string_storage)",
              "contract": "ERC721URIStorage",
              "src": "@openzeppelin\\contracts\\token\\ERC721\\extensions\\ERC721URIStorage.sol:15"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            },
            "t_bool": {
              "label": "bool",
              "numberOfBytes": "1"
            },
            "t_mapping(t_address,t_bool)": {
              "label": "mapping(address => bool)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_mapping(t_address,t_bool))": {
              "label": "mapping(address => mapping(address => bool))",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_uint256)": {
              "label": "mapping(address => uint256)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_uint256,t_address)": {
              "label": "mapping(uint256 => address)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_uint256,t_string_storage)": {
              "label": "mapping(uint256 => string)",
              "numberOfBytes": "32"
            },
            "t_string_storage": {
              "label": "string",
              "numberOfBytes": "32"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            }
          },
          "layoutVersion": "1.1",
          "flat": true
        }
      },
      "IERC721Metadata": {
        "src": "@openzeppelin\\contracts\\token\\ERC721\\extensions\\IERC721Metadata.sol:12",
        "inherit": [
          "IERC721",
          "IERC165"
        ],
        "libraries": [],
        "methods": [
          "name()",
          "symbol()",
          "tokenURI(uint256)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "Address": {
        "src": "@openzeppelin\\contracts\\utils\\Address.sol:9",
        "version": {
          "withMetadata": "a0500f265408d7c0dbf75da3f9e44a5c2ee85e18bb1b58fe491ffcfa4ea7fd9b",
          "withoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db",
          "linkedWithoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db"
        },
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [
          {
            "kind": "delegatecall",
            "src": "@openzeppelin\\contracts\\utils\\Address.sol:185"
          }
        ],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "Context": {
        "src": "@openzeppelin\\contracts\\utils\\Context.sol:16",
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "Strings": {
        "src": "@openzeppelin\\contracts\\utils\\Strings.sol:11",
        "version": {
          "withMetadata": "c385b5200dd723f945d28b88358d79ca1b5c0f71c28cbbab9acf6d6f3fd15593",
          "withoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db",
          "linkedWithoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db"
        },
        "inherit": [],
        "libraries": [
          "Math"
        ],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "ERC165": {
        "src": "@openzeppelin\\contracts\\utils\\introspection\\ERC165.sol:22",
        "inherit": [
          "IERC165"
        ],
        "libraries": [],
        "methods": [
          "supportsInterface(bytes4)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "IERC165": {
        "src": "@openzeppelin\\contracts\\utils\\introspection\\IERC165.sol:15",
        "inherit": [],
        "libraries": [],
        "methods": [
          "supportsInterface(bytes4)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "Math": {
        "src": "@openzeppelin\\contracts\\utils\\math\\Math.sol:9",
        "version": {
          "withMetadata": "fcaf39e5e702f2902d6ef00c1def75c9800e8d2a0a78a87cf542096cafc7a4b0",
          "withoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db",
          "linkedWithoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db"
        },
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "HouseBusiness": {
        "src": "contracts\\HouseBusiness.sol:11",
        "version": {
          "withMetadata": "8c09cde6c5a195bccaef4b287d92e7028da3f11533e3da1e581673750b921a90",
          "withoutMetadata": "d1251a5c70bb12b83da1a7d085c1d87b8461b1b217ede69bd8ac0d580d39463a",
          "linkedWithoutMetadata": "d1251a5c70bb12b83da1a7d085c1d87b8461b1b217ede69bd8ac0d580d39463a"
        },
        "inherit": [
          "ERC721URIStorage",
          "ERC721",
          "IERC721Metadata",
          "IERC721",
          "ERC165",
          "IERC165",
          "Context"
        ],
        "libraries": [],
        "methods": [
          "(address)",
          "setMinMaxHousePrice(uint256,uint256)",
          "setConfigToken(address)",
          "isMember()",
          "addMember(address)",
          "removeMember(address)",
          "tokenURI(uint256)",
          "setCContractAddress(address)",
          "setPayable(uint256,address,bool)",
          "mintHouse(string,string,string,string,uint256)",
          "addAllowList(uint256,address)",
          "removeAllowList(uint256,address)",
          "checkAllowedList(uint256,address)",
          "addHistory(uint256,uint256,uint256,string,string,string,string,string,uint256)",
          "getHistory(uint256)",
          "editHistory(uint256,uint256,string,string,string,string,string,uint256)",
          "getHistoryType()",
          "addOrEditHType(uint256,string,bool,bool,bool,bool,bool,bool,bool)",
          "removeHistoryType(uint256)",
          "getMinMaxNFT()",
          "getTokenOwner(uint256)",
          "buyHouseNft(uint256)",
          "sendToken(address,uint256)",
          "changeTokenPrice(uint256,uint256)",
          "getAllHouses()",
          "getAllPayableHouses()",
          "getAllMyHouses()",
          "withdrawToken(uint256)",
          "withdrawETH(uint256)",
          "calcDiv(uint256,uint256)",
          "setAPYConfig(uint256,uint256)",
          "getAllAPYTypes()",
          "stake(uint256,uint256)",
          "unstake(uint256)",
          "stakingFinished(uint256)",
          "totalRewards(address)",
          "claimRewards(address)",
          "getAllMyStakedNFTs()",
          "getTotalInfo()",
          "getAllAPYs()",
          "getPenalty()",
          "setPenalty(uint256)",
          "getRoyalty()",
          "setRoyalty(uint256)"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "HouseBusiness",
            "src": "contracts\\HouseBusiness.sol:106"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "_name",
              "offset": 0,
              "slot": "0",
              "type": "t_string_storage",
              "contract": "ERC721",
              "src": "@openzeppelin\\contracts\\token\\ERC721\\ERC721.sol:24"
            },
            {
              "label": "_symbol",
              "offset": 0,
              "slot": "1",
              "type": "t_string_storage",
              "contract": "ERC721",
              "src": "@openzeppelin\\contracts\\token\\ERC721\\ERC721.sol:27"
            },
            {
              "label": "_owners",
              "offset": 0,
              "slot": "2",
              "type": "t_mapping(t_uint256,t_address)",
              "contract": "ERC721",
              "src": "@openzeppelin\\contracts\\token\\ERC721\\ERC721.sol:30"
            },
            {
              "label": "_balances",
              "offset": 0,
              "slot": "3",
              "type": "t_mapping(t_address,t_uint256)",
              "contract": "ERC721",
              "src": "@openzeppelin\\contracts\\token\\ERC721\\ERC721.sol:33"
            },
            {
              "label": "_tokenApprovals",
              "offset": 0,
              "slot": "4",
              "type": "t_mapping(t_uint256,t_address)",
              "contract": "ERC721",
              "src": "@openzeppelin\\contracts\\token\\ERC721\\ERC721.sol:36"
            },
            {
              "label": "_operatorApprovals",
              "offset": 0,
              "slot": "5",
              "type": "t_mapping(t_address,t_mapping(t_address,t_bool))",
              "contract": "ERC721",
              "src": "@openzeppelin\\contracts\\token\\ERC721\\ERC721.sol:39"
            },
            {
              "label": "_tokenURIs",
              "offset": 0,
              "slot": "6",
              "type": "t_mapping(t_uint256,t_string_storage)",
              "contract": "ERC721URIStorage",
              "src": "@openzeppelin\\contracts\\token\\ERC721\\extensions\\ERC721URIStorage.sol:15"
            },
            {
              "label": "collectionName",
              "offset": 0,
              "slot": "7",
              "type": "t_string_storage",
              "contract": "HouseBusiness",
              "src": "contracts\\HouseBusiness.sol:13"
            },
            {
              "label": "collectionNameSymbol",
              "offset": 0,
              "slot": "8",
              "type": "t_string_storage",
              "contract": "HouseBusiness",
              "src": "contracts\\HouseBusiness.sol:15"
            },
            {
              "label": "houseCounter",
              "offset": 0,
              "slot": "9",
              "type": "t_uint256",
              "contract": "HouseBusiness",
              "src": "contracts\\HouseBusiness.sol:17"
            },
            {
              "label": "stakedCounter",
              "offset": 0,
              "slot": "10",
              "type": "t_uint256",
              "contract": "HouseBusiness",
              "src": "contracts\\HouseBusiness.sol:19"
            },
            {
              "label": "soldedCounter",
              "offset": 0,
              "slot": "11",
              "type": "t_uint256",
              "contract": "HouseBusiness",
              "src": "contracts\\HouseBusiness.sol:21"
            },
            {
              "label": "hTypeCounter",
              "offset": 0,
              "slot": "12",
              "type": "t_uint256",
              "contract": "HouseBusiness",
              "src": "contracts\\HouseBusiness.sol:23"
            },
            {
              "label": "_token",
              "offset": 0,
              "slot": "13",
              "type": "t_contract(IERC20)77",
              "contract": "HouseBusiness",
              "src": "contracts\\HouseBusiness.sol:25"
            },
            {
              "label": "minPrice",
              "offset": 0,
              "slot": "14",
              "type": "t_uint256",
              "contract": "HouseBusiness",
              "src": "contracts\\HouseBusiness.sol:27"
            },
            {
              "label": "maxPrice",
              "offset": 0,
              "slot": "15",
              "type": "t_uint256",
              "contract": "HouseBusiness",
              "src": "contracts\\HouseBusiness.sol:29"
            },
            {
              "label": "penalty",
              "offset": 0,
              "slot": "16",
              "type": "t_uint256",
              "contract": "HouseBusiness",
              "src": "contracts\\HouseBusiness.sol:31"
            },
            {
              "label": "royalty",
              "offset": 0,
              "slot": "17",
              "type": "t_uint256",
              "contract": "HouseBusiness",
              "src": "contracts\\HouseBusiness.sol:33"
            },
            {
              "label": "cContractAddress",
              "offset": 0,
              "slot": "18",
              "type": "t_address",
              "contract": "HouseBusiness",
              "src": "contracts\\HouseBusiness.sol:35"
            },
            {
              "label": "historyTypes",
              "offset": 0,
              "slot": "19",
              "type": "t_array(t_struct(HistoryType)2850_storage)dyn_storage",
              "contract": "HouseBusiness",
              "src": "contracts\\HouseBusiness.sol:86"
            },
            {
              "label": "houseHistories",
              "offset": 0,
              "slot": "20",
              "type": "t_mapping(t_uint256,t_array(t_struct(History)2831_storage)dyn_storage)",
              "contract": "HouseBusiness",
              "src": "contracts\\HouseBusiness.sol:88"
            },
            {
              "label": "APYtypes",
              "offset": 0,
              "slot": "21",
              "type": "t_array(t_uint256)dyn_storage",
              "contract": "HouseBusiness",
              "src": "contracts\\HouseBusiness.sol:90"
            },
            {
              "label": "APYConfig",
              "offset": 0,
              "slot": "22",
              "type": "t_mapping(t_uint256,t_uint256)",
              "contract": "HouseBusiness",
              "src": "contracts\\HouseBusiness.sol:92"
            },
            {
              "label": "allMembers",
              "offset": 0,
              "slot": "23",
              "type": "t_mapping(t_address,t_bool)",
              "contract": "HouseBusiness",
              "src": "contracts\\HouseBusiness.sol:94"
            },
            {
              "label": "allHouses",
              "offset": 0,
              "slot": "24",
              "type": "t_mapping(t_uint256,t_struct(House)2797_storage)",
              "contract": "HouseBusiness",
              "src": "contracts\\HouseBusiness.sol:96"
            },
            {
              "label": "allowedList",
              "offset": 0,
              "slot": "25",
              "type": "t_mapping(t_uint256,t_mapping(t_address,t_bool))",
              "contract": "HouseBusiness",
              "src": "contracts\\HouseBusiness.sol:98"
            },
            {
              "label": "stakedNfts",
              "offset": 0,
              "slot": "26",
              "type": "t_mapping(t_address,t_array(t_struct(StakedNft)2814_storage)dyn_storage)",
              "contract": "HouseBusiness",
              "src": "contracts\\HouseBusiness.sol:104"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            },
            "t_array(t_struct(History)2831_storage)dyn_storage": {
              "label": "struct HouseBusiness.History[]",
              "numberOfBytes": "32"
            },
            "t_array(t_struct(HistoryType)2850_storage)dyn_storage": {
              "label": "struct HouseBusiness.HistoryType[]",
              "numberOfBytes": "32"
            },
            "t_array(t_struct(StakedNft)2814_storage)dyn_storage": {
              "label": "struct HouseBusiness.StakedNft[]",
              "numberOfBytes": "32"
            },
            "t_array(t_uint256)dyn_storage": {
              "label": "uint256[]",
              "numberOfBytes": "32"
            },
            "t_bool": {
              "label": "bool",
              "numberOfBytes": "1"
            },
            "t_contract(IERC20)77": {
              "label": "contract IERC20",
              "numberOfBytes": "20"
            },
            "t_mapping(t_address,t_array(t_struct(StakedNft)2814_storage)dyn_storage)": {
              "label": "mapping(address => struct HouseBusiness.StakedNft[])",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_bool)": {
              "label": "mapping(address => bool)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_mapping(t_address,t_bool))": {
              "label": "mapping(address => mapping(address => bool))",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_uint256)": {
              "label": "mapping(address => uint256)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_uint256,t_address)": {
              "label": "mapping(uint256 => address)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_uint256,t_array(t_struct(History)2831_storage)dyn_storage)": {
              "label": "mapping(uint256 => struct HouseBusiness.History[])",
              "numberOfBytes": "32"
            },
            "t_mapping(t_uint256,t_mapping(t_address,t_bool))": {
              "label": "mapping(uint256 => mapping(address => bool))",
              "numberOfBytes": "32"
            },
            "t_mapping(t_uint256,t_string_storage)": {
              "label": "mapping(uint256 => string)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_uint256,t_struct(House)2797_storage)": {
              "label": "mapping(uint256 => struct HouseBusiness.House)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_uint256,t_uint256)": {
              "label": "mapping(uint256 => uint256)",
              "numberOfBytes": "32"
            },
            "t_string_storage": {
              "label": "string",
              "numberOfBytes": "32"
            },
            "t_struct(History)2831_storage": {
              "label": "struct HouseBusiness.History",
              "members": [
                {
                  "label": "hID",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "0"
                },
                {
                  "label": "contractId",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "1"
                },
                {
                  "label": "houseImg",
                  "type": "t_string_storage",
                  "offset": 0,
                  "slot": "2"
                },
                {
                  "label": "houseBrand",
                  "type": "t_string_storage",
                  "offset": 0,
                  "slot": "3"
                },
                {
                  "label": "desc",
                  "type": "t_string_storage",
                  "offset": 0,
                  "slot": "4"
                },
                {
                  "label": "history",
                  "type": "t_string_storage",
                  "offset": 0,
                  "slot": "5"
                },
                {
                  "label": "brandType",
                  "type": "t_string_storage",
                  "offset": 0,
                  "slot": "6"
                },
                {
                  "label": "yearField",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "7"
                }
              ],
              "numberOfBytes": "256"
            },
            "t_struct(HistoryType)2850_storage": {
              "label": "struct HouseBusiness.HistoryType",
              "members": [
                {
                  "label": "hID",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "0"
                },
                {
                  "label": "hLabel",
                  "type": "t_string_storage",
                  "offset": 0,
                  "slot": "1"
                },
                {
                  "label": "connectContract",
                  "type": "t_bool",
                  "offset": 0,
                  "slot": "2"
                },
                {
                  "label": "imgNeed",
                  "type": "t_bool",
                  "offset": 1,
                  "slot": "2"
                },
                {
                  "label": "brandNeed",
                  "type": "t_bool",
                  "offset": 2,
                  "slot": "2"
                },
                {
                  "label": "descNeed",
                  "type": "t_bool",
                  "offset": 3,
                  "slot": "2"
                },
                {
                  "label": "brandTypeNeed",
                  "type": "t_bool",
                  "offset": 4,
                  "slot": "2"
                },
                {
                  "label": "yearNeed",
                  "type": "t_bool",
                  "offset": 5,
                  "slot": "2"
                },
                {
                  "label": "checkMark",
                  "type": "t_bool",
                  "offset": 6,
                  "slot": "2"
                }
              ],
              "numberOfBytes": "96"
            },
            "t_struct(House)2797_storage": {
              "label": "struct HouseBusiness.House",
              "members": [
                {
                  "label": "tokenId",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "0"
                },
                {
                  "label": "tokenName",
                  "type": "t_string_storage",
                  "offset": 0,
                  "slot": "1"
                },
                {
                  "label": "tokenURI",
                  "type": "t_string_storage",
                  "offset": 0,
                  "slot": "2"
                },
                {
                  "label": "tokenType",
                  "type": "t_string_storage",
                  "offset": 0,
                  "slot": "3"
                },
                {
                  "label": "currentOwner",
                  "type": "t_address",
                  "offset": 0,
                  "slot": "4"
                },
                {
                  "label": "previousOwner",
                  "type": "t_address",
                  "offset": 0,
                  "slot": "5"
                },
                {
                  "label": "buyer",
                  "type": "t_address",
                  "offset": 0,
                  "slot": "6"
                },
                {
                  "label": "price",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "7"
                },
                {
                  "label": "numberOfTransfers",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "8"
                },
                {
                  "label": "nftPayable",
                  "type": "t_bool",
                  "offset": 0,
                  "slot": "9"
                },
                {
                  "label": "staked",
                  "type": "t_bool",
                  "offset": 1,
                  "slot": "9"
                },
                {
                  "label": "soldstatus",
                  "type": "t_bool",
                  "offset": 2,
                  "slot": "9"
                }
              ],
              "numberOfBytes": "320"
            },
            "t_struct(StakedNft)2814_storage": {
              "label": "struct HouseBusiness.StakedNft",
              "members": [
                {
                  "label": "owner",
                  "type": "t_address",
                  "offset": 0,
                  "slot": "0"
                },
                {
                  "label": "tokenId",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "1"
                },
                {
                  "label": "startedDate",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "2"
                },
                {
                  "label": "endDate",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "3"
                },
                {
                  "label": "claimDate",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "4"
                },
                {
                  "label": "stakingType",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "5"
                },
                {
                  "label": "perSecRewards",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "6"
                },
                {
                  "label": "stakingStatus",
                  "type": "t_bool",
                  "offset": 0,
                  "slot": "7"
                }
              ],
              "numberOfBytes": "256"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            }
          },
          "layoutVersion": "1.1",
          "flat": true
        }
      },
      "IMainCleanContract": {
        "src": "contracts\\interfaces\\IContract.sol:6",
        "inherit": [],
        "libraries": [],
        "methods": [
          "allCleanContracts(uint256)",
          "transferContractOwnership(uint256,address,address)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      }
    },
    {
      "IERC20": {
        "src": "@openzeppelin\\contracts\\token\\ERC20\\IERC20.sol:9",
        "inherit": [],
        "libraries": [],
        "methods": [
          "totalSupply()",
          "balanceOf(address)",
          "transfer(address,uint256)",
          "allowance(address,address)",
          "approve(address,uint256)",
          "transferFrom(address,address,uint256)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "ERC721": {
        "src": "@openzeppelin\\contracts\\token\\ERC721\\ERC721.sol:19",
        "version": {
          "withMetadata": "311027b738fb50ea92c84baf68eacb931adf05de03da13635a661dc9c5b03f73",
          "withoutMetadata": "9ec7f439077c3b762bc3aa6a17c55aba7a78d240190c9c7814df896455a0f780",
          "linkedWithoutMetadata": "9ec7f439077c3b762bc3aa6a17c55aba7a78d240190c9c7814df896455a0f780"
        },
        "inherit": [
          "IERC721Metadata",
          "IERC721",
          "ERC165",
          "IERC165",
          "Context"
        ],
        "libraries": [
          "Address",
          "Strings"
        ],
        "methods": [
          "(string,string)",
          "supportsInterface(bytes4)",
          "balanceOf(address)",
          "ownerOf(uint256)",
          "name()",
          "symbol()",
          "tokenURI(uint256)",
          "approve(address,uint256)",
          "getApproved(uint256)",
          "setApprovalForAll(address,bool)",
          "isApprovedForAll(address,address)",
          "transferFrom(address,address,uint256)",
          "safeTransferFrom(address,address,uint256)",
          "safeTransferFrom(address,address,uint256,bytes)"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "ERC721",
            "src": "@openzeppelin\\contracts\\token\\ERC721\\ERC721.sol:44"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "_name",
              "offset": 0,
              "slot": "0",
              "type": "t_string_storage",
              "contract": "ERC721",
              "src": "@openzeppelin\\contracts\\token\\ERC721\\ERC721.sol:24"
            },
            {
              "label": "_symbol",
              "offset": 0,
              "slot": "1",
              "type": "t_string_storage",
              "contract": "ERC721",
              "src": "@openzeppelin\\contracts\\token\\ERC721\\ERC721.sol:27"
            },
            {
              "label": "_owners",
              "offset": 0,
              "slot": "2",
              "type": "t_mapping(t_uint256,t_address)",
              "contract": "ERC721",
              "src": "@openzeppelin\\contracts\\token\\ERC721\\ERC721.sol:30"
            },
            {
              "label": "_balances",
              "offset": 0,
              "slot": "3",
              "type": "t_mapping(t_address,t_uint256)",
              "contract": "ERC721",
              "src": "@openzeppelin\\contracts\\token\\ERC721\\ERC721.sol:33"
            },
            {
              "label": "_tokenApprovals",
              "offset": 0,
              "slot": "4",
              "type": "t_mapping(t_uint256,t_address)",
              "contract": "ERC721",
              "src": "@openzeppelin\\contracts\\token\\ERC721\\ERC721.sol:36"
            },
            {
              "label": "_operatorApprovals",
              "offset": 0,
              "slot": "5",
              "type": "t_mapping(t_address,t_mapping(t_address,t_bool))",
              "contract": "ERC721",
              "src": "@openzeppelin\\contracts\\token\\ERC721\\ERC721.sol:39"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            },
            "t_bool": {
              "label": "bool",
              "numberOfBytes": "1"
            },
            "t_mapping(t_address,t_bool)": {
              "label": "mapping(address => bool)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_mapping(t_address,t_bool))": {
              "label": "mapping(address => mapping(address => bool))",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_uint256)": {
              "label": "mapping(address => uint256)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_uint256,t_address)": {
              "label": "mapping(uint256 => address)",
              "numberOfBytes": "32"
            },
            "t_string_storage": {
              "label": "string",
              "numberOfBytes": "32"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            }
          },
          "layoutVersion": "1.1",
          "flat": true
        }
      },
      "IERC721": {
        "src": "@openzeppelin\\contracts\\token\\ERC721\\IERC721.sol:11",
        "inherit": [
          "IERC165"
        ],
        "libraries": [],
        "methods": [
          "balanceOf(address)",
          "ownerOf(uint256)",
          "safeTransferFrom(address,address,uint256,bytes)",
          "safeTransferFrom(address,address,uint256)",
          "transferFrom(address,address,uint256)",
          "approve(address,uint256)",
          "setApprovalForAll(address,bool)",
          "getApproved(uint256)",
          "isApprovedForAll(address,address)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "IERC721Receiver": {
        "src": "@openzeppelin\\contracts\\token\\ERC721\\IERC721Receiver.sol:11",
        "inherit": [],
        "libraries": [],
        "methods": [
          "onERC721Received(address,address,uint256,bytes)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "ERC721URIStorage": {
        "src": "@openzeppelin\\contracts\\token\\ERC721\\extensions\\ERC721URIStorage.sol:11",
        "inherit": [
          "ERC721",
          "IERC721Metadata",
          "IERC721",
          "ERC165",
          "IERC165",
          "Context"
        ],
        "libraries": [
          "Strings"
        ],
        "methods": [
          "tokenURI(uint256)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [
            {
              "label": "_name",
              "offset": 0,
              "slot": "0",
              "type": "t_string_storage",
              "contract": "ERC721",
              "src": "@openzeppelin\\contracts\\token\\ERC721\\ERC721.sol:24"
            },
            {
              "label": "_symbol",
              "offset": 0,
              "slot": "1",
              "type": "t_string_storage",
              "contract": "ERC721",
              "src": "@openzeppelin\\contracts\\token\\ERC721\\ERC721.sol:27"
            },
            {
              "label": "_owners",
              "offset": 0,
              "slot": "2",
              "type": "t_mapping(t_uint256,t_address)",
              "contract": "ERC721",
              "src": "@openzeppelin\\contracts\\token\\ERC721\\ERC721.sol:30"
            },
            {
              "label": "_balances",
              "offset": 0,
              "slot": "3",
              "type": "t_mapping(t_address,t_uint256)",
              "contract": "ERC721",
              "src": "@openzeppelin\\contracts\\token\\ERC721\\ERC721.sol:33"
            },
            {
              "label": "_tokenApprovals",
              "offset": 0,
              "slot": "4",
              "type": "t_mapping(t_uint256,t_address)",
              "contract": "ERC721",
              "src": "@openzeppelin\\contracts\\token\\ERC721\\ERC721.sol:36"
            },
            {
              "label": "_operatorApprovals",
              "offset": 0,
              "slot": "5",
              "type": "t_mapping(t_address,t_mapping(t_address,t_bool))",
              "contract": "ERC721",
              "src": "@openzeppelin\\contracts\\token\\ERC721\\ERC721.sol:39"
            },
            {
              "label": "_tokenURIs",
              "offset": 0,
              "slot": "6",
              "type": "t_mapping(t_uint256,t_string_storage)",
              "contract": "ERC721URIStorage",
              "src": "@openzeppelin\\contracts\\token\\ERC721\\extensions\\ERC721URIStorage.sol:15"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            },
            "t_bool": {
              "label": "bool",
              "numberOfBytes": "1"
            },
            "t_mapping(t_address,t_bool)": {
              "label": "mapping(address => bool)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_mapping(t_address,t_bool))": {
              "label": "mapping(address => mapping(address => bool))",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_uint256)": {
              "label": "mapping(address => uint256)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_uint256,t_address)": {
              "label": "mapping(uint256 => address)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_uint256,t_string_storage)": {
              "label": "mapping(uint256 => string)",
              "numberOfBytes": "32"
            },
            "t_string_storage": {
              "label": "string",
              "numberOfBytes": "32"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            }
          },
          "layoutVersion": "1.1",
          "flat": true
        }
      },
      "IERC721Metadata": {
        "src": "@openzeppelin\\contracts\\token\\ERC721\\extensions\\IERC721Metadata.sol:12",
        "inherit": [
          "IERC721",
          "IERC165"
        ],
        "libraries": [],
        "methods": [
          "name()",
          "symbol()",
          "tokenURI(uint256)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "Address": {
        "src": "@openzeppelin\\contracts\\utils\\Address.sol:9",
        "version": {
          "withMetadata": "a0500f265408d7c0dbf75da3f9e44a5c2ee85e18bb1b58fe491ffcfa4ea7fd9b",
          "withoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db",
          "linkedWithoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db"
        },
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [
          {
            "kind": "delegatecall",
            "src": "@openzeppelin\\contracts\\utils\\Address.sol:185"
          }
        ],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "Context": {
        "src": "@openzeppelin\\contracts\\utils\\Context.sol:16",
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "Strings": {
        "src": "@openzeppelin\\contracts\\utils\\Strings.sol:11",
        "version": {
          "withMetadata": "c385b5200dd723f945d28b88358d79ca1b5c0f71c28cbbab9acf6d6f3fd15593",
          "withoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db",
          "linkedWithoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db"
        },
        "inherit": [],
        "libraries": [
          "Math"
        ],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "ERC165": {
        "src": "@openzeppelin\\contracts\\utils\\introspection\\ERC165.sol:22",
        "inherit": [
          "IERC165"
        ],
        "libraries": [],
        "methods": [
          "supportsInterface(bytes4)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "IERC165": {
        "src": "@openzeppelin\\contracts\\utils\\introspection\\IERC165.sol:15",
        "inherit": [],
        "libraries": [],
        "methods": [
          "supportsInterface(bytes4)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "Math": {
        "src": "@openzeppelin\\contracts\\utils\\math\\Math.sol:9",
        "version": {
          "withMetadata": "fcaf39e5e702f2902d6ef00c1def75c9800e8d2a0a78a87cf542096cafc7a4b0",
          "withoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db",
          "linkedWithoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db"
        },
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "HouseBusiness": {
        "src": "contracts\\HouseBusiness.sol:11",
        "version": {
          "withMetadata": "8fd6ee832fdccf08b8fcda3042179fbef58c38e42ce32ac50cc00b1ac29c2fdd",
          "withoutMetadata": "4471416ce109599dbdd97aecec58017bdba532f924e96843f2a058901e59a4d7",
          "linkedWithoutMetadata": "4471416ce109599dbdd97aecec58017bdba532f924e96843f2a058901e59a4d7"
        },
        "inherit": [
          "ERC721URIStorage",
          "ERC721",
          "IERC721Metadata",
          "IERC721",
          "ERC165",
          "IERC165",
          "Context"
        ],
        "libraries": [],
        "methods": [
          "(address)",
          "setMinMaxHousePrice(uint256,uint256)",
          "setConfigToken(address)",
          "isMember()",
          "addMember(address)",
          "removeMember(address)",
          "tokenURI(uint256)",
          "setCContractAddress(address)",
          "setPayable(uint256,address,bool)",
          "mintHouse(string,string,string,string,uint256)",
          "addAllowList(uint256,address)",
          "removeAllowList(uint256,address)",
          "checkAllowedList(uint256,address)",
          "addHistory(uint256,uint256,string,string,string,string,string,uint256)",
          "getHistory(uint256)",
          "editHistory(uint256,uint256,string,string,string,string,string,uint256)",
          "getHistoryType()",
          "addOrEditHType(uint256,string,bool,bool,bool,bool,bool,bool,bool)",
          "removeHistoryType(uint256)",
          "getMinMaxNFT()",
          "getTokenOwner(uint256)",
          "buyHouseNft(uint256)",
          "sendToken(address,uint256)",
          "changeTokenPrice(uint256,uint256)",
          "getAllHouses()",
          "getAllPayableHouses()",
          "getAllMyHouses()",
          "withdrawToken(uint256)",
          "withdrawETH(uint256)",
          "calcDiv(uint256,uint256)",
          "setAPYConfig(uint256,uint256)",
          "getAllAPYTypes()",
          "stake(uint256,uint256)",
          "unstake(uint256)",
          "stakingFinished(uint256)",
          "totalRewards(address)",
          "claimRewards(address)",
          "getAllMyStakedNFTs()",
          "getTotalInfo()",
          "getAllAPYs()",
          "getPenalty()",
          "setPenalty(uint256)",
          "getRoyalty()",
          "setRoyalty(uint256)"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "HouseBusiness",
            "src": "contracts\\HouseBusiness.sol:106"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "_name",
              "offset": 0,
              "slot": "0",
              "type": "t_string_storage",
              "contract": "ERC721",
              "src": "@openzeppelin\\contracts\\token\\ERC721\\ERC721.sol:24"
            },
            {
              "label": "_symbol",
              "offset": 0,
              "slot": "1",
              "type": "t_string_storage",
              "contract": "ERC721",
              "src": "@openzeppelin\\contracts\\token\\ERC721\\ERC721.sol:27"
            },
            {
              "label": "_owners",
              "offset": 0,
              "slot": "2",
              "type": "t_mapping(t_uint256,t_address)",
              "contract": "ERC721",
              "src": "@openzeppelin\\contracts\\token\\ERC721\\ERC721.sol:30"
            },
            {
              "label": "_balances",
              "offset": 0,
              "slot": "3",
              "type": "t_mapping(t_address,t_uint256)",
              "contract": "ERC721",
              "src": "@openzeppelin\\contracts\\token\\ERC721\\ERC721.sol:33"
            },
            {
              "label": "_tokenApprovals",
              "offset": 0,
              "slot": "4",
              "type": "t_mapping(t_uint256,t_address)",
              "contract": "ERC721",
              "src": "@openzeppelin\\contracts\\token\\ERC721\\ERC721.sol:36"
            },
            {
              "label": "_operatorApprovals",
              "offset": 0,
              "slot": "5",
              "type": "t_mapping(t_address,t_mapping(t_address,t_bool))",
              "contract": "ERC721",
              "src": "@openzeppelin\\contracts\\token\\ERC721\\ERC721.sol:39"
            },
            {
              "label": "_tokenURIs",
              "offset": 0,
              "slot": "6",
              "type": "t_mapping(t_uint256,t_string_storage)",
              "contract": "ERC721URIStorage",
              "src": "@openzeppelin\\contracts\\token\\ERC721\\extensions\\ERC721URIStorage.sol:15"
            },
            {
              "label": "collectionName",
              "offset": 0,
              "slot": "7",
              "type": "t_string_storage",
              "contract": "HouseBusiness",
              "src": "contracts\\HouseBusiness.sol:13"
            },
            {
              "label": "collectionNameSymbol",
              "offset": 0,
              "slot": "8",
              "type": "t_string_storage",
              "contract": "HouseBusiness",
              "src": "contracts\\HouseBusiness.sol:15"
            },
            {
              "label": "houseCounter",
              "offset": 0,
              "slot": "9",
              "type": "t_uint256",
              "contract": "HouseBusiness",
              "src": "contracts\\HouseBusiness.sol:17"
            },
            {
              "label": "stakedCounter",
              "offset": 0,
              "slot": "10",
              "type": "t_uint256",
              "contract": "HouseBusiness",
              "src": "contracts\\HouseBusiness.sol:19"
            },
            {
              "label": "soldedCounter",
              "offset": 0,
              "slot": "11",
              "type": "t_uint256",
              "contract": "HouseBusiness",
              "src": "contracts\\HouseBusiness.sol:21"
            },
            {
              "label": "hTypeCounter",
              "offset": 0,
              "slot": "12",
              "type": "t_uint256",
              "contract": "HouseBusiness",
              "src": "contracts\\HouseBusiness.sol:23"
            },
            {
              "label": "_token",
              "offset": 0,
              "slot": "13",
              "type": "t_contract(IERC20)77",
              "contract": "HouseBusiness",
              "src": "contracts\\HouseBusiness.sol:25"
            },
            {
              "label": "minPrice",
              "offset": 0,
              "slot": "14",
              "type": "t_uint256",
              "contract": "HouseBusiness",
              "src": "contracts\\HouseBusiness.sol:27"
            },
            {
              "label": "maxPrice",
              "offset": 0,
              "slot": "15",
              "type": "t_uint256",
              "contract": "HouseBusiness",
              "src": "contracts\\HouseBusiness.sol:29"
            },
            {
              "label": "penalty",
              "offset": 0,
              "slot": "16",
              "type": "t_uint256",
              "contract": "HouseBusiness",
              "src": "contracts\\HouseBusiness.sol:31"
            },
            {
              "label": "royalty",
              "offset": 0,
              "slot": "17",
              "type": "t_uint256",
              "contract": "HouseBusiness",
              "src": "contracts\\HouseBusiness.sol:33"
            },
            {
              "label": "cContractAddress",
              "offset": 0,
              "slot": "18",
              "type": "t_address",
              "contract": "HouseBusiness",
              "src": "contracts\\HouseBusiness.sol:35"
            },
            {
              "label": "historyTypes",
              "offset": 0,
              "slot": "19",
              "type": "t_array(t_struct(HistoryType)2850_storage)dyn_storage",
              "contract": "HouseBusiness",
              "src": "contracts\\HouseBusiness.sol:86"
            },
            {
              "label": "houseHistories",
              "offset": 0,
              "slot": "20",
              "type": "t_mapping(t_uint256,t_array(t_struct(History)2831_storage)dyn_storage)",
              "contract": "HouseBusiness",
              "src": "contracts\\HouseBusiness.sol:88"
            },
            {
              "label": "APYtypes",
              "offset": 0,
              "slot": "21",
              "type": "t_array(t_uint256)dyn_storage",
              "contract": "HouseBusiness",
              "src": "contracts\\HouseBusiness.sol:90"
            },
            {
              "label": "APYConfig",
              "offset": 0,
              "slot": "22",
              "type": "t_mapping(t_uint256,t_uint256)",
              "contract": "HouseBusiness",
              "src": "contracts\\HouseBusiness.sol:92"
            },
            {
              "label": "allMembers",
              "offset": 0,
              "slot": "23",
              "type": "t_mapping(t_address,t_bool)",
              "contract": "HouseBusiness",
              "src": "contracts\\HouseBusiness.sol:94"
            },
            {
              "label": "allHouses",
              "offset": 0,
              "slot": "24",
              "type": "t_mapping(t_uint256,t_struct(House)2797_storage)",
              "contract": "HouseBusiness",
              "src": "contracts\\HouseBusiness.sol:96"
            },
            {
              "label": "allowedList",
              "offset": 0,
              "slot": "25",
              "type": "t_mapping(t_uint256,t_mapping(t_address,t_bool))",
              "contract": "HouseBusiness",
              "src": "contracts\\HouseBusiness.sol:98"
            },
            {
              "label": "stakedNfts",
              "offset": 0,
              "slot": "26",
              "type": "t_mapping(t_address,t_array(t_struct(StakedNft)2814_storage)dyn_storage)",
              "contract": "HouseBusiness",
              "src": "contracts\\HouseBusiness.sol:104"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            },
            "t_array(t_struct(History)2831_storage)dyn_storage": {
              "label": "struct HouseBusiness.History[]",
              "numberOfBytes": "32"
            },
            "t_array(t_struct(HistoryType)2850_storage)dyn_storage": {
              "label": "struct HouseBusiness.HistoryType[]",
              "numberOfBytes": "32"
            },
            "t_array(t_struct(StakedNft)2814_storage)dyn_storage": {
              "label": "struct HouseBusiness.StakedNft[]",
              "numberOfBytes": "32"
            },
            "t_array(t_uint256)dyn_storage": {
              "label": "uint256[]",
              "numberOfBytes": "32"
            },
            "t_bool": {
              "label": "bool",
              "numberOfBytes": "1"
            },
            "t_contract(IERC20)77": {
              "label": "contract IERC20",
              "numberOfBytes": "20"
            },
            "t_mapping(t_address,t_array(t_struct(StakedNft)2814_storage)dyn_storage)": {
              "label": "mapping(address => struct HouseBusiness.StakedNft[])",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_bool)": {
              "label": "mapping(address => bool)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_mapping(t_address,t_bool))": {
              "label": "mapping(address => mapping(address => bool))",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_uint256)": {
              "label": "mapping(address => uint256)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_uint256,t_address)": {
              "label": "mapping(uint256 => address)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_uint256,t_array(t_struct(History)2831_storage)dyn_storage)": {
              "label": "mapping(uint256 => struct HouseBusiness.History[])",
              "numberOfBytes": "32"
            },
            "t_mapping(t_uint256,t_mapping(t_address,t_bool))": {
              "label": "mapping(uint256 => mapping(address => bool))",
              "numberOfBytes": "32"
            },
            "t_mapping(t_uint256,t_string_storage)": {
              "label": "mapping(uint256 => string)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_uint256,t_struct(House)2797_storage)": {
              "label": "mapping(uint256 => struct HouseBusiness.House)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_uint256,t_uint256)": {
              "label": "mapping(uint256 => uint256)",
              "numberOfBytes": "32"
            },
            "t_string_storage": {
              "label": "string",
              "numberOfBytes": "32"
            },
            "t_struct(History)2831_storage": {
              "label": "struct HouseBusiness.History",
              "members": [
                {
                  "label": "hID",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "0"
                },
                {
                  "label": "contractId",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "1"
                },
                {
                  "label": "houseImg",
                  "type": "t_string_storage",
                  "offset": 0,
                  "slot": "2"
                },
                {
                  "label": "houseBrand",
                  "type": "t_string_storage",
                  "offset": 0,
                  "slot": "3"
                },
                {
                  "label": "desc",
                  "type": "t_string_storage",
                  "offset": 0,
                  "slot": "4"
                },
                {
                  "label": "history",
                  "type": "t_string_storage",
                  "offset": 0,
                  "slot": "5"
                },
                {
                  "label": "brandType",
                  "type": "t_string_storage",
                  "offset": 0,
                  "slot": "6"
                },
                {
                  "label": "yearField",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "7"
                }
              ],
              "numberOfBytes": "256"
            },
            "t_struct(HistoryType)2850_storage": {
              "label": "struct HouseBusiness.HistoryType",
              "members": [
                {
                  "label": "hID",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "0"
                },
                {
                  "label": "hLabel",
                  "type": "t_string_storage",
                  "offset": 0,
                  "slot": "1"
                },
                {
                  "label": "connectContract",
                  "type": "t_bool",
                  "offset": 0,
                  "slot": "2"
                },
                {
                  "label": "imgNeed",
                  "type": "t_bool",
                  "offset": 1,
                  "slot": "2"
                },
                {
                  "label": "brandNeed",
                  "type": "t_bool",
                  "offset": 2,
                  "slot": "2"
                },
                {
                  "label": "descNeed",
                  "type": "t_bool",
                  "offset": 3,
                  "slot": "2"
                },
                {
                  "label": "brandTypeNeed",
                  "type": "t_bool",
                  "offset": 4,
                  "slot": "2"
                },
                {
                  "label": "yearNeed",
                  "type": "t_bool",
                  "offset": 5,
                  "slot": "2"
                },
                {
                  "label": "checkMark",
                  "type": "t_bool",
                  "offset": 6,
                  "slot": "2"
                }
              ],
              "numberOfBytes": "96"
            },
            "t_struct(House)2797_storage": {
              "label": "struct HouseBusiness.House",
              "members": [
                {
                  "label": "tokenId",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "0"
                },
                {
                  "label": "tokenName",
                  "type": "t_string_storage",
                  "offset": 0,
                  "slot": "1"
                },
                {
                  "label": "tokenURI",
                  "type": "t_string_storage",
                  "offset": 0,
                  "slot": "2"
                },
                {
                  "label": "tokenType",
                  "type": "t_string_storage",
                  "offset": 0,
                  "slot": "3"
                },
                {
                  "label": "currentOwner",
                  "type": "t_address",
                  "offset": 0,
                  "slot": "4"
                },
                {
                  "label": "previousOwner",
                  "type": "t_address",
                  "offset": 0,
                  "slot": "5"
                },
                {
                  "label": "buyer",
                  "type": "t_address",
                  "offset": 0,
                  "slot": "6"
                },
                {
                  "label": "price",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "7"
                },
                {
                  "label": "numberOfTransfers",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "8"
                },
                {
                  "label": "nftPayable",
                  "type": "t_bool",
                  "offset": 0,
                  "slot": "9"
                },
                {
                  "label": "staked",
                  "type": "t_bool",
                  "offset": 1,
                  "slot": "9"
                },
                {
                  "label": "soldstatus",
                  "type": "t_bool",
                  "offset": 2,
                  "slot": "9"
                }
              ],
              "numberOfBytes": "320"
            },
            "t_struct(StakedNft)2814_storage": {
              "label": "struct HouseBusiness.StakedNft",
              "members": [
                {
                  "label": "owner",
                  "type": "t_address",
                  "offset": 0,
                  "slot": "0"
                },
                {
                  "label": "tokenId",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "1"
                },
                {
                  "label": "startedDate",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "2"
                },
                {
                  "label": "endDate",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "3"
                },
                {
                  "label": "claimDate",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "4"
                },
                {
                  "label": "stakingType",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "5"
                },
                {
                  "label": "perSecRewards",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "6"
                },
                {
                  "label": "stakingStatus",
                  "type": "t_bool",
                  "offset": 0,
                  "slot": "7"
                }
              ],
              "numberOfBytes": "256"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            }
          },
          "layoutVersion": "1.1",
          "flat": true
        }
      },
      "IMainCleanContract": {
        "src": "contracts\\interfaces\\IContract.sol:6",
        "inherit": [],
        "libraries": [],
        "methods": [
          "allCleanContracts(uint256)",
          "transferContractOwnership(uint256,address,address)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      }
    },
    {
      "IERC20": {
        "src": "@openzeppelin\\contracts\\token\\ERC20\\IERC20.sol:9",
        "inherit": [],
        "libraries": [],
        "methods": [
          "totalSupply()",
          "balanceOf(address)",
          "transfer(address,uint256)",
          "allowance(address,address)",
          "approve(address,uint256)",
          "transferFrom(address,address,uint256)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "ERC721": {
        "src": "@openzeppelin\\contracts\\token\\ERC721\\ERC721.sol:19",
        "version": {
          "withMetadata": "311027b738fb50ea92c84baf68eacb931adf05de03da13635a661dc9c5b03f73",
          "withoutMetadata": "9ec7f439077c3b762bc3aa6a17c55aba7a78d240190c9c7814df896455a0f780",
          "linkedWithoutMetadata": "9ec7f439077c3b762bc3aa6a17c55aba7a78d240190c9c7814df896455a0f780"
        },
        "inherit": [
          "IERC721Metadata",
          "IERC721",
          "ERC165",
          "IERC165",
          "Context"
        ],
        "libraries": [
          "Address",
          "Strings"
        ],
        "methods": [
          "(string,string)",
          "supportsInterface(bytes4)",
          "balanceOf(address)",
          "ownerOf(uint256)",
          "name()",
          "symbol()",
          "tokenURI(uint256)",
          "approve(address,uint256)",
          "getApproved(uint256)",
          "setApprovalForAll(address,bool)",
          "isApprovedForAll(address,address)",
          "transferFrom(address,address,uint256)",
          "safeTransferFrom(address,address,uint256)",
          "safeTransferFrom(address,address,uint256,bytes)"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "ERC721",
            "src": "@openzeppelin\\contracts\\token\\ERC721\\ERC721.sol:44"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "_name",
              "offset": 0,
              "slot": "0",
              "type": "t_string_storage",
              "contract": "ERC721",
              "src": "@openzeppelin\\contracts\\token\\ERC721\\ERC721.sol:24"
            },
            {
              "label": "_symbol",
              "offset": 0,
              "slot": "1",
              "type": "t_string_storage",
              "contract": "ERC721",
              "src": "@openzeppelin\\contracts\\token\\ERC721\\ERC721.sol:27"
            },
            {
              "label": "_owners",
              "offset": 0,
              "slot": "2",
              "type": "t_mapping(t_uint256,t_address)",
              "contract": "ERC721",
              "src": "@openzeppelin\\contracts\\token\\ERC721\\ERC721.sol:30"
            },
            {
              "label": "_balances",
              "offset": 0,
              "slot": "3",
              "type": "t_mapping(t_address,t_uint256)",
              "contract": "ERC721",
              "src": "@openzeppelin\\contracts\\token\\ERC721\\ERC721.sol:33"
            },
            {
              "label": "_tokenApprovals",
              "offset": 0,
              "slot": "4",
              "type": "t_mapping(t_uint256,t_address)",
              "contract": "ERC721",
              "src": "@openzeppelin\\contracts\\token\\ERC721\\ERC721.sol:36"
            },
            {
              "label": "_operatorApprovals",
              "offset": 0,
              "slot": "5",
              "type": "t_mapping(t_address,t_mapping(t_address,t_bool))",
              "contract": "ERC721",
              "src": "@openzeppelin\\contracts\\token\\ERC721\\ERC721.sol:39"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            },
            "t_bool": {
              "label": "bool",
              "numberOfBytes": "1"
            },
            "t_mapping(t_address,t_bool)": {
              "label": "mapping(address => bool)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_mapping(t_address,t_bool))": {
              "label": "mapping(address => mapping(address => bool))",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_uint256)": {
              "label": "mapping(address => uint256)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_uint256,t_address)": {
              "label": "mapping(uint256 => address)",
              "numberOfBytes": "32"
            },
            "t_string_storage": {
              "label": "string",
              "numberOfBytes": "32"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            }
          },
          "layoutVersion": "1.1",
          "flat": true
        }
      },
      "IERC721": {
        "src": "@openzeppelin\\contracts\\token\\ERC721\\IERC721.sol:11",
        "inherit": [
          "IERC165"
        ],
        "libraries": [],
        "methods": [
          "balanceOf(address)",
          "ownerOf(uint256)",
          "safeTransferFrom(address,address,uint256,bytes)",
          "safeTransferFrom(address,address,uint256)",
          "transferFrom(address,address,uint256)",
          "approve(address,uint256)",
          "setApprovalForAll(address,bool)",
          "getApproved(uint256)",
          "isApprovedForAll(address,address)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "IERC721Receiver": {
        "src": "@openzeppelin\\contracts\\token\\ERC721\\IERC721Receiver.sol:11",
        "inherit": [],
        "libraries": [],
        "methods": [
          "onERC721Received(address,address,uint256,bytes)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "ERC721URIStorage": {
        "src": "@openzeppelin\\contracts\\token\\ERC721\\extensions\\ERC721URIStorage.sol:11",
        "inherit": [
          "ERC721",
          "IERC721Metadata",
          "IERC721",
          "ERC165",
          "IERC165",
          "Context"
        ],
        "libraries": [
          "Strings"
        ],
        "methods": [
          "tokenURI(uint256)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [
            {
              "label": "_name",
              "offset": 0,
              "slot": "0",
              "type": "t_string_storage",
              "contract": "ERC721",
              "src": "@openzeppelin\\contracts\\token\\ERC721\\ERC721.sol:24"
            },
            {
              "label": "_symbol",
              "offset": 0,
              "slot": "1",
              "type": "t_string_storage",
              "contract": "ERC721",
              "src": "@openzeppelin\\contracts\\token\\ERC721\\ERC721.sol:27"
            },
            {
              "label": "_owners",
              "offset": 0,
              "slot": "2",
              "type": "t_mapping(t_uint256,t_address)",
              "contract": "ERC721",
              "src": "@openzeppelin\\contracts\\token\\ERC721\\ERC721.sol:30"
            },
            {
              "label": "_balances",
              "offset": 0,
              "slot": "3",
              "type": "t_mapping(t_address,t_uint256)",
              "contract": "ERC721",
              "src": "@openzeppelin\\contracts\\token\\ERC721\\ERC721.sol:33"
            },
            {
              "label": "_tokenApprovals",
              "offset": 0,
              "slot": "4",
              "type": "t_mapping(t_uint256,t_address)",
              "contract": "ERC721",
              "src": "@openzeppelin\\contracts\\token\\ERC721\\ERC721.sol:36"
            },
            {
              "label": "_operatorApprovals",
              "offset": 0,
              "slot": "5",
              "type": "t_mapping(t_address,t_mapping(t_address,t_bool))",
              "contract": "ERC721",
              "src": "@openzeppelin\\contracts\\token\\ERC721\\ERC721.sol:39"
            },
            {
              "label": "_tokenURIs",
              "offset": 0,
              "slot": "6",
              "type": "t_mapping(t_uint256,t_string_storage)",
              "contract": "ERC721URIStorage",
              "src": "@openzeppelin\\contracts\\token\\ERC721\\extensions\\ERC721URIStorage.sol:15"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            },
            "t_bool": {
              "label": "bool",
              "numberOfBytes": "1"
            },
            "t_mapping(t_address,t_bool)": {
              "label": "mapping(address => bool)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_mapping(t_address,t_bool))": {
              "label": "mapping(address => mapping(address => bool))",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_uint256)": {
              "label": "mapping(address => uint256)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_uint256,t_address)": {
              "label": "mapping(uint256 => address)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_uint256,t_string_storage)": {
              "label": "mapping(uint256 => string)",
              "numberOfBytes": "32"
            },
            "t_string_storage": {
              "label": "string",
              "numberOfBytes": "32"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            }
          },
          "layoutVersion": "1.1",
          "flat": true
        }
      },
      "IERC721Metadata": {
        "src": "@openzeppelin\\contracts\\token\\ERC721\\extensions\\IERC721Metadata.sol:12",
        "inherit": [
          "IERC721",
          "IERC165"
        ],
        "libraries": [],
        "methods": [
          "name()",
          "symbol()",
          "tokenURI(uint256)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "Address": {
        "src": "@openzeppelin\\contracts\\utils\\Address.sol:9",
        "version": {
          "withMetadata": "a0500f265408d7c0dbf75da3f9e44a5c2ee85e18bb1b58fe491ffcfa4ea7fd9b",
          "withoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db",
          "linkedWithoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db"
        },
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [
          {
            "kind": "delegatecall",
            "src": "@openzeppelin\\contracts\\utils\\Address.sol:185"
          }
        ],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "Context": {
        "src": "@openzeppelin\\contracts\\utils\\Context.sol:16",
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "Strings": {
        "src": "@openzeppelin\\contracts\\utils\\Strings.sol:11",
        "version": {
          "withMetadata": "c385b5200dd723f945d28b88358d79ca1b5c0f71c28cbbab9acf6d6f3fd15593",
          "withoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db",
          "linkedWithoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db"
        },
        "inherit": [],
        "libraries": [
          "Math"
        ],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "ERC165": {
        "src": "@openzeppelin\\contracts\\utils\\introspection\\ERC165.sol:22",
        "inherit": [
          "IERC165"
        ],
        "libraries": [],
        "methods": [
          "supportsInterface(bytes4)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "IERC165": {
        "src": "@openzeppelin\\contracts\\utils\\introspection\\IERC165.sol:15",
        "inherit": [],
        "libraries": [],
        "methods": [
          "supportsInterface(bytes4)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "Math": {
        "src": "@openzeppelin\\contracts\\utils\\math\\Math.sol:9",
        "version": {
          "withMetadata": "fcaf39e5e702f2902d6ef00c1def75c9800e8d2a0a78a87cf542096cafc7a4b0",
          "withoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db",
          "linkedWithoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db"
        },
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "HouseBusiness": {
        "src": "contracts\\HouseBusiness.sol:11",
        "version": {
          "withMetadata": "420302cdf5ddb927cc448698db149336b1e3c933cb7dbed1b2c15d7eabef8a2f",
          "withoutMetadata": "50c6c19b6a8426c2af609fd62d65ae292a2b54ac2fbf7b2dbdc6e20952ab190e",
          "linkedWithoutMetadata": "50c6c19b6a8426c2af609fd62d65ae292a2b54ac2fbf7b2dbdc6e20952ab190e"
        },
        "inherit": [
          "ERC721URIStorage",
          "ERC721",
          "IERC721Metadata",
          "IERC721",
          "ERC165",
          "IERC165",
          "Context"
        ],
        "libraries": [],
        "methods": [
          "(address)",
          "setMinMaxHousePrice(uint256,uint256)",
          "setConfigToken(address)",
          "isMember()",
          "addMember(address)",
          "removeMember(address)",
          "tokenURI(uint256)",
          "setCContractAddress(address)",
          "setPayable(uint256,address,bool)",
          "mintHouse(string,string,string,string,uint256)",
          "addAllowList(uint256,address)",
          "removeAllowList(uint256,address)",
          "checkAllowedList(uint256,address)",
          "addHistory(uint256,uint256,uint256,string,string,string,string,string,uint256)",
          "getHistory(uint256)",
          "editHistory(uint256,uint256,string,string,string,string,string,uint256)",
          "getHistoryType()",
          "addOrEditHType(uint256,string,bool,bool,bool,bool,bool,bool,bool)",
          "removeHistoryType(uint256)",
          "getMinMaxNFT()",
          "getTokenOwner(uint256)",
          "buyHouseNft(uint256)",
          "sendToken(address,uint256)",
          "changeTokenPrice(uint256,uint256)",
          "getAllHouses()",
          "getAllPayableHouses()",
          "getAllMyHouses()",
          "withdrawToken(uint256)",
          "withdrawETH(uint256)",
          "calcDiv(uint256,uint256)",
          "setAPYConfig(uint256,uint256)",
          "getAllAPYTypes()",
          "stake(uint256,uint256)",
          "unstake(uint256)",
          "stakingFinished(uint256)",
          "totalRewards(address)",
          "claimRewards(address)",
          "getAllMyStakedNFTs()",
          "getTotalInfo()",
          "getAllAPYs()",
          "getPenalty()",
          "setPenalty(uint256)",
          "getRoyalty()",
          "setRoyalty(uint256)"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "HouseBusiness",
            "src": "contracts\\HouseBusiness.sol:106"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "_name",
              "offset": 0,
              "slot": "0",
              "type": "t_string_storage",
              "contract": "ERC721",
              "src": "@openzeppelin\\contracts\\token\\ERC721\\ERC721.sol:24"
            },
            {
              "label": "_symbol",
              "offset": 0,
              "slot": "1",
              "type": "t_string_storage",
              "contract": "ERC721",
              "src": "@openzeppelin\\contracts\\token\\ERC721\\ERC721.sol:27"
            },
            {
              "label": "_owners",
              "offset": 0,
              "slot": "2",
              "type": "t_mapping(t_uint256,t_address)",
              "contract": "ERC721",
              "src": "@openzeppelin\\contracts\\token\\ERC721\\ERC721.sol:30"
            },
            {
              "label": "_balances",
              "offset": 0,
              "slot": "3",
              "type": "t_mapping(t_address,t_uint256)",
              "contract": "ERC721",
              "src": "@openzeppelin\\contracts\\token\\ERC721\\ERC721.sol:33"
            },
            {
              "label": "_tokenApprovals",
              "offset": 0,
              "slot": "4",
              "type": "t_mapping(t_uint256,t_address)",
              "contract": "ERC721",
              "src": "@openzeppelin\\contracts\\token\\ERC721\\ERC721.sol:36"
            },
            {
              "label": "_operatorApprovals",
              "offset": 0,
              "slot": "5",
              "type": "t_mapping(t_address,t_mapping(t_address,t_bool))",
              "contract": "ERC721",
              "src": "@openzeppelin\\contracts\\token\\ERC721\\ERC721.sol:39"
            },
            {
              "label": "_tokenURIs",
              "offset": 0,
              "slot": "6",
              "type": "t_mapping(t_uint256,t_string_storage)",
              "contract": "ERC721URIStorage",
              "src": "@openzeppelin\\contracts\\token\\ERC721\\extensions\\ERC721URIStorage.sol:15"
            },
            {
              "label": "collectionName",
              "offset": 0,
              "slot": "7",
              "type": "t_string_storage",
              "contract": "HouseBusiness",
              "src": "contracts\\HouseBusiness.sol:13"
            },
            {
              "label": "collectionNameSymbol",
              "offset": 0,
              "slot": "8",
              "type": "t_string_storage",
              "contract": "HouseBusiness",
              "src": "contracts\\HouseBusiness.sol:15"
            },
            {
              "label": "houseCounter",
              "offset": 0,
              "slot": "9",
              "type": "t_uint256",
              "contract": "HouseBusiness",
              "src": "contracts\\HouseBusiness.sol:17"
            },
            {
              "label": "stakedCounter",
              "offset": 0,
              "slot": "10",
              "type": "t_uint256",
              "contract": "HouseBusiness",
              "src": "contracts\\HouseBusiness.sol:19"
            },
            {
              "label": "soldedCounter",
              "offset": 0,
              "slot": "11",
              "type": "t_uint256",
              "contract": "HouseBusiness",
              "src": "contracts\\HouseBusiness.sol:21"
            },
            {
              "label": "hTypeCounter",
              "offset": 0,
              "slot": "12",
              "type": "t_uint256",
              "contract": "HouseBusiness",
              "src": "contracts\\HouseBusiness.sol:23"
            },
            {
              "label": "_token",
              "offset": 0,
              "slot": "13",
              "type": "t_contract(IERC20)77",
              "contract": "HouseBusiness",
              "src": "contracts\\HouseBusiness.sol:25"
            },
            {
              "label": "minPrice",
              "offset": 0,
              "slot": "14",
              "type": "t_uint256",
              "contract": "HouseBusiness",
              "src": "contracts\\HouseBusiness.sol:27"
            },
            {
              "label": "maxPrice",
              "offset": 0,
              "slot": "15",
              "type": "t_uint256",
              "contract": "HouseBusiness",
              "src": "contracts\\HouseBusiness.sol:29"
            },
            {
              "label": "penalty",
              "offset": 0,
              "slot": "16",
              "type": "t_uint256",
              "contract": "HouseBusiness",
              "src": "contracts\\HouseBusiness.sol:31"
            },
            {
              "label": "royalty",
              "offset": 0,
              "slot": "17",
              "type": "t_uint256",
              "contract": "HouseBusiness",
              "src": "contracts\\HouseBusiness.sol:33"
            },
            {
              "label": "cContractAddress",
              "offset": 0,
              "slot": "18",
              "type": "t_address",
              "contract": "HouseBusiness",
              "src": "contracts\\HouseBusiness.sol:35"
            },
            {
              "label": "historyTypes",
              "offset": 0,
              "slot": "19",
              "type": "t_array(t_struct(HistoryType)2850_storage)dyn_storage",
              "contract": "HouseBusiness",
              "src": "contracts\\HouseBusiness.sol:86"
            },
            {
              "label": "houseHistories",
              "offset": 0,
              "slot": "20",
              "type": "t_mapping(t_uint256,t_array(t_struct(History)2831_storage)dyn_storage)",
              "contract": "HouseBusiness",
              "src": "contracts\\HouseBusiness.sol:88"
            },
            {
              "label": "APYtypes",
              "offset": 0,
              "slot": "21",
              "type": "t_array(t_uint256)dyn_storage",
              "contract": "HouseBusiness",
              "src": "contracts\\HouseBusiness.sol:90"
            },
            {
              "label": "APYConfig",
              "offset": 0,
              "slot": "22",
              "type": "t_mapping(t_uint256,t_uint256)",
              "contract": "HouseBusiness",
              "src": "contracts\\HouseBusiness.sol:92"
            },
            {
              "label": "allMembers",
              "offset": 0,
              "slot": "23",
              "type": "t_mapping(t_address,t_bool)",
              "contract": "HouseBusiness",
              "src": "contracts\\HouseBusiness.sol:94"
            },
            {
              "label": "allHouses",
              "offset": 0,
              "slot": "24",
              "type": "t_mapping(t_uint256,t_struct(House)2797_storage)",
              "contract": "HouseBusiness",
              "src": "contracts\\HouseBusiness.sol:96"
            },
            {
              "label": "allowedList",
              "offset": 0,
              "slot": "25",
              "type": "t_mapping(t_uint256,t_mapping(t_address,t_bool))",
              "contract": "HouseBusiness",
              "src": "contracts\\HouseBusiness.sol:98"
            },
            {
              "label": "stakedNfts",
              "offset": 0,
              "slot": "26",
              "type": "t_mapping(t_address,t_array(t_struct(StakedNft)2814_storage)dyn_storage)",
              "contract": "HouseBusiness",
              "src": "contracts\\HouseBusiness.sol:104"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            },
            "t_array(t_struct(History)2831_storage)dyn_storage": {
              "label": "struct HouseBusiness.History[]",
              "numberOfBytes": "32"
            },
            "t_array(t_struct(HistoryType)2850_storage)dyn_storage": {
              "label": "struct HouseBusiness.HistoryType[]",
              "numberOfBytes": "32"
            },
            "t_array(t_struct(StakedNft)2814_storage)dyn_storage": {
              "label": "struct HouseBusiness.StakedNft[]",
              "numberOfBytes": "32"
            },
            "t_array(t_uint256)dyn_storage": {
              "label": "uint256[]",
              "numberOfBytes": "32"
            },
            "t_bool": {
              "label": "bool",
              "numberOfBytes": "1"
            },
            "t_contract(IERC20)77": {
              "label": "contract IERC20",
              "numberOfBytes": "20"
            },
            "t_mapping(t_address,t_array(t_struct(StakedNft)2814_storage)dyn_storage)": {
              "label": "mapping(address => struct HouseBusiness.StakedNft[])",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_bool)": {
              "label": "mapping(address => bool)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_mapping(t_address,t_bool))": {
              "label": "mapping(address => mapping(address => bool))",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_uint256)": {
              "label": "mapping(address => uint256)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_uint256,t_address)": {
              "label": "mapping(uint256 => address)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_uint256,t_array(t_struct(History)2831_storage)dyn_storage)": {
              "label": "mapping(uint256 => struct HouseBusiness.History[])",
              "numberOfBytes": "32"
            },
            "t_mapping(t_uint256,t_mapping(t_address,t_bool))": {
              "label": "mapping(uint256 => mapping(address => bool))",
              "numberOfBytes": "32"
            },
            "t_mapping(t_uint256,t_string_storage)": {
              "label": "mapping(uint256 => string)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_uint256,t_struct(House)2797_storage)": {
              "label": "mapping(uint256 => struct HouseBusiness.House)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_uint256,t_uint256)": {
              "label": "mapping(uint256 => uint256)",
              "numberOfBytes": "32"
            },
            "t_string_storage": {
              "label": "string",
              "numberOfBytes": "32"
            },
            "t_struct(History)2831_storage": {
              "label": "struct HouseBusiness.History",
              "members": [
                {
                  "label": "hID",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "0"
                },
                {
                  "label": "contractId",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "1"
                },
                {
                  "label": "houseImg",
                  "type": "t_string_storage",
                  "offset": 0,
                  "slot": "2"
                },
                {
                  "label": "houseBrand",
                  "type": "t_string_storage",
                  "offset": 0,
                  "slot": "3"
                },
                {
                  "label": "desc",
                  "type": "t_string_storage",
                  "offset": 0,
                  "slot": "4"
                },
                {
                  "label": "history",
                  "type": "t_string_storage",
                  "offset": 0,
                  "slot": "5"
                },
                {
                  "label": "brandType",
                  "type": "t_string_storage",
                  "offset": 0,
                  "slot": "6"
                },
                {
                  "label": "yearField",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "7"
                }
              ],
              "numberOfBytes": "256"
            },
            "t_struct(HistoryType)2850_storage": {
              "label": "struct HouseBusiness.HistoryType",
              "members": [
                {
                  "label": "hID",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "0"
                },
                {
                  "label": "hLabel",
                  "type": "t_string_storage",
                  "offset": 0,
                  "slot": "1"
                },
                {
                  "label": "connectContract",
                  "type": "t_bool",
                  "offset": 0,
                  "slot": "2"
                },
                {
                  "label": "imgNeed",
                  "type": "t_bool",
                  "offset": 1,
                  "slot": "2"
                },
                {
                  "label": "brandNeed",
                  "type": "t_bool",
                  "offset": 2,
                  "slot": "2"
                },
                {
                  "label": "descNeed",
                  "type": "t_bool",
                  "offset": 3,
                  "slot": "2"
                },
                {
                  "label": "brandTypeNeed",
                  "type": "t_bool",
                  "offset": 4,
                  "slot": "2"
                },
                {
                  "label": "yearNeed",
                  "type": "t_bool",
                  "offset": 5,
                  "slot": "2"
                },
                {
                  "label": "checkMark",
                  "type": "t_bool",
                  "offset": 6,
                  "slot": "2"
                }
              ],
              "numberOfBytes": "96"
            },
            "t_struct(House)2797_storage": {
              "label": "struct HouseBusiness.House",
              "members": [
                {
                  "label": "tokenId",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "0"
                },
                {
                  "label": "tokenName",
                  "type": "t_string_storage",
                  "offset": 0,
                  "slot": "1"
                },
                {
                  "label": "tokenURI",
                  "type": "t_string_storage",
                  "offset": 0,
                  "slot": "2"
                },
                {
                  "label": "tokenType",
                  "type": "t_string_storage",
                  "offset": 0,
                  "slot": "3"
                },
                {
                  "label": "currentOwner",
                  "type": "t_address",
                  "offset": 0,
                  "slot": "4"
                },
                {
                  "label": "previousOwner",
                  "type": "t_address",
                  "offset": 0,
                  "slot": "5"
                },
                {
                  "label": "buyer",
                  "type": "t_address",
                  "offset": 0,
                  "slot": "6"
                },
                {
                  "label": "price",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "7"
                },
                {
                  "label": "numberOfTransfers",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "8"
                },
                {
                  "label": "nftPayable",
                  "type": "t_bool",
                  "offset": 0,
                  "slot": "9"
                },
                {
                  "label": "staked",
                  "type": "t_bool",
                  "offset": 1,
                  "slot": "9"
                },
                {
                  "label": "soldstatus",
                  "type": "t_bool",
                  "offset": 2,
                  "slot": "9"
                }
              ],
              "numberOfBytes": "320"
            },
            "t_struct(StakedNft)2814_storage": {
              "label": "struct HouseBusiness.StakedNft",
              "members": [
                {
                  "label": "owner",
                  "type": "t_address",
                  "offset": 0,
                  "slot": "0"
                },
                {
                  "label": "tokenId",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "1"
                },
                {
                  "label": "startedDate",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "2"
                },
                {
                  "label": "endDate",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "3"
                },
                {
                  "label": "claimDate",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "4"
                },
                {
                  "label": "stakingType",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "5"
                },
                {
                  "label": "perSecRewards",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "6"
                },
                {
                  "label": "stakingStatus",
                  "type": "t_bool",
                  "offset": 0,
                  "slot": "7"
                }
              ],
              "numberOfBytes": "256"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            }
          },
          "layoutVersion": "1.1",
          "flat": true
        }
      },
      "IMainCleanContract": {
        "src": "contracts\\interfaces\\IContract.sol:6",
        "inherit": [],
        "libraries": [],
        "methods": [
          "allCleanContracts(uint256)",
          "transferContractOwnership(uint256,address,address)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      }
    },
    {
      "IERC20": {
        "src": "@openzeppelin\\contracts\\token\\ERC20\\IERC20.sol:9",
        "inherit": [],
        "libraries": [],
        "methods": [
          "totalSupply()",
          "balanceOf(address)",
          "transfer(address,uint256)",
          "allowance(address,address)",
          "approve(address,uint256)",
          "transferFrom(address,address,uint256)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "ERC721": {
        "src": "@openzeppelin\\contracts\\token\\ERC721\\ERC721.sol:19",
        "version": {
          "withMetadata": "311027b738fb50ea92c84baf68eacb931adf05de03da13635a661dc9c5b03f73",
          "withoutMetadata": "9ec7f439077c3b762bc3aa6a17c55aba7a78d240190c9c7814df896455a0f780",
          "linkedWithoutMetadata": "9ec7f439077c3b762bc3aa6a17c55aba7a78d240190c9c7814df896455a0f780"
        },
        "inherit": [
          "IERC721Metadata",
          "IERC721",
          "ERC165",
          "IERC165",
          "Context"
        ],
        "libraries": [
          "Address",
          "Strings"
        ],
        "methods": [
          "(string,string)",
          "supportsInterface(bytes4)",
          "balanceOf(address)",
          "ownerOf(uint256)",
          "name()",
          "symbol()",
          "tokenURI(uint256)",
          "approve(address,uint256)",
          "getApproved(uint256)",
          "setApprovalForAll(address,bool)",
          "isApprovedForAll(address,address)",
          "transferFrom(address,address,uint256)",
          "safeTransferFrom(address,address,uint256)",
          "safeTransferFrom(address,address,uint256,bytes)"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "ERC721",
            "src": "@openzeppelin\\contracts\\token\\ERC721\\ERC721.sol:44"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "_name",
              "offset": 0,
              "slot": "0",
              "type": "t_string_storage",
              "contract": "ERC721",
              "src": "@openzeppelin\\contracts\\token\\ERC721\\ERC721.sol:24"
            },
            {
              "label": "_symbol",
              "offset": 0,
              "slot": "1",
              "type": "t_string_storage",
              "contract": "ERC721",
              "src": "@openzeppelin\\contracts\\token\\ERC721\\ERC721.sol:27"
            },
            {
              "label": "_owners",
              "offset": 0,
              "slot": "2",
              "type": "t_mapping(t_uint256,t_address)",
              "contract": "ERC721",
              "src": "@openzeppelin\\contracts\\token\\ERC721\\ERC721.sol:30"
            },
            {
              "label": "_balances",
              "offset": 0,
              "slot": "3",
              "type": "t_mapping(t_address,t_uint256)",
              "contract": "ERC721",
              "src": "@openzeppelin\\contracts\\token\\ERC721\\ERC721.sol:33"
            },
            {
              "label": "_tokenApprovals",
              "offset": 0,
              "slot": "4",
              "type": "t_mapping(t_uint256,t_address)",
              "contract": "ERC721",
              "src": "@openzeppelin\\contracts\\token\\ERC721\\ERC721.sol:36"
            },
            {
              "label": "_operatorApprovals",
              "offset": 0,
              "slot": "5",
              "type": "t_mapping(t_address,t_mapping(t_address,t_bool))",
              "contract": "ERC721",
              "src": "@openzeppelin\\contracts\\token\\ERC721\\ERC721.sol:39"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            },
            "t_bool": {
              "label": "bool",
              "numberOfBytes": "1"
            },
            "t_mapping(t_address,t_bool)": {
              "label": "mapping(address => bool)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_mapping(t_address,t_bool))": {
              "label": "mapping(address => mapping(address => bool))",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_uint256)": {
              "label": "mapping(address => uint256)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_uint256,t_address)": {
              "label": "mapping(uint256 => address)",
              "numberOfBytes": "32"
            },
            "t_string_storage": {
              "label": "string",
              "numberOfBytes": "32"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            }
          },
          "layoutVersion": "1.1",
          "flat": true
        }
      },
      "IERC721": {
        "src": "@openzeppelin\\contracts\\token\\ERC721\\IERC721.sol:11",
        "inherit": [
          "IERC165"
        ],
        "libraries": [],
        "methods": [
          "balanceOf(address)",
          "ownerOf(uint256)",
          "safeTransferFrom(address,address,uint256,bytes)",
          "safeTransferFrom(address,address,uint256)",
          "transferFrom(address,address,uint256)",
          "approve(address,uint256)",
          "setApprovalForAll(address,bool)",
          "getApproved(uint256)",
          "isApprovedForAll(address,address)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "IERC721Receiver": {
        "src": "@openzeppelin\\contracts\\token\\ERC721\\IERC721Receiver.sol:11",
        "inherit": [],
        "libraries": [],
        "methods": [
          "onERC721Received(address,address,uint256,bytes)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "ERC721URIStorage": {
        "src": "@openzeppelin\\contracts\\token\\ERC721\\extensions\\ERC721URIStorage.sol:11",
        "inherit": [
          "ERC721",
          "IERC721Metadata",
          "IERC721",
          "ERC165",
          "IERC165",
          "Context"
        ],
        "libraries": [
          "Strings"
        ],
        "methods": [
          "tokenURI(uint256)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [
            {
              "label": "_name",
              "offset": 0,
              "slot": "0",
              "type": "t_string_storage",
              "contract": "ERC721",
              "src": "@openzeppelin\\contracts\\token\\ERC721\\ERC721.sol:24"
            },
            {
              "label": "_symbol",
              "offset": 0,
              "slot": "1",
              "type": "t_string_storage",
              "contract": "ERC721",
              "src": "@openzeppelin\\contracts\\token\\ERC721\\ERC721.sol:27"
            },
            {
              "label": "_owners",
              "offset": 0,
              "slot": "2",
              "type": "t_mapping(t_uint256,t_address)",
              "contract": "ERC721",
              "src": "@openzeppelin\\contracts\\token\\ERC721\\ERC721.sol:30"
            },
            {
              "label": "_balances",
              "offset": 0,
              "slot": "3",
              "type": "t_mapping(t_address,t_uint256)",
              "contract": "ERC721",
              "src": "@openzeppelin\\contracts\\token\\ERC721\\ERC721.sol:33"
            },
            {
              "label": "_tokenApprovals",
              "offset": 0,
              "slot": "4",
              "type": "t_mapping(t_uint256,t_address)",
              "contract": "ERC721",
              "src": "@openzeppelin\\contracts\\token\\ERC721\\ERC721.sol:36"
            },
            {
              "label": "_operatorApprovals",
              "offset": 0,
              "slot": "5",
              "type": "t_mapping(t_address,t_mapping(t_address,t_bool))",
              "contract": "ERC721",
              "src": "@openzeppelin\\contracts\\token\\ERC721\\ERC721.sol:39"
            },
            {
              "label": "_tokenURIs",
              "offset": 0,
              "slot": "6",
              "type": "t_mapping(t_uint256,t_string_storage)",
              "contract": "ERC721URIStorage",
              "src": "@openzeppelin\\contracts\\token\\ERC721\\extensions\\ERC721URIStorage.sol:15"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            },
            "t_bool": {
              "label": "bool",
              "numberOfBytes": "1"
            },
            "t_mapping(t_address,t_bool)": {
              "label": "mapping(address => bool)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_mapping(t_address,t_bool))": {
              "label": "mapping(address => mapping(address => bool))",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_uint256)": {
              "label": "mapping(address => uint256)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_uint256,t_address)": {
              "label": "mapping(uint256 => address)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_uint256,t_string_storage)": {
              "label": "mapping(uint256 => string)",
              "numberOfBytes": "32"
            },
            "t_string_storage": {
              "label": "string",
              "numberOfBytes": "32"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            }
          },
          "layoutVersion": "1.1",
          "flat": true
        }
      },
      "IERC721Metadata": {
        "src": "@openzeppelin\\contracts\\token\\ERC721\\extensions\\IERC721Metadata.sol:12",
        "inherit": [
          "IERC721",
          "IERC165"
        ],
        "libraries": [],
        "methods": [
          "name()",
          "symbol()",
          "tokenURI(uint256)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "Address": {
        "src": "@openzeppelin\\contracts\\utils\\Address.sol:9",
        "version": {
          "withMetadata": "a0500f265408d7c0dbf75da3f9e44a5c2ee85e18bb1b58fe491ffcfa4ea7fd9b",
          "withoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db",
          "linkedWithoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db"
        },
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [
          {
            "kind": "delegatecall",
            "src": "@openzeppelin\\contracts\\utils\\Address.sol:185"
          }
        ],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "Context": {
        "src": "@openzeppelin\\contracts\\utils\\Context.sol:16",
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "Strings": {
        "src": "@openzeppelin\\contracts\\utils\\Strings.sol:11",
        "version": {
          "withMetadata": "c385b5200dd723f945d28b88358d79ca1b5c0f71c28cbbab9acf6d6f3fd15593",
          "withoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db",
          "linkedWithoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db"
        },
        "inherit": [],
        "libraries": [
          "Math"
        ],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "ERC165": {
        "src": "@openzeppelin\\contracts\\utils\\introspection\\ERC165.sol:22",
        "inherit": [
          "IERC165"
        ],
        "libraries": [],
        "methods": [
          "supportsInterface(bytes4)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "IERC165": {
        "src": "@openzeppelin\\contracts\\utils\\introspection\\IERC165.sol:15",
        "inherit": [],
        "libraries": [],
        "methods": [
          "supportsInterface(bytes4)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "Math": {
        "src": "@openzeppelin\\contracts\\utils\\math\\Math.sol:9",
        "version": {
          "withMetadata": "fcaf39e5e702f2902d6ef00c1def75c9800e8d2a0a78a87cf542096cafc7a4b0",
          "withoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db",
          "linkedWithoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db"
        },
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "HouseBusiness": {
        "src": "contracts\\HouseBusiness.sol:11",
        "version": {
          "withMetadata": "6c9d41ef131eb89809061f9b681d1762ae8acd8399acb3cb28af78d7405c5bfd",
          "withoutMetadata": "c38367db4ca81fb9f78248a1016e17a822fc7e339bcb1092bacdc99ef3698835",
          "linkedWithoutMetadata": "c38367db4ca81fb9f78248a1016e17a822fc7e339bcb1092bacdc99ef3698835"
        },
        "inherit": [
          "ERC721URIStorage",
          "ERC721",
          "IERC721Metadata",
          "IERC721",
          "ERC165",
          "IERC165",
          "Context"
        ],
        "libraries": [],
        "methods": [
          "(address)",
          "setMinMaxHousePrice(uint256,uint256)",
          "setConfigToken(address)",
          "isMember()",
          "addMember(address)",
          "removeMember(address)",
          "tokenURI(uint256)",
          "setCContractAddress(address)",
          "setPayable(uint256,address,bool)",
          "mintHouse(string,string,string,string,uint256)",
          "addAllowList(uint256,address)",
          "removeAllowList(uint256,address)",
          "checkAllowedList(uint256,address)",
          "addHistory(uint256,uint256,uint256,string,string,string,string,string,uint256)",
          "getHistory(uint256)",
          "editHistory(uint256,uint256,string,string,string,string,string,uint256)",
          "getHistoryType()",
          "addOrEditHType(uint256,string,bool,bool,bool,bool,bool,bool,bool)",
          "removeHistoryType(uint256)",
          "getMinMaxNFT()",
          "getTokenOwner(uint256)",
          "buyHouseNft(uint256)",
          "sendToken(address,uint256)",
          "changeTokenPrice(uint256,uint256)",
          "getAllHouses()",
          "getAllPayableHouses()",
          "getAllMyHouses()",
          "withdrawToken(uint256)",
          "withdrawETH(uint256)",
          "calcDiv(uint256,uint256)",
          "setAPYConfig(uint256,uint256)",
          "getAllAPYTypes()",
          "stake(uint256,uint256)",
          "unstake(uint256)",
          "stakingFinished(uint256)",
          "totalRewards(address)",
          "claimRewards(address)",
          "getAllMyStakedNFTs()",
          "getTotalInfo()",
          "getAllAPYs()",
          "getPenalty()",
          "setPenalty(uint256)",
          "getRoyalty()",
          "setRoyalty(uint256)"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "HouseBusiness",
            "src": "contracts\\HouseBusiness.sol:106"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "_name",
              "offset": 0,
              "slot": "0",
              "type": "t_string_storage",
              "contract": "ERC721",
              "src": "@openzeppelin\\contracts\\token\\ERC721\\ERC721.sol:24"
            },
            {
              "label": "_symbol",
              "offset": 0,
              "slot": "1",
              "type": "t_string_storage",
              "contract": "ERC721",
              "src": "@openzeppelin\\contracts\\token\\ERC721\\ERC721.sol:27"
            },
            {
              "label": "_owners",
              "offset": 0,
              "slot": "2",
              "type": "t_mapping(t_uint256,t_address)",
              "contract": "ERC721",
              "src": "@openzeppelin\\contracts\\token\\ERC721\\ERC721.sol:30"
            },
            {
              "label": "_balances",
              "offset": 0,
              "slot": "3",
              "type": "t_mapping(t_address,t_uint256)",
              "contract": "ERC721",
              "src": "@openzeppelin\\contracts\\token\\ERC721\\ERC721.sol:33"
            },
            {
              "label": "_tokenApprovals",
              "offset": 0,
              "slot": "4",
              "type": "t_mapping(t_uint256,t_address)",
              "contract": "ERC721",
              "src": "@openzeppelin\\contracts\\token\\ERC721\\ERC721.sol:36"
            },
            {
              "label": "_operatorApprovals",
              "offset": 0,
              "slot": "5",
              "type": "t_mapping(t_address,t_mapping(t_address,t_bool))",
              "contract": "ERC721",
              "src": "@openzeppelin\\contracts\\token\\ERC721\\ERC721.sol:39"
            },
            {
              "label": "_tokenURIs",
              "offset": 0,
              "slot": "6",
              "type": "t_mapping(t_uint256,t_string_storage)",
              "contract": "ERC721URIStorage",
              "src": "@openzeppelin\\contracts\\token\\ERC721\\extensions\\ERC721URIStorage.sol:15"
            },
            {
              "label": "collectionName",
              "offset": 0,
              "slot": "7",
              "type": "t_string_storage",
              "contract": "HouseBusiness",
              "src": "contracts\\HouseBusiness.sol:13"
            },
            {
              "label": "collectionNameSymbol",
              "offset": 0,
              "slot": "8",
              "type": "t_string_storage",
              "contract": "HouseBusiness",
              "src": "contracts\\HouseBusiness.sol:15"
            },
            {
              "label": "houseCounter",
              "offset": 0,
              "slot": "9",
              "type": "t_uint256",
              "contract": "HouseBusiness",
              "src": "contracts\\HouseBusiness.sol:17"
            },
            {
              "label": "stakedCounter",
              "offset": 0,
              "slot": "10",
              "type": "t_uint256",
              "contract": "HouseBusiness",
              "src": "contracts\\HouseBusiness.sol:19"
            },
            {
              "label": "soldedCounter",
              "offset": 0,
              "slot": "11",
              "type": "t_uint256",
              "contract": "HouseBusiness",
              "src": "contracts\\HouseBusiness.sol:21"
            },
            {
              "label": "hTypeCounter",
              "offset": 0,
              "slot": "12",
              "type": "t_uint256",
              "contract": "HouseBusiness",
              "src": "contracts\\HouseBusiness.sol:23"
            },
            {
              "label": "_token",
              "offset": 0,
              "slot": "13",
              "type": "t_contract(IERC20)77",
              "contract": "HouseBusiness",
              "src": "contracts\\HouseBusiness.sol:25"
            },
            {
              "label": "minPrice",
              "offset": 0,
              "slot": "14",
              "type": "t_uint256",
              "contract": "HouseBusiness",
              "src": "contracts\\HouseBusiness.sol:27"
            },
            {
              "label": "maxPrice",
              "offset": 0,
              "slot": "15",
              "type": "t_uint256",
              "contract": "HouseBusiness",
              "src": "contracts\\HouseBusiness.sol:29"
            },
            {
              "label": "penalty",
              "offset": 0,
              "slot": "16",
              "type": "t_uint256",
              "contract": "HouseBusiness",
              "src": "contracts\\HouseBusiness.sol:31"
            },
            {
              "label": "royalty",
              "offset": 0,
              "slot": "17",
              "type": "t_uint256",
              "contract": "HouseBusiness",
              "src": "contracts\\HouseBusiness.sol:33"
            },
            {
              "label": "cContractAddress",
              "offset": 0,
              "slot": "18",
              "type": "t_contract(IMainCleanContract)5560",
              "contract": "HouseBusiness",
              "src": "contracts\\HouseBusiness.sol:35"
            },
            {
              "label": "historyTypes",
              "offset": 0,
              "slot": "19",
              "type": "t_array(t_struct(HistoryType)2851_storage)dyn_storage",
              "contract": "HouseBusiness",
              "src": "contracts\\HouseBusiness.sol:86"
            },
            {
              "label": "houseHistories",
              "offset": 0,
              "slot": "20",
              "type": "t_mapping(t_uint256,t_array(t_struct(History)2832_storage)dyn_storage)",
              "contract": "HouseBusiness",
              "src": "contracts\\HouseBusiness.sol:88"
            },
            {
              "label": "APYtypes",
              "offset": 0,
              "slot": "21",
              "type": "t_array(t_uint256)dyn_storage",
              "contract": "HouseBusiness",
              "src": "contracts\\HouseBusiness.sol:90"
            },
            {
              "label": "APYConfig",
              "offset": 0,
              "slot": "22",
              "type": "t_mapping(t_uint256,t_uint256)",
              "contract": "HouseBusiness",
              "src": "contracts\\HouseBusiness.sol:92"
            },
            {
              "label": "allMembers",
              "offset": 0,
              "slot": "23",
              "type": "t_mapping(t_address,t_bool)",
              "contract": "HouseBusiness",
              "src": "contracts\\HouseBusiness.sol:94"
            },
            {
              "label": "allHouses",
              "offset": 0,
              "slot": "24",
              "type": "t_mapping(t_uint256,t_struct(House)2798_storage)",
              "contract": "HouseBusiness",
              "src": "contracts\\HouseBusiness.sol:96"
            },
            {
              "label": "allowedList",
              "offset": 0,
              "slot": "25",
              "type": "t_mapping(t_uint256,t_mapping(t_address,t_bool))",
              "contract": "HouseBusiness",
              "src": "contracts\\HouseBusiness.sol:98"
            },
            {
              "label": "stakedNfts",
              "offset": 0,
              "slot": "26",
              "type": "t_mapping(t_address,t_array(t_struct(StakedNft)2815_storage)dyn_storage)",
              "contract": "HouseBusiness",
              "src": "contracts\\HouseBusiness.sol:104"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            },
            "t_array(t_struct(History)2832_storage)dyn_storage": {
              "label": "struct HouseBusiness.History[]",
              "numberOfBytes": "32"
            },
            "t_array(t_struct(HistoryType)2851_storage)dyn_storage": {
              "label": "struct HouseBusiness.HistoryType[]",
              "numberOfBytes": "32"
            },
            "t_array(t_struct(StakedNft)2815_storage)dyn_storage": {
              "label": "struct HouseBusiness.StakedNft[]",
              "numberOfBytes": "32"
            },
            "t_array(t_uint256)dyn_storage": {
              "label": "uint256[]",
              "numberOfBytes": "32"
            },
            "t_bool": {
              "label": "bool",
              "numberOfBytes": "1"
            },
            "t_contract(IERC20)77": {
              "label": "contract IERC20",
              "numberOfBytes": "20"
            },
            "t_contract(IMainCleanContract)5560": {
              "label": "contract IMainCleanContract",
              "numberOfBytes": "20"
            },
            "t_mapping(t_address,t_array(t_struct(StakedNft)2815_storage)dyn_storage)": {
              "label": "mapping(address => struct HouseBusiness.StakedNft[])",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_bool)": {
              "label": "mapping(address => bool)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_mapping(t_address,t_bool))": {
              "label": "mapping(address => mapping(address => bool))",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_uint256)": {
              "label": "mapping(address => uint256)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_uint256,t_address)": {
              "label": "mapping(uint256 => address)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_uint256,t_array(t_struct(History)2832_storage)dyn_storage)": {
              "label": "mapping(uint256 => struct HouseBusiness.History[])",
              "numberOfBytes": "32"
            },
            "t_mapping(t_uint256,t_mapping(t_address,t_bool))": {
              "label": "mapping(uint256 => mapping(address => bool))",
              "numberOfBytes": "32"
            },
            "t_mapping(t_uint256,t_string_storage)": {
              "label": "mapping(uint256 => string)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_uint256,t_struct(House)2798_storage)": {
              "label": "mapping(uint256 => struct HouseBusiness.House)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_uint256,t_uint256)": {
              "label": "mapping(uint256 => uint256)",
              "numberOfBytes": "32"
            },
            "t_string_storage": {
              "label": "string",
              "numberOfBytes": "32"
            },
            "t_struct(History)2832_storage": {
              "label": "struct HouseBusiness.History",
              "members": [
                {
                  "label": "hID",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "0"
                },
                {
                  "label": "contractId",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "1"
                },
                {
                  "label": "houseImg",
                  "type": "t_string_storage",
                  "offset": 0,
                  "slot": "2"
                },
                {
                  "label": "houseBrand",
                  "type": "t_string_storage",
                  "offset": 0,
                  "slot": "3"
                },
                {
                  "label": "desc",
                  "type": "t_string_storage",
                  "offset": 0,
                  "slot": "4"
                },
                {
                  "label": "history",
                  "type": "t_string_storage",
                  "offset": 0,
                  "slot": "5"
                },
                {
                  "label": "brandType",
                  "type": "t_string_storage",
                  "offset": 0,
                  "slot": "6"
                },
                {
                  "label": "yearField",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "7"
                }
              ],
              "numberOfBytes": "256"
            },
            "t_struct(HistoryType)2851_storage": {
              "label": "struct HouseBusiness.HistoryType",
              "members": [
                {
                  "label": "hID",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "0"
                },
                {
                  "label": "hLabel",
                  "type": "t_string_storage",
                  "offset": 0,
                  "slot": "1"
                },
                {
                  "label": "connectContract",
                  "type": "t_bool",
                  "offset": 0,
                  "slot": "2"
                },
                {
                  "label": "imgNeed",
                  "type": "t_bool",
                  "offset": 1,
                  "slot": "2"
                },
                {
                  "label": "brandNeed",
                  "type": "t_bool",
                  "offset": 2,
                  "slot": "2"
                },
                {
                  "label": "descNeed",
                  "type": "t_bool",
                  "offset": 3,
                  "slot": "2"
                },
                {
                  "label": "brandTypeNeed",
                  "type": "t_bool",
                  "offset": 4,
                  "slot": "2"
                },
                {
                  "label": "yearNeed",
                  "type": "t_bool",
                  "offset": 5,
                  "slot": "2"
                },
                {
                  "label": "checkMark",
                  "type": "t_bool",
                  "offset": 6,
                  "slot": "2"
                }
              ],
              "numberOfBytes": "96"
            },
            "t_struct(House)2798_storage": {
              "label": "struct HouseBusiness.House",
              "members": [
                {
                  "label": "tokenId",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "0"
                },
                {
                  "label": "tokenName",
                  "type": "t_string_storage",
                  "offset": 0,
                  "slot": "1"
                },
                {
                  "label": "tokenURI",
                  "type": "t_string_storage",
                  "offset": 0,
                  "slot": "2"
                },
                {
                  "label": "tokenType",
                  "type": "t_string_storage",
                  "offset": 0,
                  "slot": "3"
                },
                {
                  "label": "currentOwner",
                  "type": "t_address",
                  "offset": 0,
                  "slot": "4"
                },
                {
                  "label": "previousOwner",
                  "type": "t_address",
                  "offset": 0,
                  "slot": "5"
                },
                {
                  "label": "buyer",
                  "type": "t_address",
                  "offset": 0,
                  "slot": "6"
                },
                {
                  "label": "price",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "7"
                },
                {
                  "label": "numberOfTransfers",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "8"
                },
                {
                  "label": "nftPayable",
                  "type": "t_bool",
                  "offset": 0,
                  "slot": "9"
                },
                {
                  "label": "staked",
                  "type": "t_bool",
                  "offset": 1,
                  "slot": "9"
                },
                {
                  "label": "soldstatus",
                  "type": "t_bool",
                  "offset": 2,
                  "slot": "9"
                }
              ],
              "numberOfBytes": "320"
            },
            "t_struct(StakedNft)2815_storage": {
              "label": "struct HouseBusiness.StakedNft",
              "members": [
                {
                  "label": "owner",
                  "type": "t_address",
                  "offset": 0,
                  "slot": "0"
                },
                {
                  "label": "tokenId",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "1"
                },
                {
                  "label": "startedDate",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "2"
                },
                {
                  "label": "endDate",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "3"
                },
                {
                  "label": "claimDate",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "4"
                },
                {
                  "label": "stakingType",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "5"
                },
                {
                  "label": "perSecRewards",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "6"
                },
                {
                  "label": "stakingStatus",
                  "type": "t_bool",
                  "offset": 0,
                  "slot": "7"
                }
              ],
              "numberOfBytes": "256"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            }
          },
          "layoutVersion": "1.1",
          "flat": true
        }
      },
      "IMainCleanContract": {
        "src": "contracts\\interfaces\\IContract.sol:6",
        "inherit": [],
        "libraries": [],
        "methods": [
          "allCleanContracts(uint256)",
          "transferContractOwnership(uint256,address,address)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      }
    },
    {
      "IERC20": {
        "src": "@openzeppelin\\contracts\\token\\ERC20\\IERC20.sol:9",
        "inherit": [],
        "libraries": [],
        "methods": [
          "totalSupply()",
          "balanceOf(address)",
          "transfer(address,uint256)",
          "allowance(address,address)",
          "approve(address,uint256)",
          "transferFrom(address,address,uint256)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "ERC721": {
        "src": "@openzeppelin\\contracts\\token\\ERC721\\ERC721.sol:19",
        "version": {
          "withMetadata": "311027b738fb50ea92c84baf68eacb931adf05de03da13635a661dc9c5b03f73",
          "withoutMetadata": "9ec7f439077c3b762bc3aa6a17c55aba7a78d240190c9c7814df896455a0f780",
          "linkedWithoutMetadata": "9ec7f439077c3b762bc3aa6a17c55aba7a78d240190c9c7814df896455a0f780"
        },
        "inherit": [
          "IERC721Metadata",
          "IERC721",
          "ERC165",
          "IERC165",
          "Context"
        ],
        "libraries": [
          "Address",
          "Strings"
        ],
        "methods": [
          "(string,string)",
          "supportsInterface(bytes4)",
          "balanceOf(address)",
          "ownerOf(uint256)",
          "name()",
          "symbol()",
          "tokenURI(uint256)",
          "approve(address,uint256)",
          "getApproved(uint256)",
          "setApprovalForAll(address,bool)",
          "isApprovedForAll(address,address)",
          "transferFrom(address,address,uint256)",
          "safeTransferFrom(address,address,uint256)",
          "safeTransferFrom(address,address,uint256,bytes)"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "ERC721",
            "src": "@openzeppelin\\contracts\\token\\ERC721\\ERC721.sol:44"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "_name",
              "offset": 0,
              "slot": "0",
              "type": "t_string_storage",
              "contract": "ERC721",
              "src": "@openzeppelin\\contracts\\token\\ERC721\\ERC721.sol:24"
            },
            {
              "label": "_symbol",
              "offset": 0,
              "slot": "1",
              "type": "t_string_storage",
              "contract": "ERC721",
              "src": "@openzeppelin\\contracts\\token\\ERC721\\ERC721.sol:27"
            },
            {
              "label": "_owners",
              "offset": 0,
              "slot": "2",
              "type": "t_mapping(t_uint256,t_address)",
              "contract": "ERC721",
              "src": "@openzeppelin\\contracts\\token\\ERC721\\ERC721.sol:30"
            },
            {
              "label": "_balances",
              "offset": 0,
              "slot": "3",
              "type": "t_mapping(t_address,t_uint256)",
              "contract": "ERC721",
              "src": "@openzeppelin\\contracts\\token\\ERC721\\ERC721.sol:33"
            },
            {
              "label": "_tokenApprovals",
              "offset": 0,
              "slot": "4",
              "type": "t_mapping(t_uint256,t_address)",
              "contract": "ERC721",
              "src": "@openzeppelin\\contracts\\token\\ERC721\\ERC721.sol:36"
            },
            {
              "label": "_operatorApprovals",
              "offset": 0,
              "slot": "5",
              "type": "t_mapping(t_address,t_mapping(t_address,t_bool))",
              "contract": "ERC721",
              "src": "@openzeppelin\\contracts\\token\\ERC721\\ERC721.sol:39"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            },
            "t_bool": {
              "label": "bool",
              "numberOfBytes": "1"
            },
            "t_mapping(t_address,t_bool)": {
              "label": "mapping(address => bool)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_mapping(t_address,t_bool))": {
              "label": "mapping(address => mapping(address => bool))",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_uint256)": {
              "label": "mapping(address => uint256)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_uint256,t_address)": {
              "label": "mapping(uint256 => address)",
              "numberOfBytes": "32"
            },
            "t_string_storage": {
              "label": "string",
              "numberOfBytes": "32"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            }
          },
          "layoutVersion": "1.1",
          "flat": true
        }
      },
      "IERC721": {
        "src": "@openzeppelin\\contracts\\token\\ERC721\\IERC721.sol:11",
        "inherit": [
          "IERC165"
        ],
        "libraries": [],
        "methods": [
          "balanceOf(address)",
          "ownerOf(uint256)",
          "safeTransferFrom(address,address,uint256,bytes)",
          "safeTransferFrom(address,address,uint256)",
          "transferFrom(address,address,uint256)",
          "approve(address,uint256)",
          "setApprovalForAll(address,bool)",
          "getApproved(uint256)",
          "isApprovedForAll(address,address)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "IERC721Receiver": {
        "src": "@openzeppelin\\contracts\\token\\ERC721\\IERC721Receiver.sol:11",
        "inherit": [],
        "libraries": [],
        "methods": [
          "onERC721Received(address,address,uint256,bytes)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "ERC721URIStorage": {
        "src": "@openzeppelin\\contracts\\token\\ERC721\\extensions\\ERC721URIStorage.sol:11",
        "inherit": [
          "ERC721",
          "IERC721Metadata",
          "IERC721",
          "ERC165",
          "IERC165",
          "Context"
        ],
        "libraries": [
          "Strings"
        ],
        "methods": [
          "tokenURI(uint256)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [
            {
              "label": "_name",
              "offset": 0,
              "slot": "0",
              "type": "t_string_storage",
              "contract": "ERC721",
              "src": "@openzeppelin\\contracts\\token\\ERC721\\ERC721.sol:24"
            },
            {
              "label": "_symbol",
              "offset": 0,
              "slot": "1",
              "type": "t_string_storage",
              "contract": "ERC721",
              "src": "@openzeppelin\\contracts\\token\\ERC721\\ERC721.sol:27"
            },
            {
              "label": "_owners",
              "offset": 0,
              "slot": "2",
              "type": "t_mapping(t_uint256,t_address)",
              "contract": "ERC721",
              "src": "@openzeppelin\\contracts\\token\\ERC721\\ERC721.sol:30"
            },
            {
              "label": "_balances",
              "offset": 0,
              "slot": "3",
              "type": "t_mapping(t_address,t_uint256)",
              "contract": "ERC721",
              "src": "@openzeppelin\\contracts\\token\\ERC721\\ERC721.sol:33"
            },
            {
              "label": "_tokenApprovals",
              "offset": 0,
              "slot": "4",
              "type": "t_mapping(t_uint256,t_address)",
              "contract": "ERC721",
              "src": "@openzeppelin\\contracts\\token\\ERC721\\ERC721.sol:36"
            },
            {
              "label": "_operatorApprovals",
              "offset": 0,
              "slot": "5",
              "type": "t_mapping(t_address,t_mapping(t_address,t_bool))",
              "contract": "ERC721",
              "src": "@openzeppelin\\contracts\\token\\ERC721\\ERC721.sol:39"
            },
            {
              "label": "_tokenURIs",
              "offset": 0,
              "slot": "6",
              "type": "t_mapping(t_uint256,t_string_storage)",
              "contract": "ERC721URIStorage",
              "src": "@openzeppelin\\contracts\\token\\ERC721\\extensions\\ERC721URIStorage.sol:15"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            },
            "t_bool": {
              "label": "bool",
              "numberOfBytes": "1"
            },
            "t_mapping(t_address,t_bool)": {
              "label": "mapping(address => bool)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_mapping(t_address,t_bool))": {
              "label": "mapping(address => mapping(address => bool))",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_uint256)": {
              "label": "mapping(address => uint256)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_uint256,t_address)": {
              "label": "mapping(uint256 => address)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_uint256,t_string_storage)": {
              "label": "mapping(uint256 => string)",
              "numberOfBytes": "32"
            },
            "t_string_storage": {
              "label": "string",
              "numberOfBytes": "32"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            }
          },
          "layoutVersion": "1.1",
          "flat": true
        }
      },
      "IERC721Metadata": {
        "src": "@openzeppelin\\contracts\\token\\ERC721\\extensions\\IERC721Metadata.sol:12",
        "inherit": [
          "IERC721",
          "IERC165"
        ],
        "libraries": [],
        "methods": [
          "name()",
          "symbol()",
          "tokenURI(uint256)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "Address": {
        "src": "@openzeppelin\\contracts\\utils\\Address.sol:9",
        "version": {
          "withMetadata": "a0500f265408d7c0dbf75da3f9e44a5c2ee85e18bb1b58fe491ffcfa4ea7fd9b",
          "withoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db",
          "linkedWithoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db"
        },
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [
          {
            "kind": "delegatecall",
            "src": "@openzeppelin\\contracts\\utils\\Address.sol:185"
          }
        ],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "Context": {
        "src": "@openzeppelin\\contracts\\utils\\Context.sol:16",
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "Strings": {
        "src": "@openzeppelin\\contracts\\utils\\Strings.sol:11",
        "version": {
          "withMetadata": "c385b5200dd723f945d28b88358d79ca1b5c0f71c28cbbab9acf6d6f3fd15593",
          "withoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db",
          "linkedWithoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db"
        },
        "inherit": [],
        "libraries": [
          "Math"
        ],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "ERC165": {
        "src": "@openzeppelin\\contracts\\utils\\introspection\\ERC165.sol:22",
        "inherit": [
          "IERC165"
        ],
        "libraries": [],
        "methods": [
          "supportsInterface(bytes4)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "IERC165": {
        "src": "@openzeppelin\\contracts\\utils\\introspection\\IERC165.sol:15",
        "inherit": [],
        "libraries": [],
        "methods": [
          "supportsInterface(bytes4)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "Math": {
        "src": "@openzeppelin\\contracts\\utils\\math\\Math.sol:9",
        "version": {
          "withMetadata": "fcaf39e5e702f2902d6ef00c1def75c9800e8d2a0a78a87cf542096cafc7a4b0",
          "withoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db",
          "linkedWithoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db"
        },
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "HouseBusiness": {
        "src": "contracts\\HouseBusiness.sol:11",
        "version": {
          "withMetadata": "f2ec5a70131db821f82d8207ec9418ba838d496e759c882f607813c0600adb5e",
          "withoutMetadata": "6b639f64a484c25933e24bc50e3bc3d36b50387c50b3e5f93fadeed3361c599c",
          "linkedWithoutMetadata": "6b639f64a484c25933e24bc50e3bc3d36b50387c50b3e5f93fadeed3361c599c"
        },
        "inherit": [
          "ERC721URIStorage",
          "ERC721",
          "IERC721Metadata",
          "IERC721",
          "ERC165",
          "IERC165",
          "Context"
        ],
        "libraries": [],
        "methods": [
          "(address)",
          "setMinMaxHousePrice(uint256,uint256)",
          "setConfigToken(address)",
          "isMember()",
          "addMember(address)",
          "removeMember(address)",
          "tokenURI(uint256)",
          "setCContractAddress(address)",
          "setPayable(uint256,address,bool)",
          "mintHouse(string,string,string,string,uint256)",
          "addAllowList(uint256,address)",
          "removeAllowList(uint256,address)",
          "checkAllowedList(uint256,address)",
          "addHistory(uint256,uint256,uint256,string,string,string,string,string,uint256)",
          "getHistory(uint256)",
          "editHistory(uint256,uint256,string,string,string,string,string,uint256)",
          "getHistoryType()",
          "addOrEditHType(uint256,string,bool,bool,bool,bool,bool,bool,bool)",
          "removeHistoryType(uint256)",
          "getMinMaxNFT()",
          "getTokenOwner(uint256)",
          "buyHouseNft(uint256)",
          "sendToken(address,uint256)",
          "changeTokenPrice(uint256,uint256)",
          "getAllHouses()",
          "getAllPayableHouses()",
          "getAllMyHouses()",
          "withdrawToken(uint256)",
          "withdrawETH(uint256)",
          "calcDiv(uint256,uint256)",
          "setAPYConfig(uint256,uint256)",
          "getAllAPYTypes()",
          "stake(uint256,uint256)",
          "unstake(uint256)",
          "stakingFinished(uint256)",
          "totalRewards(address)",
          "claimRewards(address)",
          "getAllMyStakedNFTs()",
          "getTotalInfo()",
          "getAllAPYs()",
          "getPenalty()",
          "setPenalty(uint256)",
          "getRoyalty()",
          "setRoyalty(uint256)"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "HouseBusiness",
            "src": "contracts\\HouseBusiness.sol:106"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "_name",
              "offset": 0,
              "slot": "0",
              "type": "t_string_storage",
              "contract": "ERC721",
              "src": "@openzeppelin\\contracts\\token\\ERC721\\ERC721.sol:24"
            },
            {
              "label": "_symbol",
              "offset": 0,
              "slot": "1",
              "type": "t_string_storage",
              "contract": "ERC721",
              "src": "@openzeppelin\\contracts\\token\\ERC721\\ERC721.sol:27"
            },
            {
              "label": "_owners",
              "offset": 0,
              "slot": "2",
              "type": "t_mapping(t_uint256,t_address)",
              "contract": "ERC721",
              "src": "@openzeppelin\\contracts\\token\\ERC721\\ERC721.sol:30"
            },
            {
              "label": "_balances",
              "offset": 0,
              "slot": "3",
              "type": "t_mapping(t_address,t_uint256)",
              "contract": "ERC721",
              "src": "@openzeppelin\\contracts\\token\\ERC721\\ERC721.sol:33"
            },
            {
              "label": "_tokenApprovals",
              "offset": 0,
              "slot": "4",
              "type": "t_mapping(t_uint256,t_address)",
              "contract": "ERC721",
              "src": "@openzeppelin\\contracts\\token\\ERC721\\ERC721.sol:36"
            },
            {
              "label": "_operatorApprovals",
              "offset": 0,
              "slot": "5",
              "type": "t_mapping(t_address,t_mapping(t_address,t_bool))",
              "contract": "ERC721",
              "src": "@openzeppelin\\contracts\\token\\ERC721\\ERC721.sol:39"
            },
            {
              "label": "_tokenURIs",
              "offset": 0,
              "slot": "6",
              "type": "t_mapping(t_uint256,t_string_storage)",
              "contract": "ERC721URIStorage",
              "src": "@openzeppelin\\contracts\\token\\ERC721\\extensions\\ERC721URIStorage.sol:15"
            },
            {
              "label": "collectionName",
              "offset": 0,
              "slot": "7",
              "type": "t_string_storage",
              "contract": "HouseBusiness",
              "src": "contracts\\HouseBusiness.sol:13"
            },
            {
              "label": "collectionNameSymbol",
              "offset": 0,
              "slot": "8",
              "type": "t_string_storage",
              "contract": "HouseBusiness",
              "src": "contracts\\HouseBusiness.sol:15"
            },
            {
              "label": "houseCounter",
              "offset": 0,
              "slot": "9",
              "type": "t_uint256",
              "contract": "HouseBusiness",
              "src": "contracts\\HouseBusiness.sol:17"
            },
            {
              "label": "stakedCounter",
              "offset": 0,
              "slot": "10",
              "type": "t_uint256",
              "contract": "HouseBusiness",
              "src": "contracts\\HouseBusiness.sol:19"
            },
            {
              "label": "soldedCounter",
              "offset": 0,
              "slot": "11",
              "type": "t_uint256",
              "contract": "HouseBusiness",
              "src": "contracts\\HouseBusiness.sol:21"
            },
            {
              "label": "hTypeCounter",
              "offset": 0,
              "slot": "12",
              "type": "t_uint256",
              "contract": "HouseBusiness",
              "src": "contracts\\HouseBusiness.sol:23"
            },
            {
              "label": "_token",
              "offset": 0,
              "slot": "13",
              "type": "t_contract(IERC20)77",
              "contract": "HouseBusiness",
              "src": "contracts\\HouseBusiness.sol:25"
            },
            {
              "label": "minPrice",
              "offset": 0,
              "slot": "14",
              "type": "t_uint256",
              "contract": "HouseBusiness",
              "src": "contracts\\HouseBusiness.sol:27"
            },
            {
              "label": "maxPrice",
              "offset": 0,
              "slot": "15",
              "type": "t_uint256",
              "contract": "HouseBusiness",
              "src": "contracts\\HouseBusiness.sol:29"
            },
            {
              "label": "penalty",
              "offset": 0,
              "slot": "16",
              "type": "t_uint256",
              "contract": "HouseBusiness",
              "src": "contracts\\HouseBusiness.sol:31"
            },
            {
              "label": "royalty",
              "offset": 0,
              "slot": "17",
              "type": "t_uint256",
              "contract": "HouseBusiness",
              "src": "contracts\\HouseBusiness.sol:33"
            },
            {
              "label": "cContractAddress",
              "offset": 0,
              "slot": "18",
              "type": "t_address",
              "contract": "HouseBusiness",
              "src": "contracts\\HouseBusiness.sol:35"
            },
            {
              "label": "historyTypes",
              "offset": 0,
              "slot": "19",
              "type": "t_array(t_struct(HistoryType)2850_storage)dyn_storage",
              "contract": "HouseBusiness",
              "src": "contracts\\HouseBusiness.sol:86"
            },
            {
              "label": "houseHistories",
              "offset": 0,
              "slot": "20",
              "type": "t_mapping(t_uint256,t_array(t_struct(History)2831_storage)dyn_storage)",
              "contract": "HouseBusiness",
              "src": "contracts\\HouseBusiness.sol:88"
            },
            {
              "label": "APYtypes",
              "offset": 0,
              "slot": "21",
              "type": "t_array(t_uint256)dyn_storage",
              "contract": "HouseBusiness",
              "src": "contracts\\HouseBusiness.sol:90"
            },
            {
              "label": "APYConfig",
              "offset": 0,
              "slot": "22",
              "type": "t_mapping(t_uint256,t_uint256)",
              "contract": "HouseBusiness",
              "src": "contracts\\HouseBusiness.sol:92"
            },
            {
              "label": "allMembers",
              "offset": 0,
              "slot": "23",
              "type": "t_mapping(t_address,t_bool)",
              "contract": "HouseBusiness",
              "src": "contracts\\HouseBusiness.sol:94"
            },
            {
              "label": "allHouses",
              "offset": 0,
              "slot": "24",
              "type": "t_mapping(t_uint256,t_struct(House)2797_storage)",
              "contract": "HouseBusiness",
              "src": "contracts\\HouseBusiness.sol:96"
            },
            {
              "label": "allowedList",
              "offset": 0,
              "slot": "25",
              "type": "t_mapping(t_uint256,t_mapping(t_address,t_bool))",
              "contract": "HouseBusiness",
              "src": "contracts\\HouseBusiness.sol:98"
            },
            {
              "label": "stakedNfts",
              "offset": 0,
              "slot": "26",
              "type": "t_mapping(t_address,t_array(t_struct(StakedNft)2814_storage)dyn_storage)",
              "contract": "HouseBusiness",
              "src": "contracts\\HouseBusiness.sol:104"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            },
            "t_array(t_struct(History)2831_storage)dyn_storage": {
              "label": "struct HouseBusiness.History[]",
              "numberOfBytes": "32"
            },
            "t_array(t_struct(HistoryType)2850_storage)dyn_storage": {
              "label": "struct HouseBusiness.HistoryType[]",
              "numberOfBytes": "32"
            },
            "t_array(t_struct(StakedNft)2814_storage)dyn_storage": {
              "label": "struct HouseBusiness.StakedNft[]",
              "numberOfBytes": "32"
            },
            "t_array(t_uint256)dyn_storage": {
              "label": "uint256[]",
              "numberOfBytes": "32"
            },
            "t_bool": {
              "label": "bool",
              "numberOfBytes": "1"
            },
            "t_contract(IERC20)77": {
              "label": "contract IERC20",
              "numberOfBytes": "20"
            },
            "t_mapping(t_address,t_array(t_struct(StakedNft)2814_storage)dyn_storage)": {
              "label": "mapping(address => struct HouseBusiness.StakedNft[])",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_bool)": {
              "label": "mapping(address => bool)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_mapping(t_address,t_bool))": {
              "label": "mapping(address => mapping(address => bool))",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_uint256)": {
              "label": "mapping(address => uint256)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_uint256,t_address)": {
              "label": "mapping(uint256 => address)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_uint256,t_array(t_struct(History)2831_storage)dyn_storage)": {
              "label": "mapping(uint256 => struct HouseBusiness.History[])",
              "numberOfBytes": "32"
            },
            "t_mapping(t_uint256,t_mapping(t_address,t_bool))": {
              "label": "mapping(uint256 => mapping(address => bool))",
              "numberOfBytes": "32"
            },
            "t_mapping(t_uint256,t_string_storage)": {
              "label": "mapping(uint256 => string)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_uint256,t_struct(House)2797_storage)": {
              "label": "mapping(uint256 => struct HouseBusiness.House)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_uint256,t_uint256)": {
              "label": "mapping(uint256 => uint256)",
              "numberOfBytes": "32"
            },
            "t_string_storage": {
              "label": "string",
              "numberOfBytes": "32"
            },
            "t_struct(History)2831_storage": {
              "label": "struct HouseBusiness.History",
              "members": [
                {
                  "label": "hID",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "0"
                },
                {
                  "label": "contractId",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "1"
                },
                {
                  "label": "houseImg",
                  "type": "t_string_storage",
                  "offset": 0,
                  "slot": "2"
                },
                {
                  "label": "houseBrand",
                  "type": "t_string_storage",
                  "offset": 0,
                  "slot": "3"
                },
                {
                  "label": "desc",
                  "type": "t_string_storage",
                  "offset": 0,
                  "slot": "4"
                },
                {
                  "label": "history",
                  "type": "t_string_storage",
                  "offset": 0,
                  "slot": "5"
                },
                {
                  "label": "brandType",
                  "type": "t_string_storage",
                  "offset": 0,
                  "slot": "6"
                },
                {
                  "label": "yearField",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "7"
                }
              ],
              "numberOfBytes": "256"
            },
            "t_struct(HistoryType)2850_storage": {
              "label": "struct HouseBusiness.HistoryType",
              "members": [
                {
                  "label": "hID",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "0"
                },
                {
                  "label": "hLabel",
                  "type": "t_string_storage",
                  "offset": 0,
                  "slot": "1"
                },
                {
                  "label": "connectContract",
                  "type": "t_bool",
                  "offset": 0,
                  "slot": "2"
                },
                {
                  "label": "imgNeed",
                  "type": "t_bool",
                  "offset": 1,
                  "slot": "2"
                },
                {
                  "label": "brandNeed",
                  "type": "t_bool",
                  "offset": 2,
                  "slot": "2"
                },
                {
                  "label": "descNeed",
                  "type": "t_bool",
                  "offset": 3,
                  "slot": "2"
                },
                {
                  "label": "brandTypeNeed",
                  "type": "t_bool",
                  "offset": 4,
                  "slot": "2"
                },
                {
                  "label": "yearNeed",
                  "type": "t_bool",
                  "offset": 5,
                  "slot": "2"
                },
                {
                  "label": "checkMark",
                  "type": "t_bool",
                  "offset": 6,
                  "slot": "2"
                }
              ],
              "numberOfBytes": "96"
            },
            "t_struct(House)2797_storage": {
              "label": "struct HouseBusiness.House",
              "members": [
                {
                  "label": "tokenId",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "0"
                },
                {
                  "label": "tokenName",
                  "type": "t_string_storage",
                  "offset": 0,
                  "slot": "1"
                },
                {
                  "label": "tokenURI",
                  "type": "t_string_storage",
                  "offset": 0,
                  "slot": "2"
                },
                {
                  "label": "tokenType",
                  "type": "t_string_storage",
                  "offset": 0,
                  "slot": "3"
                },
                {
                  "label": "currentOwner",
                  "type": "t_address",
                  "offset": 0,
                  "slot": "4"
                },
                {
                  "label": "previousOwner",
                  "type": "t_address",
                  "offset": 0,
                  "slot": "5"
                },
                {
                  "label": "buyer",
                  "type": "t_address",
                  "offset": 0,
                  "slot": "6"
                },
                {
                  "label": "price",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "7"
                },
                {
                  "label": "numberOfTransfers",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "8"
                },
                {
                  "label": "nftPayable",
                  "type": "t_bool",
                  "offset": 0,
                  "slot": "9"
                },
                {
                  "label": "staked",
                  "type": "t_bool",
                  "offset": 1,
                  "slot": "9"
                },
                {
                  "label": "soldstatus",
                  "type": "t_bool",
                  "offset": 2,
                  "slot": "9"
                }
              ],
              "numberOfBytes": "320"
            },
            "t_struct(StakedNft)2814_storage": {
              "label": "struct HouseBusiness.StakedNft",
              "members": [
                {
                  "label": "owner",
                  "type": "t_address",
                  "offset": 0,
                  "slot": "0"
                },
                {
                  "label": "tokenId",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "1"
                },
                {
                  "label": "startedDate",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "2"
                },
                {
                  "label": "endDate",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "3"
                },
                {
                  "label": "claimDate",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "4"
                },
                {
                  "label": "stakingType",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "5"
                },
                {
                  "label": "perSecRewards",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "6"
                },
                {
                  "label": "stakingStatus",
                  "type": "t_bool",
                  "offset": 0,
                  "slot": "7"
                }
              ],
              "numberOfBytes": "256"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            }
          },
          "layoutVersion": "1.1",
          "flat": true
        }
      },
      "IMainCleanContract": {
        "src": "contracts\\interfaces\\IContract.sol:6",
        "inherit": [],
        "libraries": [],
        "methods": [
          "allCleanContracts(uint256)",
          "transferContractOwnership(uint256,address,address)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      }
    },
    {
      "IERC20": {
        "src": "@openzeppelin\\contracts\\token\\ERC20\\IERC20.sol:9",
        "inherit": [],
        "libraries": [],
        "methods": [
          "totalSupply()",
          "balanceOf(address)",
          "transfer(address,uint256)",
          "allowance(address,address)",
          "approve(address,uint256)",
          "transferFrom(address,address,uint256)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "ERC721": {
        "src": "@openzeppelin\\contracts\\token\\ERC721\\ERC721.sol:19",
        "version": {
          "withMetadata": "311027b738fb50ea92c84baf68eacb931adf05de03da13635a661dc9c5b03f73",
          "withoutMetadata": "9ec7f439077c3b762bc3aa6a17c55aba7a78d240190c9c7814df896455a0f780",
          "linkedWithoutMetadata": "9ec7f439077c3b762bc3aa6a17c55aba7a78d240190c9c7814df896455a0f780"
        },
        "inherit": [
          "IERC721Metadata",
          "IERC721",
          "ERC165",
          "IERC165",
          "Context"
        ],
        "libraries": [
          "Address",
          "Strings"
        ],
        "methods": [
          "(string,string)",
          "supportsInterface(bytes4)",
          "balanceOf(address)",
          "ownerOf(uint256)",
          "name()",
          "symbol()",
          "tokenURI(uint256)",
          "approve(address,uint256)",
          "getApproved(uint256)",
          "setApprovalForAll(address,bool)",
          "isApprovedForAll(address,address)",
          "transferFrom(address,address,uint256)",
          "safeTransferFrom(address,address,uint256)",
          "safeTransferFrom(address,address,uint256,bytes)"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "ERC721",
            "src": "@openzeppelin\\contracts\\token\\ERC721\\ERC721.sol:44"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "_name",
              "offset": 0,
              "slot": "0",
              "type": "t_string_storage",
              "contract": "ERC721",
              "src": "@openzeppelin\\contracts\\token\\ERC721\\ERC721.sol:24"
            },
            {
              "label": "_symbol",
              "offset": 0,
              "slot": "1",
              "type": "t_string_storage",
              "contract": "ERC721",
              "src": "@openzeppelin\\contracts\\token\\ERC721\\ERC721.sol:27"
            },
            {
              "label": "_owners",
              "offset": 0,
              "slot": "2",
              "type": "t_mapping(t_uint256,t_address)",
              "contract": "ERC721",
              "src": "@openzeppelin\\contracts\\token\\ERC721\\ERC721.sol:30"
            },
            {
              "label": "_balances",
              "offset": 0,
              "slot": "3",
              "type": "t_mapping(t_address,t_uint256)",
              "contract": "ERC721",
              "src": "@openzeppelin\\contracts\\token\\ERC721\\ERC721.sol:33"
            },
            {
              "label": "_tokenApprovals",
              "offset": 0,
              "slot": "4",
              "type": "t_mapping(t_uint256,t_address)",
              "contract": "ERC721",
              "src": "@openzeppelin\\contracts\\token\\ERC721\\ERC721.sol:36"
            },
            {
              "label": "_operatorApprovals",
              "offset": 0,
              "slot": "5",
              "type": "t_mapping(t_address,t_mapping(t_address,t_bool))",
              "contract": "ERC721",
              "src": "@openzeppelin\\contracts\\token\\ERC721\\ERC721.sol:39"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            },
            "t_bool": {
              "label": "bool",
              "numberOfBytes": "1"
            },
            "t_mapping(t_address,t_bool)": {
              "label": "mapping(address => bool)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_mapping(t_address,t_bool))": {
              "label": "mapping(address => mapping(address => bool))",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_uint256)": {
              "label": "mapping(address => uint256)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_uint256,t_address)": {
              "label": "mapping(uint256 => address)",
              "numberOfBytes": "32"
            },
            "t_string_storage": {
              "label": "string",
              "numberOfBytes": "32"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            }
          },
          "layoutVersion": "1.1",
          "flat": true
        }
      },
      "IERC721": {
        "src": "@openzeppelin\\contracts\\token\\ERC721\\IERC721.sol:11",
        "inherit": [
          "IERC165"
        ],
        "libraries": [],
        "methods": [
          "balanceOf(address)",
          "ownerOf(uint256)",
          "safeTransferFrom(address,address,uint256,bytes)",
          "safeTransferFrom(address,address,uint256)",
          "transferFrom(address,address,uint256)",
          "approve(address,uint256)",
          "setApprovalForAll(address,bool)",
          "getApproved(uint256)",
          "isApprovedForAll(address,address)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "IERC721Receiver": {
        "src": "@openzeppelin\\contracts\\token\\ERC721\\IERC721Receiver.sol:11",
        "inherit": [],
        "libraries": [],
        "methods": [
          "onERC721Received(address,address,uint256,bytes)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "ERC721URIStorage": {
        "src": "@openzeppelin\\contracts\\token\\ERC721\\extensions\\ERC721URIStorage.sol:11",
        "inherit": [
          "ERC721",
          "IERC721Metadata",
          "IERC721",
          "ERC165",
          "IERC165",
          "Context"
        ],
        "libraries": [
          "Strings"
        ],
        "methods": [
          "tokenURI(uint256)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [
            {
              "label": "_name",
              "offset": 0,
              "slot": "0",
              "type": "t_string_storage",
              "contract": "ERC721",
              "src": "@openzeppelin\\contracts\\token\\ERC721\\ERC721.sol:24"
            },
            {
              "label": "_symbol",
              "offset": 0,
              "slot": "1",
              "type": "t_string_storage",
              "contract": "ERC721",
              "src": "@openzeppelin\\contracts\\token\\ERC721\\ERC721.sol:27"
            },
            {
              "label": "_owners",
              "offset": 0,
              "slot": "2",
              "type": "t_mapping(t_uint256,t_address)",
              "contract": "ERC721",
              "src": "@openzeppelin\\contracts\\token\\ERC721\\ERC721.sol:30"
            },
            {
              "label": "_balances",
              "offset": 0,
              "slot": "3",
              "type": "t_mapping(t_address,t_uint256)",
              "contract": "ERC721",
              "src": "@openzeppelin\\contracts\\token\\ERC721\\ERC721.sol:33"
            },
            {
              "label": "_tokenApprovals",
              "offset": 0,
              "slot": "4",
              "type": "t_mapping(t_uint256,t_address)",
              "contract": "ERC721",
              "src": "@openzeppelin\\contracts\\token\\ERC721\\ERC721.sol:36"
            },
            {
              "label": "_operatorApprovals",
              "offset": 0,
              "slot": "5",
              "type": "t_mapping(t_address,t_mapping(t_address,t_bool))",
              "contract": "ERC721",
              "src": "@openzeppelin\\contracts\\token\\ERC721\\ERC721.sol:39"
            },
            {
              "label": "_tokenURIs",
              "offset": 0,
              "slot": "6",
              "type": "t_mapping(t_uint256,t_string_storage)",
              "contract": "ERC721URIStorage",
              "src": "@openzeppelin\\contracts\\token\\ERC721\\extensions\\ERC721URIStorage.sol:15"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            },
            "t_bool": {
              "label": "bool",
              "numberOfBytes": "1"
            },
            "t_mapping(t_address,t_bool)": {
              "label": "mapping(address => bool)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_mapping(t_address,t_bool))": {
              "label": "mapping(address => mapping(address => bool))",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_uint256)": {
              "label": "mapping(address => uint256)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_uint256,t_address)": {
              "label": "mapping(uint256 => address)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_uint256,t_string_storage)": {
              "label": "mapping(uint256 => string)",
              "numberOfBytes": "32"
            },
            "t_string_storage": {
              "label": "string",
              "numberOfBytes": "32"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            }
          },
          "layoutVersion": "1.1",
          "flat": true
        }
      },
      "IERC721Metadata": {
        "src": "@openzeppelin\\contracts\\token\\ERC721\\extensions\\IERC721Metadata.sol:12",
        "inherit": [
          "IERC721",
          "IERC165"
        ],
        "libraries": [],
        "methods": [
          "name()",
          "symbol()",
          "tokenURI(uint256)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "Address": {
        "src": "@openzeppelin\\contracts\\utils\\Address.sol:9",
        "version": {
          "withMetadata": "a0500f265408d7c0dbf75da3f9e44a5c2ee85e18bb1b58fe491ffcfa4ea7fd9b",
          "withoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db",
          "linkedWithoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db"
        },
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [
          {
            "kind": "delegatecall",
            "src": "@openzeppelin\\contracts\\utils\\Address.sol:185"
          }
        ],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "Context": {
        "src": "@openzeppelin\\contracts\\utils\\Context.sol:16",
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "Strings": {
        "src": "@openzeppelin\\contracts\\utils\\Strings.sol:11",
        "version": {
          "withMetadata": "c385b5200dd723f945d28b88358d79ca1b5c0f71c28cbbab9acf6d6f3fd15593",
          "withoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db",
          "linkedWithoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db"
        },
        "inherit": [],
        "libraries": [
          "Math"
        ],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "ERC165": {
        "src": "@openzeppelin\\contracts\\utils\\introspection\\ERC165.sol:22",
        "inherit": [
          "IERC165"
        ],
        "libraries": [],
        "methods": [
          "supportsInterface(bytes4)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "IERC165": {
        "src": "@openzeppelin\\contracts\\utils\\introspection\\IERC165.sol:15",
        "inherit": [],
        "libraries": [],
        "methods": [
          "supportsInterface(bytes4)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "Math": {
        "src": "@openzeppelin\\contracts\\utils\\math\\Math.sol:9",
        "version": {
          "withMetadata": "fcaf39e5e702f2902d6ef00c1def75c9800e8d2a0a78a87cf542096cafc7a4b0",
          "withoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db",
          "linkedWithoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db"
        },
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "HouseBusiness": {
        "src": "contracts\\HouseBusiness.sol:11",
        "version": {
          "withMetadata": "78e49b1126263fa2a624cb6ce93a694c405b92414e09e16de151e3c0fad0df26",
          "withoutMetadata": "c439a5e402e57dfec588271381c60e00fdb29d868694ec7bf834e780a6b07f30",
          "linkedWithoutMetadata": "c439a5e402e57dfec588271381c60e00fdb29d868694ec7bf834e780a6b07f30"
        },
        "inherit": [
          "ERC721URIStorage",
          "ERC721",
          "IERC721Metadata",
          "IERC721",
          "ERC165",
          "IERC165",
          "Context"
        ],
        "libraries": [],
        "methods": [
          "(address)",
          "setMinMaxHousePrice(uint256,uint256)",
          "setConfigToken(address)",
          "isMember()",
          "addMember(address)",
          "removeMember(address)",
          "tokenURI(uint256)",
          "setCAddress(address)",
          "setPayable(uint256,address,bool)",
          "mintHouse(string,string,string,string,uint256)",
          "addAllowList(uint256,address)",
          "removeAllowList(uint256,address)",
          "checkAllowedList(uint256,address)",
          "addHistory(uint256,uint256,uint256,string,string,string,string,string,uint256)",
          "getHistory(uint256)",
          "editHistory(uint256,uint256,string,string,string,string,string,uint256)",
          "getHistoryType()",
          "addOrEditHType(uint256,string,bool,bool,bool,bool,bool,bool,bool)",
          "removeHistoryType(uint256)",
          "getMinMaxNFT()",
          "getTokenOwner(uint256)",
          "buyHouseNft(uint256)",
          "sendToken(address,uint256)",
          "changeTokenPrice(uint256,uint256)",
          "getAllHouses()",
          "getAllPayableHouses()",
          "getAllMyHouses()",
          "withdrawToken(uint256)",
          "withdrawETH(uint256)",
          "calcDiv(uint256,uint256)",
          "setAPYConfig(uint256,uint256)",
          "getAllAPYTypes()",
          "stake(uint256,uint256)",
          "unstake(uint256)",
          "stakingFinished(uint256)",
          "totalRewards(address)",
          "claimRewards(address)",
          "getAllMyStakedNFTs()",
          "getTotalInfo()",
          "getAllAPYs()",
          "getPenalty()",
          "setPenalty(uint256)",
          "getRoyalty()",
          "setRoyalty(uint256)"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "HouseBusiness",
            "src": "contracts\\HouseBusiness.sol:106"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "_name",
              "offset": 0,
              "slot": "0",
              "type": "t_string_storage",
              "contract": "ERC721",
              "src": "@openzeppelin\\contracts\\token\\ERC721\\ERC721.sol:24"
            },
            {
              "label": "_symbol",
              "offset": 0,
              "slot": "1",
              "type": "t_string_storage",
              "contract": "ERC721",
              "src": "@openzeppelin\\contracts\\token\\ERC721\\ERC721.sol:27"
            },
            {
              "label": "_owners",
              "offset": 0,
              "slot": "2",
              "type": "t_mapping(t_uint256,t_address)",
              "contract": "ERC721",
              "src": "@openzeppelin\\contracts\\token\\ERC721\\ERC721.sol:30"
            },
            {
              "label": "_balances",
              "offset": 0,
              "slot": "3",
              "type": "t_mapping(t_address,t_uint256)",
              "contract": "ERC721",
              "src": "@openzeppelin\\contracts\\token\\ERC721\\ERC721.sol:33"
            },
            {
              "label": "_tokenApprovals",
              "offset": 0,
              "slot": "4",
              "type": "t_mapping(t_uint256,t_address)",
              "contract": "ERC721",
              "src": "@openzeppelin\\contracts\\token\\ERC721\\ERC721.sol:36"
            },
            {
              "label": "_operatorApprovals",
              "offset": 0,
              "slot": "5",
              "type": "t_mapping(t_address,t_mapping(t_address,t_bool))",
              "contract": "ERC721",
              "src": "@openzeppelin\\contracts\\token\\ERC721\\ERC721.sol:39"
            },
            {
              "label": "_tokenURIs",
              "offset": 0,
              "slot": "6",
              "type": "t_mapping(t_uint256,t_string_storage)",
              "contract": "ERC721URIStorage",
              "src": "@openzeppelin\\contracts\\token\\ERC721\\extensions\\ERC721URIStorage.sol:15"
            },
            {
              "label": "collectionName",
              "offset": 0,
              "slot": "7",
              "type": "t_string_storage",
              "contract": "HouseBusiness",
              "src": "contracts\\HouseBusiness.sol:13"
            },
            {
              "label": "collectionNameSymbol",
              "offset": 0,
              "slot": "8",
              "type": "t_string_storage",
              "contract": "HouseBusiness",
              "src": "contracts\\HouseBusiness.sol:15"
            },
            {
              "label": "houseCounter",
              "offset": 0,
              "slot": "9",
              "type": "t_uint256",
              "contract": "HouseBusiness",
              "src": "contracts\\HouseBusiness.sol:17"
            },
            {
              "label": "stakedCounter",
              "offset": 0,
              "slot": "10",
              "type": "t_uint256",
              "contract": "HouseBusiness",
              "src": "contracts\\HouseBusiness.sol:19"
            },
            {
              "label": "soldedCounter",
              "offset": 0,
              "slot": "11",
              "type": "t_uint256",
              "contract": "HouseBusiness",
              "src": "contracts\\HouseBusiness.sol:21"
            },
            {
              "label": "hTypeCounter",
              "offset": 0,
              "slot": "12",
              "type": "t_uint256",
              "contract": "HouseBusiness",
              "src": "contracts\\HouseBusiness.sol:23"
            },
            {
              "label": "_token",
              "offset": 0,
              "slot": "13",
              "type": "t_contract(IERC20)77",
              "contract": "HouseBusiness",
              "src": "contracts\\HouseBusiness.sol:25"
            },
            {
              "label": "minPrice",
              "offset": 0,
              "slot": "14",
              "type": "t_uint256",
              "contract": "HouseBusiness",
              "src": "contracts\\HouseBusiness.sol:27"
            },
            {
              "label": "maxPrice",
              "offset": 0,
              "slot": "15",
              "type": "t_uint256",
              "contract": "HouseBusiness",
              "src": "contracts\\HouseBusiness.sol:29"
            },
            {
              "label": "penalty",
              "offset": 0,
              "slot": "16",
              "type": "t_uint256",
              "contract": "HouseBusiness",
              "src": "contracts\\HouseBusiness.sol:31"
            },
            {
              "label": "royalty",
              "offset": 0,
              "slot": "17",
              "type": "t_uint256",
              "contract": "HouseBusiness",
              "src": "contracts\\HouseBusiness.sol:33"
            },
            {
              "label": "cContractAddress",
              "offset": 0,
              "slot": "18",
              "type": "t_address",
              "contract": "HouseBusiness",
              "src": "contracts\\HouseBusiness.sol:35"
            },
            {
              "label": "historyTypes",
              "offset": 0,
              "slot": "19",
              "type": "t_array(t_struct(HistoryType)2850_storage)dyn_storage",
              "contract": "HouseBusiness",
              "src": "contracts\\HouseBusiness.sol:86"
            },
            {
              "label": "houseHistories",
              "offset": 0,
              "slot": "20",
              "type": "t_mapping(t_uint256,t_array(t_struct(History)2831_storage)dyn_storage)",
              "contract": "HouseBusiness",
              "src": "contracts\\HouseBusiness.sol:88"
            },
            {
              "label": "APYtypes",
              "offset": 0,
              "slot": "21",
              "type": "t_array(t_uint256)dyn_storage",
              "contract": "HouseBusiness",
              "src": "contracts\\HouseBusiness.sol:90"
            },
            {
              "label": "APYConfig",
              "offset": 0,
              "slot": "22",
              "type": "t_mapping(t_uint256,t_uint256)",
              "contract": "HouseBusiness",
              "src": "contracts\\HouseBusiness.sol:92"
            },
            {
              "label": "allMembers",
              "offset": 0,
              "slot": "23",
              "type": "t_mapping(t_address,t_bool)",
              "contract": "HouseBusiness",
              "src": "contracts\\HouseBusiness.sol:94"
            },
            {
              "label": "allHouses",
              "offset": 0,
              "slot": "24",
              "type": "t_mapping(t_uint256,t_struct(House)2797_storage)",
              "contract": "HouseBusiness",
              "src": "contracts\\HouseBusiness.sol:96"
            },
            {
              "label": "allowedList",
              "offset": 0,
              "slot": "25",
              "type": "t_mapping(t_uint256,t_mapping(t_address,t_bool))",
              "contract": "HouseBusiness",
              "src": "contracts\\HouseBusiness.sol:98"
            },
            {
              "label": "stakedNfts",
              "offset": 0,
              "slot": "26",
              "type": "t_mapping(t_address,t_array(t_struct(StakedNft)2814_storage)dyn_storage)",
              "contract": "HouseBusiness",
              "src": "contracts\\HouseBusiness.sol:104"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            },
            "t_array(t_struct(History)2831_storage)dyn_storage": {
              "label": "struct HouseBusiness.History[]",
              "numberOfBytes": "32"
            },
            "t_array(t_struct(HistoryType)2850_storage)dyn_storage": {
              "label": "struct HouseBusiness.HistoryType[]",
              "numberOfBytes": "32"
            },
            "t_array(t_struct(StakedNft)2814_storage)dyn_storage": {
              "label": "struct HouseBusiness.StakedNft[]",
              "numberOfBytes": "32"
            },
            "t_array(t_uint256)dyn_storage": {
              "label": "uint256[]",
              "numberOfBytes": "32"
            },
            "t_bool": {
              "label": "bool",
              "numberOfBytes": "1"
            },
            "t_contract(IERC20)77": {
              "label": "contract IERC20",
              "numberOfBytes": "20"
            },
            "t_mapping(t_address,t_array(t_struct(StakedNft)2814_storage)dyn_storage)": {
              "label": "mapping(address => struct HouseBusiness.StakedNft[])",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_bool)": {
              "label": "mapping(address => bool)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_mapping(t_address,t_bool))": {
              "label": "mapping(address => mapping(address => bool))",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_uint256)": {
              "label": "mapping(address => uint256)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_uint256,t_address)": {
              "label": "mapping(uint256 => address)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_uint256,t_array(t_struct(History)2831_storage)dyn_storage)": {
              "label": "mapping(uint256 => struct HouseBusiness.History[])",
              "numberOfBytes": "32"
            },
            "t_mapping(t_uint256,t_mapping(t_address,t_bool))": {
              "label": "mapping(uint256 => mapping(address => bool))",
              "numberOfBytes": "32"
            },
            "t_mapping(t_uint256,t_string_storage)": {
              "label": "mapping(uint256 => string)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_uint256,t_struct(House)2797_storage)": {
              "label": "mapping(uint256 => struct HouseBusiness.House)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_uint256,t_uint256)": {
              "label": "mapping(uint256 => uint256)",
              "numberOfBytes": "32"
            },
            "t_string_storage": {
              "label": "string",
              "numberOfBytes": "32"
            },
            "t_struct(History)2831_storage": {
              "label": "struct HouseBusiness.History",
              "members": [
                {
                  "label": "hID",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "0"
                },
                {
                  "label": "contractId",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "1"
                },
                {
                  "label": "houseImg",
                  "type": "t_string_storage",
                  "offset": 0,
                  "slot": "2"
                },
                {
                  "label": "houseBrand",
                  "type": "t_string_storage",
                  "offset": 0,
                  "slot": "3"
                },
                {
                  "label": "desc",
                  "type": "t_string_storage",
                  "offset": 0,
                  "slot": "4"
                },
                {
                  "label": "history",
                  "type": "t_string_storage",
                  "offset": 0,
                  "slot": "5"
                },
                {
                  "label": "brandType",
                  "type": "t_string_storage",
                  "offset": 0,
                  "slot": "6"
                },
                {
                  "label": "yearField",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "7"
                }
              ],
              "numberOfBytes": "256"
            },
            "t_struct(HistoryType)2850_storage": {
              "label": "struct HouseBusiness.HistoryType",
              "members": [
                {
                  "label": "hID",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "0"
                },
                {
                  "label": "hLabel",
                  "type": "t_string_storage",
                  "offset": 0,
                  "slot": "1"
                },
                {
                  "label": "connectContract",
                  "type": "t_bool",
                  "offset": 0,
                  "slot": "2"
                },
                {
                  "label": "imgNeed",
                  "type": "t_bool",
                  "offset": 1,
                  "slot": "2"
                },
                {
                  "label": "brandNeed",
                  "type": "t_bool",
                  "offset": 2,
                  "slot": "2"
                },
                {
                  "label": "descNeed",
                  "type": "t_bool",
                  "offset": 3,
                  "slot": "2"
                },
                {
                  "label": "brandTypeNeed",
                  "type": "t_bool",
                  "offset": 4,
                  "slot": "2"
                },
                {
                  "label": "yearNeed",
                  "type": "t_bool",
                  "offset": 5,
                  "slot": "2"
                },
                {
                  "label": "checkMark",
                  "type": "t_bool",
                  "offset": 6,
                  "slot": "2"
                }
              ],
              "numberOfBytes": "96"
            },
            "t_struct(House)2797_storage": {
              "label": "struct HouseBusiness.House",
              "members": [
                {
                  "label": "tokenId",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "0"
                },
                {
                  "label": "tokenName",
                  "type": "t_string_storage",
                  "offset": 0,
                  "slot": "1"
                },
                {
                  "label": "tokenURI",
                  "type": "t_string_storage",
                  "offset": 0,
                  "slot": "2"
                },
                {
                  "label": "tokenType",
                  "type": "t_string_storage",
                  "offset": 0,
                  "slot": "3"
                },
                {
                  "label": "currentOwner",
                  "type": "t_address",
                  "offset": 0,
                  "slot": "4"
                },
                {
                  "label": "previousOwner",
                  "type": "t_address",
                  "offset": 0,
                  "slot": "5"
                },
                {
                  "label": "buyer",
                  "type": "t_address",
                  "offset": 0,
                  "slot": "6"
                },
                {
                  "label": "price",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "7"
                },
                {
                  "label": "numberOfTransfers",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "8"
                },
                {
                  "label": "nftPayable",
                  "type": "t_bool",
                  "offset": 0,
                  "slot": "9"
                },
                {
                  "label": "staked",
                  "type": "t_bool",
                  "offset": 1,
                  "slot": "9"
                },
                {
                  "label": "soldstatus",
                  "type": "t_bool",
                  "offset": 2,
                  "slot": "9"
                }
              ],
              "numberOfBytes": "320"
            },
            "t_struct(StakedNft)2814_storage": {
              "label": "struct HouseBusiness.StakedNft",
              "members": [
                {
                  "label": "owner",
                  "type": "t_address",
                  "offset": 0,
                  "slot": "0"
                },
                {
                  "label": "tokenId",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "1"
                },
                {
                  "label": "startedDate",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "2"
                },
                {
                  "label": "endDate",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "3"
                },
                {
                  "label": "claimDate",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "4"
                },
                {
                  "label": "stakingType",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "5"
                },
                {
                  "label": "perSecRewards",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "6"
                },
                {
                  "label": "stakingStatus",
                  "type": "t_bool",
                  "offset": 0,
                  "slot": "7"
                }
              ],
              "numberOfBytes": "256"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            }
          },
          "layoutVersion": "1.1",
          "flat": true
        }
      },
      "IMainCleanContract": {
        "src": "contracts\\interfaces\\IContract.sol:6",
        "inherit": [],
        "libraries": [],
        "methods": [
          "allCleanContracts(uint256)",
          "transferContractOwnership(uint256,address,address)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      }
    },
    {
      "IERC20": {
        "src": "@openzeppelin\\contracts\\token\\ERC20\\IERC20.sol:9",
        "inherit": [],
        "libraries": [],
        "methods": [
          "totalSupply()",
          "balanceOf(address)",
          "transfer(address,uint256)",
          "allowance(address,address)",
          "approve(address,uint256)",
          "transferFrom(address,address,uint256)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "ERC721": {
        "src": "@openzeppelin\\contracts\\token\\ERC721\\ERC721.sol:19",
        "version": {
          "withMetadata": "311027b738fb50ea92c84baf68eacb931adf05de03da13635a661dc9c5b03f73",
          "withoutMetadata": "9ec7f439077c3b762bc3aa6a17c55aba7a78d240190c9c7814df896455a0f780",
          "linkedWithoutMetadata": "9ec7f439077c3b762bc3aa6a17c55aba7a78d240190c9c7814df896455a0f780"
        },
        "inherit": [
          "IERC721Metadata",
          "IERC721",
          "ERC165",
          "IERC165",
          "Context"
        ],
        "libraries": [
          "Address",
          "Strings"
        ],
        "methods": [
          "(string,string)",
          "supportsInterface(bytes4)",
          "balanceOf(address)",
          "ownerOf(uint256)",
          "name()",
          "symbol()",
          "tokenURI(uint256)",
          "approve(address,uint256)",
          "getApproved(uint256)",
          "setApprovalForAll(address,bool)",
          "isApprovedForAll(address,address)",
          "transferFrom(address,address,uint256)",
          "safeTransferFrom(address,address,uint256)",
          "safeTransferFrom(address,address,uint256,bytes)"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "ERC721",
            "src": "@openzeppelin\\contracts\\token\\ERC721\\ERC721.sol:44"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "_name",
              "offset": 0,
              "slot": "0",
              "type": "t_string_storage",
              "contract": "ERC721",
              "src": "@openzeppelin\\contracts\\token\\ERC721\\ERC721.sol:24"
            },
            {
              "label": "_symbol",
              "offset": 0,
              "slot": "1",
              "type": "t_string_storage",
              "contract": "ERC721",
              "src": "@openzeppelin\\contracts\\token\\ERC721\\ERC721.sol:27"
            },
            {
              "label": "_owners",
              "offset": 0,
              "slot": "2",
              "type": "t_mapping(t_uint256,t_address)",
              "contract": "ERC721",
              "src": "@openzeppelin\\contracts\\token\\ERC721\\ERC721.sol:30"
            },
            {
              "label": "_balances",
              "offset": 0,
              "slot": "3",
              "type": "t_mapping(t_address,t_uint256)",
              "contract": "ERC721",
              "src": "@openzeppelin\\contracts\\token\\ERC721\\ERC721.sol:33"
            },
            {
              "label": "_tokenApprovals",
              "offset": 0,
              "slot": "4",
              "type": "t_mapping(t_uint256,t_address)",
              "contract": "ERC721",
              "src": "@openzeppelin\\contracts\\token\\ERC721\\ERC721.sol:36"
            },
            {
              "label": "_operatorApprovals",
              "offset": 0,
              "slot": "5",
              "type": "t_mapping(t_address,t_mapping(t_address,t_bool))",
              "contract": "ERC721",
              "src": "@openzeppelin\\contracts\\token\\ERC721\\ERC721.sol:39"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            },
            "t_bool": {
              "label": "bool",
              "numberOfBytes": "1"
            },
            "t_mapping(t_address,t_bool)": {
              "label": "mapping(address => bool)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_mapping(t_address,t_bool))": {
              "label": "mapping(address => mapping(address => bool))",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_uint256)": {
              "label": "mapping(address => uint256)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_uint256,t_address)": {
              "label": "mapping(uint256 => address)",
              "numberOfBytes": "32"
            },
            "t_string_storage": {
              "label": "string",
              "numberOfBytes": "32"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            }
          },
          "layoutVersion": "1.1",
          "flat": true
        }
      },
      "IERC721": {
        "src": "@openzeppelin\\contracts\\token\\ERC721\\IERC721.sol:11",
        "inherit": [
          "IERC165"
        ],
        "libraries": [],
        "methods": [
          "balanceOf(address)",
          "ownerOf(uint256)",
          "safeTransferFrom(address,address,uint256,bytes)",
          "safeTransferFrom(address,address,uint256)",
          "transferFrom(address,address,uint256)",
          "approve(address,uint256)",
          "setApprovalForAll(address,bool)",
          "getApproved(uint256)",
          "isApprovedForAll(address,address)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "IERC721Receiver": {
        "src": "@openzeppelin\\contracts\\token\\ERC721\\IERC721Receiver.sol:11",
        "inherit": [],
        "libraries": [],
        "methods": [
          "onERC721Received(address,address,uint256,bytes)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "ERC721URIStorage": {
        "src": "@openzeppelin\\contracts\\token\\ERC721\\extensions\\ERC721URIStorage.sol:11",
        "inherit": [
          "ERC721",
          "IERC721Metadata",
          "IERC721",
          "ERC165",
          "IERC165",
          "Context"
        ],
        "libraries": [
          "Strings"
        ],
        "methods": [
          "tokenURI(uint256)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [
            {
              "label": "_name",
              "offset": 0,
              "slot": "0",
              "type": "t_string_storage",
              "contract": "ERC721",
              "src": "@openzeppelin\\contracts\\token\\ERC721\\ERC721.sol:24"
            },
            {
              "label": "_symbol",
              "offset": 0,
              "slot": "1",
              "type": "t_string_storage",
              "contract": "ERC721",
              "src": "@openzeppelin\\contracts\\token\\ERC721\\ERC721.sol:27"
            },
            {
              "label": "_owners",
              "offset": 0,
              "slot": "2",
              "type": "t_mapping(t_uint256,t_address)",
              "contract": "ERC721",
              "src": "@openzeppelin\\contracts\\token\\ERC721\\ERC721.sol:30"
            },
            {
              "label": "_balances",
              "offset": 0,
              "slot": "3",
              "type": "t_mapping(t_address,t_uint256)",
              "contract": "ERC721",
              "src": "@openzeppelin\\contracts\\token\\ERC721\\ERC721.sol:33"
            },
            {
              "label": "_tokenApprovals",
              "offset": 0,
              "slot": "4",
              "type": "t_mapping(t_uint256,t_address)",
              "contract": "ERC721",
              "src": "@openzeppelin\\contracts\\token\\ERC721\\ERC721.sol:36"
            },
            {
              "label": "_operatorApprovals",
              "offset": 0,
              "slot": "5",
              "type": "t_mapping(t_address,t_mapping(t_address,t_bool))",
              "contract": "ERC721",
              "src": "@openzeppelin\\contracts\\token\\ERC721\\ERC721.sol:39"
            },
            {
              "label": "_tokenURIs",
              "offset": 0,
              "slot": "6",
              "type": "t_mapping(t_uint256,t_string_storage)",
              "contract": "ERC721URIStorage",
              "src": "@openzeppelin\\contracts\\token\\ERC721\\extensions\\ERC721URIStorage.sol:15"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            },
            "t_bool": {
              "label": "bool",
              "numberOfBytes": "1"
            },
            "t_mapping(t_address,t_bool)": {
              "label": "mapping(address => bool)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_mapping(t_address,t_bool))": {
              "label": "mapping(address => mapping(address => bool))",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_uint256)": {
              "label": "mapping(address => uint256)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_uint256,t_address)": {
              "label": "mapping(uint256 => address)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_uint256,t_string_storage)": {
              "label": "mapping(uint256 => string)",
              "numberOfBytes": "32"
            },
            "t_string_storage": {
              "label": "string",
              "numberOfBytes": "32"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            }
          },
          "layoutVersion": "1.1",
          "flat": true
        }
      },
      "IERC721Metadata": {
        "src": "@openzeppelin\\contracts\\token\\ERC721\\extensions\\IERC721Metadata.sol:12",
        "inherit": [
          "IERC721",
          "IERC165"
        ],
        "libraries": [],
        "methods": [
          "name()",
          "symbol()",
          "tokenURI(uint256)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "Address": {
        "src": "@openzeppelin\\contracts\\utils\\Address.sol:9",
        "version": {
          "withMetadata": "a0500f265408d7c0dbf75da3f9e44a5c2ee85e18bb1b58fe491ffcfa4ea7fd9b",
          "withoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db",
          "linkedWithoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db"
        },
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [
          {
            "kind": "delegatecall",
            "src": "@openzeppelin\\contracts\\utils\\Address.sol:185"
          }
        ],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "Context": {
        "src": "@openzeppelin\\contracts\\utils\\Context.sol:16",
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "Strings": {
        "src": "@openzeppelin\\contracts\\utils\\Strings.sol:11",
        "version": {
          "withMetadata": "c385b5200dd723f945d28b88358d79ca1b5c0f71c28cbbab9acf6d6f3fd15593",
          "withoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db",
          "linkedWithoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db"
        },
        "inherit": [],
        "libraries": [
          "Math"
        ],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "ERC165": {
        "src": "@openzeppelin\\contracts\\utils\\introspection\\ERC165.sol:22",
        "inherit": [
          "IERC165"
        ],
        "libraries": [],
        "methods": [
          "supportsInterface(bytes4)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "IERC165": {
        "src": "@openzeppelin\\contracts\\utils\\introspection\\IERC165.sol:15",
        "inherit": [],
        "libraries": [],
        "methods": [
          "supportsInterface(bytes4)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "Math": {
        "src": "@openzeppelin\\contracts\\utils\\math\\Math.sol:9",
        "version": {
          "withMetadata": "fcaf39e5e702f2902d6ef00c1def75c9800e8d2a0a78a87cf542096cafc7a4b0",
          "withoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db",
          "linkedWithoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db"
        },
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "HouseBusiness": {
        "src": "contracts\\HouseBusiness.sol:11",
        "version": {
          "withMetadata": "fc5eab91f9eaba658f6e8e2438764e4d4a881f501d833c1d883ccddcef865ad1",
          "withoutMetadata": "48c5ccc3eb0e1570067fc33067e380faf302cfb0a987dc0ba21725f04bb843ce",
          "linkedWithoutMetadata": "48c5ccc3eb0e1570067fc33067e380faf302cfb0a987dc0ba21725f04bb843ce"
        },
        "inherit": [
          "ERC721URIStorage",
          "ERC721",
          "IERC721Metadata",
          "IERC721",
          "ERC165",
          "IERC165",
          "Context"
        ],
        "libraries": [],
        "methods": [
          "(address)",
          "setMinMaxHousePrice(uint256,uint256)",
          "setConfigToken(address)",
          "isMember()",
          "addMember(address)",
          "removeMember(address)",
          "tokenURI(uint256)",
          "setCContractAddress(address)",
          "setPayable(uint256,address,bool)",
          "mintHouse(string,string,string,string,uint256)",
          "addAllowList(uint256,address)",
          "removeAllowList(uint256,address)",
          "checkAllowedList(uint256,address)",
          "addHistory(uint256,uint256,uint256,string,string,string,string,string,uint256)",
          "getHistory(uint256)",
          "editHistory(uint256,uint256,string,string,string,string,string,uint256)",
          "getHistoryType()",
          "addOrEditHType(uint256,string,bool,bool,bool,bool,bool,bool,bool)",
          "removeHistoryType(uint256)",
          "getMinMaxNFT()",
          "getTokenOwner(uint256)",
          "buyHouseNft(uint256)",
          "sendToken(address,uint256)",
          "changeTokenPrice(uint256,uint256)",
          "getAllHouses()",
          "getAllPayableHouses()",
          "getAllMyHouses()",
          "withdrawToken(uint256)",
          "withdrawETH(uint256)",
          "calcDiv(uint256,uint256)",
          "setAPYConfig(uint256,uint256)",
          "getAllAPYTypes()",
          "stake(uint256,uint256)",
          "unstake(uint256)",
          "stakingFinished(uint256)",
          "totalRewards(address)",
          "claimRewards(address)",
          "getAllMyStakedNFTs()",
          "getTotalInfo()",
          "getAllAPYs()",
          "getPenalty()",
          "setPenalty(uint256)",
          "getRoyalty()",
          "setRoyalty(uint256)"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "HouseBusiness",
            "src": "contracts\\HouseBusiness.sol:106"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "_name",
              "offset": 0,
              "slot": "0",
              "type": "t_string_storage",
              "contract": "ERC721",
              "src": "@openzeppelin\\contracts\\token\\ERC721\\ERC721.sol:24"
            },
            {
              "label": "_symbol",
              "offset": 0,
              "slot": "1",
              "type": "t_string_storage",
              "contract": "ERC721",
              "src": "@openzeppelin\\contracts\\token\\ERC721\\ERC721.sol:27"
            },
            {
              "label": "_owners",
              "offset": 0,
              "slot": "2",
              "type": "t_mapping(t_uint256,t_address)",
              "contract": "ERC721",
              "src": "@openzeppelin\\contracts\\token\\ERC721\\ERC721.sol:30"
            },
            {
              "label": "_balances",
              "offset": 0,
              "slot": "3",
              "type": "t_mapping(t_address,t_uint256)",
              "contract": "ERC721",
              "src": "@openzeppelin\\contracts\\token\\ERC721\\ERC721.sol:33"
            },
            {
              "label": "_tokenApprovals",
              "offset": 0,
              "slot": "4",
              "type": "t_mapping(t_uint256,t_address)",
              "contract": "ERC721",
              "src": "@openzeppelin\\contracts\\token\\ERC721\\ERC721.sol:36"
            },
            {
              "label": "_operatorApprovals",
              "offset": 0,
              "slot": "5",
              "type": "t_mapping(t_address,t_mapping(t_address,t_bool))",
              "contract": "ERC721",
              "src": "@openzeppelin\\contracts\\token\\ERC721\\ERC721.sol:39"
            },
            {
              "label": "_tokenURIs",
              "offset": 0,
              "slot": "6",
              "type": "t_mapping(t_uint256,t_string_storage)",
              "contract": "ERC721URIStorage",
              "src": "@openzeppelin\\contracts\\token\\ERC721\\extensions\\ERC721URIStorage.sol:15"
            },
            {
              "label": "collectionName",
              "offset": 0,
              "slot": "7",
              "type": "t_string_storage",
              "contract": "HouseBusiness",
              "src": "contracts\\HouseBusiness.sol:13"
            },
            {
              "label": "collectionNameSymbol",
              "offset": 0,
              "slot": "8",
              "type": "t_string_storage",
              "contract": "HouseBusiness",
              "src": "contracts\\HouseBusiness.sol:15"
            },
            {
              "label": "houseCounter",
              "offset": 0,
              "slot": "9",
              "type": "t_uint256",
              "contract": "HouseBusiness",
              "src": "contracts\\HouseBusiness.sol:17"
            },
            {
              "label": "stakedCounter",
              "offset": 0,
              "slot": "10",
              "type": "t_uint256",
              "contract": "HouseBusiness",
              "src": "contracts\\HouseBusiness.sol:19"
            },
            {
              "label": "soldedCounter",
              "offset": 0,
              "slot": "11",
              "type": "t_uint256",
              "contract": "HouseBusiness",
              "src": "contracts\\HouseBusiness.sol:21"
            },
            {
              "label": "hTypeCounter",
              "offset": 0,
              "slot": "12",
              "type": "t_uint256",
              "contract": "HouseBusiness",
              "src": "contracts\\HouseBusiness.sol:23"
            },
            {
              "label": "_token",
              "offset": 0,
              "slot": "13",
              "type": "t_contract(IERC20)77",
              "contract": "HouseBusiness",
              "src": "contracts\\HouseBusiness.sol:25"
            },
            {
              "label": "minPrice",
              "offset": 0,
              "slot": "14",
              "type": "t_uint256",
              "contract": "HouseBusiness",
              "src": "contracts\\HouseBusiness.sol:27"
            },
            {
              "label": "maxPrice",
              "offset": 0,
              "slot": "15",
              "type": "t_uint256",
              "contract": "HouseBusiness",
              "src": "contracts\\HouseBusiness.sol:29"
            },
            {
              "label": "penalty",
              "offset": 0,
              "slot": "16",
              "type": "t_uint256",
              "contract": "HouseBusiness",
              "src": "contracts\\HouseBusiness.sol:31"
            },
            {
              "label": "royalty",
              "offset": 0,
              "slot": "17",
              "type": "t_uint256",
              "contract": "HouseBusiness",
              "src": "contracts\\HouseBusiness.sol:33"
            },
            {
              "label": "cContractAddress",
              "offset": 0,
              "slot": "18",
              "type": "t_address",
              "contract": "HouseBusiness",
              "src": "contracts\\HouseBusiness.sol:35"
            },
            {
              "label": "historyTypes",
              "offset": 0,
              "slot": "19",
              "type": "t_array(t_struct(HistoryType)2850_storage)dyn_storage",
              "contract": "HouseBusiness",
              "src": "contracts\\HouseBusiness.sol:86"
            },
            {
              "label": "houseHistories",
              "offset": 0,
              "slot": "20",
              "type": "t_mapping(t_uint256,t_array(t_struct(History)2831_storage)dyn_storage)",
              "contract": "HouseBusiness",
              "src": "contracts\\HouseBusiness.sol:88"
            },
            {
              "label": "APYtypes",
              "offset": 0,
              "slot": "21",
              "type": "t_array(t_uint256)dyn_storage",
              "contract": "HouseBusiness",
              "src": "contracts\\HouseBusiness.sol:90"
            },
            {
              "label": "APYConfig",
              "offset": 0,
              "slot": "22",
              "type": "t_mapping(t_uint256,t_uint256)",
              "contract": "HouseBusiness",
              "src": "contracts\\HouseBusiness.sol:92"
            },
            {
              "label": "allMembers",
              "offset": 0,
              "slot": "23",
              "type": "t_mapping(t_address,t_bool)",
              "contract": "HouseBusiness",
              "src": "contracts\\HouseBusiness.sol:94"
            },
            {
              "label": "allHouses",
              "offset": 0,
              "slot": "24",
              "type": "t_mapping(t_uint256,t_struct(House)2797_storage)",
              "contract": "HouseBusiness",
              "src": "contracts\\HouseBusiness.sol:96"
            },
            {
              "label": "allowedList",
              "offset": 0,
              "slot": "25",
              "type": "t_mapping(t_uint256,t_mapping(t_address,t_bool))",
              "contract": "HouseBusiness",
              "src": "contracts\\HouseBusiness.sol:98"
            },
            {
              "label": "stakedNfts",
              "offset": 0,
              "slot": "26",
              "type": "t_mapping(t_address,t_array(t_struct(StakedNft)2814_storage)dyn_storage)",
              "contract": "HouseBusiness",
              "src": "contracts\\HouseBusiness.sol:104"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            },
            "t_array(t_struct(History)2831_storage)dyn_storage": {
              "label": "struct HouseBusiness.History[]",
              "numberOfBytes": "32"
            },
            "t_array(t_struct(HistoryType)2850_storage)dyn_storage": {
              "label": "struct HouseBusiness.HistoryType[]",
              "numberOfBytes": "32"
            },
            "t_array(t_struct(StakedNft)2814_storage)dyn_storage": {
              "label": "struct HouseBusiness.StakedNft[]",
              "numberOfBytes": "32"
            },
            "t_array(t_uint256)dyn_storage": {
              "label": "uint256[]",
              "numberOfBytes": "32"
            },
            "t_bool": {
              "label": "bool",
              "numberOfBytes": "1"
            },
            "t_contract(IERC20)77": {
              "label": "contract IERC20",
              "numberOfBytes": "20"
            },
            "t_mapping(t_address,t_array(t_struct(StakedNft)2814_storage)dyn_storage)": {
              "label": "mapping(address => struct HouseBusiness.StakedNft[])",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_bool)": {
              "label": "mapping(address => bool)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_mapping(t_address,t_bool))": {
              "label": "mapping(address => mapping(address => bool))",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_uint256)": {
              "label": "mapping(address => uint256)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_uint256,t_address)": {
              "label": "mapping(uint256 => address)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_uint256,t_array(t_struct(History)2831_storage)dyn_storage)": {
              "label": "mapping(uint256 => struct HouseBusiness.History[])",
              "numberOfBytes": "32"
            },
            "t_mapping(t_uint256,t_mapping(t_address,t_bool))": {
              "label": "mapping(uint256 => mapping(address => bool))",
              "numberOfBytes": "32"
            },
            "t_mapping(t_uint256,t_string_storage)": {
              "label": "mapping(uint256 => string)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_uint256,t_struct(House)2797_storage)": {
              "label": "mapping(uint256 => struct HouseBusiness.House)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_uint256,t_uint256)": {
              "label": "mapping(uint256 => uint256)",
              "numberOfBytes": "32"
            },
            "t_string_storage": {
              "label": "string",
              "numberOfBytes": "32"
            },
            "t_struct(History)2831_storage": {
              "label": "struct HouseBusiness.History",
              "members": [
                {
                  "label": "hID",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "0"
                },
                {
                  "label": "contractId",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "1"
                },
                {
                  "label": "houseImg",
                  "type": "t_string_storage",
                  "offset": 0,
                  "slot": "2"
                },
                {
                  "label": "houseBrand",
                  "type": "t_string_storage",
                  "offset": 0,
                  "slot": "3"
                },
                {
                  "label": "desc",
                  "type": "t_string_storage",
                  "offset": 0,
                  "slot": "4"
                },
                {
                  "label": "history",
                  "type": "t_string_storage",
                  "offset": 0,
                  "slot": "5"
                },
                {
                  "label": "brandType",
                  "type": "t_string_storage",
                  "offset": 0,
                  "slot": "6"
                },
                {
                  "label": "yearField",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "7"
                }
              ],
              "numberOfBytes": "256"
            },
            "t_struct(HistoryType)2850_storage": {
              "label": "struct HouseBusiness.HistoryType",
              "members": [
                {
                  "label": "hID",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "0"
                },
                {
                  "label": "hLabel",
                  "type": "t_string_storage",
                  "offset": 0,
                  "slot": "1"
                },
                {
                  "label": "connectContract",
                  "type": "t_bool",
                  "offset": 0,
                  "slot": "2"
                },
                {
                  "label": "imgNeed",
                  "type": "t_bool",
                  "offset": 1,
                  "slot": "2"
                },
                {
                  "label": "brandNeed",
                  "type": "t_bool",
                  "offset": 2,
                  "slot": "2"
                },
                {
                  "label": "descNeed",
                  "type": "t_bool",
                  "offset": 3,
                  "slot": "2"
                },
                {
                  "label": "brandTypeNeed",
                  "type": "t_bool",
                  "offset": 4,
                  "slot": "2"
                },
                {
                  "label": "yearNeed",
                  "type": "t_bool",
                  "offset": 5,
                  "slot": "2"
                },
                {
                  "label": "checkMark",
                  "type": "t_bool",
                  "offset": 6,
                  "slot": "2"
                }
              ],
              "numberOfBytes": "96"
            },
            "t_struct(House)2797_storage": {
              "label": "struct HouseBusiness.House",
              "members": [
                {
                  "label": "tokenId",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "0"
                },
                {
                  "label": "tokenName",
                  "type": "t_string_storage",
                  "offset": 0,
                  "slot": "1"
                },
                {
                  "label": "tokenURI",
                  "type": "t_string_storage",
                  "offset": 0,
                  "slot": "2"
                },
                {
                  "label": "tokenType",
                  "type": "t_string_storage",
                  "offset": 0,
                  "slot": "3"
                },
                {
                  "label": "currentOwner",
                  "type": "t_address",
                  "offset": 0,
                  "slot": "4"
                },
                {
                  "label": "previousOwner",
                  "type": "t_address",
                  "offset": 0,
                  "slot": "5"
                },
                {
                  "label": "buyer",
                  "type": "t_address",
                  "offset": 0,
                  "slot": "6"
                },
                {
                  "label": "price",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "7"
                },
                {
                  "label": "numberOfTransfers",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "8"
                },
                {
                  "label": "nftPayable",
                  "type": "t_bool",
                  "offset": 0,
                  "slot": "9"
                },
                {
                  "label": "staked",
                  "type": "t_bool",
                  "offset": 1,
                  "slot": "9"
                },
                {
                  "label": "soldstatus",
                  "type": "t_bool",
                  "offset": 2,
                  "slot": "9"
                }
              ],
              "numberOfBytes": "320"
            },
            "t_struct(StakedNft)2814_storage": {
              "label": "struct HouseBusiness.StakedNft",
              "members": [
                {
                  "label": "owner",
                  "type": "t_address",
                  "offset": 0,
                  "slot": "0"
                },
                {
                  "label": "tokenId",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "1"
                },
                {
                  "label": "startedDate",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "2"
                },
                {
                  "label": "endDate",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "3"
                },
                {
                  "label": "claimDate",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "4"
                },
                {
                  "label": "stakingType",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "5"
                },
                {
                  "label": "perSecRewards",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "6"
                },
                {
                  "label": "stakingStatus",
                  "type": "t_bool",
                  "offset": 0,
                  "slot": "7"
                }
              ],
              "numberOfBytes": "256"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            }
          },
          "layoutVersion": "1.1",
          "flat": true
        }
      },
      "IMainCleanContract": {
        "src": "contracts\\interfaces\\IContract.sol:6",
        "inherit": [],
        "libraries": [],
        "methods": [
          "allCleanContracts(uint256)",
          "transferContractOwnership(uint256,address,address)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      }
    },
    {
      "IERC20": {
        "src": "@openzeppelin\\contracts\\token\\ERC20\\IERC20.sol:9",
        "inherit": [],
        "libraries": [],
        "methods": [
          "totalSupply()",
          "balanceOf(address)",
          "transfer(address,uint256)",
          "allowance(address,address)",
          "approve(address,uint256)",
          "transferFrom(address,address,uint256)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "ERC721": {
        "src": "@openzeppelin\\contracts\\token\\ERC721\\ERC721.sol:19",
        "version": {
          "withMetadata": "311027b738fb50ea92c84baf68eacb931adf05de03da13635a661dc9c5b03f73",
          "withoutMetadata": "9ec7f439077c3b762bc3aa6a17c55aba7a78d240190c9c7814df896455a0f780",
          "linkedWithoutMetadata": "9ec7f439077c3b762bc3aa6a17c55aba7a78d240190c9c7814df896455a0f780"
        },
        "inherit": [
          "IERC721Metadata",
          "IERC721",
          "ERC165",
          "IERC165",
          "Context"
        ],
        "libraries": [
          "Address",
          "Strings"
        ],
        "methods": [
          "(string,string)",
          "supportsInterface(bytes4)",
          "balanceOf(address)",
          "ownerOf(uint256)",
          "name()",
          "symbol()",
          "tokenURI(uint256)",
          "approve(address,uint256)",
          "getApproved(uint256)",
          "setApprovalForAll(address,bool)",
          "isApprovedForAll(address,address)",
          "transferFrom(address,address,uint256)",
          "safeTransferFrom(address,address,uint256)",
          "safeTransferFrom(address,address,uint256,bytes)"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "ERC721",
            "src": "@openzeppelin\\contracts\\token\\ERC721\\ERC721.sol:44"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "_name",
              "offset": 0,
              "slot": "0",
              "type": "t_string_storage",
              "contract": "ERC721",
              "src": "@openzeppelin\\contracts\\token\\ERC721\\ERC721.sol:24"
            },
            {
              "label": "_symbol",
              "offset": 0,
              "slot": "1",
              "type": "t_string_storage",
              "contract": "ERC721",
              "src": "@openzeppelin\\contracts\\token\\ERC721\\ERC721.sol:27"
            },
            {
              "label": "_owners",
              "offset": 0,
              "slot": "2",
              "type": "t_mapping(t_uint256,t_address)",
              "contract": "ERC721",
              "src": "@openzeppelin\\contracts\\token\\ERC721\\ERC721.sol:30"
            },
            {
              "label": "_balances",
              "offset": 0,
              "slot": "3",
              "type": "t_mapping(t_address,t_uint256)",
              "contract": "ERC721",
              "src": "@openzeppelin\\contracts\\token\\ERC721\\ERC721.sol:33"
            },
            {
              "label": "_tokenApprovals",
              "offset": 0,
              "slot": "4",
              "type": "t_mapping(t_uint256,t_address)",
              "contract": "ERC721",
              "src": "@openzeppelin\\contracts\\token\\ERC721\\ERC721.sol:36"
            },
            {
              "label": "_operatorApprovals",
              "offset": 0,
              "slot": "5",
              "type": "t_mapping(t_address,t_mapping(t_address,t_bool))",
              "contract": "ERC721",
              "src": "@openzeppelin\\contracts\\token\\ERC721\\ERC721.sol:39"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            },
            "t_bool": {
              "label": "bool",
              "numberOfBytes": "1"
            },
            "t_mapping(t_address,t_bool)": {
              "label": "mapping(address => bool)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_mapping(t_address,t_bool))": {
              "label": "mapping(address => mapping(address => bool))",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_uint256)": {
              "label": "mapping(address => uint256)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_uint256,t_address)": {
              "label": "mapping(uint256 => address)",
              "numberOfBytes": "32"
            },
            "t_string_storage": {
              "label": "string",
              "numberOfBytes": "32"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            }
          },
          "layoutVersion": "1.1",
          "flat": true
        }
      },
      "IERC721": {
        "src": "@openzeppelin\\contracts\\token\\ERC721\\IERC721.sol:11",
        "inherit": [
          "IERC165"
        ],
        "libraries": [],
        "methods": [
          "balanceOf(address)",
          "ownerOf(uint256)",
          "safeTransferFrom(address,address,uint256,bytes)",
          "safeTransferFrom(address,address,uint256)",
          "transferFrom(address,address,uint256)",
          "approve(address,uint256)",
          "setApprovalForAll(address,bool)",
          "getApproved(uint256)",
          "isApprovedForAll(address,address)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "IERC721Receiver": {
        "src": "@openzeppelin\\contracts\\token\\ERC721\\IERC721Receiver.sol:11",
        "inherit": [],
        "libraries": [],
        "methods": [
          "onERC721Received(address,address,uint256,bytes)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "ERC721URIStorage": {
        "src": "@openzeppelin\\contracts\\token\\ERC721\\extensions\\ERC721URIStorage.sol:11",
        "inherit": [
          "ERC721",
          "IERC721Metadata",
          "IERC721",
          "ERC165",
          "IERC165",
          "Context"
        ],
        "libraries": [
          "Strings"
        ],
        "methods": [
          "tokenURI(uint256)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [
            {
              "label": "_name",
              "offset": 0,
              "slot": "0",
              "type": "t_string_storage",
              "contract": "ERC721",
              "src": "@openzeppelin\\contracts\\token\\ERC721\\ERC721.sol:24"
            },
            {
              "label": "_symbol",
              "offset": 0,
              "slot": "1",
              "type": "t_string_storage",
              "contract": "ERC721",
              "src": "@openzeppelin\\contracts\\token\\ERC721\\ERC721.sol:27"
            },
            {
              "label": "_owners",
              "offset": 0,
              "slot": "2",
              "type": "t_mapping(t_uint256,t_address)",
              "contract": "ERC721",
              "src": "@openzeppelin\\contracts\\token\\ERC721\\ERC721.sol:30"
            },
            {
              "label": "_balances",
              "offset": 0,
              "slot": "3",
              "type": "t_mapping(t_address,t_uint256)",
              "contract": "ERC721",
              "src": "@openzeppelin\\contracts\\token\\ERC721\\ERC721.sol:33"
            },
            {
              "label": "_tokenApprovals",
              "offset": 0,
              "slot": "4",
              "type": "t_mapping(t_uint256,t_address)",
              "contract": "ERC721",
              "src": "@openzeppelin\\contracts\\token\\ERC721\\ERC721.sol:36"
            },
            {
              "label": "_operatorApprovals",
              "offset": 0,
              "slot": "5",
              "type": "t_mapping(t_address,t_mapping(t_address,t_bool))",
              "contract": "ERC721",
              "src": "@openzeppelin\\contracts\\token\\ERC721\\ERC721.sol:39"
            },
            {
              "label": "_tokenURIs",
              "offset": 0,
              "slot": "6",
              "type": "t_mapping(t_uint256,t_string_storage)",
              "contract": "ERC721URIStorage",
              "src": "@openzeppelin\\contracts\\token\\ERC721\\extensions\\ERC721URIStorage.sol:15"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            },
            "t_bool": {
              "label": "bool",
              "numberOfBytes": "1"
            },
            "t_mapping(t_address,t_bool)": {
              "label": "mapping(address => bool)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_mapping(t_address,t_bool))": {
              "label": "mapping(address => mapping(address => bool))",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_uint256)": {
              "label": "mapping(address => uint256)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_uint256,t_address)": {
              "label": "mapping(uint256 => address)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_uint256,t_string_storage)": {
              "label": "mapping(uint256 => string)",
              "numberOfBytes": "32"
            },
            "t_string_storage": {
              "label": "string",
              "numberOfBytes": "32"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            }
          },
          "layoutVersion": "1.1",
          "flat": true
        }
      },
      "IERC721Metadata": {
        "src": "@openzeppelin\\contracts\\token\\ERC721\\extensions\\IERC721Metadata.sol:12",
        "inherit": [
          "IERC721",
          "IERC165"
        ],
        "libraries": [],
        "methods": [
          "name()",
          "symbol()",
          "tokenURI(uint256)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "Address": {
        "src": "@openzeppelin\\contracts\\utils\\Address.sol:9",
        "version": {
          "withMetadata": "a0500f265408d7c0dbf75da3f9e44a5c2ee85e18bb1b58fe491ffcfa4ea7fd9b",
          "withoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db",
          "linkedWithoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db"
        },
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [
          {
            "kind": "delegatecall",
            "src": "@openzeppelin\\contracts\\utils\\Address.sol:185"
          }
        ],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "Context": {
        "src": "@openzeppelin\\contracts\\utils\\Context.sol:16",
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "Strings": {
        "src": "@openzeppelin\\contracts\\utils\\Strings.sol:11",
        "version": {
          "withMetadata": "c385b5200dd723f945d28b88358d79ca1b5c0f71c28cbbab9acf6d6f3fd15593",
          "withoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db",
          "linkedWithoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db"
        },
        "inherit": [],
        "libraries": [
          "Math"
        ],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "ERC165": {
        "src": "@openzeppelin\\contracts\\utils\\introspection\\ERC165.sol:22",
        "inherit": [
          "IERC165"
        ],
        "libraries": [],
        "methods": [
          "supportsInterface(bytes4)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "IERC165": {
        "src": "@openzeppelin\\contracts\\utils\\introspection\\IERC165.sol:15",
        "inherit": [],
        "libraries": [],
        "methods": [
          "supportsInterface(bytes4)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "Math": {
        "src": "@openzeppelin\\contracts\\utils\\math\\Math.sol:9",
        "version": {
          "withMetadata": "fcaf39e5e702f2902d6ef00c1def75c9800e8d2a0a78a87cf542096cafc7a4b0",
          "withoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db",
          "linkedWithoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db"
        },
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "HouseBusiness": {
        "src": "contracts\\HouseBusiness.sol:11",
        "version": {
          "withMetadata": "498ead9849336a2252f786ac0a2bde13067acfc6a368be36df5cabd95f2ff007",
          "withoutMetadata": "48c5ccc3eb0e1570067fc33067e380faf302cfb0a987dc0ba21725f04bb843ce",
          "linkedWithoutMetadata": "48c5ccc3eb0e1570067fc33067e380faf302cfb0a987dc0ba21725f04bb843ce"
        },
        "inherit": [
          "ERC721URIStorage",
          "ERC721",
          "IERC721Metadata",
          "IERC721",
          "ERC165",
          "IERC165",
          "Context"
        ],
        "libraries": [],
        "methods": [
          "(address)",
          "setMinMaxHousePrice(uint256,uint256)",
          "setConfigToken(address)",
          "isMember()",
          "addMember(address)",
          "removeMember(address)",
          "tokenURI(uint256)",
          "setCContractAddress(address)",
          "setPayable(uint256,address,bool)",
          "mintHouse(string,string,string,string,uint256)",
          "addAllowList(uint256,address)",
          "removeAllowList(uint256,address)",
          "checkAllowedList(uint256,address)",
          "addHistory(uint256,uint256,uint256,string,string,string,string,string,uint256)",
          "getHistory(uint256)",
          "editHistory(uint256,uint256,string,string,string,string,string,uint256)",
          "getHistoryType()",
          "addOrEditHType(uint256,string,bool,bool,bool,bool,bool,bool,bool)",
          "removeHistoryType(uint256)",
          "getMinMaxNFT()",
          "getTokenOwner(uint256)",
          "buyHouseNft(uint256)",
          "sendToken(address,uint256)",
          "changeTokenPrice(uint256,uint256)",
          "getAllHouses()",
          "getAllPayableHouses()",
          "getAllMyHouses()",
          "withdrawToken(uint256)",
          "withdrawETH(uint256)",
          "calcDiv(uint256,uint256)",
          "setAPYConfig(uint256,uint256)",
          "getAllAPYTypes()",
          "stake(uint256,uint256)",
          "unstake(uint256)",
          "stakingFinished(uint256)",
          "totalRewards(address)",
          "claimRewards(address)",
          "getAllMyStakedNFTs()",
          "getTotalInfo()",
          "getAllAPYs()",
          "getPenalty()",
          "setPenalty(uint256)",
          "getRoyalty()",
          "setRoyalty(uint256)"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "HouseBusiness",
            "src": "contracts\\HouseBusiness.sol:106"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "_name",
              "offset": 0,
              "slot": "0",
              "type": "t_string_storage",
              "contract": "ERC721",
              "src": "@openzeppelin\\contracts\\token\\ERC721\\ERC721.sol:24"
            },
            {
              "label": "_symbol",
              "offset": 0,
              "slot": "1",
              "type": "t_string_storage",
              "contract": "ERC721",
              "src": "@openzeppelin\\contracts\\token\\ERC721\\ERC721.sol:27"
            },
            {
              "label": "_owners",
              "offset": 0,
              "slot": "2",
              "type": "t_mapping(t_uint256,t_address)",
              "contract": "ERC721",
              "src": "@openzeppelin\\contracts\\token\\ERC721\\ERC721.sol:30"
            },
            {
              "label": "_balances",
              "offset": 0,
              "slot": "3",
              "type": "t_mapping(t_address,t_uint256)",
              "contract": "ERC721",
              "src": "@openzeppelin\\contracts\\token\\ERC721\\ERC721.sol:33"
            },
            {
              "label": "_tokenApprovals",
              "offset": 0,
              "slot": "4",
              "type": "t_mapping(t_uint256,t_address)",
              "contract": "ERC721",
              "src": "@openzeppelin\\contracts\\token\\ERC721\\ERC721.sol:36"
            },
            {
              "label": "_operatorApprovals",
              "offset": 0,
              "slot": "5",
              "type": "t_mapping(t_address,t_mapping(t_address,t_bool))",
              "contract": "ERC721",
              "src": "@openzeppelin\\contracts\\token\\ERC721\\ERC721.sol:39"
            },
            {
              "label": "_tokenURIs",
              "offset": 0,
              "slot": "6",
              "type": "t_mapping(t_uint256,t_string_storage)",
              "contract": "ERC721URIStorage",
              "src": "@openzeppelin\\contracts\\token\\ERC721\\extensions\\ERC721URIStorage.sol:15"
            },
            {
              "label": "collectionName",
              "offset": 0,
              "slot": "7",
              "type": "t_string_storage",
              "contract": "HouseBusiness",
              "src": "contracts\\HouseBusiness.sol:13"
            },
            {
              "label": "collectionNameSymbol",
              "offset": 0,
              "slot": "8",
              "type": "t_string_storage",
              "contract": "HouseBusiness",
              "src": "contracts\\HouseBusiness.sol:15"
            },
            {
              "label": "houseCounter",
              "offset": 0,
              "slot": "9",
              "type": "t_uint256",
              "contract": "HouseBusiness",
              "src": "contracts\\HouseBusiness.sol:17"
            },
            {
              "label": "stakedCounter",
              "offset": 0,
              "slot": "10",
              "type": "t_uint256",
              "contract": "HouseBusiness",
              "src": "contracts\\HouseBusiness.sol:19"
            },
            {
              "label": "soldedCounter",
              "offset": 0,
              "slot": "11",
              "type": "t_uint256",
              "contract": "HouseBusiness",
              "src": "contracts\\HouseBusiness.sol:21"
            },
            {
              "label": "hTypeCounter",
              "offset": 0,
              "slot": "12",
              "type": "t_uint256",
              "contract": "HouseBusiness",
              "src": "contracts\\HouseBusiness.sol:23"
            },
            {
              "label": "_token",
              "offset": 0,
              "slot": "13",
              "type": "t_contract(IERC20)77",
              "contract": "HouseBusiness",
              "src": "contracts\\HouseBusiness.sol:25"
            },
            {
              "label": "minPrice",
              "offset": 0,
              "slot": "14",
              "type": "t_uint256",
              "contract": "HouseBusiness",
              "src": "contracts\\HouseBusiness.sol:27"
            },
            {
              "label": "maxPrice",
              "offset": 0,
              "slot": "15",
              "type": "t_uint256",
              "contract": "HouseBusiness",
              "src": "contracts\\HouseBusiness.sol:29"
            },
            {
              "label": "penalty",
              "offset": 0,
              "slot": "16",
              "type": "t_uint256",
              "contract": "HouseBusiness",
              "src": "contracts\\HouseBusiness.sol:31"
            },
            {
              "label": "royalty",
              "offset": 0,
              "slot": "17",
              "type": "t_uint256",
              "contract": "HouseBusiness",
              "src": "contracts\\HouseBusiness.sol:33"
            },
            {
              "label": "cContractAddress",
              "offset": 0,
              "slot": "18",
              "type": "t_address",
              "contract": "HouseBusiness",
              "src": "contracts\\HouseBusiness.sol:35"
            },
            {
              "label": "historyTypes",
              "offset": 0,
              "slot": "19",
              "type": "t_array(t_struct(HistoryType)2850_storage)dyn_storage",
              "contract": "HouseBusiness",
              "src": "contracts\\HouseBusiness.sol:86"
            },
            {
              "label": "houseHistories",
              "offset": 0,
              "slot": "20",
              "type": "t_mapping(t_uint256,t_array(t_struct(History)2831_storage)dyn_storage)",
              "contract": "HouseBusiness",
              "src": "contracts\\HouseBusiness.sol:88"
            },
            {
              "label": "APYtypes",
              "offset": 0,
              "slot": "21",
              "type": "t_array(t_uint256)dyn_storage",
              "contract": "HouseBusiness",
              "src": "contracts\\HouseBusiness.sol:90"
            },
            {
              "label": "APYConfig",
              "offset": 0,
              "slot": "22",
              "type": "t_mapping(t_uint256,t_uint256)",
              "contract": "HouseBusiness",
              "src": "contracts\\HouseBusiness.sol:92"
            },
            {
              "label": "allMembers",
              "offset": 0,
              "slot": "23",
              "type": "t_mapping(t_address,t_bool)",
              "contract": "HouseBusiness",
              "src": "contracts\\HouseBusiness.sol:94"
            },
            {
              "label": "allHouses",
              "offset": 0,
              "slot": "24",
              "type": "t_mapping(t_uint256,t_struct(House)2797_storage)",
              "contract": "HouseBusiness",
              "src": "contracts\\HouseBusiness.sol:96"
            },
            {
              "label": "allowedList",
              "offset": 0,
              "slot": "25",
              "type": "t_mapping(t_uint256,t_mapping(t_address,t_bool))",
              "contract": "HouseBusiness",
              "src": "contracts\\HouseBusiness.sol:98"
            },
            {
              "label": "stakedNfts",
              "offset": 0,
              "slot": "26",
              "type": "t_mapping(t_address,t_array(t_struct(StakedNft)2814_storage)dyn_storage)",
              "contract": "HouseBusiness",
              "src": "contracts\\HouseBusiness.sol:104"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            },
            "t_array(t_struct(History)2831_storage)dyn_storage": {
              "label": "struct HouseBusiness.History[]",
              "numberOfBytes": "32"
            },
            "t_array(t_struct(HistoryType)2850_storage)dyn_storage": {
              "label": "struct HouseBusiness.HistoryType[]",
              "numberOfBytes": "32"
            },
            "t_array(t_struct(StakedNft)2814_storage)dyn_storage": {
              "label": "struct HouseBusiness.StakedNft[]",
              "numberOfBytes": "32"
            },
            "t_array(t_uint256)dyn_storage": {
              "label": "uint256[]",
              "numberOfBytes": "32"
            },
            "t_bool": {
              "label": "bool",
              "numberOfBytes": "1"
            },
            "t_contract(IERC20)77": {
              "label": "contract IERC20",
              "numberOfBytes": "20"
            },
            "t_mapping(t_address,t_array(t_struct(StakedNft)2814_storage)dyn_storage)": {
              "label": "mapping(address => struct HouseBusiness.StakedNft[])",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_bool)": {
              "label": "mapping(address => bool)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_mapping(t_address,t_bool))": {
              "label": "mapping(address => mapping(address => bool))",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_uint256)": {
              "label": "mapping(address => uint256)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_uint256,t_address)": {
              "label": "mapping(uint256 => address)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_uint256,t_array(t_struct(History)2831_storage)dyn_storage)": {
              "label": "mapping(uint256 => struct HouseBusiness.History[])",
              "numberOfBytes": "32"
            },
            "t_mapping(t_uint256,t_mapping(t_address,t_bool))": {
              "label": "mapping(uint256 => mapping(address => bool))",
              "numberOfBytes": "32"
            },
            "t_mapping(t_uint256,t_string_storage)": {
              "label": "mapping(uint256 => string)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_uint256,t_struct(House)2797_storage)": {
              "label": "mapping(uint256 => struct HouseBusiness.House)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_uint256,t_uint256)": {
              "label": "mapping(uint256 => uint256)",
              "numberOfBytes": "32"
            },
            "t_string_storage": {
              "label": "string",
              "numberOfBytes": "32"
            },
            "t_struct(History)2831_storage": {
              "label": "struct HouseBusiness.History",
              "members": [
                {
                  "label": "hID",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "0"
                },
                {
                  "label": "contractId",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "1"
                },
                {
                  "label": "houseImg",
                  "type": "t_string_storage",
                  "offset": 0,
                  "slot": "2"
                },
                {
                  "label": "houseBrand",
                  "type": "t_string_storage",
                  "offset": 0,
                  "slot": "3"
                },
                {
                  "label": "desc",
                  "type": "t_string_storage",
                  "offset": 0,
                  "slot": "4"
                },
                {
                  "label": "history",
                  "type": "t_string_storage",
                  "offset": 0,
                  "slot": "5"
                },
                {
                  "label": "brandType",
                  "type": "t_string_storage",
                  "offset": 0,
                  "slot": "6"
                },
                {
                  "label": "yearField",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "7"
                }
              ],
              "numberOfBytes": "256"
            },
            "t_struct(HistoryType)2850_storage": {
              "label": "struct HouseBusiness.HistoryType",
              "members": [
                {
                  "label": "hID",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "0"
                },
                {
                  "label": "hLabel",
                  "type": "t_string_storage",
                  "offset": 0,
                  "slot": "1"
                },
                {
                  "label": "connectContract",
                  "type": "t_bool",
                  "offset": 0,
                  "slot": "2"
                },
                {
                  "label": "imgNeed",
                  "type": "t_bool",
                  "offset": 1,
                  "slot": "2"
                },
                {
                  "label": "brandNeed",
                  "type": "t_bool",
                  "offset": 2,
                  "slot": "2"
                },
                {
                  "label": "descNeed",
                  "type": "t_bool",
                  "offset": 3,
                  "slot": "2"
                },
                {
                  "label": "brandTypeNeed",
                  "type": "t_bool",
                  "offset": 4,
                  "slot": "2"
                },
                {
                  "label": "yearNeed",
                  "type": "t_bool",
                  "offset": 5,
                  "slot": "2"
                },
                {
                  "label": "checkMark",
                  "type": "t_bool",
                  "offset": 6,
                  "slot": "2"
                }
              ],
              "numberOfBytes": "96"
            },
            "t_struct(House)2797_storage": {
              "label": "struct HouseBusiness.House",
              "members": [
                {
                  "label": "tokenId",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "0"
                },
                {
                  "label": "tokenName",
                  "type": "t_string_storage",
                  "offset": 0,
                  "slot": "1"
                },
                {
                  "label": "tokenURI",
                  "type": "t_string_storage",
                  "offset": 0,
                  "slot": "2"
                },
                {
                  "label": "tokenType",
                  "type": "t_string_storage",
                  "offset": 0,
                  "slot": "3"
                },
                {
                  "label": "currentOwner",
                  "type": "t_address",
                  "offset": 0,
                  "slot": "4"
                },
                {
                  "label": "previousOwner",
                  "type": "t_address",
                  "offset": 0,
                  "slot": "5"
                },
                {
                  "label": "buyer",
                  "type": "t_address",
                  "offset": 0,
                  "slot": "6"
                },
                {
                  "label": "price",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "7"
                },
                {
                  "label": "numberOfTransfers",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "8"
                },
                {
                  "label": "nftPayable",
                  "type": "t_bool",
                  "offset": 0,
                  "slot": "9"
                },
                {
                  "label": "staked",
                  "type": "t_bool",
                  "offset": 1,
                  "slot": "9"
                },
                {
                  "label": "soldstatus",
                  "type": "t_bool",
                  "offset": 2,
                  "slot": "9"
                }
              ],
              "numberOfBytes": "320"
            },
            "t_struct(StakedNft)2814_storage": {
              "label": "struct HouseBusiness.StakedNft",
              "members": [
                {
                  "label": "owner",
                  "type": "t_address",
                  "offset": 0,
                  "slot": "0"
                },
                {
                  "label": "tokenId",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "1"
                },
                {
                  "label": "startedDate",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "2"
                },
                {
                  "label": "endDate",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "3"
                },
                {
                  "label": "claimDate",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "4"
                },
                {
                  "label": "stakingType",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "5"
                },
                {
                  "label": "perSecRewards",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "6"
                },
                {
                  "label": "stakingStatus",
                  "type": "t_bool",
                  "offset": 0,
                  "slot": "7"
                }
              ],
              "numberOfBytes": "256"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            }
          },
          "layoutVersion": "1.1",
          "flat": true
        }
      },
      "IMainCleanContract": {
        "src": "contracts\\interfaces\\IContract.sol:6",
        "inherit": [],
        "libraries": [],
        "methods": [
          "allCleanContracts(uint256)",
          "transferContractOwnership(uint256,address,address)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      }
    },
    {
      "IERC20": {
        "src": "@openzeppelin\\contracts\\token\\ERC20\\IERC20.sol:9",
        "inherit": [],
        "libraries": [],
        "methods": [
          "totalSupply()",
          "balanceOf(address)",
          "transfer(address,uint256)",
          "allowance(address,address)",
          "approve(address,uint256)",
          "transferFrom(address,address,uint256)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "ERC721": {
        "src": "@openzeppelin\\contracts\\token\\ERC721\\ERC721.sol:19",
        "version": {
          "withMetadata": "311027b738fb50ea92c84baf68eacb931adf05de03da13635a661dc9c5b03f73",
          "withoutMetadata": "9ec7f439077c3b762bc3aa6a17c55aba7a78d240190c9c7814df896455a0f780",
          "linkedWithoutMetadata": "9ec7f439077c3b762bc3aa6a17c55aba7a78d240190c9c7814df896455a0f780"
        },
        "inherit": [
          "IERC721Metadata",
          "IERC721",
          "ERC165",
          "IERC165",
          "Context"
        ],
        "libraries": [
          "Address",
          "Strings"
        ],
        "methods": [
          "(string,string)",
          "supportsInterface(bytes4)",
          "balanceOf(address)",
          "ownerOf(uint256)",
          "name()",
          "symbol()",
          "tokenURI(uint256)",
          "approve(address,uint256)",
          "getApproved(uint256)",
          "setApprovalForAll(address,bool)",
          "isApprovedForAll(address,address)",
          "transferFrom(address,address,uint256)",
          "safeTransferFrom(address,address,uint256)",
          "safeTransferFrom(address,address,uint256,bytes)"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "ERC721",
            "src": "@openzeppelin\\contracts\\token\\ERC721\\ERC721.sol:44"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "_name",
              "offset": 0,
              "slot": "0",
              "type": "t_string_storage",
              "contract": "ERC721",
              "src": "@openzeppelin\\contracts\\token\\ERC721\\ERC721.sol:24"
            },
            {
              "label": "_symbol",
              "offset": 0,
              "slot": "1",
              "type": "t_string_storage",
              "contract": "ERC721",
              "src": "@openzeppelin\\contracts\\token\\ERC721\\ERC721.sol:27"
            },
            {
              "label": "_owners",
              "offset": 0,
              "slot": "2",
              "type": "t_mapping(t_uint256,t_address)",
              "contract": "ERC721",
              "src": "@openzeppelin\\contracts\\token\\ERC721\\ERC721.sol:30"
            },
            {
              "label": "_balances",
              "offset": 0,
              "slot": "3",
              "type": "t_mapping(t_address,t_uint256)",
              "contract": "ERC721",
              "src": "@openzeppelin\\contracts\\token\\ERC721\\ERC721.sol:33"
            },
            {
              "label": "_tokenApprovals",
              "offset": 0,
              "slot": "4",
              "type": "t_mapping(t_uint256,t_address)",
              "contract": "ERC721",
              "src": "@openzeppelin\\contracts\\token\\ERC721\\ERC721.sol:36"
            },
            {
              "label": "_operatorApprovals",
              "offset": 0,
              "slot": "5",
              "type": "t_mapping(t_address,t_mapping(t_address,t_bool))",
              "contract": "ERC721",
              "src": "@openzeppelin\\contracts\\token\\ERC721\\ERC721.sol:39"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            },
            "t_bool": {
              "label": "bool",
              "numberOfBytes": "1"
            },
            "t_mapping(t_address,t_bool)": {
              "label": "mapping(address => bool)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_mapping(t_address,t_bool))": {
              "label": "mapping(address => mapping(address => bool))",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_uint256)": {
              "label": "mapping(address => uint256)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_uint256,t_address)": {
              "label": "mapping(uint256 => address)",
              "numberOfBytes": "32"
            },
            "t_string_storage": {
              "label": "string",
              "numberOfBytes": "32"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            }
          },
          "layoutVersion": "1.1",
          "flat": true
        }
      },
      "IERC721": {
        "src": "@openzeppelin\\contracts\\token\\ERC721\\IERC721.sol:11",
        "inherit": [
          "IERC165"
        ],
        "libraries": [],
        "methods": [
          "balanceOf(address)",
          "ownerOf(uint256)",
          "safeTransferFrom(address,address,uint256,bytes)",
          "safeTransferFrom(address,address,uint256)",
          "transferFrom(address,address,uint256)",
          "approve(address,uint256)",
          "setApprovalForAll(address,bool)",
          "getApproved(uint256)",
          "isApprovedForAll(address,address)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "IERC721Receiver": {
        "src": "@openzeppelin\\contracts\\token\\ERC721\\IERC721Receiver.sol:11",
        "inherit": [],
        "libraries": [],
        "methods": [
          "onERC721Received(address,address,uint256,bytes)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "ERC721URIStorage": {
        "src": "@openzeppelin\\contracts\\token\\ERC721\\extensions\\ERC721URIStorage.sol:11",
        "inherit": [
          "ERC721",
          "IERC721Metadata",
          "IERC721",
          "ERC165",
          "IERC165",
          "Context"
        ],
        "libraries": [
          "Strings"
        ],
        "methods": [
          "tokenURI(uint256)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [
            {
              "label": "_name",
              "offset": 0,
              "slot": "0",
              "type": "t_string_storage",
              "contract": "ERC721",
              "src": "@openzeppelin\\contracts\\token\\ERC721\\ERC721.sol:24"
            },
            {
              "label": "_symbol",
              "offset": 0,
              "slot": "1",
              "type": "t_string_storage",
              "contract": "ERC721",
              "src": "@openzeppelin\\contracts\\token\\ERC721\\ERC721.sol:27"
            },
            {
              "label": "_owners",
              "offset": 0,
              "slot": "2",
              "type": "t_mapping(t_uint256,t_address)",
              "contract": "ERC721",
              "src": "@openzeppelin\\contracts\\token\\ERC721\\ERC721.sol:30"
            },
            {
              "label": "_balances",
              "offset": 0,
              "slot": "3",
              "type": "t_mapping(t_address,t_uint256)",
              "contract": "ERC721",
              "src": "@openzeppelin\\contracts\\token\\ERC721\\ERC721.sol:33"
            },
            {
              "label": "_tokenApprovals",
              "offset": 0,
              "slot": "4",
              "type": "t_mapping(t_uint256,t_address)",
              "contract": "ERC721",
              "src": "@openzeppelin\\contracts\\token\\ERC721\\ERC721.sol:36"
            },
            {
              "label": "_operatorApprovals",
              "offset": 0,
              "slot": "5",
              "type": "t_mapping(t_address,t_mapping(t_address,t_bool))",
              "contract": "ERC721",
              "src": "@openzeppelin\\contracts\\token\\ERC721\\ERC721.sol:39"
            },
            {
              "label": "_tokenURIs",
              "offset": 0,
              "slot": "6",
              "type": "t_mapping(t_uint256,t_string_storage)",
              "contract": "ERC721URIStorage",
              "src": "@openzeppelin\\contracts\\token\\ERC721\\extensions\\ERC721URIStorage.sol:15"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            },
            "t_bool": {
              "label": "bool",
              "numberOfBytes": "1"
            },
            "t_mapping(t_address,t_bool)": {
              "label": "mapping(address => bool)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_mapping(t_address,t_bool))": {
              "label": "mapping(address => mapping(address => bool))",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_uint256)": {
              "label": "mapping(address => uint256)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_uint256,t_address)": {
              "label": "mapping(uint256 => address)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_uint256,t_string_storage)": {
              "label": "mapping(uint256 => string)",
              "numberOfBytes": "32"
            },
            "t_string_storage": {
              "label": "string",
              "numberOfBytes": "32"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            }
          },
          "layoutVersion": "1.1",
          "flat": true
        }
      },
      "IERC721Metadata": {
        "src": "@openzeppelin\\contracts\\token\\ERC721\\extensions\\IERC721Metadata.sol:12",
        "inherit": [
          "IERC721",
          "IERC165"
        ],
        "libraries": [],
        "methods": [
          "name()",
          "symbol()",
          "tokenURI(uint256)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "Address": {
        "src": "@openzeppelin\\contracts\\utils\\Address.sol:9",
        "version": {
          "withMetadata": "a0500f265408d7c0dbf75da3f9e44a5c2ee85e18bb1b58fe491ffcfa4ea7fd9b",
          "withoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db",
          "linkedWithoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db"
        },
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [
          {
            "kind": "delegatecall",
            "src": "@openzeppelin\\contracts\\utils\\Address.sol:185"
          }
        ],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "Context": {
        "src": "@openzeppelin\\contracts\\utils\\Context.sol:16",
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "Strings": {
        "src": "@openzeppelin\\contracts\\utils\\Strings.sol:11",
        "version": {
          "withMetadata": "c385b5200dd723f945d28b88358d79ca1b5c0f71c28cbbab9acf6d6f3fd15593",
          "withoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db",
          "linkedWithoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db"
        },
        "inherit": [],
        "libraries": [
          "Math"
        ],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "ERC165": {
        "src": "@openzeppelin\\contracts\\utils\\introspection\\ERC165.sol:22",
        "inherit": [
          "IERC165"
        ],
        "libraries": [],
        "methods": [
          "supportsInterface(bytes4)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "IERC165": {
        "src": "@openzeppelin\\contracts\\utils\\introspection\\IERC165.sol:15",
        "inherit": [],
        "libraries": [],
        "methods": [
          "supportsInterface(bytes4)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "Math": {
        "src": "@openzeppelin\\contracts\\utils\\math\\Math.sol:9",
        "version": {
          "withMetadata": "fcaf39e5e702f2902d6ef00c1def75c9800e8d2a0a78a87cf542096cafc7a4b0",
          "withoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db",
          "linkedWithoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db"
        },
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "HouseBusiness": {
        "src": "contracts\\HouseBusiness.sol:11",
        "version": {
          "withMetadata": "eb9ac4f29f19d60e172a18ace27c6702e9aa76386857d2b8cf69e863e971aef6",
          "withoutMetadata": "461fbe15dff4de5f4d7d8283df0732e25e73ea2a0bee38d5118e6c128cfdea20",
          "linkedWithoutMetadata": "461fbe15dff4de5f4d7d8283df0732e25e73ea2a0bee38d5118e6c128cfdea20"
        },
        "inherit": [
          "ERC721URIStorage",
          "ERC721",
          "IERC721Metadata",
          "IERC721",
          "ERC165",
          "IERC165",
          "Context"
        ],
        "libraries": [],
        "methods": [
          "(address)",
          "setMinMaxHousePrice(uint256,uint256)",
          "setConfigToken(address)",
          "isMember()",
          "addMember(address)",
          "removeMember(address)",
          "tokenURI(uint256)",
          "setCContractAddress(address)",
          "setPayable(uint256,address,bool)",
          "mintHouse(string,string,string,string,uint256)",
          "addAllowList(uint256,address)",
          "removeAllowList(uint256,address)",
          "checkAllowedList(uint256,address)",
          "addHistory(uint256,uint256,uint256,string,string,string,string,string,uint256)",
          "getHistory(uint256)",
          "editHistory(uint256,uint256,string,string,string,string,string,uint256)",
          "getHistoryType()",
          "addOrEditHType(uint256,string,bool,bool,bool,bool,bool,bool,bool)",
          "removeHistoryType(uint256)",
          "getMinMaxNFT()",
          "getTokenOwner(uint256)",
          "buyHouseNft(uint256)",
          "sendToken(address,uint256)",
          "changeTokenPrice(uint256,uint256)",
          "getAllHouses()",
          "getAllPayableHouses()",
          "getAllMyHouses()",
          "withdrawToken(uint256)",
          "withdrawETH(uint256)",
          "calcDiv(uint256,uint256)",
          "setAPYConfig(uint256,uint256)",
          "getAllAPYTypes()",
          "stake(uint256,uint256)",
          "unstake(uint256)",
          "stakingFinished(uint256)",
          "totalRewards(address)",
          "claimRewards(address)",
          "getAllMyStakedNFTs()",
          "getTotalInfo()",
          "getAllAPYs()",
          "getPenalty()",
          "setPenalty(uint256)",
          "getRoyalty()",
          "setRoyalty(uint256)"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "HouseBusiness",
            "src": "contracts\\HouseBusiness.sol:106"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "_name",
              "offset": 0,
              "slot": "0",
              "type": "t_string_storage",
              "contract": "ERC721",
              "src": "@openzeppelin\\contracts\\token\\ERC721\\ERC721.sol:24"
            },
            {
              "label": "_symbol",
              "offset": 0,
              "slot": "1",
              "type": "t_string_storage",
              "contract": "ERC721",
              "src": "@openzeppelin\\contracts\\token\\ERC721\\ERC721.sol:27"
            },
            {
              "label": "_owners",
              "offset": 0,
              "slot": "2",
              "type": "t_mapping(t_uint256,t_address)",
              "contract": "ERC721",
              "src": "@openzeppelin\\contracts\\token\\ERC721\\ERC721.sol:30"
            },
            {
              "label": "_balances",
              "offset": 0,
              "slot": "3",
              "type": "t_mapping(t_address,t_uint256)",
              "contract": "ERC721",
              "src": "@openzeppelin\\contracts\\token\\ERC721\\ERC721.sol:33"
            },
            {
              "label": "_tokenApprovals",
              "offset": 0,
              "slot": "4",
              "type": "t_mapping(t_uint256,t_address)",
              "contract": "ERC721",
              "src": "@openzeppelin\\contracts\\token\\ERC721\\ERC721.sol:36"
            },
            {
              "label": "_operatorApprovals",
              "offset": 0,
              "slot": "5",
              "type": "t_mapping(t_address,t_mapping(t_address,t_bool))",
              "contract": "ERC721",
              "src": "@openzeppelin\\contracts\\token\\ERC721\\ERC721.sol:39"
            },
            {
              "label": "_tokenURIs",
              "offset": 0,
              "slot": "6",
              "type": "t_mapping(t_uint256,t_string_storage)",
              "contract": "ERC721URIStorage",
              "src": "@openzeppelin\\contracts\\token\\ERC721\\extensions\\ERC721URIStorage.sol:15"
            },
            {
              "label": "collectionName",
              "offset": 0,
              "slot": "7",
              "type": "t_string_storage",
              "contract": "HouseBusiness",
              "src": "contracts\\HouseBusiness.sol:13"
            },
            {
              "label": "collectionNameSymbol",
              "offset": 0,
              "slot": "8",
              "type": "t_string_storage",
              "contract": "HouseBusiness",
              "src": "contracts\\HouseBusiness.sol:15"
            },
            {
              "label": "houseCounter",
              "offset": 0,
              "slot": "9",
              "type": "t_uint256",
              "contract": "HouseBusiness",
              "src": "contracts\\HouseBusiness.sol:17"
            },
            {
              "label": "stakedCounter",
              "offset": 0,
              "slot": "10",
              "type": "t_uint256",
              "contract": "HouseBusiness",
              "src": "contracts\\HouseBusiness.sol:19"
            },
            {
              "label": "soldedCounter",
              "offset": 0,
              "slot": "11",
              "type": "t_uint256",
              "contract": "HouseBusiness",
              "src": "contracts\\HouseBusiness.sol:21"
            },
            {
              "label": "hTypeCounter",
              "offset": 0,
              "slot": "12",
              "type": "t_uint256",
              "contract": "HouseBusiness",
              "src": "contracts\\HouseBusiness.sol:23"
            },
            {
              "label": "_token",
              "offset": 0,
              "slot": "13",
              "type": "t_contract(IERC20)77",
              "contract": "HouseBusiness",
              "src": "contracts\\HouseBusiness.sol:25"
            },
            {
              "label": "minPrice",
              "offset": 0,
              "slot": "14",
              "type": "t_uint256",
              "contract": "HouseBusiness",
              "src": "contracts\\HouseBusiness.sol:27"
            },
            {
              "label": "maxPrice",
              "offset": 0,
              "slot": "15",
              "type": "t_uint256",
              "contract": "HouseBusiness",
              "src": "contracts\\HouseBusiness.sol:29"
            },
            {
              "label": "penalty",
              "offset": 0,
              "slot": "16",
              "type": "t_uint256",
              "contract": "HouseBusiness",
              "src": "contracts\\HouseBusiness.sol:31"
            },
            {
              "label": "royalty",
              "offset": 0,
              "slot": "17",
              "type": "t_uint256",
              "contract": "HouseBusiness",
              "src": "contracts\\HouseBusiness.sol:33"
            },
            {
              "label": "cContractAddress",
              "offset": 0,
              "slot": "18",
              "type": "t_address",
              "contract": "HouseBusiness",
              "src": "contracts\\HouseBusiness.sol:35"
            },
            {
              "label": "historyTypes",
              "offset": 0,
              "slot": "19",
              "type": "t_array(t_struct(HistoryType)2850_storage)dyn_storage",
              "contract": "HouseBusiness",
              "src": "contracts\\HouseBusiness.sol:86"
            },
            {
              "label": "houseHistories",
              "offset": 0,
              "slot": "20",
              "type": "t_mapping(t_uint256,t_array(t_struct(History)2831_storage)dyn_storage)",
              "contract": "HouseBusiness",
              "src": "contracts\\HouseBusiness.sol:88"
            },
            {
              "label": "APYtypes",
              "offset": 0,
              "slot": "21",
              "type": "t_array(t_uint256)dyn_storage",
              "contract": "HouseBusiness",
              "src": "contracts\\HouseBusiness.sol:90"
            },
            {
              "label": "APYConfig",
              "offset": 0,
              "slot": "22",
              "type": "t_mapping(t_uint256,t_uint256)",
              "contract": "HouseBusiness",
              "src": "contracts\\HouseBusiness.sol:92"
            },
            {
              "label": "allMembers",
              "offset": 0,
              "slot": "23",
              "type": "t_mapping(t_address,t_bool)",
              "contract": "HouseBusiness",
              "src": "contracts\\HouseBusiness.sol:94"
            },
            {
              "label": "allHouses",
              "offset": 0,
              "slot": "24",
              "type": "t_mapping(t_uint256,t_struct(House)2797_storage)",
              "contract": "HouseBusiness",
              "src": "contracts\\HouseBusiness.sol:96"
            },
            {
              "label": "allowedList",
              "offset": 0,
              "slot": "25",
              "type": "t_mapping(t_uint256,t_mapping(t_address,t_bool))",
              "contract": "HouseBusiness",
              "src": "contracts\\HouseBusiness.sol:98"
            },
            {
              "label": "stakedNfts",
              "offset": 0,
              "slot": "26",
              "type": "t_mapping(t_address,t_array(t_struct(StakedNft)2814_storage)dyn_storage)",
              "contract": "HouseBusiness",
              "src": "contracts\\HouseBusiness.sol:104"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            },
            "t_array(t_struct(History)2831_storage)dyn_storage": {
              "label": "struct HouseBusiness.History[]",
              "numberOfBytes": "32"
            },
            "t_array(t_struct(HistoryType)2850_storage)dyn_storage": {
              "label": "struct HouseBusiness.HistoryType[]",
              "numberOfBytes": "32"
            },
            "t_array(t_struct(StakedNft)2814_storage)dyn_storage": {
              "label": "struct HouseBusiness.StakedNft[]",
              "numberOfBytes": "32"
            },
            "t_array(t_uint256)dyn_storage": {
              "label": "uint256[]",
              "numberOfBytes": "32"
            },
            "t_bool": {
              "label": "bool",
              "numberOfBytes": "1"
            },
            "t_contract(IERC20)77": {
              "label": "contract IERC20",
              "numberOfBytes": "20"
            },
            "t_mapping(t_address,t_array(t_struct(StakedNft)2814_storage)dyn_storage)": {
              "label": "mapping(address => struct HouseBusiness.StakedNft[])",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_bool)": {
              "label": "mapping(address => bool)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_mapping(t_address,t_bool))": {
              "label": "mapping(address => mapping(address => bool))",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_uint256)": {
              "label": "mapping(address => uint256)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_uint256,t_address)": {
              "label": "mapping(uint256 => address)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_uint256,t_array(t_struct(History)2831_storage)dyn_storage)": {
              "label": "mapping(uint256 => struct HouseBusiness.History[])",
              "numberOfBytes": "32"
            },
            "t_mapping(t_uint256,t_mapping(t_address,t_bool))": {
              "label": "mapping(uint256 => mapping(address => bool))",
              "numberOfBytes": "32"
            },
            "t_mapping(t_uint256,t_string_storage)": {
              "label": "mapping(uint256 => string)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_uint256,t_struct(House)2797_storage)": {
              "label": "mapping(uint256 => struct HouseBusiness.House)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_uint256,t_uint256)": {
              "label": "mapping(uint256 => uint256)",
              "numberOfBytes": "32"
            },
            "t_string_storage": {
              "label": "string",
              "numberOfBytes": "32"
            },
            "t_struct(History)2831_storage": {
              "label": "struct HouseBusiness.History",
              "members": [
                {
                  "label": "hID",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "0"
                },
                {
                  "label": "contractId",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "1"
                },
                {
                  "label": "houseImg",
                  "type": "t_string_storage",
                  "offset": 0,
                  "slot": "2"
                },
                {
                  "label": "houseBrand",
                  "type": "t_string_storage",
                  "offset": 0,
                  "slot": "3"
                },
                {
                  "label": "desc",
                  "type": "t_string_storage",
                  "offset": 0,
                  "slot": "4"
                },
                {
                  "label": "history",
                  "type": "t_string_storage",
                  "offset": 0,
                  "slot": "5"
                },
                {
                  "label": "brandType",
                  "type": "t_string_storage",
                  "offset": 0,
                  "slot": "6"
                },
                {
                  "label": "yearField",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "7"
                }
              ],
              "numberOfBytes": "256"
            },
            "t_struct(HistoryType)2850_storage": {
              "label": "struct HouseBusiness.HistoryType",
              "members": [
                {
                  "label": "hID",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "0"
                },
                {
                  "label": "hLabel",
                  "type": "t_string_storage",
                  "offset": 0,
                  "slot": "1"
                },
                {
                  "label": "connectContract",
                  "type": "t_bool",
                  "offset": 0,
                  "slot": "2"
                },
                {
                  "label": "imgNeed",
                  "type": "t_bool",
                  "offset": 1,
                  "slot": "2"
                },
                {
                  "label": "brandNeed",
                  "type": "t_bool",
                  "offset": 2,
                  "slot": "2"
                },
                {
                  "label": "descNeed",
                  "type": "t_bool",
                  "offset": 3,
                  "slot": "2"
                },
                {
                  "label": "brandTypeNeed",
                  "type": "t_bool",
                  "offset": 4,
                  "slot": "2"
                },
                {
                  "label": "yearNeed",
                  "type": "t_bool",
                  "offset": 5,
                  "slot": "2"
                },
                {
                  "label": "checkMark",
                  "type": "t_bool",
                  "offset": 6,
                  "slot": "2"
                }
              ],
              "numberOfBytes": "96"
            },
            "t_struct(House)2797_storage": {
              "label": "struct HouseBusiness.House",
              "members": [
                {
                  "label": "tokenId",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "0"
                },
                {
                  "label": "tokenName",
                  "type": "t_string_storage",
                  "offset": 0,
                  "slot": "1"
                },
                {
                  "label": "tokenURI",
                  "type": "t_string_storage",
                  "offset": 0,
                  "slot": "2"
                },
                {
                  "label": "tokenType",
                  "type": "t_string_storage",
                  "offset": 0,
                  "slot": "3"
                },
                {
                  "label": "currentOwner",
                  "type": "t_address",
                  "offset": 0,
                  "slot": "4"
                },
                {
                  "label": "previousOwner",
                  "type": "t_address",
                  "offset": 0,
                  "slot": "5"
                },
                {
                  "label": "buyer",
                  "type": "t_address",
                  "offset": 0,
                  "slot": "6"
                },
                {
                  "label": "price",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "7"
                },
                {
                  "label": "numberOfTransfers",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "8"
                },
                {
                  "label": "nftPayable",
                  "type": "t_bool",
                  "offset": 0,
                  "slot": "9"
                },
                {
                  "label": "staked",
                  "type": "t_bool",
                  "offset": 1,
                  "slot": "9"
                },
                {
                  "label": "soldstatus",
                  "type": "t_bool",
                  "offset": 2,
                  "slot": "9"
                }
              ],
              "numberOfBytes": "320"
            },
            "t_struct(StakedNft)2814_storage": {
              "label": "struct HouseBusiness.StakedNft",
              "members": [
                {
                  "label": "owner",
                  "type": "t_address",
                  "offset": 0,
                  "slot": "0"
                },
                {
                  "label": "tokenId",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "1"
                },
                {
                  "label": "startedDate",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "2"
                },
                {
                  "label": "endDate",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "3"
                },
                {
                  "label": "claimDate",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "4"
                },
                {
                  "label": "stakingType",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "5"
                },
                {
                  "label": "perSecRewards",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "6"
                },
                {
                  "label": "stakingStatus",
                  "type": "t_bool",
                  "offset": 0,
                  "slot": "7"
                }
              ],
              "numberOfBytes": "256"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            }
          },
          "layoutVersion": "1.1",
          "flat": true
        }
      },
      "IMainCleanContract": {
        "src": "contracts\\interfaces\\IContract.sol:6",
        "inherit": [],
        "libraries": [],
        "methods": [
          "allCleanContracts(uint256)",
          "transferContractOwnership(uint256,address,address)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      }
    },
    {
      "Address": {
        "src": "contracts\\HouseBusiness.sol:90",
        "version": {
          "withMetadata": "3d006df59e9288fd3ba27c20300609c4e6a2bfcc13f63a38e0019f956ac0dc06",
          "withoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db",
          "linkedWithoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db"
        },
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [
          {
            "kind": "delegatecall",
            "src": "contracts\\HouseBusiness.sol:165"
          }
        ],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "Context": {
        "src": "contracts\\HouseBusiness.sol:192",
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "ERC165": {
        "src": "contracts\\HouseBusiness.sol:280",
        "inherit": [
          "IERC165"
        ],
        "libraries": [],
        "methods": [
          "supportsInterface(bytes4)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "ERC721": {
        "src": "contracts\\HouseBusiness.sol:286",
        "version": {
          "withMetadata": "541efbfdbc2268fea9af40dfe2ce2098989b8a977dafbf61f236f7eb08082407",
          "withoutMetadata": "18bbbe335c94939eafdc9ca0e7b6e184235c957b26fc7adb52273169c33ab751",
          "linkedWithoutMetadata": "18bbbe335c94939eafdc9ca0e7b6e184235c957b26fc7adb52273169c33ab751"
        },
        "inherit": [
          "IERC721Metadata",
          "IERC721",
          "ERC165",
          "IERC165",
          "Context"
        ],
        "libraries": [
          "Address",
          "Strings"
        ],
        "methods": [
          "(string,string)",
          "supportsInterface(bytes4)",
          "balanceOf(address)",
          "ownerOf(uint256)",
          "name()",
          "symbol()",
          "tokenURI(uint256)",
          "approve(address,uint256)",
          "getApproved(uint256)",
          "setApprovalForAll(address,bool)",
          "isApprovedForAll(address,address)",
          "transferFrom(address,address,uint256)",
          "safeTransferFrom(address,address,uint256)",
          "safeTransferFrom(address,address,uint256,bytes)"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "ERC721",
            "src": "contracts\\HouseBusiness.sol:311"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "_name",
              "offset": 0,
              "slot": "0",
              "type": "t_string_storage",
              "contract": "ERC721",
              "src": "contracts\\HouseBusiness.sol:291"
            },
            {
              "label": "_symbol",
              "offset": 0,
              "slot": "1",
              "type": "t_string_storage",
              "contract": "ERC721",
              "src": "contracts\\HouseBusiness.sol:294"
            },
            {
              "label": "_owners",
              "offset": 0,
              "slot": "2",
              "type": "t_mapping(t_uint256,t_address)",
              "contract": "ERC721",
              "src": "contracts\\HouseBusiness.sol:297"
            },
            {
              "label": "_balances",
              "offset": 0,
              "slot": "3",
              "type": "t_mapping(t_address,t_uint256)",
              "contract": "ERC721",
              "src": "contracts\\HouseBusiness.sol:300"
            },
            {
              "label": "_tokenApprovals",
              "offset": 0,
              "slot": "4",
              "type": "t_mapping(t_uint256,t_address)",
              "contract": "ERC721",
              "src": "contracts\\HouseBusiness.sol:303"
            },
            {
              "label": "_operatorApprovals",
              "offset": 0,
              "slot": "5",
              "type": "t_mapping(t_address,t_mapping(t_address,t_bool))",
              "contract": "ERC721",
              "src": "contracts\\HouseBusiness.sol:306"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            },
            "t_bool": {
              "label": "bool",
              "numberOfBytes": "1"
            },
            "t_mapping(t_address,t_bool)": {
              "label": "mapping(address => bool)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_mapping(t_address,t_bool))": {
              "label": "mapping(address => mapping(address => bool))",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_uint256)": {
              "label": "mapping(address => uint256)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_uint256,t_address)": {
              "label": "mapping(uint256 => address)",
              "numberOfBytes": "32"
            },
            "t_string_storage": {
              "label": "string",
              "numberOfBytes": "32"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            }
          },
          "layoutVersion": "1.1",
          "flat": true
        }
      },
      "ERC721Enumerable": {
        "src": "contracts\\HouseBusiness.sol:617",
        "inherit": [
          "IERC721Enumerable",
          "ERC721",
          "IERC721Metadata",
          "IERC721",
          "ERC165",
          "IERC165",
          "Context"
        ],
        "libraries": [],
        "methods": [
          "supportsInterface(bytes4)",
          "tokenOfOwnerByIndex(address,uint256)",
          "totalSupply()",
          "tokenByIndex(uint256)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [
            {
              "label": "_name",
              "offset": 0,
              "slot": "0",
              "type": "t_string_storage",
              "contract": "ERC721",
              "src": "contracts\\HouseBusiness.sol:291"
            },
            {
              "label": "_symbol",
              "offset": 0,
              "slot": "1",
              "type": "t_string_storage",
              "contract": "ERC721",
              "src": "contracts\\HouseBusiness.sol:294"
            },
            {
              "label": "_owners",
              "offset": 0,
              "slot": "2",
              "type": "t_mapping(t_uint256,t_address)",
              "contract": "ERC721",
              "src": "contracts\\HouseBusiness.sol:297"
            },
            {
              "label": "_balances",
              "offset": 0,
              "slot": "3",
              "type": "t_mapping(t_address,t_uint256)",
              "contract": "ERC721",
              "src": "contracts\\HouseBusiness.sol:300"
            },
            {
              "label": "_tokenApprovals",
              "offset": 0,
              "slot": "4",
              "type": "t_mapping(t_uint256,t_address)",
              "contract": "ERC721",
              "src": "contracts\\HouseBusiness.sol:303"
            },
            {
              "label": "_operatorApprovals",
              "offset": 0,
              "slot": "5",
              "type": "t_mapping(t_address,t_mapping(t_address,t_bool))",
              "contract": "ERC721",
              "src": "contracts\\HouseBusiness.sol:306"
            },
            {
              "label": "_ownedTokens",
              "offset": 0,
              "slot": "6",
              "type": "t_mapping(t_address,t_mapping(t_uint256,t_uint256))",
              "contract": "ERC721Enumerable",
              "src": "contracts\\HouseBusiness.sol:618"
            },
            {
              "label": "_ownedTokensIndex",
              "offset": 0,
              "slot": "7",
              "type": "t_mapping(t_uint256,t_uint256)",
              "contract": "ERC721Enumerable",
              "src": "contracts\\HouseBusiness.sol:619"
            },
            {
              "label": "_allTokens",
              "offset": 0,
              "slot": "8",
              "type": "t_array(t_uint256)dyn_storage",
              "contract": "ERC721Enumerable",
              "src": "contracts\\HouseBusiness.sol:620"
            },
            {
              "label": "_allTokensIndex",
              "offset": 0,
              "slot": "9",
              "type": "t_mapping(t_uint256,t_uint256)",
              "contract": "ERC721Enumerable",
              "src": "contracts\\HouseBusiness.sol:621"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            },
            "t_array(t_uint256)dyn_storage": {
              "label": "uint256[]",
              "numberOfBytes": "32"
            },
            "t_bool": {
              "label": "bool",
              "numberOfBytes": "1"
            },
            "t_mapping(t_address,t_bool)": {
              "label": "mapping(address => bool)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_mapping(t_address,t_bool))": {
              "label": "mapping(address => mapping(address => bool))",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_mapping(t_uint256,t_uint256))": {
              "label": "mapping(address => mapping(uint256 => uint256))",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_uint256)": {
              "label": "mapping(address => uint256)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_uint256,t_address)": {
              "label": "mapping(uint256 => address)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_uint256,t_uint256)": {
              "label": "mapping(uint256 => uint256)",
              "numberOfBytes": "32"
            },
            "t_string_storage": {
              "label": "string",
              "numberOfBytes": "32"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            }
          },
          "layoutVersion": "1.1",
          "flat": true
        }
      },
      "ERC721URIStorage": {
        "src": "contracts\\HouseBusiness.sol:696",
        "inherit": [
          "ERC721",
          "IERC721Metadata",
          "IERC721",
          "ERC165",
          "IERC165",
          "Context"
        ],
        "libraries": [
          "Strings"
        ],
        "methods": [
          "tokenURI(uint256)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [
            {
              "label": "_name",
              "offset": 0,
              "slot": "0",
              "type": "t_string_storage",
              "contract": "ERC721",
              "src": "contracts\\HouseBusiness.sol:291"
            },
            {
              "label": "_symbol",
              "offset": 0,
              "slot": "1",
              "type": "t_string_storage",
              "contract": "ERC721",
              "src": "contracts\\HouseBusiness.sol:294"
            },
            {
              "label": "_owners",
              "offset": 0,
              "slot": "2",
              "type": "t_mapping(t_uint256,t_address)",
              "contract": "ERC721",
              "src": "contracts\\HouseBusiness.sol:297"
            },
            {
              "label": "_balances",
              "offset": 0,
              "slot": "3",
              "type": "t_mapping(t_address,t_uint256)",
              "contract": "ERC721",
              "src": "contracts\\HouseBusiness.sol:300"
            },
            {
              "label": "_tokenApprovals",
              "offset": 0,
              "slot": "4",
              "type": "t_mapping(t_uint256,t_address)",
              "contract": "ERC721",
              "src": "contracts\\HouseBusiness.sol:303"
            },
            {
              "label": "_operatorApprovals",
              "offset": 0,
              "slot": "5",
              "type": "t_mapping(t_address,t_mapping(t_address,t_bool))",
              "contract": "ERC721",
              "src": "contracts\\HouseBusiness.sol:306"
            },
            {
              "label": "_tokenURIs",
              "offset": 0,
              "slot": "6",
              "type": "t_mapping(t_uint256,t_string_storage)",
              "contract": "ERC721URIStorage",
              "src": "contracts\\HouseBusiness.sol:698"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            },
            "t_bool": {
              "label": "bool",
              "numberOfBytes": "1"
            },
            "t_mapping(t_address,t_bool)": {
              "label": "mapping(address => bool)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_mapping(t_address,t_bool))": {
              "label": "mapping(address => mapping(address => bool))",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_uint256)": {
              "label": "mapping(address => uint256)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_uint256,t_address)": {
              "label": "mapping(uint256 => address)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_uint256,t_string_storage)": {
              "label": "mapping(uint256 => string)",
              "numberOfBytes": "32"
            },
            "t_string_storage": {
              "label": "string",
              "numberOfBytes": "32"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            }
          },
          "layoutVersion": "1.1",
          "flat": true
        }
      },
      "HouseBusiness": {
        "src": "contracts\\HouseBusiness.sol:729",
        "version": {
          "withMetadata": "a104a0262bf185f8ce232dc0e99e4fc6660e29349041b1805a6bfc8c473bbfcc",
          "withoutMetadata": "83af7006ab69303cbe83498e2ab6137ef7c0082a86a85420a679da43480e5526",
          "linkedWithoutMetadata": "83af7006ab69303cbe83498e2ab6137ef7c0082a86a85420a679da43480e5526"
        },
        "inherit": [
          "ERC721URIStorage",
          "ERC721",
          "IERC721Metadata",
          "IERC721",
          "ERC165",
          "IERC165",
          "Context"
        ],
        "libraries": [],
        "methods": [
          "(address)",
          "setMinMaxHousePrice(uint256,uint256)",
          "setConfigToken(address)",
          "isMember()",
          "addMember(address)",
          "removeMember(address)",
          "tokenURI(uint256)",
          "setCContractAddress(address)",
          "setPayable(uint256,address,bool)",
          "mintHouse(string,string,string,string,uint256)",
          "addAllowList(uint256,address)",
          "removeAllowList(uint256,address)",
          "checkAllowedList(uint256,address)",
          "addHistory(uint256,uint256,uint256,string,string,string,string,string,uint256)",
          "getHistory(uint256)",
          "editHistory(uint256,uint256,string,string,string,string,string,uint256)",
          "getHistoryType()",
          "addOrEditHType(uint256,string,bool,bool,bool,bool,bool,bool,bool)",
          "removeHistoryType(uint256)",
          "getMinMaxNFT()",
          "getTokenOwner(uint256)",
          "buyHouseNft(uint256)",
          "sendToken(address,uint256)",
          "changeTokenPrice(uint256,uint256)",
          "getAllHouses()",
          "getAllPayableHouses()",
          "getAllMyHouses()",
          "withdrawToken(uint256)",
          "withdrawETH(uint256)",
          "calcDiv(uint256,uint256)",
          "setAPYConfig(uint256,uint256)",
          "getAllAPYTypes()",
          "stake(uint256,uint256)",
          "unstake(uint256)",
          "stakingFinished(uint256)",
          "totalRewards(address)",
          "claimRewards(address)",
          "getAllMyStakedNFTs()",
          "getTotalInfo()",
          "getAllAPYs()",
          "getPenalty()",
          "setPenalty(uint256)",
          "getRoyalty()",
          "setRoyalty(uint256)"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "HouseBusiness",
            "src": "contracts\\HouseBusiness.sol:824"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "_name",
              "offset": 0,
              "slot": "0",
              "type": "t_string_storage",
              "contract": "ERC721",
              "src": "contracts\\HouseBusiness.sol:291"
            },
            {
              "label": "_symbol",
              "offset": 0,
              "slot": "1",
              "type": "t_string_storage",
              "contract": "ERC721",
              "src": "contracts\\HouseBusiness.sol:294"
            },
            {
              "label": "_owners",
              "offset": 0,
              "slot": "2",
              "type": "t_mapping(t_uint256,t_address)",
              "contract": "ERC721",
              "src": "contracts\\HouseBusiness.sol:297"
            },
            {
              "label": "_balances",
              "offset": 0,
              "slot": "3",
              "type": "t_mapping(t_address,t_uint256)",
              "contract": "ERC721",
              "src": "contracts\\HouseBusiness.sol:300"
            },
            {
              "label": "_tokenApprovals",
              "offset": 0,
              "slot": "4",
              "type": "t_mapping(t_uint256,t_address)",
              "contract": "ERC721",
              "src": "contracts\\HouseBusiness.sol:303"
            },
            {
              "label": "_operatorApprovals",
              "offset": 0,
              "slot": "5",
              "type": "t_mapping(t_address,t_mapping(t_address,t_bool))",
              "contract": "ERC721",
              "src": "contracts\\HouseBusiness.sol:306"
            },
            {
              "label": "_tokenURIs",
              "offset": 0,
              "slot": "6",
              "type": "t_mapping(t_uint256,t_string_storage)",
              "contract": "ERC721URIStorage",
              "src": "contracts\\HouseBusiness.sol:698"
            },
            {
              "label": "collectionName",
              "offset": 0,
              "slot": "7",
              "type": "t_string_storage",
              "contract": "HouseBusiness",
              "src": "contracts\\HouseBusiness.sol:731"
            },
            {
              "label": "collectionNameSymbol",
              "offset": 0,
              "slot": "8",
              "type": "t_string_storage",
              "contract": "HouseBusiness",
              "src": "contracts\\HouseBusiness.sol:733"
            },
            {
              "label": "houseCounter",
              "offset": 0,
              "slot": "9",
              "type": "t_uint256",
              "contract": "HouseBusiness",
              "src": "contracts\\HouseBusiness.sol:735"
            },
            {
              "label": "stakedCounter",
              "offset": 0,
              "slot": "10",
              "type": "t_uint256",
              "contract": "HouseBusiness",
              "src": "contracts\\HouseBusiness.sol:737"
            },
            {
              "label": "soldedCounter",
              "offset": 0,
              "slot": "11",
              "type": "t_uint256",
              "contract": "HouseBusiness",
              "src": "contracts\\HouseBusiness.sol:739"
            },
            {
              "label": "hTypeCounter",
              "offset": 0,
              "slot": "12",
              "type": "t_uint256",
              "contract": "HouseBusiness",
              "src": "contracts\\HouseBusiness.sol:741"
            },
            {
              "label": "_token",
              "offset": 0,
              "slot": "13",
              "type": "t_contract(IERC20)70",
              "contract": "HouseBusiness",
              "src": "contracts\\HouseBusiness.sol:743"
            },
            {
              "label": "minPrice",
              "offset": 0,
              "slot": "14",
              "type": "t_uint256",
              "contract": "HouseBusiness",
              "src": "contracts\\HouseBusiness.sol:745"
            },
            {
              "label": "maxPrice",
              "offset": 0,
              "slot": "15",
              "type": "t_uint256",
              "contract": "HouseBusiness",
              "src": "contracts\\HouseBusiness.sol:747"
            },
            {
              "label": "penalty",
              "offset": 0,
              "slot": "16",
              "type": "t_uint256",
              "contract": "HouseBusiness",
              "src": "contracts\\HouseBusiness.sol:749"
            },
            {
              "label": "royalty",
              "offset": 0,
              "slot": "17",
              "type": "t_uint256",
              "contract": "HouseBusiness",
              "src": "contracts\\HouseBusiness.sol:751"
            },
            {
              "label": "cContractAddress",
              "offset": 0,
              "slot": "18",
              "type": "t_address",
              "contract": "HouseBusiness",
              "src": "contracts\\HouseBusiness.sol:753"
            },
            {
              "label": "historyTypes",
              "offset": 0,
              "slot": "19",
              "type": "t_array(t_struct(HistoryType)2356_storage)dyn_storage",
              "contract": "HouseBusiness",
              "src": "contracts\\HouseBusiness.sol:804"
            },
            {
              "label": "houseHistories",
              "offset": 0,
              "slot": "20",
              "type": "t_mapping(t_uint256,t_array(t_struct(History)2337_storage)dyn_storage)",
              "contract": "HouseBusiness",
              "src": "contracts\\HouseBusiness.sol:806"
            },
            {
              "label": "APYtypes",
              "offset": 0,
              "slot": "21",
              "type": "t_array(t_uint256)dyn_storage",
              "contract": "HouseBusiness",
              "src": "contracts\\HouseBusiness.sol:808"
            },
            {
              "label": "APYConfig",
              "offset": 0,
              "slot": "22",
              "type": "t_mapping(t_uint256,t_uint256)",
              "contract": "HouseBusiness",
              "src": "contracts\\HouseBusiness.sol:810"
            },
            {
              "label": "allMembers",
              "offset": 0,
              "slot": "23",
              "type": "t_mapping(t_address,t_bool)",
              "contract": "HouseBusiness",
              "src": "contracts\\HouseBusiness.sol:812"
            },
            {
              "label": "allHouses",
              "offset": 0,
              "slot": "24",
              "type": "t_mapping(t_uint256,t_struct(House)2303_storage)",
              "contract": "HouseBusiness",
              "src": "contracts\\HouseBusiness.sol:814"
            },
            {
              "label": "allowedList",
              "offset": 0,
              "slot": "25",
              "type": "t_mapping(t_uint256,t_mapping(t_address,t_bool))",
              "contract": "HouseBusiness",
              "src": "contracts\\HouseBusiness.sol:816"
            },
            {
              "label": "stakedNfts",
              "offset": 0,
              "slot": "26",
              "type": "t_mapping(t_address,t_array(t_struct(StakedNft)2320_storage)dyn_storage)",
              "contract": "HouseBusiness",
              "src": "contracts\\HouseBusiness.sol:822"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            },
            "t_array(t_struct(History)2337_storage)dyn_storage": {
              "label": "struct HouseBusiness.History[]",
              "numberOfBytes": "32"
            },
            "t_array(t_struct(HistoryType)2356_storage)dyn_storage": {
              "label": "struct HouseBusiness.HistoryType[]",
              "numberOfBytes": "32"
            },
            "t_array(t_struct(StakedNft)2320_storage)dyn_storage": {
              "label": "struct HouseBusiness.StakedNft[]",
              "numberOfBytes": "32"
            },
            "t_array(t_uint256)dyn_storage": {
              "label": "uint256[]",
              "numberOfBytes": "32"
            },
            "t_bool": {
              "label": "bool",
              "numberOfBytes": "1"
            },
            "t_contract(IERC20)70": {
              "label": "contract IERC20",
              "numberOfBytes": "20"
            },
            "t_mapping(t_address,t_array(t_struct(StakedNft)2320_storage)dyn_storage)": {
              "label": "mapping(address => struct HouseBusiness.StakedNft[])",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_bool)": {
              "label": "mapping(address => bool)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_mapping(t_address,t_bool))": {
              "label": "mapping(address => mapping(address => bool))",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_uint256)": {
              "label": "mapping(address => uint256)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_uint256,t_address)": {
              "label": "mapping(uint256 => address)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_uint256,t_array(t_struct(History)2337_storage)dyn_storage)": {
              "label": "mapping(uint256 => struct HouseBusiness.History[])",
              "numberOfBytes": "32"
            },
            "t_mapping(t_uint256,t_mapping(t_address,t_bool))": {
              "label": "mapping(uint256 => mapping(address => bool))",
              "numberOfBytes": "32"
            },
            "t_mapping(t_uint256,t_string_storage)": {
              "label": "mapping(uint256 => string)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_uint256,t_struct(House)2303_storage)": {
              "label": "mapping(uint256 => struct HouseBusiness.House)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_uint256,t_uint256)": {
              "label": "mapping(uint256 => uint256)",
              "numberOfBytes": "32"
            },
            "t_string_storage": {
              "label": "string",
              "numberOfBytes": "32"
            },
            "t_struct(History)2337_storage": {
              "label": "struct HouseBusiness.History",
              "members": [
                {
                  "label": "hID",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "0"
                },
                {
                  "label": "contractId",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "1"
                },
                {
                  "label": "houseImg",
                  "type": "t_string_storage",
                  "offset": 0,
                  "slot": "2"
                },
                {
                  "label": "houseBrand",
                  "type": "t_string_storage",
                  "offset": 0,
                  "slot": "3"
                },
                {
                  "label": "desc",
                  "type": "t_string_storage",
                  "offset": 0,
                  "slot": "4"
                },
                {
                  "label": "history",
                  "type": "t_string_storage",
                  "offset": 0,
                  "slot": "5"
                },
                {
                  "label": "brandType",
                  "type": "t_string_storage",
                  "offset": 0,
                  "slot": "6"
                },
                {
                  "label": "yearField",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "7"
                }
              ],
              "numberOfBytes": "256"
            },
            "t_struct(HistoryType)2356_storage": {
              "label": "struct HouseBusiness.HistoryType",
              "members": [
                {
                  "label": "hID",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "0"
                },
                {
                  "label": "hLabel",
                  "type": "t_string_storage",
                  "offset": 0,
                  "slot": "1"
                },
                {
                  "label": "connectContract",
                  "type": "t_bool",
                  "offset": 0,
                  "slot": "2"
                },
                {
                  "label": "imgNeed",
                  "type": "t_bool",
                  "offset": 1,
                  "slot": "2"
                },
                {
                  "label": "brandNeed",
                  "type": "t_bool",
                  "offset": 2,
                  "slot": "2"
                },
                {
                  "label": "descNeed",
                  "type": "t_bool",
                  "offset": 3,
                  "slot": "2"
                },
                {
                  "label": "brandTypeNeed",
                  "type": "t_bool",
                  "offset": 4,
                  "slot": "2"
                },
                {
                  "label": "yearNeed",
                  "type": "t_bool",
                  "offset": 5,
                  "slot": "2"
                },
                {
                  "label": "checkMark",
                  "type": "t_bool",
                  "offset": 6,
                  "slot": "2"
                }
              ],
              "numberOfBytes": "96"
            },
            "t_struct(House)2303_storage": {
              "label": "struct HouseBusiness.House",
              "members": [
                {
                  "label": "tokenId",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "0"
                },
                {
                  "label": "tokenName",
                  "type": "t_string_storage",
                  "offset": 0,
                  "slot": "1"
                },
                {
                  "label": "tokenURI",
                  "type": "t_string_storage",
                  "offset": 0,
                  "slot": "2"
                },
                {
                  "label": "tokenType",
                  "type": "t_string_storage",
                  "offset": 0,
                  "slot": "3"
                },
                {
                  "label": "currentOwner",
                  "type": "t_address",
                  "offset": 0,
                  "slot": "4"
                },
                {
                  "label": "previousOwner",
                  "type": "t_address",
                  "offset": 0,
                  "slot": "5"
                },
                {
                  "label": "buyer",
                  "type": "t_address",
                  "offset": 0,
                  "slot": "6"
                },
                {
                  "label": "price",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "7"
                },
                {
                  "label": "numberOfTransfers",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "8"
                },
                {
                  "label": "nftPayable",
                  "type": "t_bool",
                  "offset": 0,
                  "slot": "9"
                },
                {
                  "label": "staked",
                  "type": "t_bool",
                  "offset": 1,
                  "slot": "9"
                },
                {
                  "label": "soldstatus",
                  "type": "t_bool",
                  "offset": 2,
                  "slot": "9"
                }
              ],
              "numberOfBytes": "320"
            },
            "t_struct(StakedNft)2320_storage": {
              "label": "struct HouseBusiness.StakedNft",
              "members": [
                {
                  "label": "owner",
                  "type": "t_address",
                  "offset": 0,
                  "slot": "0"
                },
                {
                  "label": "tokenId",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "1"
                },
                {
                  "label": "startedDate",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "2"
                },
                {
                  "label": "endDate",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "3"
                },
                {
                  "label": "claimDate",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "4"
                },
                {
                  "label": "stakingType",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "5"
                },
                {
                  "label": "perSecRewards",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "6"
                },
                {
                  "label": "stakingStatus",
                  "type": "t_bool",
                  "offset": 0,
                  "slot": "7"
                }
              ],
              "numberOfBytes": "256"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            }
          },
          "layoutVersion": "1.1",
          "flat": true
        }
      },
      "IERC165": {
        "src": "contracts\\HouseBusiness.sol:32",
        "inherit": [],
        "libraries": [],
        "methods": [
          "supportsInterface(bytes4)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "IERC20": {
        "src": "contracts\\HouseBusiness.sol:11",
        "inherit": [],
        "libraries": [],
        "methods": [
          "totalSupply()",
          "balanceOf(address)",
          "allowance(address,address)",
          "transfer(address,uint256)",
          "approve(address,uint256)",
          "transferFrom(address,address,uint256)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "IERC721": {
        "src": "contracts\\HouseBusiness.sol:36",
        "inherit": [
          "IERC165"
        ],
        "libraries": [],
        "methods": [
          "balanceOf(address)",
          "ownerOf(uint256)",
          "safeTransferFrom(address,address,uint256)",
          "transferFrom(address,address,uint256)",
          "approve(address,uint256)",
          "getApproved(uint256)",
          "setApprovalForAll(address,bool)",
          "isApprovedForAll(address,address)",
          "safeTransferFrom(address,address,uint256,bytes)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "IERC721Enumerable": {
        "src": "contracts\\HouseBusiness.sol:609",
        "inherit": [
          "IERC721",
          "IERC165"
        ],
        "libraries": [],
        "methods": [
          "totalSupply()",
          "tokenOfOwnerByIndex(address,uint256)",
          "tokenByIndex(uint256)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "IERC721Metadata": {
        "src": "contracts\\HouseBusiness.sol:82",
        "inherit": [
          "IERC721",
          "IERC165"
        ],
        "libraries": [],
        "methods": [
          "name()",
          "symbol()",
          "tokenURI(uint256)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "IERC721Receiver": {
        "src": "contracts\\HouseBusiness.sol:73",
        "inherit": [],
        "libraries": [],
        "methods": [
          "onERC721Received(address,address,uint256,bytes)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "Ownable": {
        "src": "contracts\\HouseBusiness.sol:572",
        "inherit": [
          "Context"
        ],
        "libraries": [],
        "methods": [
          "owner()",
          "renounceOwnership()",
          "transferOwnership(address)"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "Ownable",
            "src": "contracts\\HouseBusiness.sol:577"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "_owner",
              "offset": 0,
              "slot": "0",
              "type": "t_address",
              "contract": "Ownable",
              "src": "contracts\\HouseBusiness.sol:573"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            }
          },
          "layoutVersion": "1.1",
          "flat": true
        }
      },
      "SafeMath": {
        "src": "contracts\\HouseBusiness.sol:202",
        "version": {
          "withMetadata": "4b5378b035714cb49ff27882cb8b450ff0d67fb12565d482f718a1c806929298",
          "withoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db",
          "linkedWithoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db"
        },
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "Strings": {
        "src": "contracts\\HouseBusiness.sol:232",
        "version": {
          "withMetadata": "7fc443b8ab4a8791fb69184f71a0480f16a9becaa8a3a54186c35389ece7778e",
          "withoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db",
          "linkedWithoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db"
        },
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "IMainCleanContract": {
        "src": "contracts\\interfaces\\IContract.sol:6",
        "inherit": [],
        "libraries": [],
        "methods": [
          "allCleanContracts(uint256)",
          "transferContractOwnership(uint256,address,address)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      }
    },
    {
      "Address": {
        "src": "contracts\\HouseBusiness.sol:842",
        "version": {
          "withMetadata": "50c91fe0ff2b910b684ff3693b4679c6c0c7d098c163cf882a07446ac0f7a6e5",
          "withoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db",
          "linkedWithoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db"
        },
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [
          {
            "kind": "delegatecall",
            "src": "contracts\\HouseBusiness.sol:917"
          }
        ],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "Context": {
        "src": "contracts\\HouseBusiness.sol:944",
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "ERC165": {
        "src": "contracts\\HouseBusiness.sol:1032",
        "inherit": [
          "IERC165"
        ],
        "libraries": [],
        "methods": [
          "supportsInterface(bytes4)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "ERC721": {
        "src": "contracts\\HouseBusiness.sol:1038",
        "version": {
          "withMetadata": "2d419a926daaa86aa19b4a7271727d5caf13015cf0f7b12ecba013d2b1ffc978",
          "withoutMetadata": "18bbbe335c94939eafdc9ca0e7b6e184235c957b26fc7adb52273169c33ab751",
          "linkedWithoutMetadata": "18bbbe335c94939eafdc9ca0e7b6e184235c957b26fc7adb52273169c33ab751"
        },
        "inherit": [
          "IERC721Metadata",
          "IERC721",
          "ERC165",
          "IERC165",
          "Context"
        ],
        "libraries": [
          "Address",
          "Strings"
        ],
        "methods": [
          "(string,string)",
          "supportsInterface(bytes4)",
          "balanceOf(address)",
          "ownerOf(uint256)",
          "name()",
          "symbol()",
          "tokenURI(uint256)",
          "approve(address,uint256)",
          "getApproved(uint256)",
          "setApprovalForAll(address,bool)",
          "isApprovedForAll(address,address)",
          "transferFrom(address,address,uint256)",
          "safeTransferFrom(address,address,uint256)",
          "safeTransferFrom(address,address,uint256,bytes)"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "ERC721",
            "src": "contracts\\HouseBusiness.sol:1063"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "_name",
              "offset": 0,
              "slot": "0",
              "type": "t_string_storage",
              "contract": "ERC721",
              "src": "contracts\\HouseBusiness.sol:1043"
            },
            {
              "label": "_symbol",
              "offset": 0,
              "slot": "1",
              "type": "t_string_storage",
              "contract": "ERC721",
              "src": "contracts\\HouseBusiness.sol:1046"
            },
            {
              "label": "_owners",
              "offset": 0,
              "slot": "2",
              "type": "t_mapping(t_uint256,t_address)",
              "contract": "ERC721",
              "src": "contracts\\HouseBusiness.sol:1049"
            },
            {
              "label": "_balances",
              "offset": 0,
              "slot": "3",
              "type": "t_mapping(t_address,t_uint256)",
              "contract": "ERC721",
              "src": "contracts\\HouseBusiness.sol:1052"
            },
            {
              "label": "_tokenApprovals",
              "offset": 0,
              "slot": "4",
              "type": "t_mapping(t_uint256,t_address)",
              "contract": "ERC721",
              "src": "contracts\\HouseBusiness.sol:1055"
            },
            {
              "label": "_operatorApprovals",
              "offset": 0,
              "slot": "5",
              "type": "t_mapping(t_address,t_mapping(t_address,t_bool))",
              "contract": "ERC721",
              "src": "contracts\\HouseBusiness.sol:1058"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            },
            "t_bool": {
              "label": "bool",
              "numberOfBytes": "1"
            },
            "t_mapping(t_address,t_bool)": {
              "label": "mapping(address => bool)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_mapping(t_address,t_bool))": {
              "label": "mapping(address => mapping(address => bool))",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_uint256)": {
              "label": "mapping(address => uint256)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_uint256,t_address)": {
              "label": "mapping(uint256 => address)",
              "numberOfBytes": "32"
            },
            "t_string_storage": {
              "label": "string",
              "numberOfBytes": "32"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            }
          },
          "layoutVersion": "1.1",
          "flat": true
        }
      },
      "ERC721Enumerable": {
        "src": "contracts\\HouseBusiness.sol:1369",
        "inherit": [
          "IERC721Enumerable",
          "ERC721",
          "IERC721Metadata",
          "IERC721",
          "ERC165",
          "IERC165",
          "Context"
        ],
        "libraries": [],
        "methods": [
          "supportsInterface(bytes4)",
          "tokenOfOwnerByIndex(address,uint256)",
          "totalSupply()",
          "tokenByIndex(uint256)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [
            {
              "label": "_name",
              "offset": 0,
              "slot": "0",
              "type": "t_string_storage",
              "contract": "ERC721",
              "src": "contracts\\HouseBusiness.sol:1043"
            },
            {
              "label": "_symbol",
              "offset": 0,
              "slot": "1",
              "type": "t_string_storage",
              "contract": "ERC721",
              "src": "contracts\\HouseBusiness.sol:1046"
            },
            {
              "label": "_owners",
              "offset": 0,
              "slot": "2",
              "type": "t_mapping(t_uint256,t_address)",
              "contract": "ERC721",
              "src": "contracts\\HouseBusiness.sol:1049"
            },
            {
              "label": "_balances",
              "offset": 0,
              "slot": "3",
              "type": "t_mapping(t_address,t_uint256)",
              "contract": "ERC721",
              "src": "contracts\\HouseBusiness.sol:1052"
            },
            {
              "label": "_tokenApprovals",
              "offset": 0,
              "slot": "4",
              "type": "t_mapping(t_uint256,t_address)",
              "contract": "ERC721",
              "src": "contracts\\HouseBusiness.sol:1055"
            },
            {
              "label": "_operatorApprovals",
              "offset": 0,
              "slot": "5",
              "type": "t_mapping(t_address,t_mapping(t_address,t_bool))",
              "contract": "ERC721",
              "src": "contracts\\HouseBusiness.sol:1058"
            },
            {
              "label": "_ownedTokens",
              "offset": 0,
              "slot": "6",
              "type": "t_mapping(t_address,t_mapping(t_uint256,t_uint256))",
              "contract": "ERC721Enumerable",
              "src": "contracts\\HouseBusiness.sol:1370"
            },
            {
              "label": "_ownedTokensIndex",
              "offset": 0,
              "slot": "7",
              "type": "t_mapping(t_uint256,t_uint256)",
              "contract": "ERC721Enumerable",
              "src": "contracts\\HouseBusiness.sol:1371"
            },
            {
              "label": "_allTokens",
              "offset": 0,
              "slot": "8",
              "type": "t_array(t_uint256)dyn_storage",
              "contract": "ERC721Enumerable",
              "src": "contracts\\HouseBusiness.sol:1372"
            },
            {
              "label": "_allTokensIndex",
              "offset": 0,
              "slot": "9",
              "type": "t_mapping(t_uint256,t_uint256)",
              "contract": "ERC721Enumerable",
              "src": "contracts\\HouseBusiness.sol:1373"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            },
            "t_array(t_uint256)dyn_storage": {
              "label": "uint256[]",
              "numberOfBytes": "32"
            },
            "t_bool": {
              "label": "bool",
              "numberOfBytes": "1"
            },
            "t_mapping(t_address,t_bool)": {
              "label": "mapping(address => bool)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_mapping(t_address,t_bool))": {
              "label": "mapping(address => mapping(address => bool))",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_mapping(t_uint256,t_uint256))": {
              "label": "mapping(address => mapping(uint256 => uint256))",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_uint256)": {
              "label": "mapping(address => uint256)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_uint256,t_address)": {
              "label": "mapping(uint256 => address)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_uint256,t_uint256)": {
              "label": "mapping(uint256 => uint256)",
              "numberOfBytes": "32"
            },
            "t_string_storage": {
              "label": "string",
              "numberOfBytes": "32"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            }
          },
          "layoutVersion": "1.1",
          "flat": true
        }
      },
      "ERC721URIStorage": {
        "src": "contracts\\HouseBusiness.sol:1448",
        "inherit": [
          "ERC721",
          "IERC721Metadata",
          "IERC721",
          "ERC165",
          "IERC165",
          "Context"
        ],
        "libraries": [
          "Strings"
        ],
        "methods": [
          "tokenURI(uint256)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [
            {
              "label": "_name",
              "offset": 0,
              "slot": "0",
              "type": "t_string_storage",
              "contract": "ERC721",
              "src": "contracts\\HouseBusiness.sol:1043"
            },
            {
              "label": "_symbol",
              "offset": 0,
              "slot": "1",
              "type": "t_string_storage",
              "contract": "ERC721",
              "src": "contracts\\HouseBusiness.sol:1046"
            },
            {
              "label": "_owners",
              "offset": 0,
              "slot": "2",
              "type": "t_mapping(t_uint256,t_address)",
              "contract": "ERC721",
              "src": "contracts\\HouseBusiness.sol:1049"
            },
            {
              "label": "_balances",
              "offset": 0,
              "slot": "3",
              "type": "t_mapping(t_address,t_uint256)",
              "contract": "ERC721",
              "src": "contracts\\HouseBusiness.sol:1052"
            },
            {
              "label": "_tokenApprovals",
              "offset": 0,
              "slot": "4",
              "type": "t_mapping(t_uint256,t_address)",
              "contract": "ERC721",
              "src": "contracts\\HouseBusiness.sol:1055"
            },
            {
              "label": "_operatorApprovals",
              "offset": 0,
              "slot": "5",
              "type": "t_mapping(t_address,t_mapping(t_address,t_bool))",
              "contract": "ERC721",
              "src": "contracts\\HouseBusiness.sol:1058"
            },
            {
              "label": "_tokenURIs",
              "offset": 0,
              "slot": "6",
              "type": "t_mapping(t_uint256,t_string_storage)",
              "contract": "ERC721URIStorage",
              "src": "contracts\\HouseBusiness.sol:1450"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            },
            "t_bool": {
              "label": "bool",
              "numberOfBytes": "1"
            },
            "t_mapping(t_address,t_bool)": {
              "label": "mapping(address => bool)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_mapping(t_address,t_bool))": {
              "label": "mapping(address => mapping(address => bool))",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_uint256)": {
              "label": "mapping(address => uint256)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_uint256,t_address)": {
              "label": "mapping(uint256 => address)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_uint256,t_string_storage)": {
              "label": "mapping(uint256 => string)",
              "numberOfBytes": "32"
            },
            "t_string_storage": {
              "label": "string",
              "numberOfBytes": "32"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            }
          },
          "layoutVersion": "1.1",
          "flat": true
        }
      },
      "HouseBusiness": {
        "src": "contracts\\HouseBusiness.sol:1481",
        "version": {
          "withMetadata": "01cf9f55902ad1000bea262690198971cf0ea906f13c02d44e37ce3fc53b3cd6",
          "withoutMetadata": "9ebf974dce5db3f0f3d857b49e954623c772830b6f026b95795abbed1fb38ccb",
          "linkedWithoutMetadata": "9ebf974dce5db3f0f3d857b49e954623c772830b6f026b95795abbed1fb38ccb"
        },
        "inherit": [
          "ERC721URIStorage",
          "ERC721",
          "IERC721Metadata",
          "IERC721",
          "ERC165",
          "IERC165",
          "Context"
        ],
        "libraries": [],
        "methods": [
          "(address)",
          "setMinMaxHousePrice(uint256,uint256)",
          "setConfigToken(address)",
          "isMember()",
          "addMember(address)",
          "removeMember(address)",
          "tokenURI(uint256)",
          "setPayable(uint256,address,bool)",
          "mintHouse(string,string,string,string,uint256)",
          "addAllowList(uint256,address)",
          "removeAllowList(uint256,address)",
          "checkAllowedList(uint256,address)",
          "addHistory(uint256,uint256,string,string,string,string,string,uint256)",
          "getHistory(uint256)",
          "editHistory(uint256,uint256,string,string,string,string,string,uint256)",
          "getHistoryType()",
          "addOrEditHType(uint256,string,bool,bool,bool,bool,bool,bool,bool)",
          "removeHistoryType(uint256)",
          "getMinMaxNFT()",
          "getTokenOwner(uint256)",
          "buyHouseNft(uint256)",
          "sendToken(address,uint256)",
          "changeTokenPrice(uint256,uint256)",
          "getAllHouses()",
          "getAllPayableHouses()",
          "getAllMyHouses()",
          "withdrawToken(uint256)",
          "withdrawETH(uint256)",
          "calcDiv(uint256,uint256)",
          "setAPYConfig(uint256,uint256)",
          "getAllAPYTypes()",
          "stake(uint256,uint256)",
          "unstake(uint256)",
          "stakingFinished(uint256)",
          "totalRewards(address)",
          "claimRewards(address)",
          "getAllMyStakedNFTs()",
          "getTotalInfo()",
          "getAllAPYs()",
          "getPenalty()",
          "setPenalty(uint256)",
          "getRoyalty()",
          "setRoyalty(uint256)"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "HouseBusiness",
            "src": "contracts\\HouseBusiness.sol:1573"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "_name",
              "offset": 0,
              "slot": "0",
              "type": "t_string_storage",
              "contract": "ERC721",
              "src": "contracts\\HouseBusiness.sol:1043"
            },
            {
              "label": "_symbol",
              "offset": 0,
              "slot": "1",
              "type": "t_string_storage",
              "contract": "ERC721",
              "src": "contracts\\HouseBusiness.sol:1046"
            },
            {
              "label": "_owners",
              "offset": 0,
              "slot": "2",
              "type": "t_mapping(t_uint256,t_address)",
              "contract": "ERC721",
              "src": "contracts\\HouseBusiness.sol:1049"
            },
            {
              "label": "_balances",
              "offset": 0,
              "slot": "3",
              "type": "t_mapping(t_address,t_uint256)",
              "contract": "ERC721",
              "src": "contracts\\HouseBusiness.sol:1052"
            },
            {
              "label": "_tokenApprovals",
              "offset": 0,
              "slot": "4",
              "type": "t_mapping(t_uint256,t_address)",
              "contract": "ERC721",
              "src": "contracts\\HouseBusiness.sol:1055"
            },
            {
              "label": "_operatorApprovals",
              "offset": 0,
              "slot": "5",
              "type": "t_mapping(t_address,t_mapping(t_address,t_bool))",
              "contract": "ERC721",
              "src": "contracts\\HouseBusiness.sol:1058"
            },
            {
              "label": "_tokenURIs",
              "offset": 0,
              "slot": "6",
              "type": "t_mapping(t_uint256,t_string_storage)",
              "contract": "ERC721URIStorage",
              "src": "contracts\\HouseBusiness.sol:1450"
            },
            {
              "label": "collectionName",
              "offset": 0,
              "slot": "7",
              "type": "t_string_storage",
              "contract": "HouseBusiness",
              "src": "contracts\\HouseBusiness.sol:1483"
            },
            {
              "label": "collectionNameSymbol",
              "offset": 0,
              "slot": "8",
              "type": "t_string_storage",
              "contract": "HouseBusiness",
              "src": "contracts\\HouseBusiness.sol:1485"
            },
            {
              "label": "houseCounter",
              "offset": 0,
              "slot": "9",
              "type": "t_uint256",
              "contract": "HouseBusiness",
              "src": "contracts\\HouseBusiness.sol:1487"
            },
            {
              "label": "stakedCounter",
              "offset": 0,
              "slot": "10",
              "type": "t_uint256",
              "contract": "HouseBusiness",
              "src": "contracts\\HouseBusiness.sol:1489"
            },
            {
              "label": "soldedCounter",
              "offset": 0,
              "slot": "11",
              "type": "t_uint256",
              "contract": "HouseBusiness",
              "src": "contracts\\HouseBusiness.sol:1491"
            },
            {
              "label": "hTypeCounter",
              "offset": 0,
              "slot": "12",
              "type": "t_uint256",
              "contract": "HouseBusiness",
              "src": "contracts\\HouseBusiness.sol:1493"
            },
            {
              "label": "_token",
              "offset": 0,
              "slot": "13",
              "type": "t_contract(IERC20)68",
              "contract": "HouseBusiness",
              "src": "contracts\\HouseBusiness.sol:1495"
            },
            {
              "label": "minPrice",
              "offset": 0,
              "slot": "14",
              "type": "t_uint256",
              "contract": "HouseBusiness",
              "src": "contracts\\HouseBusiness.sol:1497"
            },
            {
              "label": "maxPrice",
              "offset": 0,
              "slot": "15",
              "type": "t_uint256",
              "contract": "HouseBusiness",
              "src": "contracts\\HouseBusiness.sol:1499"
            },
            {
              "label": "penalty",
              "offset": 0,
              "slot": "16",
              "type": "t_uint256",
              "contract": "HouseBusiness",
              "src": "contracts\\HouseBusiness.sol:1501"
            },
            {
              "label": "royalty",
              "offset": 0,
              "slot": "17",
              "type": "t_uint256",
              "contract": "HouseBusiness",
              "src": "contracts\\HouseBusiness.sol:1503"
            },
            {
              "label": "historyTypes",
              "offset": 0,
              "slot": "18",
              "type": "t_array(t_struct(HistoryType)2350_storage)dyn_storage",
              "contract": "HouseBusiness",
              "src": "contracts\\HouseBusiness.sol:1553"
            },
            {
              "label": "houseHistories",
              "offset": 0,
              "slot": "19",
              "type": "t_mapping(t_uint256,t_array(t_struct(History)2331_storage)dyn_storage)",
              "contract": "HouseBusiness",
              "src": "contracts\\HouseBusiness.sol:1555"
            },
            {
              "label": "APYtypes",
              "offset": 0,
              "slot": "20",
              "type": "t_array(t_uint256)dyn_storage",
              "contract": "HouseBusiness",
              "src": "contracts\\HouseBusiness.sol:1557"
            },
            {
              "label": "APYConfig",
              "offset": 0,
              "slot": "21",
              "type": "t_mapping(t_uint256,t_uint256)",
              "contract": "HouseBusiness",
              "src": "contracts\\HouseBusiness.sol:1559"
            },
            {
              "label": "allMembers",
              "offset": 0,
              "slot": "22",
              "type": "t_mapping(t_address,t_bool)",
              "contract": "HouseBusiness",
              "src": "contracts\\HouseBusiness.sol:1561"
            },
            {
              "label": "allHouses",
              "offset": 0,
              "slot": "23",
              "type": "t_mapping(t_uint256,t_struct(House)2299_storage)",
              "contract": "HouseBusiness",
              "src": "contracts\\HouseBusiness.sol:1563"
            },
            {
              "label": "allowedList",
              "offset": 0,
              "slot": "24",
              "type": "t_mapping(t_uint256,t_mapping(t_address,t_bool))",
              "contract": "HouseBusiness",
              "src": "contracts\\HouseBusiness.sol:1565"
            },
            {
              "label": "stakedNfts",
              "offset": 0,
              "slot": "25",
              "type": "t_mapping(t_address,t_array(t_struct(StakedNft)2316_storage)dyn_storage)",
              "contract": "HouseBusiness",
              "src": "contracts\\HouseBusiness.sol:1571"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            },
            "t_array(t_struct(History)2331_storage)dyn_storage": {
              "label": "struct HouseBusiness.History[]",
              "numberOfBytes": "32"
            },
            "t_array(t_struct(HistoryType)2350_storage)dyn_storage": {
              "label": "struct HouseBusiness.HistoryType[]",
              "numberOfBytes": "32"
            },
            "t_array(t_struct(StakedNft)2316_storage)dyn_storage": {
              "label": "struct HouseBusiness.StakedNft[]",
              "numberOfBytes": "32"
            },
            "t_array(t_uint256)dyn_storage": {
              "label": "uint256[]",
              "numberOfBytes": "32"
            },
            "t_bool": {
              "label": "bool",
              "numberOfBytes": "1"
            },
            "t_contract(IERC20)68": {
              "label": "contract IERC20",
              "numberOfBytes": "20"
            },
            "t_mapping(t_address,t_array(t_struct(StakedNft)2316_storage)dyn_storage)": {
              "label": "mapping(address => struct HouseBusiness.StakedNft[])",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_bool)": {
              "label": "mapping(address => bool)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_mapping(t_address,t_bool))": {
              "label": "mapping(address => mapping(address => bool))",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_uint256)": {
              "label": "mapping(address => uint256)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_uint256,t_address)": {
              "label": "mapping(uint256 => address)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_uint256,t_array(t_struct(History)2331_storage)dyn_storage)": {
              "label": "mapping(uint256 => struct HouseBusiness.History[])",
              "numberOfBytes": "32"
            },
            "t_mapping(t_uint256,t_mapping(t_address,t_bool))": {
              "label": "mapping(uint256 => mapping(address => bool))",
              "numberOfBytes": "32"
            },
            "t_mapping(t_uint256,t_string_storage)": {
              "label": "mapping(uint256 => string)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_uint256,t_struct(House)2299_storage)": {
              "label": "mapping(uint256 => struct HouseBusiness.House)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_uint256,t_uint256)": {
              "label": "mapping(uint256 => uint256)",
              "numberOfBytes": "32"
            },
            "t_string_storage": {
              "label": "string",
              "numberOfBytes": "32"
            },
            "t_struct(History)2331_storage": {
              "label": "struct HouseBusiness.History",
              "members": [
                {
                  "label": "hID",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "0"
                },
                {
                  "label": "houseImg",
                  "type": "t_string_storage",
                  "offset": 0,
                  "slot": "1"
                },
                {
                  "label": "houseBrand",
                  "type": "t_string_storage",
                  "offset": 0,
                  "slot": "2"
                },
                {
                  "label": "desc",
                  "type": "t_string_storage",
                  "offset": 0,
                  "slot": "3"
                },
                {
                  "label": "history",
                  "type": "t_string_storage",
                  "offset": 0,
                  "slot": "4"
                },
                {
                  "label": "brandType",
                  "type": "t_string_storage",
                  "offset": 0,
                  "slot": "5"
                },
                {
                  "label": "yearField",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "6"
                }
              ],
              "numberOfBytes": "224"
            },
            "t_struct(HistoryType)2350_storage": {
              "label": "struct HouseBusiness.HistoryType",
              "members": [
                {
                  "label": "hID",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "0"
                },
                {
                  "label": "hLabel",
                  "type": "t_string_storage",
                  "offset": 0,
                  "slot": "1"
                },
                {
                  "label": "connectContract",
                  "type": "t_bool",
                  "offset": 0,
                  "slot": "2"
                },
                {
                  "label": "imgNeed",
                  "type": "t_bool",
                  "offset": 1,
                  "slot": "2"
                },
                {
                  "label": "brandNeed",
                  "type": "t_bool",
                  "offset": 2,
                  "slot": "2"
                },
                {
                  "label": "descNeed",
                  "type": "t_bool",
                  "offset": 3,
                  "slot": "2"
                },
                {
                  "label": "brandTypeNeed",
                  "type": "t_bool",
                  "offset": 4,
                  "slot": "2"
                },
                {
                  "label": "yearNeed",
                  "type": "t_bool",
                  "offset": 5,
                  "slot": "2"
                },
                {
                  "label": "checkMark",
                  "type": "t_bool",
                  "offset": 6,
                  "slot": "2"
                }
              ],
              "numberOfBytes": "96"
            },
            "t_struct(House)2299_storage": {
              "label": "struct HouseBusiness.House",
              "members": [
                {
                  "label": "tokenId",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "0"
                },
                {
                  "label": "tokenName",
                  "type": "t_string_storage",
                  "offset": 0,
                  "slot": "1"
                },
                {
                  "label": "tokenURI",
                  "type": "t_string_storage",
                  "offset": 0,
                  "slot": "2"
                },
                {
                  "label": "tokenType",
                  "type": "t_string_storage",
                  "offset": 0,
                  "slot": "3"
                },
                {
                  "label": "currentOwner",
                  "type": "t_address",
                  "offset": 0,
                  "slot": "4"
                },
                {
                  "label": "previousOwner",
                  "type": "t_address",
                  "offset": 0,
                  "slot": "5"
                },
                {
                  "label": "buyer",
                  "type": "t_address",
                  "offset": 0,
                  "slot": "6"
                },
                {
                  "label": "price",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "7"
                },
                {
                  "label": "numberOfTransfers",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "8"
                },
                {
                  "label": "nftPayable",
                  "type": "t_bool",
                  "offset": 0,
                  "slot": "9"
                },
                {
                  "label": "staked",
                  "type": "t_bool",
                  "offset": 1,
                  "slot": "9"
                },
                {
                  "label": "soldstatus",
                  "type": "t_bool",
                  "offset": 2,
                  "slot": "9"
                }
              ],
              "numberOfBytes": "320"
            },
            "t_struct(StakedNft)2316_storage": {
              "label": "struct HouseBusiness.StakedNft",
              "members": [
                {
                  "label": "owner",
                  "type": "t_address",
                  "offset": 0,
                  "slot": "0"
                },
                {
                  "label": "tokenId",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "1"
                },
                {
                  "label": "startedDate",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "2"
                },
                {
                  "label": "endDate",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "3"
                },
                {
                  "label": "claimDate",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "4"
                },
                {
                  "label": "stakingType",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "5"
                },
                {
                  "label": "perSecRewards",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "6"
                },
                {
                  "label": "stakingStatus",
                  "type": "t_bool",
                  "offset": 0,
                  "slot": "7"
                }
              ],
              "numberOfBytes": "256"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            }
          },
          "layoutVersion": "1.1",
          "flat": true
        }
      },
      "IERC165": {
        "src": "contracts\\HouseBusiness.sol:784",
        "inherit": [],
        "libraries": [],
        "methods": [
          "supportsInterface(bytes4)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "IERC20": {
        "src": "contracts\\HouseBusiness.sol:763",
        "inherit": [],
        "libraries": [],
        "methods": [
          "totalSupply()",
          "balanceOf(address)",
          "allowance(address,address)",
          "transfer(address,uint256)",
          "approve(address,uint256)",
          "transferFrom(address,address,uint256)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "IERC721": {
        "src": "contracts\\HouseBusiness.sol:788",
        "inherit": [
          "IERC165"
        ],
        "libraries": [],
        "methods": [
          "balanceOf(address)",
          "ownerOf(uint256)",
          "safeTransferFrom(address,address,uint256)",
          "transferFrom(address,address,uint256)",
          "approve(address,uint256)",
          "getApproved(uint256)",
          "setApprovalForAll(address,bool)",
          "isApprovedForAll(address,address)",
          "safeTransferFrom(address,address,uint256,bytes)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "IERC721Enumerable": {
        "src": "contracts\\HouseBusiness.sol:1361",
        "inherit": [
          "IERC721",
          "IERC165"
        ],
        "libraries": [],
        "methods": [
          "totalSupply()",
          "tokenOfOwnerByIndex(address,uint256)",
          "tokenByIndex(uint256)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "IERC721Metadata": {
        "src": "contracts\\HouseBusiness.sol:834",
        "inherit": [
          "IERC721",
          "IERC165"
        ],
        "libraries": [],
        "methods": [
          "name()",
          "symbol()",
          "tokenURI(uint256)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "IERC721Receiver": {
        "src": "contracts\\HouseBusiness.sol:825",
        "inherit": [],
        "libraries": [],
        "methods": [
          "onERC721Received(address,address,uint256,bytes)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "Ownable": {
        "src": "contracts\\HouseBusiness.sol:1324",
        "inherit": [
          "Context"
        ],
        "libraries": [],
        "methods": [
          "owner()",
          "renounceOwnership()",
          "transferOwnership(address)"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "Ownable",
            "src": "contracts\\HouseBusiness.sol:1329"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "_owner",
              "offset": 0,
              "slot": "0",
              "type": "t_address",
              "contract": "Ownable",
              "src": "contracts\\HouseBusiness.sol:1325"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            }
          },
          "layoutVersion": "1.1",
          "flat": true
        }
      },
      "SafeMath": {
        "src": "contracts\\HouseBusiness.sol:954",
        "version": {
          "withMetadata": "6a2a32ca99369fedabb9e8210b70d50df88008feba9a71d19fb11c57e6a4c04a",
          "withoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db",
          "linkedWithoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db"
        },
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "Strings": {
        "src": "contracts\\HouseBusiness.sol:984",
        "version": {
          "withMetadata": "9dfaac98eff0313457ec5020f4afaf5f23a7922cbc6b919ab04a26dc04743e7b",
          "withoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db",
          "linkedWithoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db"
        },
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      }
    },
    {
      "IERC20": {
        "src": "@openzeppelin\\contracts\\token\\ERC20\\IERC20.sol:9",
        "inherit": [],
        "libraries": [],
        "methods": [
          "totalSupply()",
          "balanceOf(address)",
          "transfer(address,uint256)",
          "allowance(address,address)",
          "approve(address,uint256)",
          "transferFrom(address,address,uint256)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "ERC721": {
        "src": "@openzeppelin\\contracts\\token\\ERC721\\ERC721.sol:19",
        "version": {
          "withMetadata": "311027b738fb50ea92c84baf68eacb931adf05de03da13635a661dc9c5b03f73",
          "withoutMetadata": "9ec7f439077c3b762bc3aa6a17c55aba7a78d240190c9c7814df896455a0f780",
          "linkedWithoutMetadata": "9ec7f439077c3b762bc3aa6a17c55aba7a78d240190c9c7814df896455a0f780"
        },
        "inherit": [
          "IERC721Metadata",
          "IERC721",
          "ERC165",
          "IERC165",
          "Context"
        ],
        "libraries": [
          "Address",
          "Strings"
        ],
        "methods": [
          "(string,string)",
          "supportsInterface(bytes4)",
          "balanceOf(address)",
          "ownerOf(uint256)",
          "name()",
          "symbol()",
          "tokenURI(uint256)",
          "approve(address,uint256)",
          "getApproved(uint256)",
          "setApprovalForAll(address,bool)",
          "isApprovedForAll(address,address)",
          "transferFrom(address,address,uint256)",
          "safeTransferFrom(address,address,uint256)",
          "safeTransferFrom(address,address,uint256,bytes)"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "ERC721",
            "src": "@openzeppelin\\contracts\\token\\ERC721\\ERC721.sol:44"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "_name",
              "offset": 0,
              "slot": "0",
              "type": "t_string_storage",
              "contract": "ERC721",
              "src": "@openzeppelin\\contracts\\token\\ERC721\\ERC721.sol:24"
            },
            {
              "label": "_symbol",
              "offset": 0,
              "slot": "1",
              "type": "t_string_storage",
              "contract": "ERC721",
              "src": "@openzeppelin\\contracts\\token\\ERC721\\ERC721.sol:27"
            },
            {
              "label": "_owners",
              "offset": 0,
              "slot": "2",
              "type": "t_mapping(t_uint256,t_address)",
              "contract": "ERC721",
              "src": "@openzeppelin\\contracts\\token\\ERC721\\ERC721.sol:30"
            },
            {
              "label": "_balances",
              "offset": 0,
              "slot": "3",
              "type": "t_mapping(t_address,t_uint256)",
              "contract": "ERC721",
              "src": "@openzeppelin\\contracts\\token\\ERC721\\ERC721.sol:33"
            },
            {
              "label": "_tokenApprovals",
              "offset": 0,
              "slot": "4",
              "type": "t_mapping(t_uint256,t_address)",
              "contract": "ERC721",
              "src": "@openzeppelin\\contracts\\token\\ERC721\\ERC721.sol:36"
            },
            {
              "label": "_operatorApprovals",
              "offset": 0,
              "slot": "5",
              "type": "t_mapping(t_address,t_mapping(t_address,t_bool))",
              "contract": "ERC721",
              "src": "@openzeppelin\\contracts\\token\\ERC721\\ERC721.sol:39"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            },
            "t_bool": {
              "label": "bool",
              "numberOfBytes": "1"
            },
            "t_mapping(t_address,t_bool)": {
              "label": "mapping(address => bool)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_mapping(t_address,t_bool))": {
              "label": "mapping(address => mapping(address => bool))",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_uint256)": {
              "label": "mapping(address => uint256)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_uint256,t_address)": {
              "label": "mapping(uint256 => address)",
              "numberOfBytes": "32"
            },
            "t_string_storage": {
              "label": "string",
              "numberOfBytes": "32"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            }
          },
          "layoutVersion": "1.1",
          "flat": true
        }
      },
      "IERC721": {
        "src": "@openzeppelin\\contracts\\token\\ERC721\\IERC721.sol:11",
        "inherit": [
          "IERC165"
        ],
        "libraries": [],
        "methods": [
          "balanceOf(address)",
          "ownerOf(uint256)",
          "safeTransferFrom(address,address,uint256,bytes)",
          "safeTransferFrom(address,address,uint256)",
          "transferFrom(address,address,uint256)",
          "approve(address,uint256)",
          "setApprovalForAll(address,bool)",
          "getApproved(uint256)",
          "isApprovedForAll(address,address)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "IERC721Receiver": {
        "src": "@openzeppelin\\contracts\\token\\ERC721\\IERC721Receiver.sol:11",
        "inherit": [],
        "libraries": [],
        "methods": [
          "onERC721Received(address,address,uint256,bytes)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "ERC721URIStorage": {
        "src": "@openzeppelin\\contracts\\token\\ERC721\\extensions\\ERC721URIStorage.sol:11",
        "inherit": [
          "ERC721",
          "IERC721Metadata",
          "IERC721",
          "ERC165",
          "IERC165",
          "Context"
        ],
        "libraries": [
          "Strings"
        ],
        "methods": [
          "tokenURI(uint256)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [
            {
              "label": "_name",
              "offset": 0,
              "slot": "0",
              "type": "t_string_storage",
              "contract": "ERC721",
              "src": "@openzeppelin\\contracts\\token\\ERC721\\ERC721.sol:24"
            },
            {
              "label": "_symbol",
              "offset": 0,
              "slot": "1",
              "type": "t_string_storage",
              "contract": "ERC721",
              "src": "@openzeppelin\\contracts\\token\\ERC721\\ERC721.sol:27"
            },
            {
              "label": "_owners",
              "offset": 0,
              "slot": "2",
              "type": "t_mapping(t_uint256,t_address)",
              "contract": "ERC721",
              "src": "@openzeppelin\\contracts\\token\\ERC721\\ERC721.sol:30"
            },
            {
              "label": "_balances",
              "offset": 0,
              "slot": "3",
              "type": "t_mapping(t_address,t_uint256)",
              "contract": "ERC721",
              "src": "@openzeppelin\\contracts\\token\\ERC721\\ERC721.sol:33"
            },
            {
              "label": "_tokenApprovals",
              "offset": 0,
              "slot": "4",
              "type": "t_mapping(t_uint256,t_address)",
              "contract": "ERC721",
              "src": "@openzeppelin\\contracts\\token\\ERC721\\ERC721.sol:36"
            },
            {
              "label": "_operatorApprovals",
              "offset": 0,
              "slot": "5",
              "type": "t_mapping(t_address,t_mapping(t_address,t_bool))",
              "contract": "ERC721",
              "src": "@openzeppelin\\contracts\\token\\ERC721\\ERC721.sol:39"
            },
            {
              "label": "_tokenURIs",
              "offset": 0,
              "slot": "6",
              "type": "t_mapping(t_uint256,t_string_storage)",
              "contract": "ERC721URIStorage",
              "src": "@openzeppelin\\contracts\\token\\ERC721\\extensions\\ERC721URIStorage.sol:15"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            },
            "t_bool": {
              "label": "bool",
              "numberOfBytes": "1"
            },
            "t_mapping(t_address,t_bool)": {
              "label": "mapping(address => bool)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_mapping(t_address,t_bool))": {
              "label": "mapping(address => mapping(address => bool))",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_uint256)": {
              "label": "mapping(address => uint256)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_uint256,t_address)": {
              "label": "mapping(uint256 => address)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_uint256,t_string_storage)": {
              "label": "mapping(uint256 => string)",
              "numberOfBytes": "32"
            },
            "t_string_storage": {
              "label": "string",
              "numberOfBytes": "32"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            }
          },
          "layoutVersion": "1.1",
          "flat": true
        }
      },
      "IERC721Metadata": {
        "src": "@openzeppelin\\contracts\\token\\ERC721\\extensions\\IERC721Metadata.sol:12",
        "inherit": [
          "IERC721",
          "IERC165"
        ],
        "libraries": [],
        "methods": [
          "name()",
          "symbol()",
          "tokenURI(uint256)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "Address": {
        "src": "@openzeppelin\\contracts\\utils\\Address.sol:9",
        "version": {
          "withMetadata": "a0500f265408d7c0dbf75da3f9e44a5c2ee85e18bb1b58fe491ffcfa4ea7fd9b",
          "withoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db",
          "linkedWithoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db"
        },
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [
          {
            "kind": "delegatecall",
            "src": "@openzeppelin\\contracts\\utils\\Address.sol:185"
          }
        ],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "Context": {
        "src": "@openzeppelin\\contracts\\utils\\Context.sol:16",
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "Strings": {
        "src": "@openzeppelin\\contracts\\utils\\Strings.sol:11",
        "version": {
          "withMetadata": "c385b5200dd723f945d28b88358d79ca1b5c0f71c28cbbab9acf6d6f3fd15593",
          "withoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db",
          "linkedWithoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db"
        },
        "inherit": [],
        "libraries": [
          "Math"
        ],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "ERC165": {
        "src": "@openzeppelin\\contracts\\utils\\introspection\\ERC165.sol:22",
        "inherit": [
          "IERC165"
        ],
        "libraries": [],
        "methods": [
          "supportsInterface(bytes4)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "IERC165": {
        "src": "@openzeppelin\\contracts\\utils\\introspection\\IERC165.sol:15",
        "inherit": [],
        "libraries": [],
        "methods": [
          "supportsInterface(bytes4)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "Math": {
        "src": "@openzeppelin\\contracts\\utils\\math\\Math.sol:9",
        "version": {
          "withMetadata": "fcaf39e5e702f2902d6ef00c1def75c9800e8d2a0a78a87cf542096cafc7a4b0",
          "withoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db",
          "linkedWithoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db"
        },
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "HouseBusiness": {
        "src": "contracts\\HouseBusiness.sol:11",
        "version": {
          "withMetadata": "fa774d66b152007f2b360662bdd195d78f01fe0be6d5d45836a5c61504f11885",
          "withoutMetadata": "461fbe15dff4de5f4d7d8283df0732e25e73ea2a0bee38d5118e6c128cfdea20",
          "linkedWithoutMetadata": "461fbe15dff4de5f4d7d8283df0732e25e73ea2a0bee38d5118e6c128cfdea20"
        },
        "inherit": [
          "ERC721URIStorage",
          "ERC721",
          "IERC721Metadata",
          "IERC721",
          "ERC165",
          "IERC165",
          "Context"
        ],
        "libraries": [],
        "methods": [
          "(address)",
          "setMinMaxHousePrice(uint256,uint256)",
          "setConfigToken(address)",
          "isMember()",
          "addMember(address)",
          "removeMember(address)",
          "tokenURI(uint256)",
          "setCContractAddress(address)",
          "setPayable(uint256,address,bool)",
          "mintHouse(string,string,string,string,uint256)",
          "addAllowList(uint256,address)",
          "removeAllowList(uint256,address)",
          "checkAllowedList(uint256,address)",
          "addHistory(uint256,uint256,uint256,string,string,string,string,string,uint256)",
          "getHistory(uint256)",
          "editHistory(uint256,uint256,string,string,string,string,string,uint256)",
          "getHistoryType()",
          "addOrEditHType(uint256,string,bool,bool,bool,bool,bool,bool,bool)",
          "removeHistoryType(uint256)",
          "getMinMaxNFT()",
          "getTokenOwner(uint256)",
          "buyHouseNft(uint256)",
          "sendToken(address,uint256)",
          "changeTokenPrice(uint256,uint256)",
          "getAllHouses()",
          "getAllPayableHouses()",
          "getAllMyHouses()",
          "withdrawToken(uint256)",
          "withdrawETH(uint256)",
          "calcDiv(uint256,uint256)",
          "setAPYConfig(uint256,uint256)",
          "getAllAPYTypes()",
          "stake(uint256,uint256)",
          "unstake(uint256)",
          "stakingFinished(uint256)",
          "totalRewards(address)",
          "claimRewards(address)",
          "getAllMyStakedNFTs()",
          "getTotalInfo()",
          "getAllAPYs()",
          "getPenalty()",
          "setPenalty(uint256)",
          "getRoyalty()",
          "setRoyalty(uint256)"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "HouseBusiness",
            "src": "contracts\\HouseBusiness.sol:106"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "_name",
              "offset": 0,
              "slot": "0",
              "type": "t_string_storage",
              "contract": "ERC721",
              "src": "@openzeppelin\\contracts\\token\\ERC721\\ERC721.sol:24"
            },
            {
              "label": "_symbol",
              "offset": 0,
              "slot": "1",
              "type": "t_string_storage",
              "contract": "ERC721",
              "src": "@openzeppelin\\contracts\\token\\ERC721\\ERC721.sol:27"
            },
            {
              "label": "_owners",
              "offset": 0,
              "slot": "2",
              "type": "t_mapping(t_uint256,t_address)",
              "contract": "ERC721",
              "src": "@openzeppelin\\contracts\\token\\ERC721\\ERC721.sol:30"
            },
            {
              "label": "_balances",
              "offset": 0,
              "slot": "3",
              "type": "t_mapping(t_address,t_uint256)",
              "contract": "ERC721",
              "src": "@openzeppelin\\contracts\\token\\ERC721\\ERC721.sol:33"
            },
            {
              "label": "_tokenApprovals",
              "offset": 0,
              "slot": "4",
              "type": "t_mapping(t_uint256,t_address)",
              "contract": "ERC721",
              "src": "@openzeppelin\\contracts\\token\\ERC721\\ERC721.sol:36"
            },
            {
              "label": "_operatorApprovals",
              "offset": 0,
              "slot": "5",
              "type": "t_mapping(t_address,t_mapping(t_address,t_bool))",
              "contract": "ERC721",
              "src": "@openzeppelin\\contracts\\token\\ERC721\\ERC721.sol:39"
            },
            {
              "label": "_tokenURIs",
              "offset": 0,
              "slot": "6",
              "type": "t_mapping(t_uint256,t_string_storage)",
              "contract": "ERC721URIStorage",
              "src": "@openzeppelin\\contracts\\token\\ERC721\\extensions\\ERC721URIStorage.sol:15"
            },
            {
              "label": "collectionName",
              "offset": 0,
              "slot": "7",
              "type": "t_string_storage",
              "contract": "HouseBusiness",
              "src": "contracts\\HouseBusiness.sol:13"
            },
            {
              "label": "collectionNameSymbol",
              "offset": 0,
              "slot": "8",
              "type": "t_string_storage",
              "contract": "HouseBusiness",
              "src": "contracts\\HouseBusiness.sol:15"
            },
            {
              "label": "houseCounter",
              "offset": 0,
              "slot": "9",
              "type": "t_uint256",
              "contract": "HouseBusiness",
              "src": "contracts\\HouseBusiness.sol:17"
            },
            {
              "label": "stakedCounter",
              "offset": 0,
              "slot": "10",
              "type": "t_uint256",
              "contract": "HouseBusiness",
              "src": "contracts\\HouseBusiness.sol:19"
            },
            {
              "label": "soldedCounter",
              "offset": 0,
              "slot": "11",
              "type": "t_uint256",
              "contract": "HouseBusiness",
              "src": "contracts\\HouseBusiness.sol:21"
            },
            {
              "label": "hTypeCounter",
              "offset": 0,
              "slot": "12",
              "type": "t_uint256",
              "contract": "HouseBusiness",
              "src": "contracts\\HouseBusiness.sol:23"
            },
            {
              "label": "_token",
              "offset": 0,
              "slot": "13",
              "type": "t_contract(IERC20)77",
              "contract": "HouseBusiness",
              "src": "contracts\\HouseBusiness.sol:25"
            },
            {
              "label": "minPrice",
              "offset": 0,
              "slot": "14",
              "type": "t_uint256",
              "contract": "HouseBusiness",
              "src": "contracts\\HouseBusiness.sol:27"
            },
            {
              "label": "maxPrice",
              "offset": 0,
              "slot": "15",
              "type": "t_uint256",
              "contract": "HouseBusiness",
              "src": "contracts\\HouseBusiness.sol:29"
            },
            {
              "label": "penalty",
              "offset": 0,
              "slot": "16",
              "type": "t_uint256",
              "contract": "HouseBusiness",
              "src": "contracts\\HouseBusiness.sol:31"
            },
            {
              "label": "royalty",
              "offset": 0,
              "slot": "17",
              "type": "t_uint256",
              "contract": "HouseBusiness",
              "src": "contracts\\HouseBusiness.sol:33"
            },
            {
              "label": "cContractAddress",
              "offset": 0,
              "slot": "18",
              "type": "t_address",
              "contract": "HouseBusiness",
              "src": "contracts\\HouseBusiness.sol:35"
            },
            {
              "label": "historyTypes",
              "offset": 0,
              "slot": "19",
              "type": "t_array(t_struct(HistoryType)2850_storage)dyn_storage",
              "contract": "HouseBusiness",
              "src": "contracts\\HouseBusiness.sol:86"
            },
            {
              "label": "houseHistories",
              "offset": 0,
              "slot": "20",
              "type": "t_mapping(t_uint256,t_array(t_struct(History)2831_storage)dyn_storage)",
              "contract": "HouseBusiness",
              "src": "contracts\\HouseBusiness.sol:88"
            },
            {
              "label": "APYtypes",
              "offset": 0,
              "slot": "21",
              "type": "t_array(t_uint256)dyn_storage",
              "contract": "HouseBusiness",
              "src": "contracts\\HouseBusiness.sol:90"
            },
            {
              "label": "APYConfig",
              "offset": 0,
              "slot": "22",
              "type": "t_mapping(t_uint256,t_uint256)",
              "contract": "HouseBusiness",
              "src": "contracts\\HouseBusiness.sol:92"
            },
            {
              "label": "allMembers",
              "offset": 0,
              "slot": "23",
              "type": "t_mapping(t_address,t_bool)",
              "contract": "HouseBusiness",
              "src": "contracts\\HouseBusiness.sol:94"
            },
            {
              "label": "allHouses",
              "offset": 0,
              "slot": "24",
              "type": "t_mapping(t_uint256,t_struct(House)2797_storage)",
              "contract": "HouseBusiness",
              "src": "contracts\\HouseBusiness.sol:96"
            },
            {
              "label": "allowedList",
              "offset": 0,
              "slot": "25",
              "type": "t_mapping(t_uint256,t_mapping(t_address,t_bool))",
              "contract": "HouseBusiness",
              "src": "contracts\\HouseBusiness.sol:98"
            },
            {
              "label": "stakedNfts",
              "offset": 0,
              "slot": "26",
              "type": "t_mapping(t_address,t_array(t_struct(StakedNft)2814_storage)dyn_storage)",
              "contract": "HouseBusiness",
              "src": "contracts\\HouseBusiness.sol:104"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            },
            "t_array(t_struct(History)2831_storage)dyn_storage": {
              "label": "struct HouseBusiness.History[]",
              "numberOfBytes": "32"
            },
            "t_array(t_struct(HistoryType)2850_storage)dyn_storage": {
              "label": "struct HouseBusiness.HistoryType[]",
              "numberOfBytes": "32"
            },
            "t_array(t_struct(StakedNft)2814_storage)dyn_storage": {
              "label": "struct HouseBusiness.StakedNft[]",
              "numberOfBytes": "32"
            },
            "t_array(t_uint256)dyn_storage": {
              "label": "uint256[]",
              "numberOfBytes": "32"
            },
            "t_bool": {
              "label": "bool",
              "numberOfBytes": "1"
            },
            "t_contract(IERC20)77": {
              "label": "contract IERC20",
              "numberOfBytes": "20"
            },
            "t_mapping(t_address,t_array(t_struct(StakedNft)2814_storage)dyn_storage)": {
              "label": "mapping(address => struct HouseBusiness.StakedNft[])",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_bool)": {
              "label": "mapping(address => bool)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_mapping(t_address,t_bool))": {
              "label": "mapping(address => mapping(address => bool))",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_uint256)": {
              "label": "mapping(address => uint256)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_uint256,t_address)": {
              "label": "mapping(uint256 => address)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_uint256,t_array(t_struct(History)2831_storage)dyn_storage)": {
              "label": "mapping(uint256 => struct HouseBusiness.History[])",
              "numberOfBytes": "32"
            },
            "t_mapping(t_uint256,t_mapping(t_address,t_bool))": {
              "label": "mapping(uint256 => mapping(address => bool))",
              "numberOfBytes": "32"
            },
            "t_mapping(t_uint256,t_string_storage)": {
              "label": "mapping(uint256 => string)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_uint256,t_struct(House)2797_storage)": {
              "label": "mapping(uint256 => struct HouseBusiness.House)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_uint256,t_uint256)": {
              "label": "mapping(uint256 => uint256)",
              "numberOfBytes": "32"
            },
            "t_string_storage": {
              "label": "string",
              "numberOfBytes": "32"
            },
            "t_struct(History)2831_storage": {
              "label": "struct HouseBusiness.History",
              "members": [
                {
                  "label": "hID",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "0"
                },
                {
                  "label": "contractId",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "1"
                },
                {
                  "label": "houseImg",
                  "type": "t_string_storage",
                  "offset": 0,
                  "slot": "2"
                },
                {
                  "label": "houseBrand",
                  "type": "t_string_storage",
                  "offset": 0,
                  "slot": "3"
                },
                {
                  "label": "desc",
                  "type": "t_string_storage",
                  "offset": 0,
                  "slot": "4"
                },
                {
                  "label": "history",
                  "type": "t_string_storage",
                  "offset": 0,
                  "slot": "5"
                },
                {
                  "label": "brandType",
                  "type": "t_string_storage",
                  "offset": 0,
                  "slot": "6"
                },
                {
                  "label": "yearField",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "7"
                }
              ],
              "numberOfBytes": "256"
            },
            "t_struct(HistoryType)2850_storage": {
              "label": "struct HouseBusiness.HistoryType",
              "members": [
                {
                  "label": "hID",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "0"
                },
                {
                  "label": "hLabel",
                  "type": "t_string_storage",
                  "offset": 0,
                  "slot": "1"
                },
                {
                  "label": "connectContract",
                  "type": "t_bool",
                  "offset": 0,
                  "slot": "2"
                },
                {
                  "label": "imgNeed",
                  "type": "t_bool",
                  "offset": 1,
                  "slot": "2"
                },
                {
                  "label": "brandNeed",
                  "type": "t_bool",
                  "offset": 2,
                  "slot": "2"
                },
                {
                  "label": "descNeed",
                  "type": "t_bool",
                  "offset": 3,
                  "slot": "2"
                },
                {
                  "label": "brandTypeNeed",
                  "type": "t_bool",
                  "offset": 4,
                  "slot": "2"
                },
                {
                  "label": "yearNeed",
                  "type": "t_bool",
                  "offset": 5,
                  "slot": "2"
                },
                {
                  "label": "checkMark",
                  "type": "t_bool",
                  "offset": 6,
                  "slot": "2"
                }
              ],
              "numberOfBytes": "96"
            },
            "t_struct(House)2797_storage": {
              "label": "struct HouseBusiness.House",
              "members": [
                {
                  "label": "tokenId",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "0"
                },
                {
                  "label": "tokenName",
                  "type": "t_string_storage",
                  "offset": 0,
                  "slot": "1"
                },
                {
                  "label": "tokenURI",
                  "type": "t_string_storage",
                  "offset": 0,
                  "slot": "2"
                },
                {
                  "label": "tokenType",
                  "type": "t_string_storage",
                  "offset": 0,
                  "slot": "3"
                },
                {
                  "label": "currentOwner",
                  "type": "t_address",
                  "offset": 0,
                  "slot": "4"
                },
                {
                  "label": "previousOwner",
                  "type": "t_address",
                  "offset": 0,
                  "slot": "5"
                },
                {
                  "label": "buyer",
                  "type": "t_address",
                  "offset": 0,
                  "slot": "6"
                },
                {
                  "label": "price",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "7"
                },
                {
                  "label": "numberOfTransfers",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "8"
                },
                {
                  "label": "nftPayable",
                  "type": "t_bool",
                  "offset": 0,
                  "slot": "9"
                },
                {
                  "label": "staked",
                  "type": "t_bool",
                  "offset": 1,
                  "slot": "9"
                },
                {
                  "label": "soldstatus",
                  "type": "t_bool",
                  "offset": 2,
                  "slot": "9"
                }
              ],
              "numberOfBytes": "320"
            },
            "t_struct(StakedNft)2814_storage": {
              "label": "struct HouseBusiness.StakedNft",
              "members": [
                {
                  "label": "owner",
                  "type": "t_address",
                  "offset": 0,
                  "slot": "0"
                },
                {
                  "label": "tokenId",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "1"
                },
                {
                  "label": "startedDate",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "2"
                },
                {
                  "label": "endDate",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "3"
                },
                {
                  "label": "claimDate",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "4"
                },
                {
                  "label": "stakingType",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "5"
                },
                {
                  "label": "perSecRewards",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "6"
                },
                {
                  "label": "stakingStatus",
                  "type": "t_bool",
                  "offset": 0,
                  "slot": "7"
                }
              ],
              "numberOfBytes": "256"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            }
          },
          "layoutVersion": "1.1",
          "flat": true
        }
      },
      "IMainCleanContract": {
        "src": "contracts\\interfaces\\IContract.sol:6",
        "inherit": [],
        "libraries": [],
        "methods": [
          "allCleanContracts(uint256)",
          "transferContractOwnership(uint256,address,address)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      }
    },
    {
      "IERC20": {
        "src": "@openzeppelin\\contracts\\token\\ERC20\\IERC20.sol:9",
        "inherit": [],
        "libraries": [],
        "methods": [
          "totalSupply()",
          "balanceOf(address)",
          "transfer(address,uint256)",
          "allowance(address,address)",
          "approve(address,uint256)",
          "transferFrom(address,address,uint256)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "ERC721": {
        "src": "@openzeppelin\\contracts\\token\\ERC721\\ERC721.sol:19",
        "version": {
          "withMetadata": "311027b738fb50ea92c84baf68eacb931adf05de03da13635a661dc9c5b03f73",
          "withoutMetadata": "9ec7f439077c3b762bc3aa6a17c55aba7a78d240190c9c7814df896455a0f780",
          "linkedWithoutMetadata": "9ec7f439077c3b762bc3aa6a17c55aba7a78d240190c9c7814df896455a0f780"
        },
        "inherit": [
          "IERC721Metadata",
          "IERC721",
          "ERC165",
          "IERC165",
          "Context"
        ],
        "libraries": [
          "Address",
          "Strings"
        ],
        "methods": [
          "(string,string)",
          "supportsInterface(bytes4)",
          "balanceOf(address)",
          "ownerOf(uint256)",
          "name()",
          "symbol()",
          "tokenURI(uint256)",
          "approve(address,uint256)",
          "getApproved(uint256)",
          "setApprovalForAll(address,bool)",
          "isApprovedForAll(address,address)",
          "transferFrom(address,address,uint256)",
          "safeTransferFrom(address,address,uint256)",
          "safeTransferFrom(address,address,uint256,bytes)"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "ERC721",
            "src": "@openzeppelin\\contracts\\token\\ERC721\\ERC721.sol:44"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "_name",
              "offset": 0,
              "slot": "0",
              "type": "t_string_storage",
              "contract": "ERC721",
              "src": "@openzeppelin\\contracts\\token\\ERC721\\ERC721.sol:24"
            },
            {
              "label": "_symbol",
              "offset": 0,
              "slot": "1",
              "type": "t_string_storage",
              "contract": "ERC721",
              "src": "@openzeppelin\\contracts\\token\\ERC721\\ERC721.sol:27"
            },
            {
              "label": "_owners",
              "offset": 0,
              "slot": "2",
              "type": "t_mapping(t_uint256,t_address)",
              "contract": "ERC721",
              "src": "@openzeppelin\\contracts\\token\\ERC721\\ERC721.sol:30"
            },
            {
              "label": "_balances",
              "offset": 0,
              "slot": "3",
              "type": "t_mapping(t_address,t_uint256)",
              "contract": "ERC721",
              "src": "@openzeppelin\\contracts\\token\\ERC721\\ERC721.sol:33"
            },
            {
              "label": "_tokenApprovals",
              "offset": 0,
              "slot": "4",
              "type": "t_mapping(t_uint256,t_address)",
              "contract": "ERC721",
              "src": "@openzeppelin\\contracts\\token\\ERC721\\ERC721.sol:36"
            },
            {
              "label": "_operatorApprovals",
              "offset": 0,
              "slot": "5",
              "type": "t_mapping(t_address,t_mapping(t_address,t_bool))",
              "contract": "ERC721",
              "src": "@openzeppelin\\contracts\\token\\ERC721\\ERC721.sol:39"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            },
            "t_bool": {
              "label": "bool",
              "numberOfBytes": "1"
            },
            "t_mapping(t_address,t_bool)": {
              "label": "mapping(address => bool)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_mapping(t_address,t_bool))": {
              "label": "mapping(address => mapping(address => bool))",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_uint256)": {
              "label": "mapping(address => uint256)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_uint256,t_address)": {
              "label": "mapping(uint256 => address)",
              "numberOfBytes": "32"
            },
            "t_string_storage": {
              "label": "string",
              "numberOfBytes": "32"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            }
          },
          "layoutVersion": "1.1",
          "flat": true
        }
      },
      "IERC721": {
        "src": "@openzeppelin\\contracts\\token\\ERC721\\IERC721.sol:11",
        "inherit": [
          "IERC165"
        ],
        "libraries": [],
        "methods": [
          "balanceOf(address)",
          "ownerOf(uint256)",
          "safeTransferFrom(address,address,uint256,bytes)",
          "safeTransferFrom(address,address,uint256)",
          "transferFrom(address,address,uint256)",
          "approve(address,uint256)",
          "setApprovalForAll(address,bool)",
          "getApproved(uint256)",
          "isApprovedForAll(address,address)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "IERC721Receiver": {
        "src": "@openzeppelin\\contracts\\token\\ERC721\\IERC721Receiver.sol:11",
        "inherit": [],
        "libraries": [],
        "methods": [
          "onERC721Received(address,address,uint256,bytes)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "ERC721URIStorage": {
        "src": "@openzeppelin\\contracts\\token\\ERC721\\extensions\\ERC721URIStorage.sol:11",
        "inherit": [
          "ERC721",
          "IERC721Metadata",
          "IERC721",
          "ERC165",
          "IERC165",
          "Context"
        ],
        "libraries": [
          "Strings"
        ],
        "methods": [
          "tokenURI(uint256)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [
            {
              "label": "_name",
              "offset": 0,
              "slot": "0",
              "type": "t_string_storage",
              "contract": "ERC721",
              "src": "@openzeppelin\\contracts\\token\\ERC721\\ERC721.sol:24"
            },
            {
              "label": "_symbol",
              "offset": 0,
              "slot": "1",
              "type": "t_string_storage",
              "contract": "ERC721",
              "src": "@openzeppelin\\contracts\\token\\ERC721\\ERC721.sol:27"
            },
            {
              "label": "_owners",
              "offset": 0,
              "slot": "2",
              "type": "t_mapping(t_uint256,t_address)",
              "contract": "ERC721",
              "src": "@openzeppelin\\contracts\\token\\ERC721\\ERC721.sol:30"
            },
            {
              "label": "_balances",
              "offset": 0,
              "slot": "3",
              "type": "t_mapping(t_address,t_uint256)",
              "contract": "ERC721",
              "src": "@openzeppelin\\contracts\\token\\ERC721\\ERC721.sol:33"
            },
            {
              "label": "_tokenApprovals",
              "offset": 0,
              "slot": "4",
              "type": "t_mapping(t_uint256,t_address)",
              "contract": "ERC721",
              "src": "@openzeppelin\\contracts\\token\\ERC721\\ERC721.sol:36"
            },
            {
              "label": "_operatorApprovals",
              "offset": 0,
              "slot": "5",
              "type": "t_mapping(t_address,t_mapping(t_address,t_bool))",
              "contract": "ERC721",
              "src": "@openzeppelin\\contracts\\token\\ERC721\\ERC721.sol:39"
            },
            {
              "label": "_tokenURIs",
              "offset": 0,
              "slot": "6",
              "type": "t_mapping(t_uint256,t_string_storage)",
              "contract": "ERC721URIStorage",
              "src": "@openzeppelin\\contracts\\token\\ERC721\\extensions\\ERC721URIStorage.sol:15"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            },
            "t_bool": {
              "label": "bool",
              "numberOfBytes": "1"
            },
            "t_mapping(t_address,t_bool)": {
              "label": "mapping(address => bool)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_mapping(t_address,t_bool))": {
              "label": "mapping(address => mapping(address => bool))",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_uint256)": {
              "label": "mapping(address => uint256)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_uint256,t_address)": {
              "label": "mapping(uint256 => address)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_uint256,t_string_storage)": {
              "label": "mapping(uint256 => string)",
              "numberOfBytes": "32"
            },
            "t_string_storage": {
              "label": "string",
              "numberOfBytes": "32"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            }
          },
          "layoutVersion": "1.1",
          "flat": true
        }
      },
      "IERC721Metadata": {
        "src": "@openzeppelin\\contracts\\token\\ERC721\\extensions\\IERC721Metadata.sol:12",
        "inherit": [
          "IERC721",
          "IERC165"
        ],
        "libraries": [],
        "methods": [
          "name()",
          "symbol()",
          "tokenURI(uint256)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "Address": {
        "src": "@openzeppelin\\contracts\\utils\\Address.sol:9",
        "version": {
          "withMetadata": "a0500f265408d7c0dbf75da3f9e44a5c2ee85e18bb1b58fe491ffcfa4ea7fd9b",
          "withoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db",
          "linkedWithoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db"
        },
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [
          {
            "kind": "delegatecall",
            "src": "@openzeppelin\\contracts\\utils\\Address.sol:185"
          }
        ],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "Context": {
        "src": "@openzeppelin\\contracts\\utils\\Context.sol:16",
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "Strings": {
        "src": "@openzeppelin\\contracts\\utils\\Strings.sol:11",
        "version": {
          "withMetadata": "c385b5200dd723f945d28b88358d79ca1b5c0f71c28cbbab9acf6d6f3fd15593",
          "withoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db",
          "linkedWithoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db"
        },
        "inherit": [],
        "libraries": [
          "Math"
        ],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "ERC165": {
        "src": "@openzeppelin\\contracts\\utils\\introspection\\ERC165.sol:22",
        "inherit": [
          "IERC165"
        ],
        "libraries": [],
        "methods": [
          "supportsInterface(bytes4)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "IERC165": {
        "src": "@openzeppelin\\contracts\\utils\\introspection\\IERC165.sol:15",
        "inherit": [],
        "libraries": [],
        "methods": [
          "supportsInterface(bytes4)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "Math": {
        "src": "@openzeppelin\\contracts\\utils\\math\\Math.sol:9",
        "version": {
          "withMetadata": "fcaf39e5e702f2902d6ef00c1def75c9800e8d2a0a78a87cf542096cafc7a4b0",
          "withoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db",
          "linkedWithoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db"
        },
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "HouseBusiness": {
        "src": "contracts\\HouseBusiness.sol:11",
        "version": {
          "withMetadata": "352b2cf172dd31f4ed43674178c67a8115d08500debf4a836cf5ac0ab6944b7b",
          "withoutMetadata": "a9a24c7ae9f2c84784d7290bc0fe7d149cd6f00e261395ec361f8e1b77ebbd86",
          "linkedWithoutMetadata": "a9a24c7ae9f2c84784d7290bc0fe7d149cd6f00e261395ec361f8e1b77ebbd86"
        },
        "inherit": [
          "ERC721URIStorage",
          "ERC721",
          "IERC721Metadata",
          "IERC721",
          "ERC165",
          "IERC165",
          "Context"
        ],
        "libraries": [],
        "methods": [
          "(address)",
          "setMinMaxHousePrice(uint256,uint256)",
          "setConfigToken(address)",
          "isMember()",
          "addMember(address)",
          "removeMember(address)",
          "tokenURI(uint256)",
          "setCContractAddress(address)",
          "setPayable(uint256,address,bool)",
          "mintHouse(string,string,string,string,uint256)",
          "addAllowList(uint256,address)",
          "removeAllowList(uint256,address)",
          "checkAllowedList(uint256,address)",
          "addHistory(uint256,uint256,uint256,string,string,string,string,string,uint256)",
          "getHistory(uint256)",
          "editHistory(uint256,uint256,string,string,string,string,string,uint256)",
          "getHistoryType()",
          "addOrEditHType(uint256,string,bool,bool,bool,bool,bool,bool,bool)",
          "removeHistoryType(uint256)",
          "getMinMaxNFT()",
          "getTokenOwner(uint256)",
          "buyHouseNft(uint256)",
          "sendToken(address,uint256)",
          "changeTokenPrice(uint256,uint256)",
          "getAllHouses()",
          "getAllPayableHouses()",
          "getAllMyHouses()",
          "withdrawToken(uint256)",
          "withdrawETH(uint256)",
          "calcDiv(uint256,uint256)",
          "setAPYConfig(uint256,uint256)",
          "getAllAPYTypes()",
          "stake(uint256,uint256)",
          "unstake(uint256)",
          "stakingFinished(uint256)",
          "totalRewards(address)",
          "claimRewards(address)",
          "getAllMyStakedNFTs()",
          "getTotalInfo()",
          "getAllAPYs()",
          "getPenalty()",
          "setPenalty(uint256)",
          "getRoyalty()",
          "setRoyalty(uint256)"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "HouseBusiness",
            "src": "contracts\\HouseBusiness.sol:106"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "_name",
              "offset": 0,
              "slot": "0",
              "type": "t_string_storage",
              "contract": "ERC721",
              "src": "@openzeppelin\\contracts\\token\\ERC721\\ERC721.sol:24"
            },
            {
              "label": "_symbol",
              "offset": 0,
              "slot": "1",
              "type": "t_string_storage",
              "contract": "ERC721",
              "src": "@openzeppelin\\contracts\\token\\ERC721\\ERC721.sol:27"
            },
            {
              "label": "_owners",
              "offset": 0,
              "slot": "2",
              "type": "t_mapping(t_uint256,t_address)",
              "contract": "ERC721",
              "src": "@openzeppelin\\contracts\\token\\ERC721\\ERC721.sol:30"
            },
            {
              "label": "_balances",
              "offset": 0,
              "slot": "3",
              "type": "t_mapping(t_address,t_uint256)",
              "contract": "ERC721",
              "src": "@openzeppelin\\contracts\\token\\ERC721\\ERC721.sol:33"
            },
            {
              "label": "_tokenApprovals",
              "offset": 0,
              "slot": "4",
              "type": "t_mapping(t_uint256,t_address)",
              "contract": "ERC721",
              "src": "@openzeppelin\\contracts\\token\\ERC721\\ERC721.sol:36"
            },
            {
              "label": "_operatorApprovals",
              "offset": 0,
              "slot": "5",
              "type": "t_mapping(t_address,t_mapping(t_address,t_bool))",
              "contract": "ERC721",
              "src": "@openzeppelin\\contracts\\token\\ERC721\\ERC721.sol:39"
            },
            {
              "label": "_tokenURIs",
              "offset": 0,
              "slot": "6",
              "type": "t_mapping(t_uint256,t_string_storage)",
              "contract": "ERC721URIStorage",
              "src": "@openzeppelin\\contracts\\token\\ERC721\\extensions\\ERC721URIStorage.sol:15"
            },
            {
              "label": "collectionName",
              "offset": 0,
              "slot": "7",
              "type": "t_string_storage",
              "contract": "HouseBusiness",
              "src": "contracts\\HouseBusiness.sol:13"
            },
            {
              "label": "collectionNameSymbol",
              "offset": 0,
              "slot": "8",
              "type": "t_string_storage",
              "contract": "HouseBusiness",
              "src": "contracts\\HouseBusiness.sol:15"
            },
            {
              "label": "houseCounter",
              "offset": 0,
              "slot": "9",
              "type": "t_uint256",
              "contract": "HouseBusiness",
              "src": "contracts\\HouseBusiness.sol:17"
            },
            {
              "label": "stakedCounter",
              "offset": 0,
              "slot": "10",
              "type": "t_uint256",
              "contract": "HouseBusiness",
              "src": "contracts\\HouseBusiness.sol:19"
            },
            {
              "label": "soldedCounter",
              "offset": 0,
              "slot": "11",
              "type": "t_uint256",
              "contract": "HouseBusiness",
              "src": "contracts\\HouseBusiness.sol:21"
            },
            {
              "label": "hTypeCounter",
              "offset": 0,
              "slot": "12",
              "type": "t_uint256",
              "contract": "HouseBusiness",
              "src": "contracts\\HouseBusiness.sol:23"
            },
            {
              "label": "_token",
              "offset": 0,
              "slot": "13",
              "type": "t_contract(IERC20)77",
              "contract": "HouseBusiness",
              "src": "contracts\\HouseBusiness.sol:25"
            },
            {
              "label": "minPrice",
              "offset": 0,
              "slot": "14",
              "type": "t_uint256",
              "contract": "HouseBusiness",
              "src": "contracts\\HouseBusiness.sol:27"
            },
            {
              "label": "maxPrice",
              "offset": 0,
              "slot": "15",
              "type": "t_uint256",
              "contract": "HouseBusiness",
              "src": "contracts\\HouseBusiness.sol:29"
            },
            {
              "label": "penalty",
              "offset": 0,
              "slot": "16",
              "type": "t_uint256",
              "contract": "HouseBusiness",
              "src": "contracts\\HouseBusiness.sol:31"
            },
            {
              "label": "royalty",
              "offset": 0,
              "slot": "17",
              "type": "t_uint256",
              "contract": "HouseBusiness",
              "src": "contracts\\HouseBusiness.sol:33"
            },
            {
              "label": "cContractAddress",
              "offset": 0,
              "slot": "18",
              "type": "t_address",
              "contract": "HouseBusiness",
              "src": "contracts\\HouseBusiness.sol:35"
            },
            {
              "label": "historyTypes",
              "offset": 0,
              "slot": "19",
              "type": "t_array(t_struct(HistoryType)2850_storage)dyn_storage",
              "contract": "HouseBusiness",
              "src": "contracts\\HouseBusiness.sol:86"
            },
            {
              "label": "houseHistories",
              "offset": 0,
              "slot": "20",
              "type": "t_mapping(t_uint256,t_array(t_struct(History)2831_storage)dyn_storage)",
              "contract": "HouseBusiness",
              "src": "contracts\\HouseBusiness.sol:88"
            },
            {
              "label": "APYtypes",
              "offset": 0,
              "slot": "21",
              "type": "t_array(t_uint256)dyn_storage",
              "contract": "HouseBusiness",
              "src": "contracts\\HouseBusiness.sol:90"
            },
            {
              "label": "APYConfig",
              "offset": 0,
              "slot": "22",
              "type": "t_mapping(t_uint256,t_uint256)",
              "contract": "HouseBusiness",
              "src": "contracts\\HouseBusiness.sol:92"
            },
            {
              "label": "allMembers",
              "offset": 0,
              "slot": "23",
              "type": "t_mapping(t_address,t_bool)",
              "contract": "HouseBusiness",
              "src": "contracts\\HouseBusiness.sol:94"
            },
            {
              "label": "allHouses",
              "offset": 0,
              "slot": "24",
              "type": "t_mapping(t_uint256,t_struct(House)2797_storage)",
              "contract": "HouseBusiness",
              "src": "contracts\\HouseBusiness.sol:96"
            },
            {
              "label": "allowedList",
              "offset": 0,
              "slot": "25",
              "type": "t_mapping(t_uint256,t_mapping(t_address,t_bool))",
              "contract": "HouseBusiness",
              "src": "contracts\\HouseBusiness.sol:98"
            },
            {
              "label": "stakedNfts",
              "offset": 0,
              "slot": "26",
              "type": "t_mapping(t_address,t_array(t_struct(StakedNft)2814_storage)dyn_storage)",
              "contract": "HouseBusiness",
              "src": "contracts\\HouseBusiness.sol:104"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            },
            "t_array(t_struct(History)2831_storage)dyn_storage": {
              "label": "struct HouseBusiness.History[]",
              "numberOfBytes": "32"
            },
            "t_array(t_struct(HistoryType)2850_storage)dyn_storage": {
              "label": "struct HouseBusiness.HistoryType[]",
              "numberOfBytes": "32"
            },
            "t_array(t_struct(StakedNft)2814_storage)dyn_storage": {
              "label": "struct HouseBusiness.StakedNft[]",
              "numberOfBytes": "32"
            },
            "t_array(t_uint256)dyn_storage": {
              "label": "uint256[]",
              "numberOfBytes": "32"
            },
            "t_bool": {
              "label": "bool",
              "numberOfBytes": "1"
            },
            "t_contract(IERC20)77": {
              "label": "contract IERC20",
              "numberOfBytes": "20"
            },
            "t_mapping(t_address,t_array(t_struct(StakedNft)2814_storage)dyn_storage)": {
              "label": "mapping(address => struct HouseBusiness.StakedNft[])",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_bool)": {
              "label": "mapping(address => bool)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_mapping(t_address,t_bool))": {
              "label": "mapping(address => mapping(address => bool))",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_uint256)": {
              "label": "mapping(address => uint256)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_uint256,t_address)": {
              "label": "mapping(uint256 => address)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_uint256,t_array(t_struct(History)2831_storage)dyn_storage)": {
              "label": "mapping(uint256 => struct HouseBusiness.History[])",
              "numberOfBytes": "32"
            },
            "t_mapping(t_uint256,t_mapping(t_address,t_bool))": {
              "label": "mapping(uint256 => mapping(address => bool))",
              "numberOfBytes": "32"
            },
            "t_mapping(t_uint256,t_string_storage)": {
              "label": "mapping(uint256 => string)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_uint256,t_struct(House)2797_storage)": {
              "label": "mapping(uint256 => struct HouseBusiness.House)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_uint256,t_uint256)": {
              "label": "mapping(uint256 => uint256)",
              "numberOfBytes": "32"
            },
            "t_string_storage": {
              "label": "string",
              "numberOfBytes": "32"
            },
            "t_struct(History)2831_storage": {
              "label": "struct HouseBusiness.History",
              "members": [
                {
                  "label": "hID",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "0"
                },
                {
                  "label": "contractId",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "1"
                },
                {
                  "label": "houseImg",
                  "type": "t_string_storage",
                  "offset": 0,
                  "slot": "2"
                },
                {
                  "label": "houseBrand",
                  "type": "t_string_storage",
                  "offset": 0,
                  "slot": "3"
                },
                {
                  "label": "desc",
                  "type": "t_string_storage",
                  "offset": 0,
                  "slot": "4"
                },
                {
                  "label": "history",
                  "type": "t_string_storage",
                  "offset": 0,
                  "slot": "5"
                },
                {
                  "label": "brandType",
                  "type": "t_string_storage",
                  "offset": 0,
                  "slot": "6"
                },
                {
                  "label": "yearField",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "7"
                }
              ],
              "numberOfBytes": "256"
            },
            "t_struct(HistoryType)2850_storage": {
              "label": "struct HouseBusiness.HistoryType",
              "members": [
                {
                  "label": "hID",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "0"
                },
                {
                  "label": "hLabel",
                  "type": "t_string_storage",
                  "offset": 0,
                  "slot": "1"
                },
                {
                  "label": "connectContract",
                  "type": "t_bool",
                  "offset": 0,
                  "slot": "2"
                },
                {
                  "label": "imgNeed",
                  "type": "t_bool",
                  "offset": 1,
                  "slot": "2"
                },
                {
                  "label": "brandNeed",
                  "type": "t_bool",
                  "offset": 2,
                  "slot": "2"
                },
                {
                  "label": "descNeed",
                  "type": "t_bool",
                  "offset": 3,
                  "slot": "2"
                },
                {
                  "label": "brandTypeNeed",
                  "type": "t_bool",
                  "offset": 4,
                  "slot": "2"
                },
                {
                  "label": "yearNeed",
                  "type": "t_bool",
                  "offset": 5,
                  "slot": "2"
                },
                {
                  "label": "checkMark",
                  "type": "t_bool",
                  "offset": 6,
                  "slot": "2"
                }
              ],
              "numberOfBytes": "96"
            },
            "t_struct(House)2797_storage": {
              "label": "struct HouseBusiness.House",
              "members": [
                {
                  "label": "tokenId",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "0"
                },
                {
                  "label": "tokenName",
                  "type": "t_string_storage",
                  "offset": 0,
                  "slot": "1"
                },
                {
                  "label": "tokenURI",
                  "type": "t_string_storage",
                  "offset": 0,
                  "slot": "2"
                },
                {
                  "label": "tokenType",
                  "type": "t_string_storage",
                  "offset": 0,
                  "slot": "3"
                },
                {
                  "label": "currentOwner",
                  "type": "t_address",
                  "offset": 0,
                  "slot": "4"
                },
                {
                  "label": "previousOwner",
                  "type": "t_address",
                  "offset": 0,
                  "slot": "5"
                },
                {
                  "label": "buyer",
                  "type": "t_address",
                  "offset": 0,
                  "slot": "6"
                },
                {
                  "label": "price",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "7"
                },
                {
                  "label": "numberOfTransfers",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "8"
                },
                {
                  "label": "nftPayable",
                  "type": "t_bool",
                  "offset": 0,
                  "slot": "9"
                },
                {
                  "label": "staked",
                  "type": "t_bool",
                  "offset": 1,
                  "slot": "9"
                },
                {
                  "label": "soldstatus",
                  "type": "t_bool",
                  "offset": 2,
                  "slot": "9"
                }
              ],
              "numberOfBytes": "320"
            },
            "t_struct(StakedNft)2814_storage": {
              "label": "struct HouseBusiness.StakedNft",
              "members": [
                {
                  "label": "owner",
                  "type": "t_address",
                  "offset": 0,
                  "slot": "0"
                },
                {
                  "label": "tokenId",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "1"
                },
                {
                  "label": "startedDate",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "2"
                },
                {
                  "label": "endDate",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "3"
                },
                {
                  "label": "claimDate",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "4"
                },
                {
                  "label": "stakingType",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "5"
                },
                {
                  "label": "perSecRewards",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "6"
                },
                {
                  "label": "stakingStatus",
                  "type": "t_bool",
                  "offset": 0,
                  "slot": "7"
                }
              ],
              "numberOfBytes": "256"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            }
          },
          "layoutVersion": "1.1",
          "flat": true
        }
      },
      "IMainCleanContract": {
        "src": "contracts\\interfaces\\IContract.sol:6",
        "inherit": [],
        "libraries": [],
        "methods": [
          "allCleanContracts(uint256)",
          "transferContractOwnership(uint256,address,address)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      }
    },
    {
      "Address": {
        "src": "contracts\\HouseBusiness.sol:833",
        "version": {
          "withMetadata": "1fcfd9f370b97fc772fcef476c419e9182fc3f2dfe8d680b36d349d378f11ef4",
          "withoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db",
          "linkedWithoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db"
        },
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [
          {
            "kind": "delegatecall",
            "src": "contracts\\HouseBusiness.sol:908"
          }
        ],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "Context": {
        "src": "contracts\\HouseBusiness.sol:935",
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "ERC165": {
        "src": "contracts\\HouseBusiness.sol:1023",
        "inherit": [
          "IERC165"
        ],
        "libraries": [],
        "methods": [
          "supportsInterface(bytes4)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "ERC721": {
        "src": "contracts\\HouseBusiness.sol:1029",
        "version": {
          "withMetadata": "cdcf3560fd24801ec4eb1e0c04f6753487aa523b81895acddb6f59a6082bbb19",
          "withoutMetadata": "18bbbe335c94939eafdc9ca0e7b6e184235c957b26fc7adb52273169c33ab751",
          "linkedWithoutMetadata": "18bbbe335c94939eafdc9ca0e7b6e184235c957b26fc7adb52273169c33ab751"
        },
        "inherit": [
          "IERC721Metadata",
          "IERC721",
          "ERC165",
          "IERC165",
          "Context"
        ],
        "libraries": [
          "Address",
          "Strings"
        ],
        "methods": [
          "(string,string)",
          "supportsInterface(bytes4)",
          "balanceOf(address)",
          "ownerOf(uint256)",
          "name()",
          "symbol()",
          "tokenURI(uint256)",
          "approve(address,uint256)",
          "getApproved(uint256)",
          "setApprovalForAll(address,bool)",
          "isApprovedForAll(address,address)",
          "transferFrom(address,address,uint256)",
          "safeTransferFrom(address,address,uint256)",
          "safeTransferFrom(address,address,uint256,bytes)"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "ERC721",
            "src": "contracts\\HouseBusiness.sol:1054"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "_name",
              "offset": 0,
              "slot": "0",
              "type": "t_string_storage",
              "contract": "ERC721",
              "src": "contracts\\HouseBusiness.sol:1034"
            },
            {
              "label": "_symbol",
              "offset": 0,
              "slot": "1",
              "type": "t_string_storage",
              "contract": "ERC721",
              "src": "contracts\\HouseBusiness.sol:1037"
            },
            {
              "label": "_owners",
              "offset": 0,
              "slot": "2",
              "type": "t_mapping(t_uint256,t_address)",
              "contract": "ERC721",
              "src": "contracts\\HouseBusiness.sol:1040"
            },
            {
              "label": "_balances",
              "offset": 0,
              "slot": "3",
              "type": "t_mapping(t_address,t_uint256)",
              "contract": "ERC721",
              "src": "contracts\\HouseBusiness.sol:1043"
            },
            {
              "label": "_tokenApprovals",
              "offset": 0,
              "slot": "4",
              "type": "t_mapping(t_uint256,t_address)",
              "contract": "ERC721",
              "src": "contracts\\HouseBusiness.sol:1046"
            },
            {
              "label": "_operatorApprovals",
              "offset": 0,
              "slot": "5",
              "type": "t_mapping(t_address,t_mapping(t_address,t_bool))",
              "contract": "ERC721",
              "src": "contracts\\HouseBusiness.sol:1049"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            },
            "t_bool": {
              "label": "bool",
              "numberOfBytes": "1"
            },
            "t_mapping(t_address,t_bool)": {
              "label": "mapping(address => bool)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_mapping(t_address,t_bool))": {
              "label": "mapping(address => mapping(address => bool))",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_uint256)": {
              "label": "mapping(address => uint256)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_uint256,t_address)": {
              "label": "mapping(uint256 => address)",
              "numberOfBytes": "32"
            },
            "t_string_storage": {
              "label": "string",
              "numberOfBytes": "32"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            }
          },
          "layoutVersion": "1.1",
          "flat": true
        }
      },
      "ERC721Enumerable": {
        "src": "contracts\\HouseBusiness.sol:1360",
        "inherit": [
          "IERC721Enumerable",
          "ERC721",
          "IERC721Metadata",
          "IERC721",
          "ERC165",
          "IERC165",
          "Context"
        ],
        "libraries": [],
        "methods": [
          "supportsInterface(bytes4)",
          "tokenOfOwnerByIndex(address,uint256)",
          "totalSupply()",
          "tokenByIndex(uint256)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [
            {
              "label": "_name",
              "offset": 0,
              "slot": "0",
              "type": "t_string_storage",
              "contract": "ERC721",
              "src": "contracts\\HouseBusiness.sol:1034"
            },
            {
              "label": "_symbol",
              "offset": 0,
              "slot": "1",
              "type": "t_string_storage",
              "contract": "ERC721",
              "src": "contracts\\HouseBusiness.sol:1037"
            },
            {
              "label": "_owners",
              "offset": 0,
              "slot": "2",
              "type": "t_mapping(t_uint256,t_address)",
              "contract": "ERC721",
              "src": "contracts\\HouseBusiness.sol:1040"
            },
            {
              "label": "_balances",
              "offset": 0,
              "slot": "3",
              "type": "t_mapping(t_address,t_uint256)",
              "contract": "ERC721",
              "src": "contracts\\HouseBusiness.sol:1043"
            },
            {
              "label": "_tokenApprovals",
              "offset": 0,
              "slot": "4",
              "type": "t_mapping(t_uint256,t_address)",
              "contract": "ERC721",
              "src": "contracts\\HouseBusiness.sol:1046"
            },
            {
              "label": "_operatorApprovals",
              "offset": 0,
              "slot": "5",
              "type": "t_mapping(t_address,t_mapping(t_address,t_bool))",
              "contract": "ERC721",
              "src": "contracts\\HouseBusiness.sol:1049"
            },
            {
              "label": "_ownedTokens",
              "offset": 0,
              "slot": "6",
              "type": "t_mapping(t_address,t_mapping(t_uint256,t_uint256))",
              "contract": "ERC721Enumerable",
              "src": "contracts\\HouseBusiness.sol:1361"
            },
            {
              "label": "_ownedTokensIndex",
              "offset": 0,
              "slot": "7",
              "type": "t_mapping(t_uint256,t_uint256)",
              "contract": "ERC721Enumerable",
              "src": "contracts\\HouseBusiness.sol:1362"
            },
            {
              "label": "_allTokens",
              "offset": 0,
              "slot": "8",
              "type": "t_array(t_uint256)dyn_storage",
              "contract": "ERC721Enumerable",
              "src": "contracts\\HouseBusiness.sol:1363"
            },
            {
              "label": "_allTokensIndex",
              "offset": 0,
              "slot": "9",
              "type": "t_mapping(t_uint256,t_uint256)",
              "contract": "ERC721Enumerable",
              "src": "contracts\\HouseBusiness.sol:1364"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            },
            "t_array(t_uint256)dyn_storage": {
              "label": "uint256[]",
              "numberOfBytes": "32"
            },
            "t_bool": {
              "label": "bool",
              "numberOfBytes": "1"
            },
            "t_mapping(t_address,t_bool)": {
              "label": "mapping(address => bool)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_mapping(t_address,t_bool))": {
              "label": "mapping(address => mapping(address => bool))",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_mapping(t_uint256,t_uint256))": {
              "label": "mapping(address => mapping(uint256 => uint256))",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_uint256)": {
              "label": "mapping(address => uint256)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_uint256,t_address)": {
              "label": "mapping(uint256 => address)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_uint256,t_uint256)": {
              "label": "mapping(uint256 => uint256)",
              "numberOfBytes": "32"
            },
            "t_string_storage": {
              "label": "string",
              "numberOfBytes": "32"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            }
          },
          "layoutVersion": "1.1",
          "flat": true
        }
      },
      "ERC721URIStorage": {
        "src": "contracts\\HouseBusiness.sol:1439",
        "inherit": [
          "ERC721",
          "IERC721Metadata",
          "IERC721",
          "ERC165",
          "IERC165",
          "Context"
        ],
        "libraries": [
          "Strings"
        ],
        "methods": [
          "tokenURI(uint256)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [
            {
              "label": "_name",
              "offset": 0,
              "slot": "0",
              "type": "t_string_storage",
              "contract": "ERC721",
              "src": "contracts\\HouseBusiness.sol:1034"
            },
            {
              "label": "_symbol",
              "offset": 0,
              "slot": "1",
              "type": "t_string_storage",
              "contract": "ERC721",
              "src": "contracts\\HouseBusiness.sol:1037"
            },
            {
              "label": "_owners",
              "offset": 0,
              "slot": "2",
              "type": "t_mapping(t_uint256,t_address)",
              "contract": "ERC721",
              "src": "contracts\\HouseBusiness.sol:1040"
            },
            {
              "label": "_balances",
              "offset": 0,
              "slot": "3",
              "type": "t_mapping(t_address,t_uint256)",
              "contract": "ERC721",
              "src": "contracts\\HouseBusiness.sol:1043"
            },
            {
              "label": "_tokenApprovals",
              "offset": 0,
              "slot": "4",
              "type": "t_mapping(t_uint256,t_address)",
              "contract": "ERC721",
              "src": "contracts\\HouseBusiness.sol:1046"
            },
            {
              "label": "_operatorApprovals",
              "offset": 0,
              "slot": "5",
              "type": "t_mapping(t_address,t_mapping(t_address,t_bool))",
              "contract": "ERC721",
              "src": "contracts\\HouseBusiness.sol:1049"
            },
            {
              "label": "_tokenURIs",
              "offset": 0,
              "slot": "6",
              "type": "t_mapping(t_uint256,t_string_storage)",
              "contract": "ERC721URIStorage",
              "src": "contracts\\HouseBusiness.sol:1441"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            },
            "t_bool": {
              "label": "bool",
              "numberOfBytes": "1"
            },
            "t_mapping(t_address,t_bool)": {
              "label": "mapping(address => bool)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_mapping(t_address,t_bool))": {
              "label": "mapping(address => mapping(address => bool))",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_uint256)": {
              "label": "mapping(address => uint256)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_uint256,t_address)": {
              "label": "mapping(uint256 => address)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_uint256,t_string_storage)": {
              "label": "mapping(uint256 => string)",
              "numberOfBytes": "32"
            },
            "t_string_storage": {
              "label": "string",
              "numberOfBytes": "32"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            }
          },
          "layoutVersion": "1.1",
          "flat": true
        }
      },
      "HouseBusiness": {
        "src": "contracts\\HouseBusiness.sol:1472",
        "version": {
          "withMetadata": "07850c4714fcdd97c08fc132a663fc2ec754f5cd29075f72813ff11a7f36da53",
          "withoutMetadata": "9ebf974dce5db3f0f3d857b49e954623c772830b6f026b95795abbed1fb38ccb",
          "linkedWithoutMetadata": "9ebf974dce5db3f0f3d857b49e954623c772830b6f026b95795abbed1fb38ccb"
        },
        "inherit": [
          "ERC721URIStorage",
          "ERC721",
          "IERC721Metadata",
          "IERC721",
          "ERC165",
          "IERC165",
          "Context"
        ],
        "libraries": [],
        "methods": [
          "(address)",
          "setMinMaxHousePrice(uint256,uint256)",
          "setConfigToken(address)",
          "isMember()",
          "addMember(address)",
          "removeMember(address)",
          "tokenURI(uint256)",
          "setPayable(uint256,address,bool)",
          "mintHouse(string,string,string,string,uint256)",
          "addAllowList(uint256,address)",
          "removeAllowList(uint256,address)",
          "checkAllowedList(uint256,address)",
          "addHistory(uint256,uint256,string,string,string,string,string,uint256)",
          "getHistory(uint256)",
          "editHistory(uint256,uint256,string,string,string,string,string,uint256)",
          "getHistoryType()",
          "addOrEditHType(uint256,string,bool,bool,bool,bool,bool,bool,bool)",
          "removeHistoryType(uint256)",
          "getMinMaxNFT()",
          "getTokenOwner(uint256)",
          "buyHouseNft(uint256)",
          "sendToken(address,uint256)",
          "changeTokenPrice(uint256,uint256)",
          "getAllHouses()",
          "getAllPayableHouses()",
          "getAllMyHouses()",
          "withdrawToken(uint256)",
          "withdrawETH(uint256)",
          "calcDiv(uint256,uint256)",
          "setAPYConfig(uint256,uint256)",
          "getAllAPYTypes()",
          "stake(uint256,uint256)",
          "unstake(uint256)",
          "stakingFinished(uint256)",
          "totalRewards(address)",
          "claimRewards(address)",
          "getAllMyStakedNFTs()",
          "getTotalInfo()",
          "getAllAPYs()",
          "getPenalty()",
          "setPenalty(uint256)",
          "getRoyalty()",
          "setRoyalty(uint256)"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "HouseBusiness",
            "src": "contracts\\HouseBusiness.sol:1564"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "_name",
              "offset": 0,
              "slot": "0",
              "type": "t_string_storage",
              "contract": "ERC721",
              "src": "contracts\\HouseBusiness.sol:1034"
            },
            {
              "label": "_symbol",
              "offset": 0,
              "slot": "1",
              "type": "t_string_storage",
              "contract": "ERC721",
              "src": "contracts\\HouseBusiness.sol:1037"
            },
            {
              "label": "_owners",
              "offset": 0,
              "slot": "2",
              "type": "t_mapping(t_uint256,t_address)",
              "contract": "ERC721",
              "src": "contracts\\HouseBusiness.sol:1040"
            },
            {
              "label": "_balances",
              "offset": 0,
              "slot": "3",
              "type": "t_mapping(t_address,t_uint256)",
              "contract": "ERC721",
              "src": "contracts\\HouseBusiness.sol:1043"
            },
            {
              "label": "_tokenApprovals",
              "offset": 0,
              "slot": "4",
              "type": "t_mapping(t_uint256,t_address)",
              "contract": "ERC721",
              "src": "contracts\\HouseBusiness.sol:1046"
            },
            {
              "label": "_operatorApprovals",
              "offset": 0,
              "slot": "5",
              "type": "t_mapping(t_address,t_mapping(t_address,t_bool))",
              "contract": "ERC721",
              "src": "contracts\\HouseBusiness.sol:1049"
            },
            {
              "label": "_tokenURIs",
              "offset": 0,
              "slot": "6",
              "type": "t_mapping(t_uint256,t_string_storage)",
              "contract": "ERC721URIStorage",
              "src": "contracts\\HouseBusiness.sol:1441"
            },
            {
              "label": "collectionName",
              "offset": 0,
              "slot": "7",
              "type": "t_string_storage",
              "contract": "HouseBusiness",
              "src": "contracts\\HouseBusiness.sol:1474"
            },
            {
              "label": "collectionNameSymbol",
              "offset": 0,
              "slot": "8",
              "type": "t_string_storage",
              "contract": "HouseBusiness",
              "src": "contracts\\HouseBusiness.sol:1476"
            },
            {
              "label": "houseCounter",
              "offset": 0,
              "slot": "9",
              "type": "t_uint256",
              "contract": "HouseBusiness",
              "src": "contracts\\HouseBusiness.sol:1478"
            },
            {
              "label": "stakedCounter",
              "offset": 0,
              "slot": "10",
              "type": "t_uint256",
              "contract": "HouseBusiness",
              "src": "contracts\\HouseBusiness.sol:1480"
            },
            {
              "label": "soldedCounter",
              "offset": 0,
              "slot": "11",
              "type": "t_uint256",
              "contract": "HouseBusiness",
              "src": "contracts\\HouseBusiness.sol:1482"
            },
            {
              "label": "hTypeCounter",
              "offset": 0,
              "slot": "12",
              "type": "t_uint256",
              "contract": "HouseBusiness",
              "src": "contracts\\HouseBusiness.sol:1484"
            },
            {
              "label": "_token",
              "offset": 0,
              "slot": "13",
              "type": "t_contract(IERC20)68",
              "contract": "HouseBusiness",
              "src": "contracts\\HouseBusiness.sol:1486"
            },
            {
              "label": "minPrice",
              "offset": 0,
              "slot": "14",
              "type": "t_uint256",
              "contract": "HouseBusiness",
              "src": "contracts\\HouseBusiness.sol:1488"
            },
            {
              "label": "maxPrice",
              "offset": 0,
              "slot": "15",
              "type": "t_uint256",
              "contract": "HouseBusiness",
              "src": "contracts\\HouseBusiness.sol:1490"
            },
            {
              "label": "penalty",
              "offset": 0,
              "slot": "16",
              "type": "t_uint256",
              "contract": "HouseBusiness",
              "src": "contracts\\HouseBusiness.sol:1492"
            },
            {
              "label": "royalty",
              "offset": 0,
              "slot": "17",
              "type": "t_uint256",
              "contract": "HouseBusiness",
              "src": "contracts\\HouseBusiness.sol:1494"
            },
            {
              "label": "historyTypes",
              "offset": 0,
              "slot": "18",
              "type": "t_array(t_struct(HistoryType)2350_storage)dyn_storage",
              "contract": "HouseBusiness",
              "src": "contracts\\HouseBusiness.sol:1544"
            },
            {
              "label": "houseHistories",
              "offset": 0,
              "slot": "19",
              "type": "t_mapping(t_uint256,t_array(t_struct(History)2331_storage)dyn_storage)",
              "contract": "HouseBusiness",
              "src": "contracts\\HouseBusiness.sol:1546"
            },
            {
              "label": "APYtypes",
              "offset": 0,
              "slot": "20",
              "type": "t_array(t_uint256)dyn_storage",
              "contract": "HouseBusiness",
              "src": "contracts\\HouseBusiness.sol:1548"
            },
            {
              "label": "APYConfig",
              "offset": 0,
              "slot": "21",
              "type": "t_mapping(t_uint256,t_uint256)",
              "contract": "HouseBusiness",
              "src": "contracts\\HouseBusiness.sol:1550"
            },
            {
              "label": "allMembers",
              "offset": 0,
              "slot": "22",
              "type": "t_mapping(t_address,t_bool)",
              "contract": "HouseBusiness",
              "src": "contracts\\HouseBusiness.sol:1552"
            },
            {
              "label": "allHouses",
              "offset": 0,
              "slot": "23",
              "type": "t_mapping(t_uint256,t_struct(House)2299_storage)",
              "contract": "HouseBusiness",
              "src": "contracts\\HouseBusiness.sol:1554"
            },
            {
              "label": "allowedList",
              "offset": 0,
              "slot": "24",
              "type": "t_mapping(t_uint256,t_mapping(t_address,t_bool))",
              "contract": "HouseBusiness",
              "src": "contracts\\HouseBusiness.sol:1556"
            },
            {
              "label": "stakedNfts",
              "offset": 0,
              "slot": "25",
              "type": "t_mapping(t_address,t_array(t_struct(StakedNft)2316_storage)dyn_storage)",
              "contract": "HouseBusiness",
              "src": "contracts\\HouseBusiness.sol:1562"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            },
            "t_array(t_struct(History)2331_storage)dyn_storage": {
              "label": "struct HouseBusiness.History[]",
              "numberOfBytes": "32"
            },
            "t_array(t_struct(HistoryType)2350_storage)dyn_storage": {
              "label": "struct HouseBusiness.HistoryType[]",
              "numberOfBytes": "32"
            },
            "t_array(t_struct(StakedNft)2316_storage)dyn_storage": {
              "label": "struct HouseBusiness.StakedNft[]",
              "numberOfBytes": "32"
            },
            "t_array(t_uint256)dyn_storage": {
              "label": "uint256[]",
              "numberOfBytes": "32"
            },
            "t_bool": {
              "label": "bool",
              "numberOfBytes": "1"
            },
            "t_contract(IERC20)68": {
              "label": "contract IERC20",
              "numberOfBytes": "20"
            },
            "t_mapping(t_address,t_array(t_struct(StakedNft)2316_storage)dyn_storage)": {
              "label": "mapping(address => struct HouseBusiness.StakedNft[])",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_bool)": {
              "label": "mapping(address => bool)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_mapping(t_address,t_bool))": {
              "label": "mapping(address => mapping(address => bool))",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_uint256)": {
              "label": "mapping(address => uint256)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_uint256,t_address)": {
              "label": "mapping(uint256 => address)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_uint256,t_array(t_struct(History)2331_storage)dyn_storage)": {
              "label": "mapping(uint256 => struct HouseBusiness.History[])",
              "numberOfBytes": "32"
            },
            "t_mapping(t_uint256,t_mapping(t_address,t_bool))": {
              "label": "mapping(uint256 => mapping(address => bool))",
              "numberOfBytes": "32"
            },
            "t_mapping(t_uint256,t_string_storage)": {
              "label": "mapping(uint256 => string)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_uint256,t_struct(House)2299_storage)": {
              "label": "mapping(uint256 => struct HouseBusiness.House)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_uint256,t_uint256)": {
              "label": "mapping(uint256 => uint256)",
              "numberOfBytes": "32"
            },
            "t_string_storage": {
              "label": "string",
              "numberOfBytes": "32"
            },
            "t_struct(History)2331_storage": {
              "label": "struct HouseBusiness.History",
              "members": [
                {
                  "label": "hID",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "0"
                },
                {
                  "label": "houseImg",
                  "type": "t_string_storage",
                  "offset": 0,
                  "slot": "1"
                },
                {
                  "label": "houseBrand",
                  "type": "t_string_storage",
                  "offset": 0,
                  "slot": "2"
                },
                {
                  "label": "desc",
                  "type": "t_string_storage",
                  "offset": 0,
                  "slot": "3"
                },
                {
                  "label": "history",
                  "type": "t_string_storage",
                  "offset": 0,
                  "slot": "4"
                },
                {
                  "label": "brandType",
                  "type": "t_string_storage",
                  "offset": 0,
                  "slot": "5"
                },
                {
                  "label": "yearField",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "6"
                }
              ],
              "numberOfBytes": "224"
            },
            "t_struct(HistoryType)2350_storage": {
              "label": "struct HouseBusiness.HistoryType",
              "members": [
                {
                  "label": "hID",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "0"
                },
                {
                  "label": "hLabel",
                  "type": "t_string_storage",
                  "offset": 0,
                  "slot": "1"
                },
                {
                  "label": "connectContract",
                  "type": "t_bool",
                  "offset": 0,
                  "slot": "2"
                },
                {
                  "label": "imgNeed",
                  "type": "t_bool",
                  "offset": 1,
                  "slot": "2"
                },
                {
                  "label": "brandNeed",
                  "type": "t_bool",
                  "offset": 2,
                  "slot": "2"
                },
                {
                  "label": "descNeed",
                  "type": "t_bool",
                  "offset": 3,
                  "slot": "2"
                },
                {
                  "label": "brandTypeNeed",
                  "type": "t_bool",
                  "offset": 4,
                  "slot": "2"
                },
                {
                  "label": "yearNeed",
                  "type": "t_bool",
                  "offset": 5,
                  "slot": "2"
                },
                {
                  "label": "checkMark",
                  "type": "t_bool",
                  "offset": 6,
                  "slot": "2"
                }
              ],
              "numberOfBytes": "96"
            },
            "t_struct(House)2299_storage": {
              "label": "struct HouseBusiness.House",
              "members": [
                {
                  "label": "tokenId",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "0"
                },
                {
                  "label": "tokenName",
                  "type": "t_string_storage",
                  "offset": 0,
                  "slot": "1"
                },
                {
                  "label": "tokenURI",
                  "type": "t_string_storage",
                  "offset": 0,
                  "slot": "2"
                },
                {
                  "label": "tokenType",
                  "type": "t_string_storage",
                  "offset": 0,
                  "slot": "3"
                },
                {
                  "label": "currentOwner",
                  "type": "t_address",
                  "offset": 0,
                  "slot": "4"
                },
                {
                  "label": "previousOwner",
                  "type": "t_address",
                  "offset": 0,
                  "slot": "5"
                },
                {
                  "label": "buyer",
                  "type": "t_address",
                  "offset": 0,
                  "slot": "6"
                },
                {
                  "label": "price",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "7"
                },
                {
                  "label": "numberOfTransfers",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "8"
                },
                {
                  "label": "nftPayable",
                  "type": "t_bool",
                  "offset": 0,
                  "slot": "9"
                },
                {
                  "label": "staked",
                  "type": "t_bool",
                  "offset": 1,
                  "slot": "9"
                },
                {
                  "label": "soldstatus",
                  "type": "t_bool",
                  "offset": 2,
                  "slot": "9"
                }
              ],
              "numberOfBytes": "320"
            },
            "t_struct(StakedNft)2316_storage": {
              "label": "struct HouseBusiness.StakedNft",
              "members": [
                {
                  "label": "owner",
                  "type": "t_address",
                  "offset": 0,
                  "slot": "0"
                },
                {
                  "label": "tokenId",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "1"
                },
                {
                  "label": "startedDate",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "2"
                },
                {
                  "label": "endDate",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "3"
                },
                {
                  "label": "claimDate",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "4"
                },
                {
                  "label": "stakingType",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "5"
                },
                {
                  "label": "perSecRewards",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "6"
                },
                {
                  "label": "stakingStatus",
                  "type": "t_bool",
                  "offset": 0,
                  "slot": "7"
                }
              ],
              "numberOfBytes": "256"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            }
          },
          "layoutVersion": "1.1",
          "flat": true
        }
      },
      "IERC165": {
        "src": "contracts\\HouseBusiness.sol:775",
        "inherit": [],
        "libraries": [],
        "methods": [
          "supportsInterface(bytes4)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "IERC20": {
        "src": "contracts\\HouseBusiness.sol:754",
        "inherit": [],
        "libraries": [],
        "methods": [
          "totalSupply()",
          "balanceOf(address)",
          "allowance(address,address)",
          "transfer(address,uint256)",
          "approve(address,uint256)",
          "transferFrom(address,address,uint256)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "IERC721": {
        "src": "contracts\\HouseBusiness.sol:779",
        "inherit": [
          "IERC165"
        ],
        "libraries": [],
        "methods": [
          "balanceOf(address)",
          "ownerOf(uint256)",
          "safeTransferFrom(address,address,uint256)",
          "transferFrom(address,address,uint256)",
          "approve(address,uint256)",
          "getApproved(uint256)",
          "setApprovalForAll(address,bool)",
          "isApprovedForAll(address,address)",
          "safeTransferFrom(address,address,uint256,bytes)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "IERC721Enumerable": {
        "src": "contracts\\HouseBusiness.sol:1352",
        "inherit": [
          "IERC721",
          "IERC165"
        ],
        "libraries": [],
        "methods": [
          "totalSupply()",
          "tokenOfOwnerByIndex(address,uint256)",
          "tokenByIndex(uint256)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "IERC721Metadata": {
        "src": "contracts\\HouseBusiness.sol:825",
        "inherit": [
          "IERC721",
          "IERC165"
        ],
        "libraries": [],
        "methods": [
          "name()",
          "symbol()",
          "tokenURI(uint256)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "IERC721Receiver": {
        "src": "contracts\\HouseBusiness.sol:816",
        "inherit": [],
        "libraries": [],
        "methods": [
          "onERC721Received(address,address,uint256,bytes)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "Ownable": {
        "src": "contracts\\HouseBusiness.sol:1315",
        "inherit": [
          "Context"
        ],
        "libraries": [],
        "methods": [
          "owner()",
          "renounceOwnership()",
          "transferOwnership(address)"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "Ownable",
            "src": "contracts\\HouseBusiness.sol:1320"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "_owner",
              "offset": 0,
              "slot": "0",
              "type": "t_address",
              "contract": "Ownable",
              "src": "contracts\\HouseBusiness.sol:1316"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            }
          },
          "layoutVersion": "1.1",
          "flat": true
        }
      },
      "SafeMath": {
        "src": "contracts\\HouseBusiness.sol:945",
        "version": {
          "withMetadata": "566975842ee3cb3a901780eeeb1205ac83877f82d1d5185ffa63a9d730ff7223",
          "withoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db",
          "linkedWithoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db"
        },
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "Strings": {
        "src": "contracts\\HouseBusiness.sol:975",
        "version": {
          "withMetadata": "1b039c180beae87db458336d6cd4c3e1fe96456e339e26a71d34bda5033de358",
          "withoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db",
          "linkedWithoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db"
        },
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      }
    },
    {
      "IERC20": {
        "src": "@openzeppelin\\contracts\\token\\ERC20\\IERC20.sol:9",
        "inherit": [],
        "libraries": [],
        "methods": [
          "totalSupply()",
          "balanceOf(address)",
          "transfer(address,uint256)",
          "allowance(address,address)",
          "approve(address,uint256)",
          "transferFrom(address,address,uint256)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "ERC721": {
        "src": "@openzeppelin\\contracts\\token\\ERC721\\ERC721.sol:19",
        "version": {
          "withMetadata": "311027b738fb50ea92c84baf68eacb931adf05de03da13635a661dc9c5b03f73",
          "withoutMetadata": "9ec7f439077c3b762bc3aa6a17c55aba7a78d240190c9c7814df896455a0f780",
          "linkedWithoutMetadata": "9ec7f439077c3b762bc3aa6a17c55aba7a78d240190c9c7814df896455a0f780"
        },
        "inherit": [
          "IERC721Metadata",
          "IERC721",
          "ERC165",
          "IERC165",
          "Context"
        ],
        "libraries": [
          "Address",
          "Strings"
        ],
        "methods": [
          "(string,string)",
          "supportsInterface(bytes4)",
          "balanceOf(address)",
          "ownerOf(uint256)",
          "name()",
          "symbol()",
          "tokenURI(uint256)",
          "approve(address,uint256)",
          "getApproved(uint256)",
          "setApprovalForAll(address,bool)",
          "isApprovedForAll(address,address)",
          "transferFrom(address,address,uint256)",
          "safeTransferFrom(address,address,uint256)",
          "safeTransferFrom(address,address,uint256,bytes)"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "ERC721",
            "src": "@openzeppelin\\contracts\\token\\ERC721\\ERC721.sol:44"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "_name",
              "offset": 0,
              "slot": "0",
              "type": "t_string_storage",
              "contract": "ERC721",
              "src": "@openzeppelin\\contracts\\token\\ERC721\\ERC721.sol:24"
            },
            {
              "label": "_symbol",
              "offset": 0,
              "slot": "1",
              "type": "t_string_storage",
              "contract": "ERC721",
              "src": "@openzeppelin\\contracts\\token\\ERC721\\ERC721.sol:27"
            },
            {
              "label": "_owners",
              "offset": 0,
              "slot": "2",
              "type": "t_mapping(t_uint256,t_address)",
              "contract": "ERC721",
              "src": "@openzeppelin\\contracts\\token\\ERC721\\ERC721.sol:30"
            },
            {
              "label": "_balances",
              "offset": 0,
              "slot": "3",
              "type": "t_mapping(t_address,t_uint256)",
              "contract": "ERC721",
              "src": "@openzeppelin\\contracts\\token\\ERC721\\ERC721.sol:33"
            },
            {
              "label": "_tokenApprovals",
              "offset": 0,
              "slot": "4",
              "type": "t_mapping(t_uint256,t_address)",
              "contract": "ERC721",
              "src": "@openzeppelin\\contracts\\token\\ERC721\\ERC721.sol:36"
            },
            {
              "label": "_operatorApprovals",
              "offset": 0,
              "slot": "5",
              "type": "t_mapping(t_address,t_mapping(t_address,t_bool))",
              "contract": "ERC721",
              "src": "@openzeppelin\\contracts\\token\\ERC721\\ERC721.sol:39"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            },
            "t_bool": {
              "label": "bool",
              "numberOfBytes": "1"
            },
            "t_mapping(t_address,t_bool)": {
              "label": "mapping(address => bool)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_mapping(t_address,t_bool))": {
              "label": "mapping(address => mapping(address => bool))",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_uint256)": {
              "label": "mapping(address => uint256)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_uint256,t_address)": {
              "label": "mapping(uint256 => address)",
              "numberOfBytes": "32"
            },
            "t_string_storage": {
              "label": "string",
              "numberOfBytes": "32"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            }
          },
          "layoutVersion": "1.1",
          "flat": true
        }
      },
      "IERC721": {
        "src": "@openzeppelin\\contracts\\token\\ERC721\\IERC721.sol:11",
        "inherit": [
          "IERC165"
        ],
        "libraries": [],
        "methods": [
          "balanceOf(address)",
          "ownerOf(uint256)",
          "safeTransferFrom(address,address,uint256,bytes)",
          "safeTransferFrom(address,address,uint256)",
          "transferFrom(address,address,uint256)",
          "approve(address,uint256)",
          "setApprovalForAll(address,bool)",
          "getApproved(uint256)",
          "isApprovedForAll(address,address)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "IERC721Receiver": {
        "src": "@openzeppelin\\contracts\\token\\ERC721\\IERC721Receiver.sol:11",
        "inherit": [],
        "libraries": [],
        "methods": [
          "onERC721Received(address,address,uint256,bytes)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "ERC721URIStorage": {
        "src": "@openzeppelin\\contracts\\token\\ERC721\\extensions\\ERC721URIStorage.sol:11",
        "inherit": [
          "ERC721",
          "IERC721Metadata",
          "IERC721",
          "ERC165",
          "IERC165",
          "Context"
        ],
        "libraries": [
          "Strings"
        ],
        "methods": [
          "tokenURI(uint256)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [
            {
              "label": "_name",
              "offset": 0,
              "slot": "0",
              "type": "t_string_storage",
              "contract": "ERC721",
              "src": "@openzeppelin\\contracts\\token\\ERC721\\ERC721.sol:24"
            },
            {
              "label": "_symbol",
              "offset": 0,
              "slot": "1",
              "type": "t_string_storage",
              "contract": "ERC721",
              "src": "@openzeppelin\\contracts\\token\\ERC721\\ERC721.sol:27"
            },
            {
              "label": "_owners",
              "offset": 0,
              "slot": "2",
              "type": "t_mapping(t_uint256,t_address)",
              "contract": "ERC721",
              "src": "@openzeppelin\\contracts\\token\\ERC721\\ERC721.sol:30"
            },
            {
              "label": "_balances",
              "offset": 0,
              "slot": "3",
              "type": "t_mapping(t_address,t_uint256)",
              "contract": "ERC721",
              "src": "@openzeppelin\\contracts\\token\\ERC721\\ERC721.sol:33"
            },
            {
              "label": "_tokenApprovals",
              "offset": 0,
              "slot": "4",
              "type": "t_mapping(t_uint256,t_address)",
              "contract": "ERC721",
              "src": "@openzeppelin\\contracts\\token\\ERC721\\ERC721.sol:36"
            },
            {
              "label": "_operatorApprovals",
              "offset": 0,
              "slot": "5",
              "type": "t_mapping(t_address,t_mapping(t_address,t_bool))",
              "contract": "ERC721",
              "src": "@openzeppelin\\contracts\\token\\ERC721\\ERC721.sol:39"
            },
            {
              "label": "_tokenURIs",
              "offset": 0,
              "slot": "6",
              "type": "t_mapping(t_uint256,t_string_storage)",
              "contract": "ERC721URIStorage",
              "src": "@openzeppelin\\contracts\\token\\ERC721\\extensions\\ERC721URIStorage.sol:15"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            },
            "t_bool": {
              "label": "bool",
              "numberOfBytes": "1"
            },
            "t_mapping(t_address,t_bool)": {
              "label": "mapping(address => bool)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_mapping(t_address,t_bool))": {
              "label": "mapping(address => mapping(address => bool))",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_uint256)": {
              "label": "mapping(address => uint256)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_uint256,t_address)": {
              "label": "mapping(uint256 => address)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_uint256,t_string_storage)": {
              "label": "mapping(uint256 => string)",
              "numberOfBytes": "32"
            },
            "t_string_storage": {
              "label": "string",
              "numberOfBytes": "32"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            }
          },
          "layoutVersion": "1.1",
          "flat": true
        }
      },
      "IERC721Metadata": {
        "src": "@openzeppelin\\contracts\\token\\ERC721\\extensions\\IERC721Metadata.sol:12",
        "inherit": [
          "IERC721",
          "IERC165"
        ],
        "libraries": [],
        "methods": [
          "name()",
          "symbol()",
          "tokenURI(uint256)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "Address": {
        "src": "@openzeppelin\\contracts\\utils\\Address.sol:9",
        "version": {
          "withMetadata": "a0500f265408d7c0dbf75da3f9e44a5c2ee85e18bb1b58fe491ffcfa4ea7fd9b",
          "withoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db",
          "linkedWithoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db"
        },
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [
          {
            "kind": "delegatecall",
            "src": "@openzeppelin\\contracts\\utils\\Address.sol:185"
          }
        ],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "Context": {
        "src": "@openzeppelin\\contracts\\utils\\Context.sol:16",
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "Strings": {
        "src": "@openzeppelin\\contracts\\utils\\Strings.sol:11",
        "version": {
          "withMetadata": "c385b5200dd723f945d28b88358d79ca1b5c0f71c28cbbab9acf6d6f3fd15593",
          "withoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db",
          "linkedWithoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db"
        },
        "inherit": [],
        "libraries": [
          "Math"
        ],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "ERC165": {
        "src": "@openzeppelin\\contracts\\utils\\introspection\\ERC165.sol:22",
        "inherit": [
          "IERC165"
        ],
        "libraries": [],
        "methods": [
          "supportsInterface(bytes4)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "IERC165": {
        "src": "@openzeppelin\\contracts\\utils\\introspection\\IERC165.sol:15",
        "inherit": [],
        "libraries": [],
        "methods": [
          "supportsInterface(bytes4)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "Math": {
        "src": "@openzeppelin\\contracts\\utils\\math\\Math.sol:9",
        "version": {
          "withMetadata": "fcaf39e5e702f2902d6ef00c1def75c9800e8d2a0a78a87cf542096cafc7a4b0",
          "withoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db",
          "linkedWithoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db"
        },
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "HouseBusiness": {
        "src": "contracts\\HouseBusiness.sol:11",
        "version": {
          "withMetadata": "a5ec38117855f5a808244500aade061c03eb111b907ca55c9a2053e5794d66c5",
          "withoutMetadata": "a9a24c7ae9f2c84784d7290bc0fe7d149cd6f00e261395ec361f8e1b77ebbd86",
          "linkedWithoutMetadata": "a9a24c7ae9f2c84784d7290bc0fe7d149cd6f00e261395ec361f8e1b77ebbd86"
        },
        "inherit": [
          "ERC721URIStorage",
          "ERC721",
          "IERC721Metadata",
          "IERC721",
          "ERC165",
          "IERC165",
          "Context"
        ],
        "libraries": [],
        "methods": [
          "(address)",
          "setMinMaxHousePrice(uint256,uint256)",
          "setConfigToken(address)",
          "isMember()",
          "addMember(address)",
          "removeMember(address)",
          "tokenURI(uint256)",
          "setCContractAddress(address)",
          "setPayable(uint256,address,bool)",
          "mintHouse(string,string,string,string,uint256)",
          "addAllowList(uint256,address)",
          "removeAllowList(uint256,address)",
          "checkAllowedList(uint256,address)",
          "addHistory(uint256,uint256,uint256,string,string,string,string,string,uint256)",
          "getHistory(uint256)",
          "editHistory(uint256,uint256,string,string,string,string,string,uint256)",
          "getHistoryType()",
          "addOrEditHType(uint256,string,bool,bool,bool,bool,bool,bool,bool)",
          "removeHistoryType(uint256)",
          "getMinMaxNFT()",
          "getTokenOwner(uint256)",
          "buyHouseNft(uint256)",
          "sendToken(address,uint256)",
          "changeTokenPrice(uint256,uint256)",
          "getAllHouses()",
          "getAllPayableHouses()",
          "getAllMyHouses()",
          "withdrawToken(uint256)",
          "withdrawETH(uint256)",
          "calcDiv(uint256,uint256)",
          "setAPYConfig(uint256,uint256)",
          "getAllAPYTypes()",
          "stake(uint256,uint256)",
          "unstake(uint256)",
          "stakingFinished(uint256)",
          "totalRewards(address)",
          "claimRewards(address)",
          "getAllMyStakedNFTs()",
          "getTotalInfo()",
          "getAllAPYs()",
          "getPenalty()",
          "setPenalty(uint256)",
          "getRoyalty()",
          "setRoyalty(uint256)"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "HouseBusiness",
            "src": "contracts\\HouseBusiness.sol:106"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "_name",
              "offset": 0,
              "slot": "0",
              "type": "t_string_storage",
              "contract": "ERC721",
              "src": "@openzeppelin\\contracts\\token\\ERC721\\ERC721.sol:24"
            },
            {
              "label": "_symbol",
              "offset": 0,
              "slot": "1",
              "type": "t_string_storage",
              "contract": "ERC721",
              "src": "@openzeppelin\\contracts\\token\\ERC721\\ERC721.sol:27"
            },
            {
              "label": "_owners",
              "offset": 0,
              "slot": "2",
              "type": "t_mapping(t_uint256,t_address)",
              "contract": "ERC721",
              "src": "@openzeppelin\\contracts\\token\\ERC721\\ERC721.sol:30"
            },
            {
              "label": "_balances",
              "offset": 0,
              "slot": "3",
              "type": "t_mapping(t_address,t_uint256)",
              "contract": "ERC721",
              "src": "@openzeppelin\\contracts\\token\\ERC721\\ERC721.sol:33"
            },
            {
              "label": "_tokenApprovals",
              "offset": 0,
              "slot": "4",
              "type": "t_mapping(t_uint256,t_address)",
              "contract": "ERC721",
              "src": "@openzeppelin\\contracts\\token\\ERC721\\ERC721.sol:36"
            },
            {
              "label": "_operatorApprovals",
              "offset": 0,
              "slot": "5",
              "type": "t_mapping(t_address,t_mapping(t_address,t_bool))",
              "contract": "ERC721",
              "src": "@openzeppelin\\contracts\\token\\ERC721\\ERC721.sol:39"
            },
            {
              "label": "_tokenURIs",
              "offset": 0,
              "slot": "6",
              "type": "t_mapping(t_uint256,t_string_storage)",
              "contract": "ERC721URIStorage",
              "src": "@openzeppelin\\contracts\\token\\ERC721\\extensions\\ERC721URIStorage.sol:15"
            },
            {
              "label": "collectionName",
              "offset": 0,
              "slot": "7",
              "type": "t_string_storage",
              "contract": "HouseBusiness",
              "src": "contracts\\HouseBusiness.sol:13"
            },
            {
              "label": "collectionNameSymbol",
              "offset": 0,
              "slot": "8",
              "type": "t_string_storage",
              "contract": "HouseBusiness",
              "src": "contracts\\HouseBusiness.sol:15"
            },
            {
              "label": "houseCounter",
              "offset": 0,
              "slot": "9",
              "type": "t_uint256",
              "contract": "HouseBusiness",
              "src": "contracts\\HouseBusiness.sol:17"
            },
            {
              "label": "stakedCounter",
              "offset": 0,
              "slot": "10",
              "type": "t_uint256",
              "contract": "HouseBusiness",
              "src": "contracts\\HouseBusiness.sol:19"
            },
            {
              "label": "soldedCounter",
              "offset": 0,
              "slot": "11",
              "type": "t_uint256",
              "contract": "HouseBusiness",
              "src": "contracts\\HouseBusiness.sol:21"
            },
            {
              "label": "hTypeCounter",
              "offset": 0,
              "slot": "12",
              "type": "t_uint256",
              "contract": "HouseBusiness",
              "src": "contracts\\HouseBusiness.sol:23"
            },
            {
              "label": "_token",
              "offset": 0,
              "slot": "13",
              "type": "t_contract(IERC20)77",
              "contract": "HouseBusiness",
              "src": "contracts\\HouseBusiness.sol:25"
            },
            {
              "label": "minPrice",
              "offset": 0,
              "slot": "14",
              "type": "t_uint256",
              "contract": "HouseBusiness",
              "src": "contracts\\HouseBusiness.sol:27"
            },
            {
              "label": "maxPrice",
              "offset": 0,
              "slot": "15",
              "type": "t_uint256",
              "contract": "HouseBusiness",
              "src": "contracts\\HouseBusiness.sol:29"
            },
            {
              "label": "penalty",
              "offset": 0,
              "slot": "16",
              "type": "t_uint256",
              "contract": "HouseBusiness",
              "src": "contracts\\HouseBusiness.sol:31"
            },
            {
              "label": "royalty",
              "offset": 0,
              "slot": "17",
              "type": "t_uint256",
              "contract": "HouseBusiness",
              "src": "contracts\\HouseBusiness.sol:33"
            },
            {
              "label": "cContractAddress",
              "offset": 0,
              "slot": "18",
              "type": "t_address",
              "contract": "HouseBusiness",
              "src": "contracts\\HouseBusiness.sol:35"
            },
            {
              "label": "historyTypes",
              "offset": 0,
              "slot": "19",
              "type": "t_array(t_struct(HistoryType)2850_storage)dyn_storage",
              "contract": "HouseBusiness",
              "src": "contracts\\HouseBusiness.sol:86"
            },
            {
              "label": "houseHistories",
              "offset": 0,
              "slot": "20",
              "type": "t_mapping(t_uint256,t_array(t_struct(History)2831_storage)dyn_storage)",
              "contract": "HouseBusiness",
              "src": "contracts\\HouseBusiness.sol:88"
            },
            {
              "label": "APYtypes",
              "offset": 0,
              "slot": "21",
              "type": "t_array(t_uint256)dyn_storage",
              "contract": "HouseBusiness",
              "src": "contracts\\HouseBusiness.sol:90"
            },
            {
              "label": "APYConfig",
              "offset": 0,
              "slot": "22",
              "type": "t_mapping(t_uint256,t_uint256)",
              "contract": "HouseBusiness",
              "src": "contracts\\HouseBusiness.sol:92"
            },
            {
              "label": "allMembers",
              "offset": 0,
              "slot": "23",
              "type": "t_mapping(t_address,t_bool)",
              "contract": "HouseBusiness",
              "src": "contracts\\HouseBusiness.sol:94"
            },
            {
              "label": "allHouses",
              "offset": 0,
              "slot": "24",
              "type": "t_mapping(t_uint256,t_struct(House)2797_storage)",
              "contract": "HouseBusiness",
              "src": "contracts\\HouseBusiness.sol:96"
            },
            {
              "label": "allowedList",
              "offset": 0,
              "slot": "25",
              "type": "t_mapping(t_uint256,t_mapping(t_address,t_bool))",
              "contract": "HouseBusiness",
              "src": "contracts\\HouseBusiness.sol:98"
            },
            {
              "label": "stakedNfts",
              "offset": 0,
              "slot": "26",
              "type": "t_mapping(t_address,t_array(t_struct(StakedNft)2814_storage)dyn_storage)",
              "contract": "HouseBusiness",
              "src": "contracts\\HouseBusiness.sol:104"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            },
            "t_array(t_struct(History)2831_storage)dyn_storage": {
              "label": "struct HouseBusiness.History[]",
              "numberOfBytes": "32"
            },
            "t_array(t_struct(HistoryType)2850_storage)dyn_storage": {
              "label": "struct HouseBusiness.HistoryType[]",
              "numberOfBytes": "32"
            },
            "t_array(t_struct(StakedNft)2814_storage)dyn_storage": {
              "label": "struct HouseBusiness.StakedNft[]",
              "numberOfBytes": "32"
            },
            "t_array(t_uint256)dyn_storage": {
              "label": "uint256[]",
              "numberOfBytes": "32"
            },
            "t_bool": {
              "label": "bool",
              "numberOfBytes": "1"
            },
            "t_contract(IERC20)77": {
              "label": "contract IERC20",
              "numberOfBytes": "20"
            },
            "t_mapping(t_address,t_array(t_struct(StakedNft)2814_storage)dyn_storage)": {
              "label": "mapping(address => struct HouseBusiness.StakedNft[])",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_bool)": {
              "label": "mapping(address => bool)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_mapping(t_address,t_bool))": {
              "label": "mapping(address => mapping(address => bool))",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_uint256)": {
              "label": "mapping(address => uint256)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_uint256,t_address)": {
              "label": "mapping(uint256 => address)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_uint256,t_array(t_struct(History)2831_storage)dyn_storage)": {
              "label": "mapping(uint256 => struct HouseBusiness.History[])",
              "numberOfBytes": "32"
            },
            "t_mapping(t_uint256,t_mapping(t_address,t_bool))": {
              "label": "mapping(uint256 => mapping(address => bool))",
              "numberOfBytes": "32"
            },
            "t_mapping(t_uint256,t_string_storage)": {
              "label": "mapping(uint256 => string)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_uint256,t_struct(House)2797_storage)": {
              "label": "mapping(uint256 => struct HouseBusiness.House)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_uint256,t_uint256)": {
              "label": "mapping(uint256 => uint256)",
              "numberOfBytes": "32"
            },
            "t_string_storage": {
              "label": "string",
              "numberOfBytes": "32"
            },
            "t_struct(History)2831_storage": {
              "label": "struct HouseBusiness.History",
              "members": [
                {
                  "label": "hID",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "0"
                },
                {
                  "label": "contractId",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "1"
                },
                {
                  "label": "houseImg",
                  "type": "t_string_storage",
                  "offset": 0,
                  "slot": "2"
                },
                {
                  "label": "houseBrand",
                  "type": "t_string_storage",
                  "offset": 0,
                  "slot": "3"
                },
                {
                  "label": "desc",
                  "type": "t_string_storage",
                  "offset": 0,
                  "slot": "4"
                },
                {
                  "label": "history",
                  "type": "t_string_storage",
                  "offset": 0,
                  "slot": "5"
                },
                {
                  "label": "brandType",
                  "type": "t_string_storage",
                  "offset": 0,
                  "slot": "6"
                },
                {
                  "label": "yearField",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "7"
                }
              ],
              "numberOfBytes": "256"
            },
            "t_struct(HistoryType)2850_storage": {
              "label": "struct HouseBusiness.HistoryType",
              "members": [
                {
                  "label": "hID",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "0"
                },
                {
                  "label": "hLabel",
                  "type": "t_string_storage",
                  "offset": 0,
                  "slot": "1"
                },
                {
                  "label": "connectContract",
                  "type": "t_bool",
                  "offset": 0,
                  "slot": "2"
                },
                {
                  "label": "imgNeed",
                  "type": "t_bool",
                  "offset": 1,
                  "slot": "2"
                },
                {
                  "label": "brandNeed",
                  "type": "t_bool",
                  "offset": 2,
                  "slot": "2"
                },
                {
                  "label": "descNeed",
                  "type": "t_bool",
                  "offset": 3,
                  "slot": "2"
                },
                {
                  "label": "brandTypeNeed",
                  "type": "t_bool",
                  "offset": 4,
                  "slot": "2"
                },
                {
                  "label": "yearNeed",
                  "type": "t_bool",
                  "offset": 5,
                  "slot": "2"
                },
                {
                  "label": "checkMark",
                  "type": "t_bool",
                  "offset": 6,
                  "slot": "2"
                }
              ],
              "numberOfBytes": "96"
            },
            "t_struct(House)2797_storage": {
              "label": "struct HouseBusiness.House",
              "members": [
                {
                  "label": "tokenId",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "0"
                },
                {
                  "label": "tokenName",
                  "type": "t_string_storage",
                  "offset": 0,
                  "slot": "1"
                },
                {
                  "label": "tokenURI",
                  "type": "t_string_storage",
                  "offset": 0,
                  "slot": "2"
                },
                {
                  "label": "tokenType",
                  "type": "t_string_storage",
                  "offset": 0,
                  "slot": "3"
                },
                {
                  "label": "currentOwner",
                  "type": "t_address",
                  "offset": 0,
                  "slot": "4"
                },
                {
                  "label": "previousOwner",
                  "type": "t_address",
                  "offset": 0,
                  "slot": "5"
                },
                {
                  "label": "buyer",
                  "type": "t_address",
                  "offset": 0,
                  "slot": "6"
                },
                {
                  "label": "price",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "7"
                },
                {
                  "label": "numberOfTransfers",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "8"
                },
                {
                  "label": "nftPayable",
                  "type": "t_bool",
                  "offset": 0,
                  "slot": "9"
                },
                {
                  "label": "staked",
                  "type": "t_bool",
                  "offset": 1,
                  "slot": "9"
                },
                {
                  "label": "soldstatus",
                  "type": "t_bool",
                  "offset": 2,
                  "slot": "9"
                }
              ],
              "numberOfBytes": "320"
            },
            "t_struct(StakedNft)2814_storage": {
              "label": "struct HouseBusiness.StakedNft",
              "members": [
                {
                  "label": "owner",
                  "type": "t_address",
                  "offset": 0,
                  "slot": "0"
                },
                {
                  "label": "tokenId",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "1"
                },
                {
                  "label": "startedDate",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "2"
                },
                {
                  "label": "endDate",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "3"
                },
                {
                  "label": "claimDate",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "4"
                },
                {
                  "label": "stakingType",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "5"
                },
                {
                  "label": "perSecRewards",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "6"
                },
                {
                  "label": "stakingStatus",
                  "type": "t_bool",
                  "offset": 0,
                  "slot": "7"
                }
              ],
              "numberOfBytes": "256"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            }
          },
          "layoutVersion": "1.1",
          "flat": true
        }
      },
      "IMainCleanContract": {
        "src": "contracts\\interfaces\\IContract.sol:6",
        "inherit": [],
        "libraries": [],
        "methods": [
          "ccCounter()",
          "allCleanContracts(uint256)",
          "allContractsByOwner(address)",
          "allContractsBySigner(address)",
          "allNotifies(address)",
          "ccCreation(string,string,address,string,uint256,uint256,uint256,string)",
          "getAllContractsByOwner()",
          "getAllContractsBySigner()",
          "addContractSigner(uint256,address)",
          "signContract(uint256)",
          "sendNotify(address,string,uint256)",
          "getUploadedCounter()",
          "getAllNotifies()",
          "calcDiv(uint256,uint256)",
          "toString(bytes)",
          "addressToString(address)",
          "uintToString(uint256)",
          "bytesToString(bytes32)",
          "transferContractOwnership(uint256,address,address)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      }
    },
    {
      "IERC20": {
        "src": "@openzeppelin\\contracts\\token\\ERC20\\IERC20.sol:9",
        "inherit": [],
        "libraries": [],
        "methods": [
          "totalSupply()",
          "balanceOf(address)",
          "transfer(address,uint256)",
          "allowance(address,address)",
          "approve(address,uint256)",
          "transferFrom(address,address,uint256)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "ERC721": {
        "src": "@openzeppelin\\contracts\\token\\ERC721\\ERC721.sol:19",
        "version": {
          "withMetadata": "311027b738fb50ea92c84baf68eacb931adf05de03da13635a661dc9c5b03f73",
          "withoutMetadata": "9ec7f439077c3b762bc3aa6a17c55aba7a78d240190c9c7814df896455a0f780",
          "linkedWithoutMetadata": "9ec7f439077c3b762bc3aa6a17c55aba7a78d240190c9c7814df896455a0f780"
        },
        "inherit": [
          "IERC721Metadata",
          "IERC721",
          "ERC165",
          "IERC165",
          "Context"
        ],
        "libraries": [
          "Address",
          "Strings"
        ],
        "methods": [
          "(string,string)",
          "supportsInterface(bytes4)",
          "balanceOf(address)",
          "ownerOf(uint256)",
          "name()",
          "symbol()",
          "tokenURI(uint256)",
          "approve(address,uint256)",
          "getApproved(uint256)",
          "setApprovalForAll(address,bool)",
          "isApprovedForAll(address,address)",
          "transferFrom(address,address,uint256)",
          "safeTransferFrom(address,address,uint256)",
          "safeTransferFrom(address,address,uint256,bytes)"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "ERC721",
            "src": "@openzeppelin\\contracts\\token\\ERC721\\ERC721.sol:44"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "_name",
              "offset": 0,
              "slot": "0",
              "type": "t_string_storage",
              "contract": "ERC721",
              "src": "@openzeppelin\\contracts\\token\\ERC721\\ERC721.sol:24"
            },
            {
              "label": "_symbol",
              "offset": 0,
              "slot": "1",
              "type": "t_string_storage",
              "contract": "ERC721",
              "src": "@openzeppelin\\contracts\\token\\ERC721\\ERC721.sol:27"
            },
            {
              "label": "_owners",
              "offset": 0,
              "slot": "2",
              "type": "t_mapping(t_uint256,t_address)",
              "contract": "ERC721",
              "src": "@openzeppelin\\contracts\\token\\ERC721\\ERC721.sol:30"
            },
            {
              "label": "_balances",
              "offset": 0,
              "slot": "3",
              "type": "t_mapping(t_address,t_uint256)",
              "contract": "ERC721",
              "src": "@openzeppelin\\contracts\\token\\ERC721\\ERC721.sol:33"
            },
            {
              "label": "_tokenApprovals",
              "offset": 0,
              "slot": "4",
              "type": "t_mapping(t_uint256,t_address)",
              "contract": "ERC721",
              "src": "@openzeppelin\\contracts\\token\\ERC721\\ERC721.sol:36"
            },
            {
              "label": "_operatorApprovals",
              "offset": 0,
              "slot": "5",
              "type": "t_mapping(t_address,t_mapping(t_address,t_bool))",
              "contract": "ERC721",
              "src": "@openzeppelin\\contracts\\token\\ERC721\\ERC721.sol:39"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            },
            "t_bool": {
              "label": "bool",
              "numberOfBytes": "1"
            },
            "t_mapping(t_address,t_bool)": {
              "label": "mapping(address => bool)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_mapping(t_address,t_bool))": {
              "label": "mapping(address => mapping(address => bool))",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_uint256)": {
              "label": "mapping(address => uint256)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_uint256,t_address)": {
              "label": "mapping(uint256 => address)",
              "numberOfBytes": "32"
            },
            "t_string_storage": {
              "label": "string",
              "numberOfBytes": "32"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            }
          },
          "layoutVersion": "1.1",
          "flat": true
        }
      },
      "IERC721": {
        "src": "@openzeppelin\\contracts\\token\\ERC721\\IERC721.sol:11",
        "inherit": [
          "IERC165"
        ],
        "libraries": [],
        "methods": [
          "balanceOf(address)",
          "ownerOf(uint256)",
          "safeTransferFrom(address,address,uint256,bytes)",
          "safeTransferFrom(address,address,uint256)",
          "transferFrom(address,address,uint256)",
          "approve(address,uint256)",
          "setApprovalForAll(address,bool)",
          "getApproved(uint256)",
          "isApprovedForAll(address,address)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "IERC721Receiver": {
        "src": "@openzeppelin\\contracts\\token\\ERC721\\IERC721Receiver.sol:11",
        "inherit": [],
        "libraries": [],
        "methods": [
          "onERC721Received(address,address,uint256,bytes)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "ERC721URIStorage": {
        "src": "@openzeppelin\\contracts\\token\\ERC721\\extensions\\ERC721URIStorage.sol:11",
        "inherit": [
          "ERC721",
          "IERC721Metadata",
          "IERC721",
          "ERC165",
          "IERC165",
          "Context"
        ],
        "libraries": [
          "Strings"
        ],
        "methods": [
          "tokenURI(uint256)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [
            {
              "label": "_name",
              "offset": 0,
              "slot": "0",
              "type": "t_string_storage",
              "contract": "ERC721",
              "src": "@openzeppelin\\contracts\\token\\ERC721\\ERC721.sol:24"
            },
            {
              "label": "_symbol",
              "offset": 0,
              "slot": "1",
              "type": "t_string_storage",
              "contract": "ERC721",
              "src": "@openzeppelin\\contracts\\token\\ERC721\\ERC721.sol:27"
            },
            {
              "label": "_owners",
              "offset": 0,
              "slot": "2",
              "type": "t_mapping(t_uint256,t_address)",
              "contract": "ERC721",
              "src": "@openzeppelin\\contracts\\token\\ERC721\\ERC721.sol:30"
            },
            {
              "label": "_balances",
              "offset": 0,
              "slot": "3",
              "type": "t_mapping(t_address,t_uint256)",
              "contract": "ERC721",
              "src": "@openzeppelin\\contracts\\token\\ERC721\\ERC721.sol:33"
            },
            {
              "label": "_tokenApprovals",
              "offset": 0,
              "slot": "4",
              "type": "t_mapping(t_uint256,t_address)",
              "contract": "ERC721",
              "src": "@openzeppelin\\contracts\\token\\ERC721\\ERC721.sol:36"
            },
            {
              "label": "_operatorApprovals",
              "offset": 0,
              "slot": "5",
              "type": "t_mapping(t_address,t_mapping(t_address,t_bool))",
              "contract": "ERC721",
              "src": "@openzeppelin\\contracts\\token\\ERC721\\ERC721.sol:39"
            },
            {
              "label": "_tokenURIs",
              "offset": 0,
              "slot": "6",
              "type": "t_mapping(t_uint256,t_string_storage)",
              "contract": "ERC721URIStorage",
              "src": "@openzeppelin\\contracts\\token\\ERC721\\extensions\\ERC721URIStorage.sol:15"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            },
            "t_bool": {
              "label": "bool",
              "numberOfBytes": "1"
            },
            "t_mapping(t_address,t_bool)": {
              "label": "mapping(address => bool)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_mapping(t_address,t_bool))": {
              "label": "mapping(address => mapping(address => bool))",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_uint256)": {
              "label": "mapping(address => uint256)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_uint256,t_address)": {
              "label": "mapping(uint256 => address)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_uint256,t_string_storage)": {
              "label": "mapping(uint256 => string)",
              "numberOfBytes": "32"
            },
            "t_string_storage": {
              "label": "string",
              "numberOfBytes": "32"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            }
          },
          "layoutVersion": "1.1",
          "flat": true
        }
      },
      "IERC721Metadata": {
        "src": "@openzeppelin\\contracts\\token\\ERC721\\extensions\\IERC721Metadata.sol:12",
        "inherit": [
          "IERC721",
          "IERC165"
        ],
        "libraries": [],
        "methods": [
          "name()",
          "symbol()",
          "tokenURI(uint256)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "Address": {
        "src": "@openzeppelin\\contracts\\utils\\Address.sol:9",
        "version": {
          "withMetadata": "a0500f265408d7c0dbf75da3f9e44a5c2ee85e18bb1b58fe491ffcfa4ea7fd9b",
          "withoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db",
          "linkedWithoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db"
        },
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [
          {
            "kind": "delegatecall",
            "src": "@openzeppelin\\contracts\\utils\\Address.sol:185"
          }
        ],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "Context": {
        "src": "@openzeppelin\\contracts\\utils\\Context.sol:16",
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "Strings": {
        "src": "@openzeppelin\\contracts\\utils\\Strings.sol:11",
        "version": {
          "withMetadata": "c385b5200dd723f945d28b88358d79ca1b5c0f71c28cbbab9acf6d6f3fd15593",
          "withoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db",
          "linkedWithoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db"
        },
        "inherit": [],
        "libraries": [
          "Math"
        ],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "ERC165": {
        "src": "@openzeppelin\\contracts\\utils\\introspection\\ERC165.sol:22",
        "inherit": [
          "IERC165"
        ],
        "libraries": [],
        "methods": [
          "supportsInterface(bytes4)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "IERC165": {
        "src": "@openzeppelin\\contracts\\utils\\introspection\\IERC165.sol:15",
        "inherit": [],
        "libraries": [],
        "methods": [
          "supportsInterface(bytes4)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "Math": {
        "src": "@openzeppelin\\contracts\\utils\\math\\Math.sol:9",
        "version": {
          "withMetadata": "fcaf39e5e702f2902d6ef00c1def75c9800e8d2a0a78a87cf542096cafc7a4b0",
          "withoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db",
          "linkedWithoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db"
        },
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "HouseBusiness": {
        "src": "contracts\\HouseBusiness.sol:11",
        "version": {
          "withMetadata": "6388275638c53b0c4f93dd06ebddd59252d04462846879ff6408b49354787759",
          "withoutMetadata": "b67ba3dcf6d85cf560b08f1d38c4faf0f0a8828ae76d2bda77bdad6c27dc10d6",
          "linkedWithoutMetadata": "b67ba3dcf6d85cf560b08f1d38c4faf0f0a8828ae76d2bda77bdad6c27dc10d6"
        },
        "inherit": [
          "ERC721URIStorage",
          "ERC721",
          "IERC721Metadata",
          "IERC721",
          "ERC165",
          "IERC165",
          "Context"
        ],
        "libraries": [],
        "methods": [
          "(address)",
          "setMinMaxHousePrice(uint256,uint256)",
          "setConfigToken(address)",
          "isMember()",
          "addMember(address)",
          "removeMember(address)",
          "tokenURI(uint256)",
          "setCContractAddress(address)",
          "setPayable(uint256,address,bool)",
          "mintHouse(string,string,string,string,uint256)",
          "addAllowList(uint256,address)",
          "removeAllowList(uint256,address)",
          "checkAllowedList(uint256,address)",
          "addHistory(uint256,uint256,uint256,string,string,string,string,string,uint256)",
          "getHistory(uint256)",
          "editHistory(uint256,uint256,string,string,string,string,string,uint256)",
          "getHistoryType()",
          "addOrEditHType(uint256,string,bool,bool,bool,bool,bool,bool,bool)",
          "removeHistoryType(uint256)",
          "getMinMaxNFT()",
          "getTokenOwner(uint256)",
          "buyHouseNft(uint256)",
          "sendToken(address,uint256)",
          "changeTokenPrice(uint256,uint256)",
          "getAllHouses()",
          "getAllPayableHouses()",
          "getAllMyHouses()",
          "withdrawToken(uint256)",
          "withdrawETH(uint256)",
          "calcDiv(uint256,uint256)",
          "setAPYConfig(uint256,uint256)",
          "getAllAPYTypes()",
          "stake(uint256,uint256)",
          "unstake(uint256)",
          "stakingFinished(uint256)",
          "totalRewards(address)",
          "claimRewards(address)",
          "getAllMyStakedNFTs()",
          "getTotalInfo()",
          "getAllAPYs()",
          "getPenalty()",
          "setPenalty(uint256)",
          "getRoyalty()",
          "setRoyalty(uint256)"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "HouseBusiness",
            "src": "contracts\\HouseBusiness.sol:106"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "_name",
              "offset": 0,
              "slot": "0",
              "type": "t_string_storage",
              "contract": "ERC721",
              "src": "@openzeppelin\\contracts\\token\\ERC721\\ERC721.sol:24"
            },
            {
              "label": "_symbol",
              "offset": 0,
              "slot": "1",
              "type": "t_string_storage",
              "contract": "ERC721",
              "src": "@openzeppelin\\contracts\\token\\ERC721\\ERC721.sol:27"
            },
            {
              "label": "_owners",
              "offset": 0,
              "slot": "2",
              "type": "t_mapping(t_uint256,t_address)",
              "contract": "ERC721",
              "src": "@openzeppelin\\contracts\\token\\ERC721\\ERC721.sol:30"
            },
            {
              "label": "_balances",
              "offset": 0,
              "slot": "3",
              "type": "t_mapping(t_address,t_uint256)",
              "contract": "ERC721",
              "src": "@openzeppelin\\contracts\\token\\ERC721\\ERC721.sol:33"
            },
            {
              "label": "_tokenApprovals",
              "offset": 0,
              "slot": "4",
              "type": "t_mapping(t_uint256,t_address)",
              "contract": "ERC721",
              "src": "@openzeppelin\\contracts\\token\\ERC721\\ERC721.sol:36"
            },
            {
              "label": "_operatorApprovals",
              "offset": 0,
              "slot": "5",
              "type": "t_mapping(t_address,t_mapping(t_address,t_bool))",
              "contract": "ERC721",
              "src": "@openzeppelin\\contracts\\token\\ERC721\\ERC721.sol:39"
            },
            {
              "label": "_tokenURIs",
              "offset": 0,
              "slot": "6",
              "type": "t_mapping(t_uint256,t_string_storage)",
              "contract": "ERC721URIStorage",
              "src": "@openzeppelin\\contracts\\token\\ERC721\\extensions\\ERC721URIStorage.sol:15"
            },
            {
              "label": "collectionName",
              "offset": 0,
              "slot": "7",
              "type": "t_string_storage",
              "contract": "HouseBusiness",
              "src": "contracts\\HouseBusiness.sol:13"
            },
            {
              "label": "collectionNameSymbol",
              "offset": 0,
              "slot": "8",
              "type": "t_string_storage",
              "contract": "HouseBusiness",
              "src": "contracts\\HouseBusiness.sol:15"
            },
            {
              "label": "houseCounter",
              "offset": 0,
              "slot": "9",
              "type": "t_uint256",
              "contract": "HouseBusiness",
              "src": "contracts\\HouseBusiness.sol:17"
            },
            {
              "label": "stakedCounter",
              "offset": 0,
              "slot": "10",
              "type": "t_uint256",
              "contract": "HouseBusiness",
              "src": "contracts\\HouseBusiness.sol:19"
            },
            {
              "label": "soldedCounter",
              "offset": 0,
              "slot": "11",
              "type": "t_uint256",
              "contract": "HouseBusiness",
              "src": "contracts\\HouseBusiness.sol:21"
            },
            {
              "label": "hTypeCounter",
              "offset": 0,
              "slot": "12",
              "type": "t_uint256",
              "contract": "HouseBusiness",
              "src": "contracts\\HouseBusiness.sol:23"
            },
            {
              "label": "_token",
              "offset": 0,
              "slot": "13",
              "type": "t_contract(IERC20)77",
              "contract": "HouseBusiness",
              "src": "contracts\\HouseBusiness.sol:25"
            },
            {
              "label": "minPrice",
              "offset": 0,
              "slot": "14",
              "type": "t_uint256",
              "contract": "HouseBusiness",
              "src": "contracts\\HouseBusiness.sol:27"
            },
            {
              "label": "maxPrice",
              "offset": 0,
              "slot": "15",
              "type": "t_uint256",
              "contract": "HouseBusiness",
              "src": "contracts\\HouseBusiness.sol:29"
            },
            {
              "label": "penalty",
              "offset": 0,
              "slot": "16",
              "type": "t_uint256",
              "contract": "HouseBusiness",
              "src": "contracts\\HouseBusiness.sol:31"
            },
            {
              "label": "royalty",
              "offset": 0,
              "slot": "17",
              "type": "t_uint256",
              "contract": "HouseBusiness",
              "src": "contracts\\HouseBusiness.sol:33"
            },
            {
              "label": "cContractAddress",
              "offset": 0,
              "slot": "18",
              "type": "t_address",
              "contract": "HouseBusiness",
              "src": "contracts\\HouseBusiness.sol:35"
            },
            {
              "label": "historyTypes",
              "offset": 0,
              "slot": "19",
              "type": "t_array(t_struct(HistoryType)2850_storage)dyn_storage",
              "contract": "HouseBusiness",
              "src": "contracts\\HouseBusiness.sol:86"
            },
            {
              "label": "houseHistories",
              "offset": 0,
              "slot": "20",
              "type": "t_mapping(t_uint256,t_array(t_struct(History)2831_storage)dyn_storage)",
              "contract": "HouseBusiness",
              "src": "contracts\\HouseBusiness.sol:88"
            },
            {
              "label": "APYtypes",
              "offset": 0,
              "slot": "21",
              "type": "t_array(t_uint256)dyn_storage",
              "contract": "HouseBusiness",
              "src": "contracts\\HouseBusiness.sol:90"
            },
            {
              "label": "APYConfig",
              "offset": 0,
              "slot": "22",
              "type": "t_mapping(t_uint256,t_uint256)",
              "contract": "HouseBusiness",
              "src": "contracts\\HouseBusiness.sol:92"
            },
            {
              "label": "allMembers",
              "offset": 0,
              "slot": "23",
              "type": "t_mapping(t_address,t_bool)",
              "contract": "HouseBusiness",
              "src": "contracts\\HouseBusiness.sol:94"
            },
            {
              "label": "allHouses",
              "offset": 0,
              "slot": "24",
              "type": "t_mapping(t_uint256,t_struct(House)2797_storage)",
              "contract": "HouseBusiness",
              "src": "contracts\\HouseBusiness.sol:96"
            },
            {
              "label": "allowedList",
              "offset": 0,
              "slot": "25",
              "type": "t_mapping(t_uint256,t_mapping(t_address,t_bool))",
              "contract": "HouseBusiness",
              "src": "contracts\\HouseBusiness.sol:98"
            },
            {
              "label": "stakedNfts",
              "offset": 0,
              "slot": "26",
              "type": "t_mapping(t_address,t_array(t_struct(StakedNft)2814_storage)dyn_storage)",
              "contract": "HouseBusiness",
              "src": "contracts\\HouseBusiness.sol:104"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            },
            "t_array(t_struct(History)2831_storage)dyn_storage": {
              "label": "struct HouseBusiness.History[]",
              "numberOfBytes": "32"
            },
            "t_array(t_struct(HistoryType)2850_storage)dyn_storage": {
              "label": "struct HouseBusiness.HistoryType[]",
              "numberOfBytes": "32"
            },
            "t_array(t_struct(StakedNft)2814_storage)dyn_storage": {
              "label": "struct HouseBusiness.StakedNft[]",
              "numberOfBytes": "32"
            },
            "t_array(t_uint256)dyn_storage": {
              "label": "uint256[]",
              "numberOfBytes": "32"
            },
            "t_bool": {
              "label": "bool",
              "numberOfBytes": "1"
            },
            "t_contract(IERC20)77": {
              "label": "contract IERC20",
              "numberOfBytes": "20"
            },
            "t_mapping(t_address,t_array(t_struct(StakedNft)2814_storage)dyn_storage)": {
              "label": "mapping(address => struct HouseBusiness.StakedNft[])",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_bool)": {
              "label": "mapping(address => bool)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_mapping(t_address,t_bool))": {
              "label": "mapping(address => mapping(address => bool))",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_uint256)": {
              "label": "mapping(address => uint256)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_uint256,t_address)": {
              "label": "mapping(uint256 => address)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_uint256,t_array(t_struct(History)2831_storage)dyn_storage)": {
              "label": "mapping(uint256 => struct HouseBusiness.History[])",
              "numberOfBytes": "32"
            },
            "t_mapping(t_uint256,t_mapping(t_address,t_bool))": {
              "label": "mapping(uint256 => mapping(address => bool))",
              "numberOfBytes": "32"
            },
            "t_mapping(t_uint256,t_string_storage)": {
              "label": "mapping(uint256 => string)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_uint256,t_struct(House)2797_storage)": {
              "label": "mapping(uint256 => struct HouseBusiness.House)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_uint256,t_uint256)": {
              "label": "mapping(uint256 => uint256)",
              "numberOfBytes": "32"
            },
            "t_string_storage": {
              "label": "string",
              "numberOfBytes": "32"
            },
            "t_struct(History)2831_storage": {
              "label": "struct HouseBusiness.History",
              "members": [
                {
                  "label": "hID",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "0"
                },
                {
                  "label": "contractId",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "1"
                },
                {
                  "label": "houseImg",
                  "type": "t_string_storage",
                  "offset": 0,
                  "slot": "2"
                },
                {
                  "label": "houseBrand",
                  "type": "t_string_storage",
                  "offset": 0,
                  "slot": "3"
                },
                {
                  "label": "desc",
                  "type": "t_string_storage",
                  "offset": 0,
                  "slot": "4"
                },
                {
                  "label": "history",
                  "type": "t_string_storage",
                  "offset": 0,
                  "slot": "5"
                },
                {
                  "label": "brandType",
                  "type": "t_string_storage",
                  "offset": 0,
                  "slot": "6"
                },
                {
                  "label": "yearField",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "7"
                }
              ],
              "numberOfBytes": "256"
            },
            "t_struct(HistoryType)2850_storage": {
              "label": "struct HouseBusiness.HistoryType",
              "members": [
                {
                  "label": "hID",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "0"
                },
                {
                  "label": "hLabel",
                  "type": "t_string_storage",
                  "offset": 0,
                  "slot": "1"
                },
                {
                  "label": "connectContract",
                  "type": "t_bool",
                  "offset": 0,
                  "slot": "2"
                },
                {
                  "label": "imgNeed",
                  "type": "t_bool",
                  "offset": 1,
                  "slot": "2"
                },
                {
                  "label": "brandNeed",
                  "type": "t_bool",
                  "offset": 2,
                  "slot": "2"
                },
                {
                  "label": "descNeed",
                  "type": "t_bool",
                  "offset": 3,
                  "slot": "2"
                },
                {
                  "label": "brandTypeNeed",
                  "type": "t_bool",
                  "offset": 4,
                  "slot": "2"
                },
                {
                  "label": "yearNeed",
                  "type": "t_bool",
                  "offset": 5,
                  "slot": "2"
                },
                {
                  "label": "checkMark",
                  "type": "t_bool",
                  "offset": 6,
                  "slot": "2"
                }
              ],
              "numberOfBytes": "96"
            },
            "t_struct(House)2797_storage": {
              "label": "struct HouseBusiness.House",
              "members": [
                {
                  "label": "tokenId",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "0"
                },
                {
                  "label": "tokenName",
                  "type": "t_string_storage",
                  "offset": 0,
                  "slot": "1"
                },
                {
                  "label": "tokenURI",
                  "type": "t_string_storage",
                  "offset": 0,
                  "slot": "2"
                },
                {
                  "label": "tokenType",
                  "type": "t_string_storage",
                  "offset": 0,
                  "slot": "3"
                },
                {
                  "label": "currentOwner",
                  "type": "t_address",
                  "offset": 0,
                  "slot": "4"
                },
                {
                  "label": "previousOwner",
                  "type": "t_address",
                  "offset": 0,
                  "slot": "5"
                },
                {
                  "label": "buyer",
                  "type": "t_address",
                  "offset": 0,
                  "slot": "6"
                },
                {
                  "label": "price",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "7"
                },
                {
                  "label": "numberOfTransfers",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "8"
                },
                {
                  "label": "nftPayable",
                  "type": "t_bool",
                  "offset": 0,
                  "slot": "9"
                },
                {
                  "label": "staked",
                  "type": "t_bool",
                  "offset": 1,
                  "slot": "9"
                },
                {
                  "label": "soldstatus",
                  "type": "t_bool",
                  "offset": 2,
                  "slot": "9"
                }
              ],
              "numberOfBytes": "320"
            },
            "t_struct(StakedNft)2814_storage": {
              "label": "struct HouseBusiness.StakedNft",
              "members": [
                {
                  "label": "owner",
                  "type": "t_address",
                  "offset": 0,
                  "slot": "0"
                },
                {
                  "label": "tokenId",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "1"
                },
                {
                  "label": "startedDate",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "2"
                },
                {
                  "label": "endDate",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "3"
                },
                {
                  "label": "claimDate",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "4"
                },
                {
                  "label": "stakingType",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "5"
                },
                {
                  "label": "perSecRewards",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "6"
                },
                {
                  "label": "stakingStatus",
                  "type": "t_bool",
                  "offset": 0,
                  "slot": "7"
                }
              ],
              "numberOfBytes": "256"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            }
          },
          "layoutVersion": "1.1",
          "flat": true
        }
      },
      "IMainCleanContract": {
        "src": "contracts\\interfaces\\IContract.sol:6",
        "inherit": [],
        "libraries": [],
        "methods": [
          "ccCounter()",
          "allCleanContracts(uint256)",
          "allContractsByOwner(address)",
          "allContractsBySigner(address)",
          "allNotifies(address)",
          "ccCreation(string,string,address,string,uint256,uint256,uint256,string)",
          "getAllContractsByOwner()",
          "getAllContractsBySigner()",
          "addContractSigner(uint256,address)",
          "signContract(uint256)",
          "sendNotify(address,string,uint256)",
          "getUploadedCounter()",
          "getAllNotifies()",
          "calcDiv(uint256,uint256)",
          "toString(bytes)",
          "addressToString(address)",
          "uintToString(uint256)",
          "bytesToString(bytes32)",
          "transferContractOwnership(uint256,address,address)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      }
    },
    {
      "IERC20": {
        "src": "@openzeppelin\\contracts\\token\\ERC20\\IERC20.sol:9",
        "inherit": [],
        "libraries": [],
        "methods": [
          "totalSupply()",
          "balanceOf(address)",
          "transfer(address,uint256)",
          "allowance(address,address)",
          "approve(address,uint256)",
          "transferFrom(address,address,uint256)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "ERC721": {
        "src": "@openzeppelin\\contracts\\token\\ERC721\\ERC721.sol:19",
        "version": {
          "withMetadata": "311027b738fb50ea92c84baf68eacb931adf05de03da13635a661dc9c5b03f73",
          "withoutMetadata": "9ec7f439077c3b762bc3aa6a17c55aba7a78d240190c9c7814df896455a0f780",
          "linkedWithoutMetadata": "9ec7f439077c3b762bc3aa6a17c55aba7a78d240190c9c7814df896455a0f780"
        },
        "inherit": [
          "IERC721Metadata",
          "IERC721",
          "ERC165",
          "IERC165",
          "Context"
        ],
        "libraries": [
          "Address",
          "Strings"
        ],
        "methods": [
          "(string,string)",
          "supportsInterface(bytes4)",
          "balanceOf(address)",
          "ownerOf(uint256)",
          "name()",
          "symbol()",
          "tokenURI(uint256)",
          "approve(address,uint256)",
          "getApproved(uint256)",
          "setApprovalForAll(address,bool)",
          "isApprovedForAll(address,address)",
          "transferFrom(address,address,uint256)",
          "safeTransferFrom(address,address,uint256)",
          "safeTransferFrom(address,address,uint256,bytes)"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "ERC721",
            "src": "@openzeppelin\\contracts\\token\\ERC721\\ERC721.sol:44"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "_name",
              "offset": 0,
              "slot": "0",
              "type": "t_string_storage",
              "contract": "ERC721",
              "src": "@openzeppelin\\contracts\\token\\ERC721\\ERC721.sol:24"
            },
            {
              "label": "_symbol",
              "offset": 0,
              "slot": "1",
              "type": "t_string_storage",
              "contract": "ERC721",
              "src": "@openzeppelin\\contracts\\token\\ERC721\\ERC721.sol:27"
            },
            {
              "label": "_owners",
              "offset": 0,
              "slot": "2",
              "type": "t_mapping(t_uint256,t_address)",
              "contract": "ERC721",
              "src": "@openzeppelin\\contracts\\token\\ERC721\\ERC721.sol:30"
            },
            {
              "label": "_balances",
              "offset": 0,
              "slot": "3",
              "type": "t_mapping(t_address,t_uint256)",
              "contract": "ERC721",
              "src": "@openzeppelin\\contracts\\token\\ERC721\\ERC721.sol:33"
            },
            {
              "label": "_tokenApprovals",
              "offset": 0,
              "slot": "4",
              "type": "t_mapping(t_uint256,t_address)",
              "contract": "ERC721",
              "src": "@openzeppelin\\contracts\\token\\ERC721\\ERC721.sol:36"
            },
            {
              "label": "_operatorApprovals",
              "offset": 0,
              "slot": "5",
              "type": "t_mapping(t_address,t_mapping(t_address,t_bool))",
              "contract": "ERC721",
              "src": "@openzeppelin\\contracts\\token\\ERC721\\ERC721.sol:39"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            },
            "t_bool": {
              "label": "bool",
              "numberOfBytes": "1"
            },
            "t_mapping(t_address,t_bool)": {
              "label": "mapping(address => bool)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_mapping(t_address,t_bool))": {
              "label": "mapping(address => mapping(address => bool))",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_uint256)": {
              "label": "mapping(address => uint256)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_uint256,t_address)": {
              "label": "mapping(uint256 => address)",
              "numberOfBytes": "32"
            },
            "t_string_storage": {
              "label": "string",
              "numberOfBytes": "32"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            }
          },
          "layoutVersion": "1.1",
          "flat": true
        }
      },
      "IERC721": {
        "src": "@openzeppelin\\contracts\\token\\ERC721\\IERC721.sol:11",
        "inherit": [
          "IERC165"
        ],
        "libraries": [],
        "methods": [
          "balanceOf(address)",
          "ownerOf(uint256)",
          "safeTransferFrom(address,address,uint256,bytes)",
          "safeTransferFrom(address,address,uint256)",
          "transferFrom(address,address,uint256)",
          "approve(address,uint256)",
          "setApprovalForAll(address,bool)",
          "getApproved(uint256)",
          "isApprovedForAll(address,address)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "IERC721Receiver": {
        "src": "@openzeppelin\\contracts\\token\\ERC721\\IERC721Receiver.sol:11",
        "inherit": [],
        "libraries": [],
        "methods": [
          "onERC721Received(address,address,uint256,bytes)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "ERC721URIStorage": {
        "src": "@openzeppelin\\contracts\\token\\ERC721\\extensions\\ERC721URIStorage.sol:11",
        "inherit": [
          "ERC721",
          "IERC721Metadata",
          "IERC721",
          "ERC165",
          "IERC165",
          "Context"
        ],
        "libraries": [
          "Strings"
        ],
        "methods": [
          "tokenURI(uint256)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [
            {
              "label": "_name",
              "offset": 0,
              "slot": "0",
              "type": "t_string_storage",
              "contract": "ERC721",
              "src": "@openzeppelin\\contracts\\token\\ERC721\\ERC721.sol:24"
            },
            {
              "label": "_symbol",
              "offset": 0,
              "slot": "1",
              "type": "t_string_storage",
              "contract": "ERC721",
              "src": "@openzeppelin\\contracts\\token\\ERC721\\ERC721.sol:27"
            },
            {
              "label": "_owners",
              "offset": 0,
              "slot": "2",
              "type": "t_mapping(t_uint256,t_address)",
              "contract": "ERC721",
              "src": "@openzeppelin\\contracts\\token\\ERC721\\ERC721.sol:30"
            },
            {
              "label": "_balances",
              "offset": 0,
              "slot": "3",
              "type": "t_mapping(t_address,t_uint256)",
              "contract": "ERC721",
              "src": "@openzeppelin\\contracts\\token\\ERC721\\ERC721.sol:33"
            },
            {
              "label": "_tokenApprovals",
              "offset": 0,
              "slot": "4",
              "type": "t_mapping(t_uint256,t_address)",
              "contract": "ERC721",
              "src": "@openzeppelin\\contracts\\token\\ERC721\\ERC721.sol:36"
            },
            {
              "label": "_operatorApprovals",
              "offset": 0,
              "slot": "5",
              "type": "t_mapping(t_address,t_mapping(t_address,t_bool))",
              "contract": "ERC721",
              "src": "@openzeppelin\\contracts\\token\\ERC721\\ERC721.sol:39"
            },
            {
              "label": "_tokenURIs",
              "offset": 0,
              "slot": "6",
              "type": "t_mapping(t_uint256,t_string_storage)",
              "contract": "ERC721URIStorage",
              "src": "@openzeppelin\\contracts\\token\\ERC721\\extensions\\ERC721URIStorage.sol:15"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            },
            "t_bool": {
              "label": "bool",
              "numberOfBytes": "1"
            },
            "t_mapping(t_address,t_bool)": {
              "label": "mapping(address => bool)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_mapping(t_address,t_bool))": {
              "label": "mapping(address => mapping(address => bool))",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_uint256)": {
              "label": "mapping(address => uint256)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_uint256,t_address)": {
              "label": "mapping(uint256 => address)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_uint256,t_string_storage)": {
              "label": "mapping(uint256 => string)",
              "numberOfBytes": "32"
            },
            "t_string_storage": {
              "label": "string",
              "numberOfBytes": "32"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            }
          },
          "layoutVersion": "1.1",
          "flat": true
        }
      },
      "IERC721Metadata": {
        "src": "@openzeppelin\\contracts\\token\\ERC721\\extensions\\IERC721Metadata.sol:12",
        "inherit": [
          "IERC721",
          "IERC165"
        ],
        "libraries": [],
        "methods": [
          "name()",
          "symbol()",
          "tokenURI(uint256)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "Address": {
        "src": "@openzeppelin\\contracts\\utils\\Address.sol:9",
        "version": {
          "withMetadata": "a0500f265408d7c0dbf75da3f9e44a5c2ee85e18bb1b58fe491ffcfa4ea7fd9b",
          "withoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db",
          "linkedWithoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db"
        },
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [
          {
            "kind": "delegatecall",
            "src": "@openzeppelin\\contracts\\utils\\Address.sol:185"
          }
        ],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "Context": {
        "src": "@openzeppelin\\contracts\\utils\\Context.sol:16",
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "Strings": {
        "src": "@openzeppelin\\contracts\\utils\\Strings.sol:11",
        "version": {
          "withMetadata": "c385b5200dd723f945d28b88358d79ca1b5c0f71c28cbbab9acf6d6f3fd15593",
          "withoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db",
          "linkedWithoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db"
        },
        "inherit": [],
        "libraries": [
          "Math"
        ],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "ERC165": {
        "src": "@openzeppelin\\contracts\\utils\\introspection\\ERC165.sol:22",
        "inherit": [
          "IERC165"
        ],
        "libraries": [],
        "methods": [
          "supportsInterface(bytes4)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "IERC165": {
        "src": "@openzeppelin\\contracts\\utils\\introspection\\IERC165.sol:15",
        "inherit": [],
        "libraries": [],
        "methods": [
          "supportsInterface(bytes4)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "Math": {
        "src": "@openzeppelin\\contracts\\utils\\math\\Math.sol:9",
        "version": {
          "withMetadata": "fcaf39e5e702f2902d6ef00c1def75c9800e8d2a0a78a87cf542096cafc7a4b0",
          "withoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db",
          "linkedWithoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db"
        },
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "HouseBusiness": {
        "src": "contracts\\HouseBusiness.sol:11",
        "version": {
          "withMetadata": "790d88a08ce3d857ea684115dca732b0c55fb4c77ee6b68861b8e14b61e78ba5",
          "withoutMetadata": "00b825912c12f735e4d02be847442357ef93e36ec14648c7c338c4e7c0a2c07f",
          "linkedWithoutMetadata": "00b825912c12f735e4d02be847442357ef93e36ec14648c7c338c4e7c0a2c07f"
        },
        "inherit": [
          "ERC721URIStorage",
          "ERC721",
          "IERC721Metadata",
          "IERC721",
          "ERC165",
          "IERC165",
          "Context"
        ],
        "libraries": [],
        "methods": [
          "(address)",
          "setMinMaxHousePrice(uint256,uint256)",
          "setConfigToken(address)",
          "isMember()",
          "addMember(address)",
          "removeMember(address)",
          "tokenURI(uint256)",
          "setCContractAddress(address)",
          "setPayable(uint256,address,bool)",
          "mintHouse(string,string,string,string,uint256)",
          "addAllowList(uint256,address)",
          "removeAllowList(uint256,address)",
          "checkAllowedList(uint256,address)",
          "addHistory(uint256,uint256,uint256,string,string,string,string,string,uint256)",
          "getHistory(uint256)",
          "editHistory(uint256,uint256,string,string,string,string,string,uint256)",
          "getHistoryType()",
          "addOrEditHType(uint256,string,bool,bool,bool,bool,bool,bool,bool)",
          "removeHistoryType(uint256)",
          "getMinMaxNFT()",
          "getTokenOwner(uint256)",
          "buyHouseNft(uint256)",
          "sendToken(address,uint256)",
          "changeTokenPrice(uint256,uint256)",
          "getAllHouses()",
          "getAllPayableHouses()",
          "getAllMyHouses()",
          "withdrawToken(uint256)",
          "withdrawETH(uint256)",
          "calcDiv(uint256,uint256)",
          "setAPYConfig(uint256,uint256)",
          "getAllAPYTypes()",
          "stake(uint256,uint256)",
          "unstake(uint256)",
          "stakingFinished(uint256)",
          "totalRewards(address)",
          "claimRewards(address)",
          "getAllMyStakedNFTs()",
          "getTotalInfo()",
          "getAllAPYs()",
          "getPenalty()",
          "setPenalty(uint256)",
          "getRoyalty()",
          "setRoyalty(uint256)"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "HouseBusiness",
            "src": "contracts\\HouseBusiness.sol:106"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "_name",
              "offset": 0,
              "slot": "0",
              "type": "t_string_storage",
              "contract": "ERC721",
              "src": "@openzeppelin\\contracts\\token\\ERC721\\ERC721.sol:24"
            },
            {
              "label": "_symbol",
              "offset": 0,
              "slot": "1",
              "type": "t_string_storage",
              "contract": "ERC721",
              "src": "@openzeppelin\\contracts\\token\\ERC721\\ERC721.sol:27"
            },
            {
              "label": "_owners",
              "offset": 0,
              "slot": "2",
              "type": "t_mapping(t_uint256,t_address)",
              "contract": "ERC721",
              "src": "@openzeppelin\\contracts\\token\\ERC721\\ERC721.sol:30"
            },
            {
              "label": "_balances",
              "offset": 0,
              "slot": "3",
              "type": "t_mapping(t_address,t_uint256)",
              "contract": "ERC721",
              "src": "@openzeppelin\\contracts\\token\\ERC721\\ERC721.sol:33"
            },
            {
              "label": "_tokenApprovals",
              "offset": 0,
              "slot": "4",
              "type": "t_mapping(t_uint256,t_address)",
              "contract": "ERC721",
              "src": "@openzeppelin\\contracts\\token\\ERC721\\ERC721.sol:36"
            },
            {
              "label": "_operatorApprovals",
              "offset": 0,
              "slot": "5",
              "type": "t_mapping(t_address,t_mapping(t_address,t_bool))",
              "contract": "ERC721",
              "src": "@openzeppelin\\contracts\\token\\ERC721\\ERC721.sol:39"
            },
            {
              "label": "_tokenURIs",
              "offset": 0,
              "slot": "6",
              "type": "t_mapping(t_uint256,t_string_storage)",
              "contract": "ERC721URIStorage",
              "src": "@openzeppelin\\contracts\\token\\ERC721\\extensions\\ERC721URIStorage.sol:15"
            },
            {
              "label": "collectionName",
              "offset": 0,
              "slot": "7",
              "type": "t_string_storage",
              "contract": "HouseBusiness",
              "src": "contracts\\HouseBusiness.sol:13"
            },
            {
              "label": "collectionNameSymbol",
              "offset": 0,
              "slot": "8",
              "type": "t_string_storage",
              "contract": "HouseBusiness",
              "src": "contracts\\HouseBusiness.sol:15"
            },
            {
              "label": "houseCounter",
              "offset": 0,
              "slot": "9",
              "type": "t_uint256",
              "contract": "HouseBusiness",
              "src": "contracts\\HouseBusiness.sol:17"
            },
            {
              "label": "stakedCounter",
              "offset": 0,
              "slot": "10",
              "type": "t_uint256",
              "contract": "HouseBusiness",
              "src": "contracts\\HouseBusiness.sol:19"
            },
            {
              "label": "soldedCounter",
              "offset": 0,
              "slot": "11",
              "type": "t_uint256",
              "contract": "HouseBusiness",
              "src": "contracts\\HouseBusiness.sol:21"
            },
            {
              "label": "hTypeCounter",
              "offset": 0,
              "slot": "12",
              "type": "t_uint256",
              "contract": "HouseBusiness",
              "src": "contracts\\HouseBusiness.sol:23"
            },
            {
              "label": "_token",
              "offset": 0,
              "slot": "13",
              "type": "t_contract(IERC20)77",
              "contract": "HouseBusiness",
              "src": "contracts\\HouseBusiness.sol:25"
            },
            {
              "label": "minPrice",
              "offset": 0,
              "slot": "14",
              "type": "t_uint256",
              "contract": "HouseBusiness",
              "src": "contracts\\HouseBusiness.sol:27"
            },
            {
              "label": "maxPrice",
              "offset": 0,
              "slot": "15",
              "type": "t_uint256",
              "contract": "HouseBusiness",
              "src": "contracts\\HouseBusiness.sol:29"
            },
            {
              "label": "penalty",
              "offset": 0,
              "slot": "16",
              "type": "t_uint256",
              "contract": "HouseBusiness",
              "src": "contracts\\HouseBusiness.sol:31"
            },
            {
              "label": "royalty",
              "offset": 0,
              "slot": "17",
              "type": "t_uint256",
              "contract": "HouseBusiness",
              "src": "contracts\\HouseBusiness.sol:33"
            },
            {
              "label": "cContractAddress",
              "offset": 0,
              "slot": "18",
              "type": "t_address",
              "contract": "HouseBusiness",
              "src": "contracts\\HouseBusiness.sol:35"
            },
            {
              "label": "historyTypes",
              "offset": 0,
              "slot": "19",
              "type": "t_array(t_struct(HistoryType)2850_storage)dyn_storage",
              "contract": "HouseBusiness",
              "src": "contracts\\HouseBusiness.sol:86"
            },
            {
              "label": "houseHistories",
              "offset": 0,
              "slot": "20",
              "type": "t_mapping(t_uint256,t_array(t_struct(History)2831_storage)dyn_storage)",
              "contract": "HouseBusiness",
              "src": "contracts\\HouseBusiness.sol:88"
            },
            {
              "label": "APYtypes",
              "offset": 0,
              "slot": "21",
              "type": "t_array(t_uint256)dyn_storage",
              "contract": "HouseBusiness",
              "src": "contracts\\HouseBusiness.sol:90"
            },
            {
              "label": "APYConfig",
              "offset": 0,
              "slot": "22",
              "type": "t_mapping(t_uint256,t_uint256)",
              "contract": "HouseBusiness",
              "src": "contracts\\HouseBusiness.sol:92"
            },
            {
              "label": "allMembers",
              "offset": 0,
              "slot": "23",
              "type": "t_mapping(t_address,t_bool)",
              "contract": "HouseBusiness",
              "src": "contracts\\HouseBusiness.sol:94"
            },
            {
              "label": "allHouses",
              "offset": 0,
              "slot": "24",
              "type": "t_mapping(t_uint256,t_struct(House)2797_storage)",
              "contract": "HouseBusiness",
              "src": "contracts\\HouseBusiness.sol:96"
            },
            {
              "label": "allowedList",
              "offset": 0,
              "slot": "25",
              "type": "t_mapping(t_uint256,t_mapping(t_address,t_bool))",
              "contract": "HouseBusiness",
              "src": "contracts\\HouseBusiness.sol:98"
            },
            {
              "label": "stakedNfts",
              "offset": 0,
              "slot": "26",
              "type": "t_mapping(t_address,t_array(t_struct(StakedNft)2814_storage)dyn_storage)",
              "contract": "HouseBusiness",
              "src": "contracts\\HouseBusiness.sol:104"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            },
            "t_array(t_struct(History)2831_storage)dyn_storage": {
              "label": "struct HouseBusiness.History[]",
              "numberOfBytes": "32"
            },
            "t_array(t_struct(HistoryType)2850_storage)dyn_storage": {
              "label": "struct HouseBusiness.HistoryType[]",
              "numberOfBytes": "32"
            },
            "t_array(t_struct(StakedNft)2814_storage)dyn_storage": {
              "label": "struct HouseBusiness.StakedNft[]",
              "numberOfBytes": "32"
            },
            "t_array(t_uint256)dyn_storage": {
              "label": "uint256[]",
              "numberOfBytes": "32"
            },
            "t_bool": {
              "label": "bool",
              "numberOfBytes": "1"
            },
            "t_contract(IERC20)77": {
              "label": "contract IERC20",
              "numberOfBytes": "20"
            },
            "t_mapping(t_address,t_array(t_struct(StakedNft)2814_storage)dyn_storage)": {
              "label": "mapping(address => struct HouseBusiness.StakedNft[])",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_bool)": {
              "label": "mapping(address => bool)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_mapping(t_address,t_bool))": {
              "label": "mapping(address => mapping(address => bool))",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_uint256)": {
              "label": "mapping(address => uint256)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_uint256,t_address)": {
              "label": "mapping(uint256 => address)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_uint256,t_array(t_struct(History)2831_storage)dyn_storage)": {
              "label": "mapping(uint256 => struct HouseBusiness.History[])",
              "numberOfBytes": "32"
            },
            "t_mapping(t_uint256,t_mapping(t_address,t_bool))": {
              "label": "mapping(uint256 => mapping(address => bool))",
              "numberOfBytes": "32"
            },
            "t_mapping(t_uint256,t_string_storage)": {
              "label": "mapping(uint256 => string)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_uint256,t_struct(House)2797_storage)": {
              "label": "mapping(uint256 => struct HouseBusiness.House)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_uint256,t_uint256)": {
              "label": "mapping(uint256 => uint256)",
              "numberOfBytes": "32"
            },
            "t_string_storage": {
              "label": "string",
              "numberOfBytes": "32"
            },
            "t_struct(History)2831_storage": {
              "label": "struct HouseBusiness.History",
              "members": [
                {
                  "label": "hID",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "0"
                },
                {
                  "label": "contractId",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "1"
                },
                {
                  "label": "houseImg",
                  "type": "t_string_storage",
                  "offset": 0,
                  "slot": "2"
                },
                {
                  "label": "houseBrand",
                  "type": "t_string_storage",
                  "offset": 0,
                  "slot": "3"
                },
                {
                  "label": "desc",
                  "type": "t_string_storage",
                  "offset": 0,
                  "slot": "4"
                },
                {
                  "label": "history",
                  "type": "t_string_storage",
                  "offset": 0,
                  "slot": "5"
                },
                {
                  "label": "brandType",
                  "type": "t_string_storage",
                  "offset": 0,
                  "slot": "6"
                },
                {
                  "label": "yearField",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "7"
                }
              ],
              "numberOfBytes": "256"
            },
            "t_struct(HistoryType)2850_storage": {
              "label": "struct HouseBusiness.HistoryType",
              "members": [
                {
                  "label": "hID",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "0"
                },
                {
                  "label": "hLabel",
                  "type": "t_string_storage",
                  "offset": 0,
                  "slot": "1"
                },
                {
                  "label": "connectContract",
                  "type": "t_bool",
                  "offset": 0,
                  "slot": "2"
                },
                {
                  "label": "imgNeed",
                  "type": "t_bool",
                  "offset": 1,
                  "slot": "2"
                },
                {
                  "label": "brandNeed",
                  "type": "t_bool",
                  "offset": 2,
                  "slot": "2"
                },
                {
                  "label": "descNeed",
                  "type": "t_bool",
                  "offset": 3,
                  "slot": "2"
                },
                {
                  "label": "brandTypeNeed",
                  "type": "t_bool",
                  "offset": 4,
                  "slot": "2"
                },
                {
                  "label": "yearNeed",
                  "type": "t_bool",
                  "offset": 5,
                  "slot": "2"
                },
                {
                  "label": "checkMark",
                  "type": "t_bool",
                  "offset": 6,
                  "slot": "2"
                }
              ],
              "numberOfBytes": "96"
            },
            "t_struct(House)2797_storage": {
              "label": "struct HouseBusiness.House",
              "members": [
                {
                  "label": "tokenId",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "0"
                },
                {
                  "label": "tokenName",
                  "type": "t_string_storage",
                  "offset": 0,
                  "slot": "1"
                },
                {
                  "label": "tokenURI",
                  "type": "t_string_storage",
                  "offset": 0,
                  "slot": "2"
                },
                {
                  "label": "tokenType",
                  "type": "t_string_storage",
                  "offset": 0,
                  "slot": "3"
                },
                {
                  "label": "currentOwner",
                  "type": "t_address",
                  "offset": 0,
                  "slot": "4"
                },
                {
                  "label": "previousOwner",
                  "type": "t_address",
                  "offset": 0,
                  "slot": "5"
                },
                {
                  "label": "buyer",
                  "type": "t_address",
                  "offset": 0,
                  "slot": "6"
                },
                {
                  "label": "price",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "7"
                },
                {
                  "label": "numberOfTransfers",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "8"
                },
                {
                  "label": "nftPayable",
                  "type": "t_bool",
                  "offset": 0,
                  "slot": "9"
                },
                {
                  "label": "staked",
                  "type": "t_bool",
                  "offset": 1,
                  "slot": "9"
                },
                {
                  "label": "soldstatus",
                  "type": "t_bool",
                  "offset": 2,
                  "slot": "9"
                }
              ],
              "numberOfBytes": "320"
            },
            "t_struct(StakedNft)2814_storage": {
              "label": "struct HouseBusiness.StakedNft",
              "members": [
                {
                  "label": "owner",
                  "type": "t_address",
                  "offset": 0,
                  "slot": "0"
                },
                {
                  "label": "tokenId",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "1"
                },
                {
                  "label": "startedDate",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "2"
                },
                {
                  "label": "endDate",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "3"
                },
                {
                  "label": "claimDate",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "4"
                },
                {
                  "label": "stakingType",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "5"
                },
                {
                  "label": "perSecRewards",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "6"
                },
                {
                  "label": "stakingStatus",
                  "type": "t_bool",
                  "offset": 0,
                  "slot": "7"
                }
              ],
              "numberOfBytes": "256"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            }
          },
          "layoutVersion": "1.1",
          "flat": true
        }
      },
      "IMainCleanContract": {
        "src": "contracts\\interfaces\\IContract.sol:6",
        "inherit": [],
        "libraries": [],
        "methods": [
          "ccCounter()",
          "allCleanContracts(uint256)",
          "allContractsByOwner(address)",
          "allContractsBySigner(address)",
          "allNotifies(address)",
          "ccCreation(string,string,address,string,uint256,uint256,uint256,string)",
          "getAllContractsByOwner()",
          "getAllContractsBySigner()",
          "addContractSigner(uint256,address)",
          "signContract(uint256)",
          "sendNotify(address,string,uint256)",
          "getUploadedCounter()",
          "getAllNotifies()",
          "calcDiv(uint256,uint256)",
          "toString(bytes)",
          "addressToString(address)",
          "uintToString(uint256)",
          "bytesToString(bytes32)",
          "transferContractOwnership(uint256,address,address)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      }
    },
    {
      "MainCleanContract": {
        "src": "contracts\\Contract.sol:6",
        "version": {
          "withMetadata": "3ecaca4d3a46abcb1e47a72bf95aee01e232c46fc3b61f0eb73812856de846ee",
          "withoutMetadata": "bf3a337067446ab9636e3933eae421115dcaeac061c92d2287f5e3c88aaf7fb0",
          "linkedWithoutMetadata": "bf3a337067446ab9636e3933eae421115dcaeac061c92d2287f5e3c88aaf7fb0"
        },
        "inherit": [],
        "libraries": [],
        "methods": [
          "(address)",
          "ccCreation(string,string,address,string,uint256,uint256,uint256,string)",
          "getAllContractsByOwner()",
          "getAllContractsBySigner()",
          "addContractSigner(uint256,address)",
          "signContract(uint256)",
          "sendNotify(address,string,uint256)",
          "getUploadedCounter()",
          "getAllNotifies()",
          "calcDiv(uint256,uint256)",
          "toString(bytes)",
          "addressToString(address)",
          "uintToString(uint256)",
          "bytesToString(bytes32)",
          "transferContractOwnership(uint256,address,address)"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "MainCleanContract",
            "src": "contracts\\Contract.sol:52"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "ccCounter",
              "offset": 0,
              "slot": "0",
              "type": "t_uint256",
              "contract": "MainCleanContract",
              "src": "contracts\\Contract.sol:8"
            },
            {
              "label": "houseNFTAddress",
              "offset": 0,
              "slot": "1",
              "type": "t_address",
              "contract": "MainCleanContract",
              "src": "contracts\\Contract.sol:11"
            },
            {
              "label": "allCleanContracts",
              "offset": 0,
              "slot": "2",
              "type": "t_mapping(t_uint256,t_struct(CleanContract)39_storage)",
              "contract": "MainCleanContract",
              "src": "contracts\\Contract.sol:44"
            },
            {
              "label": "allContractsByOwner",
              "offset": 0,
              "slot": "3",
              "type": "t_mapping(t_address,t_array(t_uint256)dyn_storage)",
              "contract": "MainCleanContract",
              "src": "contracts\\Contract.sol:46"
            },
            {
              "label": "allContractsBySigner",
              "offset": 0,
              "slot": "4",
              "type": "t_mapping(t_address,t_array(t_uint256)dyn_storage)",
              "contract": "MainCleanContract",
              "src": "contracts\\Contract.sol:48"
            },
            {
              "label": "allNotifies",
              "offset": 0,
              "slot": "5",
              "type": "t_mapping(t_address,t_array(t_struct(Notify)52_storage)dyn_storage)",
              "contract": "MainCleanContract",
              "src": "contracts\\Contract.sol:50"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            },
            "t_array(t_struct(Notify)52_storage)dyn_storage": {
              "label": "struct MainCleanContract.Notify[]",
              "numberOfBytes": "32"
            },
            "t_array(t_uint256)dyn_storage": {
              "label": "uint256[]",
              "numberOfBytes": "32"
            },
            "t_bool": {
              "label": "bool",
              "numberOfBytes": "1"
            },
            "t_mapping(t_address,t_array(t_struct(Notify)52_storage)dyn_storage)": {
              "label": "mapping(address => struct MainCleanContract.Notify[])",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_array(t_uint256)dyn_storage)": {
              "label": "mapping(address => uint256[])",
              "numberOfBytes": "32"
            },
            "t_mapping(t_uint256,t_struct(CleanContract)39_storage)": {
              "label": "mapping(uint256 => struct MainCleanContract.CleanContract)",
              "numberOfBytes": "32"
            },
            "t_string_storage": {
              "label": "string",
              "numberOfBytes": "32"
            },
            "t_struct(CleanContract)39_storage": {
              "label": "struct MainCleanContract.CleanContract",
              "members": [
                {
                  "label": "contractId",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "0"
                },
                {
                  "label": "companyName",
                  "type": "t_string_storage",
                  "offset": 0,
                  "slot": "1"
                },
                {
                  "label": "contractType",
                  "type": "t_string_storage",
                  "offset": 0,
                  "slot": "2"
                },
                {
                  "label": "contractURI",
                  "type": "t_string_storage",
                  "offset": 0,
                  "slot": "3"
                },
                {
                  "label": "dateFrom",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "4"
                },
                {
                  "label": "dateTo",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "5"
                },
                {
                  "label": "agreedPrice",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "6"
                },
                {
                  "label": "currency",
                  "type": "t_string_storage",
                  "offset": 0,
                  "slot": "7"
                },
                {
                  "label": "creator",
                  "type": "t_address",
                  "offset": 0,
                  "slot": "8"
                },
                {
                  "label": "owner",
                  "type": "t_address",
                  "offset": 0,
                  "slot": "9"
                },
                {
                  "label": "creatorApproval",
                  "type": "t_bool",
                  "offset": 20,
                  "slot": "9"
                },
                {
                  "label": "creatorSignDate",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "10"
                },
                {
                  "label": "contractSigner",
                  "type": "t_address",
                  "offset": 0,
                  "slot": "11"
                },
                {
                  "label": "signerApproval",
                  "type": "t_bool",
                  "offset": 20,
                  "slot": "11"
                },
                {
                  "label": "signerSignDate",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "12"
                },
                {
                  "label": "status",
                  "type": "t_string_storage",
                  "offset": 0,
                  "slot": "13"
                }
              ],
              "numberOfBytes": "448"
            },
            "t_struct(Notify)52_storage": {
              "label": "struct MainCleanContract.Notify",
              "members": [
                {
                  "label": "nSender",
                  "type": "t_address",
                  "offset": 0,
                  "slot": "0"
                },
                {
                  "label": "nReceiver",
                  "type": "t_address",
                  "offset": 0,
                  "slot": "1"
                },
                {
                  "label": "ccID",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "2"
                },
                {
                  "label": "notifySentTime",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "3"
                },
                {
                  "label": "notifyContent",
                  "type": "t_string_storage",
                  "offset": 0,
                  "slot": "4"
                },
                {
                  "label": "status",
                  "type": "t_bool",
                  "offset": 0,
                  "slot": "5"
                }
              ],
              "numberOfBytes": "192"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            }
          },
          "layoutVersion": "1.1",
          "flat": true
        }
      }
    },
    {
      "ThirdParty": {
        "src": "contracts\\ThirdParty.sol:5",
        "version": {
          "withMetadata": "cbf5b2fae6668ee45b86827e485cbed39526db15e39a77a193d607720ff0015c",
          "withoutMetadata": "c7f6b899dcbca6a360ab204550ba9b4fec9f4cae1bcd2f5879cfa3965e9d550f",
          "linkedWithoutMetadata": "c7f6b899dcbca6a360ab204550ba9b4fec9f4cae1bcd2f5879cfa3965e9d550f"
        },
        "inherit": [],
        "libraries": [],
        "methods": [
          "getAllCategories()",
          "addCategory(string,uint256[])",
          "editCategory(uint256,string,uint256[])",
          "deleteCategory(uint256)",
          "getAllProperties()",
          "addProperty(string)",
          "editProperty(uint256,string)",
          "deleteProperty(uint256)",
          "getPackagesByCategory(uint256)",
          "addPackage(uint256,string,uint256,uint256,uint256,bool[])",
          "editPackage(uint256,uint256,string,uint256,uint256,uint256,bool[])",
          "deletePackage(uint256,uint256)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [
            {
              "label": "categoryCounter",
              "offset": 0,
              "slot": "0",
              "type": "t_uint256",
              "contract": "ThirdParty",
              "src": "contracts\\ThirdParty.sol:12"
            },
            {
              "label": "packageCounter",
              "offset": 0,
              "slot": "1",
              "type": "t_uint256",
              "contract": "ThirdParty",
              "src": "contracts\\ThirdParty.sol:23"
            },
            {
              "label": "propertyCounter",
              "offset": 0,
              "slot": "2",
              "type": "t_uint256",
              "contract": "ThirdParty",
              "src": "contracts\\ThirdParty.sol:29"
            },
            {
              "label": "allCategories",
              "offset": 0,
              "slot": "3",
              "type": "t_array(t_struct(Category)11_storage)dyn_storage",
              "contract": "ThirdParty",
              "src": "contracts\\ThirdParty.sol:31"
            },
            {
              "label": "allPackages",
              "offset": 0,
              "slot": "4",
              "type": "t_mapping(t_uint256,t_array(t_struct(Package)29_storage)dyn_storage)",
              "contract": "ThirdParty",
              "src": "contracts\\ThirdParty.sol:34"
            },
            {
              "label": "allProperties",
              "offset": 0,
              "slot": "5",
              "type": "t_array(t_struct(Property)36_storage)dyn_storage",
              "contract": "ThirdParty",
              "src": "contracts\\ThirdParty.sol:37"
            }
          ],
          "types": {
            "t_array(t_bool)dyn_storage": {
              "label": "bool[]",
              "numberOfBytes": "32"
            },
            "t_array(t_struct(Category)11_storage)dyn_storage": {
              "label": "struct ThirdParty.Category[]",
              "numberOfBytes": "32"
            },
            "t_array(t_struct(Package)29_storage)dyn_storage": {
              "label": "struct ThirdParty.Package[]",
              "numberOfBytes": "32"
            },
            "t_array(t_struct(Property)36_storage)dyn_storage": {
              "label": "struct ThirdParty.Property[]",
              "numberOfBytes": "32"
            },
            "t_array(t_uint256)dyn_storage": {
              "label": "uint256[]",
              "numberOfBytes": "32"
            },
            "t_bool": {
              "label": "bool",
              "numberOfBytes": "1"
            },
            "t_mapping(t_uint256,t_array(t_struct(Package)29_storage)dyn_storage)": {
              "label": "mapping(uint256 => struct ThirdParty.Package[])",
              "numberOfBytes": "32"
            },
            "t_string_storage": {
              "label": "string",
              "numberOfBytes": "32"
            },
            "t_struct(Category)11_storage": {
              "label": "struct ThirdParty.Category",
              "members": [
                {
                  "label": "categoryID",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "0"
                },
                {
                  "label": "cartegoryName",
                  "type": "t_string_storage",
                  "offset": 0,
                  "slot": "1"
                },
                {
                  "label": "properties",
                  "type": "t_array(t_uint256)dyn_storage",
                  "offset": 0,
                  "slot": "2"
                },
                {
                  "label": "visible",
                  "type": "t_bool",
                  "offset": 0,
                  "slot": "3"
                }
              ],
              "numberOfBytes": "128"
            },
            "t_struct(Package)29_storage": {
              "label": "struct ThirdParty.Package",
              "members": [
                {
                  "label": "categoryID",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "0"
                },
                {
                  "label": "packageID",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "1"
                },
                {
                  "label": "packageName",
                  "type": "t_string_storage",
                  "offset": 0,
                  "slot": "2"
                },
                {
                  "label": "price",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "3"
                },
                {
                  "label": "period",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "4"
                },
                {
                  "label": "dataLimit",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "5"
                },
                {
                  "label": "propertyVisible",
                  "type": "t_array(t_bool)dyn_storage",
                  "offset": 0,
                  "slot": "6"
                }
              ],
              "numberOfBytes": "224"
            },
            "t_struct(Property)36_storage": {
              "label": "struct ThirdParty.Property",
              "members": [
                {
                  "label": "propertyID",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "0"
                },
                {
                  "label": "propertyName",
                  "type": "t_string_storage",
                  "offset": 0,
                  "slot": "1"
                }
              ],
              "numberOfBytes": "64"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            }
          },
          "layoutVersion": "1.1",
          "flat": true
        }
      }
    },
    {
      "Context": {
        "src": "contracts\\TokenContract.sol:22",
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "HouseBusinessToken": {
        "src": "contracts\\TokenContract.sol:33",
        "version": {
          "withMetadata": "e53f4b9234e67266e4442dec09d084a17cbe6b1b4fb90d62776f0d6f370f0570",
          "withoutMetadata": "f5d2b294cac19c78c593798b4a1bae04c45c82839cbcffe3cc910bb441f21259",
          "linkedWithoutMetadata": "f5d2b294cac19c78c593798b4a1bae04c45c82839cbcffe3cc910bb441f21259"
        },
        "inherit": [
          "IERC20Metadata",
          "IERC20",
          "Context"
        ],
        "libraries": [],
        "methods": [
          "()",
          "name()",
          "symbol()",
          "decimals()",
          "totalSupply()",
          "balanceOf(address)",
          "transfer(address,uint256)",
          "allowance(address,address)",
          "approve(address,uint256)",
          "transferFrom(address,address,uint256)",
          "increaseAllowance(address,uint256)",
          "decreaseAllowance(address,uint256)",
          "_mint(address,uint256)"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "HouseBusinessToken",
            "src": "contracts\\TokenContract.sol:42"
          },
          {
            "kind": "state-variable-assignment",
            "name": "_name",
            "src": "contracts\\TokenContract.sol:37"
          },
          {
            "kind": "state-variable-assignment",
            "name": "_symbol",
            "src": "contracts\\TokenContract.sol:38"
          },
          {
            "kind": "state-variable-assignment",
            "name": "_decimals",
            "src": "contracts\\TokenContract.sol:39"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "_balances",
              "offset": 0,
              "slot": "0",
              "type": "t_mapping(t_address,t_uint256)",
              "contract": "HouseBusinessToken",
              "src": "contracts\\TokenContract.sol:34"
            },
            {
              "label": "_allowances",
              "offset": 0,
              "slot": "1",
              "type": "t_mapping(t_address,t_mapping(t_address,t_uint256))",
              "contract": "HouseBusinessToken",
              "src": "contracts\\TokenContract.sol:35"
            },
            {
              "label": "_totalSupply",
              "offset": 0,
              "slot": "2",
              "type": "t_uint256",
              "contract": "HouseBusinessToken",
              "src": "contracts\\TokenContract.sol:36"
            },
            {
              "label": "_name",
              "offset": 0,
              "slot": "3",
              "type": "t_string_storage",
              "contract": "HouseBusinessToken",
              "src": "contracts\\TokenContract.sol:37"
            },
            {
              "label": "_symbol",
              "offset": 0,
              "slot": "4",
              "type": "t_string_storage",
              "contract": "HouseBusinessToken",
              "src": "contracts\\TokenContract.sol:38"
            },
            {
              "label": "_decimals",
              "offset": 0,
              "slot": "5",
              "type": "t_uint8",
              "contract": "HouseBusinessToken",
              "src": "contracts\\TokenContract.sol:39"
            },
            {
              "label": "_owner",
              "offset": 1,
              "slot": "5",
              "type": "t_address",
              "contract": "HouseBusinessToken",
              "src": "contracts\\TokenContract.sol:40"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            },
            "t_mapping(t_address,t_mapping(t_address,t_uint256))": {
              "label": "mapping(address => mapping(address => uint256))",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_uint256)": {
              "label": "mapping(address => uint256)",
              "numberOfBytes": "32"
            },
            "t_string_storage": {
              "label": "string",
              "numberOfBytes": "32"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            },
            "t_uint8": {
              "label": "uint8",
              "numberOfBytes": "1"
            }
          },
          "layoutVersion": "1.1",
          "flat": true
        }
      },
      "IERC20": {
        "src": "contracts\\TokenContract.sol:5",
        "inherit": [],
        "libraries": [],
        "methods": [
          "totalSupply()",
          "balanceOf(address)",
          "transfer(address,uint256)",
          "allowance(address,address)",
          "approve(address,uint256)",
          "transferFrom(address,address,uint256)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "IERC20Metadata": {
        "src": "contracts\\TokenContract.sol:16",
        "inherit": [
          "IERC20"
        ],
        "libraries": [],
        "methods": [
          "name()",
          "symbol()",
          "decimals()"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      }
    },
    {
      "IHouseBusiness": {
        "src": "contracts\\interfaces\\IHouseBusiness.sol:5",
        "inherit": [],
        "libraries": [],
        "methods": [
          "collectionName()",
          "collectionNameSymbol()",
          "houseCounter()",
          "stakedCounter()",
          "soldedCounter()",
          "hTypeCounter()",
          "minPrice()",
          "maxPrice()",
          "penalty()",
          "royalty()",
          "historyTypes(uint256)",
          "houseHistories(uint256)",
          "APYtypes(uint256)",
          "APYConfig(uint256)",
          "allMembers(address)",
          "allMembers(uint256)",
          "allowedList(uint256,address)",
          "stakedNfts(address)",
          "setMinMaxHousePrice(uint256,uint256)",
          "setConfigToken(address)",
          "isMember()",
          "addMember(address)",
          "removeMember(address)",
          "tokenURI(uint256)",
          "setPayable(uint256,address,bool)",
          "mintHouse(string,string,string,string,uint256)",
          "addAllowList(uint256,address)",
          "removeAllowList(uint256,address)",
          "checkAllowedList(uint256,address)",
          "addHistory(uint256,uint256,string,string,string,string,string,uint256)",
          "getHistory(uint256)",
          "editHistory(uint256,uint256,string,string,string,string,string,uint256)",
          "getHistoryType()",
          "addOrEditHType(uint256,string,bool,bool,bool,bool,bool,bool,bool)",
          "removeHistoryType(uint256)",
          "getMinMaxNFT()",
          "getTokenOwner(uint256)",
          "buyHouseNft(uint256)",
          "sendToken(address,uint256)",
          "changeTokenPrice(uint256,uint256)",
          "getAllHouses()",
          "getAllPayableHouses()",
          "getAllMyHouses()",
          "withdrawToken(uint256)",
          "withdrawETH(uint256)",
          "setAPYConfig(uint256,uint256)",
          "getAllAPYTypes()",
          "stake(uint256,uint256)",
          "unstake(uint256)",
          "stakingFinished(uint256)",
          "totalRewards(address)",
          "claimRewards(address)",
          "getAllMyStakedNFTs()",
          "getTotalInfo()",
          "getAllAPYs()",
          "getPenalty()",
          "setPenalty(uint256)",
          "getRoyalty()",
          "setRoyalty(uint256)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      }
    },
    {
      "IPRC20": {
        "src": "contracts\\interfaces\\IPRC20.sol:4",
        "inherit": [],
        "libraries": [],
        "methods": [
          "totalSupply()",
          "balanceOf(address)",
          "transfer(address,uint256)",
          "allowance(address,address)",
          "approve(address,uint256)",
          "transferFrom(address,address,uint256)",
          "decimals()"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      }
    }
  ]
}